<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_FrNm_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_AUTOSAR_SWS_FlexRayNetworkManagement_4.0.3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_AUTOSAR_SWS_FlexRayNetworkManagement_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_AUTOSAR_SWS_FlexRayNetworkManagement_R21-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_EB_Limitations.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_test_Manual_Verification.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PbcfgM_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PduLengthType_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 19:48:20 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_FrNm_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_AUTOSAR_SWS_FlexRayNetworkManagement_4.0.3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_AUTOSAR_SWS_FlexRayNetworkManagement_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_AUTOSAR_SWS_FlexRayNetworkManagement_R21-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_EB_Limitations.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_Native/asc_FrNm_test_Manual_Verification.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PbcfgM_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PduLengthType_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.FrNm.EB_INTREQ_FrNm_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <!-- Class:  Long-Term / Minor limitation.
           Reason: This limitation does not affect any basic module
                   functionality but allows a more efficient implementation. -->
      Length of <code>FrNmRxPduId</code> and <code>FrNmTxPduId</code>.
      The length of the <code>FrNmRxPduId</code> configured in the ECU configuration must be equal
      when separate PDUs are used for NM-Vote and NM-Data and length of the <code>FrNmTxPduId</code>
      must not be greater than length of the <code>FrNmRxPduId</code>.
      </description>
      <rationale>
      This limitation allows a more efficient implementation.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ConfigPduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>lim.FrNm.EB_INTREQ_FrNm_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- Class:  Long-Term / Minor limitation.
             Reason: This limitation does not affect any basic module
                     functionality but allows a more efficient implementation. -->
        Requirement SWS_FrNm_00307 allows a reinitialization of the module. However, implementation does not
        support concurrent access to <code>FrNm_Init()</code> and <code>FrNm_Mainfunction()</code>.
        User has to ensure that <code>FrNm_Init()</code> shall not be called during the execution of
        <code>FrNm_Mainfunction()</code> and vice versa.
      </description>
      <rationale>
        This limitation allows a more efficient implementation.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>FrNm.EB_INTREQ_FrNm_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        The data to be transmitted as part of the NM PDU is always updated in the FrNm main
        processing function. The FlexRay job list shall be configured in such a way that the
        PDU data is always updated after the execution of the FrNm_MainFunction and before
        the beginning of the static segment in order to ensure that the latest data is always
        visible also on the bus.
      </description>
      <rationale>
        The FrNm PDU, including the vote bit, is always updated in the FrNm_MainFunction.
        As long as all the state transitions in the Network Mode are aligned with the repetition
        cycle, the update of the vote bit is also aligned with the repetition cycle. In order
        to have the data on the bus aligned with the changes of the NM PDU from FrNm, the
        configuration of the FlexRay job list shall ensure that the PDU data is updated after
        the execution of the FrNM main processing function and before the start of the
        static segment (especially for the case when the vote is sent in the static segment).
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>	
  </specobjects>
    <specobjects doctype="swurs">
    <defaults>
      <idprefix>FrNm.ASR403.</idprefix>
    </defaults>

    <specobject>
      <id>FrNm.ASR403.FRNM064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The following source code files shall be provided by the FrNm module.
        FrNm.c (for implementation of provided functionality)
        FrNm_Lcfg.c (for link time configurable parameters)
        FrNm_PBcfg.c (for post build time configurable parameters)
      </description>
       <comment>
        Link-time configurations are not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG8</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_28</srcid><srcstatus/><internalId>1070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.FRNM064.ProvidedFiles</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The following header files shall be provided and included within the FrNm module. 1. FrNm.h 2. FrNm_Cbk.h 3. FrNm_Cfg.h
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_49</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_52</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM367</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The file FrNm.h contains declaration of provided interface functions.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_441</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM368</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The file FrNm_Cbk.h contains declaration of provided call-back functions.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Cbk.h_18</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM369</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The file FrNm_Cfg.h contains pre-compile time parameters.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_2</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The following header files shall be included within the FrNm module.
          FrIf.h  (for interface of FlexRay Interface)
          PduR_FrNm.h (for interface of PduR)
          Nm_Cbk.h (for callbacks of Nm)
          Det.h (for interface of DET optional, included only if Det is configured),
          Dem.h (for interface of DEM)
          Nm.h (for common NM types)
          SchM_FrNm.h (for interface to Schedule Manager),
          MemMap.h (for locating software in memory using the memory map)
          FrSM.h (for FlexRay State Manager)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.FrIf</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.PduR</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.Nm_Cbk</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.Det</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.Dem</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.NmStack_Types</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.SchM_FrNm</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.MemMap</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM066.FrSM</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM371</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      Std_Types.h shall include Platform_Types.h (for platform specific types),
      Compiler.h (for compiler specific language extensions).
    </description>
       <comment>
      This requirement is not applicable for FrNm because it specifies files to be
      included in Std_Types.h.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FlexRay NM shall store the Repeat Message Request in a flag (FrNm_RepeatMessage).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0105</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FlexRay NM shall store the Network Request in a flag (FrNm_NetworkRequested).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM311</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        FlexRay NM module shall be configurable with the configuration parameter
        FrNmMainAcrossFrCycle if the execution of FrNmMain function crosses the
        FlexRay cycle boundary (set to TRUE) or not (set to FALSE).
      </description>
      <comment>
        It is the responsibility of the scheduler to call FrNmMain function according
        to the parameter FrNmMainAcrossFrCycle.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00311</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM372</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If the FlexRay NM Vector is only available at the end of a FlexRay  cycle then
      evaluation takes place in the following FlexRay cycle. Note: This depends
      on the configuration and implementation of the FlexRay communication
      controller hardware.
    </description>
       <comment>
      This requirement is informational only.
      This is not a testable requirement.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM320</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Bus-Sleep Mode, the module shall set the flag FrNm_RepeatMessage to FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_213</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM143</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>2</version>
      <description>
        The FrNm module shall leave the Synchronize Mode and enter the Network Mode at the first boundary between two NM Repetition Cycles
      </description>
      <comment>
        This requirement is not applicable new requirement was added into 4.3.0 document
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM340</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If FlexRay NM is in Synchronize state and FlexRay NM receives the indication
      FrNm_StartupError and if FrNm_NetworkRequested is set to  TRUE, then
      FlexRay NM would remain in Synchronize state.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00340</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FrNm module has entered the Network Mode, it shall set the flag FrNm_RepeatMessage to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0105</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FlexRay NM state machine shall leave the Network Mode and enter the Bus-Sleep Mode when the
        Repetition Cycle completes and when FrNmReadySleepCnt &amp;lt; 1 condition evaluates to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0108</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FrNm module receives a Repeat Message Request successfully and is in
        the Network Mode it shall set the flag FrNm_RepeatMessage to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1313</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0106</srcid><srcstatus/><internalId>1207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the NM Repeat Message Timer (FrNm_RepeatMessageTimer) expires in  the Network
        Mode, then the FrNm module shall set the flag  FrNm_RepeatMessage to
        FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0105</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Network Mode, it shall initialize the  NM Repeat
        Message Timer (FrNm_RepeatMessageTimer) to a configurable  amount of time
        determined by FrNmRepeatMessageTime (configuration parameter).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0157</srcid><srcstatus/><internalId>1233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM309</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNmReadySleepCnt shall be set to a type that is capable of supporting the
        maximum value of FrNmReadySleepCnt (configuration parameter).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_971</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_1064</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Repeat Message State when a Repetition Cycle is
        completed and if the flag FrNm_RepeatMessage is set to FALSE, and then
        enter either the Normal Operation state (if  FrNm_NetworkRequested is set
        to TRUE) or the Ready Sleep State (if FrNm_NetworkRequested is set to FALSE).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00120</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FlexRay NM state machine leaves the Repeat Message State, it shall enter the Normal Operation
        State if the flag FrNm_NetworkRequested is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00121</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FlexRay NM state machine leaves the Repeat Message State it shall enter the Ready
        Sleep State if the flag  FrNm_NetworkRequested is set to FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00122</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Normal Operation State and enter the Repeat
        Message State if a Repeat Message Request has been detected (the flag
        FrNm_RepeatMessage is set to TRUE see FRNM111) and if a Repetition Cycle is completed.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00124</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Ready Sleep State, it shall deactivate the transmission of
        NM-Data and deactivate the transmission of the NM-Vote for keeping the cluster awake.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00126.DataPDU</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NegativeVotesInReadySleep</srcid><srcstatus/><internalId>721</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Ready Sleep State (and the Network  Mode) and enter the
        Bus-Sleep Mode if the Ready Sleep Counter has expired (FrNmReadySleepCnt &amp;lt; 1) at the end of the NM Repetition Cycle.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00129</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Ready Sleep State and enter the Repeat Message
        State if a Repetition Cycle is completed, the Ready  Sleep Counter has
        not expired (FrNmReadySleepCnt &amp;gt;0) and a Repeat  Message Request is
        active (the flag FrNm_RepeatMessage is set to TRUE see FRNM111).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00130</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Ready Sleep State and enter the  Normal
        Operation State if a Repetition Cycle is completed, the Ready  Sleep
        Counter has not expired (FrNmReadySleepCnt &amp;gt;0) and no Repeat  Message
        Request is active (the flag FrNm_RepeatMessage is set to FALSE)  and the
        network has been requested (the flag FrNm_NetworkRequested is  set to
        TRUE see FRNM113).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00131</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall decrement the Ready Sleep Counter  (FrNm_ReadySleepCnt) at
        the end of an NM Repetition Cycle and before  the evaluation of state
        change requests if no Repeat Message Request is  active (the flag
        FrNm_RepeatMessage is set to FALSE) and the network has  been released
        (the flag FrNm_NetworkRequested is set to FALSE) and the  Ready Sleep
        Counter has not expired (FrNmReadySleepCnt &amp;gt;0).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0099</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM314</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        When both event "ClusterAwakeVote detected" and "Repetition Cycle completed"
        in state "Ready Sleep" occurs at the same time the transition  dependent on
        "ClusterAwakeVote detected" is executed first.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0095</srcid><srcstatus/><internalId>1232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM314.LocalReq</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        A local request to keep the network awake (i.e., Network Request) will be
        Ignored in the Ready Sleep State when the FrNmReadySleepCnt has already reached 0.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0156</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0156_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM337</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        It shall be configurable with the configuration parameter
        FRNM_PDU_SCHEDULE_VARIANT which NM-message transmission formats (NM-Data,
        NM-Vote and the combined NM-Data/Vote format) are recognized by the FrNm module.
      </description>
       <comment>
        This requirement is not applicable. It is a duplicate of requirement FrNm.SWS_FrNm_00160.
        Refer http://www.autosar.org/bugzilla/show_bug.cgi?id=52798.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM029</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FrNm module's environment shall initialize the FrNm module after the
      corresponding FlexRay Interface is initialized and before any other
      FlexRay NM
    </description>
       <comment>
      This requirement is not applicable as it is a requirement for the system
      designer/integrator.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm module is not initialized, then the FrNm module shall reject a call
        of any FlexRay NM function, with the exception of FrNm_Init, and return with a respective error code.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        FlexRay NM shall set the flag FrNm_NetworkRequest to FALSE after initialization
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00136</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM336</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FlexRay Network Management must react (execute) synchronously on
        reception of the indication FrNm_StartupError from the FlexRay State
        Manager even when the FrNM Mainfunction is no longer executing.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.StartupError.Asynchronously</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.AsyncReactiontoFrNmStartupError</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        FlexRay NM-Data PDU format shall be defined as follows:
               | Bit 7 | Bit 6 | Bit 5 | Bit 4 | Bit 3 | Bit 2 | Bit 1 | Bit 0 |
        Byte 7 |            User data 5                                        |
        Byte 6 |            User data 4                                        |
        Byte 5 |            User data 3                                        |
        Byte 4 |            User data 2                                        |
        Byte 3 |            User data 1                                        |
        Byte 2 |            User data 0                                        |
        Byte 1 |            Source Node Identifier                             |
        Byte 0 | Blocked |  Control Bit Vector                                 |
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00006</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The support of the Control Bit Vector by the FrNm module shall be configurable
        at pre-compile time by the configuration parameter FrNmControlBitVectorEnabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2022</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0097</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The length of the NM-Data PDU for the FrNm module shall be configurable at
        pre-compile time to any integer value from 1 to 8 by the configuration
        parameter FrNmPduLength (see chapter 10). The FrNmPduLength is defined
        by the PduLength parameter [EcuC003_Conf] in the "global" ECUC module
        (see Ecu Configuration specification).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.FRNM154.NMDataLength</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM3829</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmControlBitVectorEnabled is set to FALSE, then Control Bit Vector of the NM-Data PDU shall be set to 0x00.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_6</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0172</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM324</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmControlBitVectorEnabled is set to FALSE, Control Bit Vector of the
        NM-Data PDU shall not be used for other Data. It remains reserved.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0172</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The NM-Data PDU Control Bit Vector of the FrNm module format shall be defined as follows:
         Bit 7    |   Not Available
         Bit 6    |   Cluster Request Information Bit
         Bit 5    |   Res
         Bit 4    |   Active WakeUp bit
         Bit 3    |   NM Coordinator Sleep Ready
         Bit 2    |   Res
         Bit 1    |   Res
         Bit 0    |   RptMsgRequest
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00156</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain a Repeat Message
        Request Bit (RptMsgRequest) with the following meaning:
          0: Repeat Message State not requested
          1: Repeat Message State requested
        The Control Bit Vector of the FlexRay NM module shall contain an Active
        Wakeup Bit with the following meaning.
          0: Node has not woken up the network
          1: Node has woken up the network
        The Control Bit Vector of the FlexRay NM module shall contain a Partial
        Cluster Request Information Bit (CRI)
          0: NM message contains no Partial Network request information
          1: NM message contains Partial Network request information
        NM Coordinator Sleep Ready Bit
          0: NM cluster is not ready to sleep
          1: NM cluster is ready to sleep (All nodes of the NM cluster are ready to sleep)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00055</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM157</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall not use Bit 7 of the Control Bit Vector.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall set Bit 7 of the Control Bit Vector to 0b.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0127</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall set Bit 1 to 6 of the Control Bit Vector to 0b which are reserved for future extensions.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00161</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The NM-Vote PDU format of the FrNm module shall be defined as  follows:
               | Bit 7 | Bit 6 | Bit 5 | Bit 4 | Bit 3 | Bit 2 | Bit 1 | Bit 0 |
        Byte 0 | Vote  |                   Not available                       |
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00215</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FrNm module shall not use Bits 0-6 of the NM-Vote PDU.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_Bit_ControlBitVector</srcid><srcstatus/><internalId>1355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall set Bits 0-6 of the NM-Vote PDU to 0b.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0127</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The set of the Source Node Identifier shall be configurable at precompile time using the configuration parameter FrNmNodeId.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00037</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FlexRay NM shall realize FlexRay NM functions for reception and for transmission of NM Messages.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FrNm_TxConfirmation</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00251</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00252</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM176_Implicit</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FlexRay NM shall realize a Transmit function only if the node is configured as an active node,
        i.e., only if FRNM_PASSIVE_MODE_ENABLED (configuration parameter) is set as OFF.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM360</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FlexRay Interface module shall call the FrNm module function
      FrNm_TxConfirmation when a NM-message is successfully transmitted and a
      transmit confirmation is supported and configured within the FlexRay
      Interface.
    </description>
       <comment>
      This requirement is not applicable because it is requirement for
      the FlexRay Interface module.
      Refer http://www.autosar.org/bugzilla/show_bug.cgi?id=52797.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM363</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If transmission confirmation is supported by the FlexRay Interface, and  the
      FlexRay Interface provides a FrNm_TxConfirmation, then the FlexRay  NM
      shall provide a callback called PduR_FrNmTxConfirmation.
    </description>
       <comment>
      This requirement is not applicable because it is incorrect.
      Refer http://www.autosar.org/bugzilla/show_bug.cgi?id=52917.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM361</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FlexRay Interface module shall call the FrNm module function
      FrNm_RxIndication when a NM-message is received.
    </description>
       <comment>
      This requirement is not applicable because it is requirement for
      the FlexRay Interface module.
      Refer http://www.autosar.org/bugzilla/show_bug.cgi?id=52797.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM048</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FlexRay NM module integrator shall define a schedule to activate  the
      FlexRay NM task synchronously to the FlexRay communication cycle.
    </description>
       <comment>
      This requirement is not applicable. It is a requirement for the system
      designer/integrator.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM007</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FrNm module's environment should execute the FrNm module
      (FrNm_MainFunction_&amp;lt; FrNmChannelIdRef &amp;gt;) at least once a FlexRay
      communication cycle, synchronous to the FlexRay global time when  FlexRay
      global time is available, and the FrNm module's execution  should not
      cross a FlexRay cycle boundary. The FrNm_MainFunction_&amp;lt;  FrNmChannelIdRef
      &amp;gt; should be executed periodically even when FlexRay  global time is no
      longer available.
    </description>
       <comment>
       This requirement is not applicable. It is a requirement for the system
       designer/integrator.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM356</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The state machine guards, transitions, conditions, and actions should be evaluated at most once
        in each execution of the FrNm_MainFunction_&amp;lt; FrNmChannelIdRef &amp;gt;.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0096</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM177</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The FrNm module shall not use asynchronous NM-Task activation.
    </description>
       <comment>
      This requirement is not applicable. It is a requirement for the system
      integrator.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The support of node detection for the FrNm module shall be configurable at
        pre-compile time by the configuration parameter FrNmNodeDetectionEnabled.
        FrNmSourceNodeIdentifierEnabled should also be set as ON to use this  feature..
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM362</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmUserDataEnabled is set as TRUE then  PduR_FrNmTriggerTransmit will query
        the NM User data (NM I-PDU)  from PduR and populate the User Data part of
        the NM User data  message as to be transmitted by the FrNm.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PduR_FrNmTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>1112</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM364</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm shall collect the NM User Data from the referenced NM I PDU by calling
        "PduR_FrNmTriggerTransmit" and combine the user data  with the further NM bytes
        each time before it requests the transmission of the corresponding NM message.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00364</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM394</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        FrNm shall call PduR_FrNmTriggerTransmit within the function FrNm_TriggerTransmit called by the FrIf.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00394</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM365</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm shall call "PduR_FrNmTxConfirmation" within the message
        transmission confirmation function "FrNm_TxConfirmation" called by the FrIf.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00365</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM366</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm implementation shall provide an API FrNm_Transmit (see  FRNM359). This
        API shall never be called by PduR as the FrNm will  always query the data
        by means of PduR_FrNmTriggerTransmit. FrNm_Transmit is an empty function
        returning E_NOT_OK at any time. This requirement is relevant to avoid
        linker errors as PduR expects this API to be provided.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1756</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0173</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the optional state change notification service is enabled, then the FrNm module shall
        notify all its state changes to the NmIf  module by calling Nm_StateChangeNotification.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00192</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM410</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If FrNmPnEnabled is FALSE, FrNm shall set the value of the CRI bit to 0 in transmitted NM PDUs.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00452</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM412</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE, FrNm shall calculate the aggregation  of
        external and internal PN requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM396</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm receives a NM message with NMcoordinatorSleepReady bit set (see CBV)
        it shall indicate this to the NmIf by calling Nm_CoordReadyToSleepIndication.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1950</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_2</srcid><srcstatus/><internalId>1240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM397</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        This feature is optional and only available if FrNmCoordinatorSyncSupport is set to TRUE
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00397</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM404</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        FrNm shall be able to distinguish between an NM PDU without PN request
        information and an NM PDU with PN request information contained in the
        NM user data. This is indicated by the Cluster Request Information bit
        (CRI) in the CBV of the NM PDU. Meaning of the CRI bit: 0 -&amp;gt; NM PDU
        contains no PN request information 1 -&amp;gt; NM PDU contains PN request information
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00404</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM406</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If FrNmPnEnabled is FALSE, FrNm shall perform the standard FrNm RxIndication.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00406</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM407</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE and the CRI bit in the NM PDU provided by FrNm_RxIndication()
        has the value 0, FrNm shall perform the standard FrNm RxIndication.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00407</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM408</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If FrNmPnEnabled is TRUE and the CRI bit in the NM PDU provided by
      FrNm_RxIndication() has the value 1, FrNm module shall process the
      Partial Networking Information of the NM-PDU as described in chapter
      7.8.12.3 Aggregation of internal and external requested PNs and 7.8.12.4
      Aggregation of external requested PNs
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00408</srcid><srcstatus/><internalId>398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM409</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE, FrNm shall set the value of the CRI bit to 1 in transmitted NM PDUs.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00409</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM413</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is FALSE, FrNm shall skip the aggregation of external and internal PN requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_False</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM421</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The EIRA shall have the size of FrNmPnInfoLength and shall be initialized with the value 0 (not requested) for every PN request bit.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00421</srcid><srcstatus/><internalId>406</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM422</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm shall only consider the PN request bits in the NM PDUs that  are
        relevant for the ECU (defined by PN filter mask). All other PN request
        bits shall be ignored. Thus the EIRA only contains those PN requests,
        which are relevant for the ECU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Rx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM423</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If a NM-PDU is received, the FrNm shall set for every requested and  relevant PN
      request the corresponding EIRA bit to 1.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00423</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM424</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If a NM PDU is send by the FrNm, FrNm shall set every PN request bit in the EIRA to 1 that is also requested in its transmitted NM PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00424</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM425</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      FrNm shall provide an EIRA reset timer for every PN request bit together for all physical FlexRay channels.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00425</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM426</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If a NM-PDU is received, the FrNm module shall restart the EIRA reset  timer for
      every PN request bit that has been requested in the received NM PDU with
      FrNmPnResetTime.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00426</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM427</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If a NM-PDU is send by the FrNm, the FrNm module shall restart the  EIRA reset
        timer for every PN request bit that has been requested in its
        transmitted NM PDU with FrNmPnResetTime.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM428</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If an EIRA reset timer expires, the FrNm module shall set the  corresponding
      EIRA PN request bit to 0.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00428</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM429</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If the content of EIRA changes (any bit changes from 1 to 0 or from 0 to  1)
      because of a received or transmitted NM PDU or an EIRA reset timer
      expiration, FrNm shall inform the upper layers by calling
      PduR_FrNmRxIndication(). By means of the Rx Indication function the  EIRA
      data shall be provided to the COM module.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00429</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM430</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE, FrNm shall calculate the aggregation of external PN requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_1058</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2023</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM431</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is FALSE, FrNm shall skip the aggregation of external PN requests.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2023</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM432</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The ERA module shall have a size of FrNmPnInfoLength and shall be initialized with value 0 (not requested) for every PN request bit.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00432</srcid><srcstatus/><internalId>413</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM433</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm shall only consider the PN request bits in the NM-PDU that are relevant for the
        ECU (defined by PN filter mask). All other PN request bits are ignored. Thus the ERA only
        contains those PN requests, which are relevant for the ECU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3797</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM434</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If a NM-PDU is received the FrNm module shall set every PN request bit in the
        ERA to 1 that has been requested by the PN request bits of the received NM-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00434</srcid><srcstatus/><internalId>414</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM435</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall provide an ERA reset timer for every PN request bit for every physical Fr channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00435</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM436</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If a NM PDU is received, FrNm shall start/restart the ERA reset timer for every
        PN request bit that is requested in the NM PDU with FrNmPnResetTime.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00436</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM437</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If an ERA reset timer expires, the FrNm module shall set the corresponding ERA PN request bit to 0.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00437</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM438</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the content of ERA changes (any bit changes from 1 to 0 or from 0 to 1)
        because of a received NM PDU or an ERA reset timer expiration, FrNm
        shall inform the upper layers by calling PduR_FrNmRxIndication(). By
        means of the Rx Indication function the ERA data shall be provided to the COM module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00438</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The schedule variant for the FrNm module shall be statically configurable at
        pre-compile time by the configuration parameter FRNM_PDU_SCHEDULE_VARIANT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_447</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM345</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Each variable that shall be accessible by AUTOSAR Debugging, shall be defined as global variable.
      </description>
      <comment>
        No support for AUTOSAR Debugging.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.DebugAndTrace</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM346</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        All type definitions of variables which shall be debugged, shall be accessible by the header file FrNm.h.
      </description>
      <comment>
        No support for AUTOSAR Debugging.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.DebugAndTrace</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM347</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The declaration of variables in the header file shall be such, that it is
        possible to calculate the size of the variables by C-"sizeof".
      </description>
      <comment>
        No support for AUTOSAR Debugging.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.DebugAndTrace</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM348</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Variables available for debugging shall be described in the respective Basic
        Software Module Description.
      </description>
      <comment>
        No support for AUTOSAR Debugging.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.DebugAndTrace</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM349</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm states BusSleep, Synchronize, Repeat Message, Normal Operation, and
        Ready Sleep shall be available for debugging.
      </description>
      <comment>
        No support for AUTOSAR Debugging.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.DebugAndTrace</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      When periodic NM-message transmissions are expected and when those NM-messages
      are not transmitted within a time interval given by FrNmMsgTimeoutTime
      (configuration parameter), the FlexRay NM shall notify the Generic NM
      Interface module that a transmission failure has occurred; this
      notification occurs by calling Nm_TxTimeoutException.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0131</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_35_NegativeVoteInReadySleep_Timeout</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM294</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      Values for production code Event Ids are externally assigned during the
      configuration of the DEM. They are published in the file Dem_IntErrId.h
      and included via Dem.h.
    </description>
       <comment>
      This requirement is not applicable because FrNm does not define any
      production errors.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM293</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The following errors shall be detectable by the FlexRay NM depending on its build version (development/production mode).
        Type or error                                             | Relevance   | Related error code      | Value
        API service used without module initialization            | Development | FRNM_E_UINIT            | 01h
        API service called with invalid channel handle            | Development | FRNM_E_INVALID_CHANNEL  | 02h
        API service called with Invalid pointer                   | Development | FRNM_E_INVALID_POINTER  | 03h
        API service called with invalid PDU ID as input parameter | Development | FRNM_E_PDU_ID_INVALID   | 04h
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00021</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The detection of development errors is configurable (ON / OFF) at pre compile
        time. The switch FrNmDevErrorDetect (see chapter 10) shall  activate or
        deactivate the detection of all development errors.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM295</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The detection of production code errors cannot be switched off.
    </description>
       <comment>
      This requirement is not applicable because FrNm does not define any
      production errors.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Detected development errors shall be reported to the Det_ReportError service of
        the Development Error Tracer (DET) if the pre-processor switch FrNmDevErrorDetect is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_CHANNEL</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_POINTER</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM023</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Production errors shall be reported to the Diagnostic Event Manager. (BSW00339)
      </description>
      <comment>
        This requirement is not applicable because FrNm doesn't define any production error.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The FrNm module shall perform Inter Module Checks to avoid integration of
        incompatible files. The imported included files shall be checked by
        preprocessing directives.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.VersionCheck</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM297</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm performs a state change from state Synchronize to state NetworkMode and the previous
        state change from state Bus Sleep Mode to Syncronize was caused by a call of FrNm_NetworkRequest()
        (due to an active wakeup), the FrNm shall set the ActiveWakeupBit in the CBV.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00297</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM298</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm leaves the NetworkMode, the FrNm shall reset the ActiveWakeupBit in the CBV.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00298</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        After a successful initialization of the FrNm module, the function FrNm_Init
        shall set the initialization status to NM_INIT, otherwise to NM_UNINIT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.FrNmInt.InitStatus</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The function FrNm_Init shall select an active configuration set provided by means of a configuration pointer parameter.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_454</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM395</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If parameter nmConfigPtr of FrNm_Init equals NULL_PTR and if development error detection is enabled
        (i.e. FRNM_DEV_ERROR_DETECT equals ON), the function FrNm_Init shall report development error code
        FRNM_E_INVALID_POINTER to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_490</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkRequest in the
        Bus-Sleep Mode, then the function FrNm_NetworkRequest shall cause the
        FlexRay NM to leave the Bus-Sleep Mode, set the Network Request Flag
        FrNm_NetworkRequested to TRUE and then enter the Synchronize Mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkRequest in the
        Synchronize Mode, then the function FrNm_NetworkRequest shall set the
        Network Request Flag FrNm_NetworkRequested to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwRequestSyncState</srcid><srcstatus/><internalId>1253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkRequest in the
        Network Mode, then the function FrNm_NetworkRequest shall set the Network
        Request Flag FrNm_NetworkRequested to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.FRNM113.RepeatMessage</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM113.ReadySleep</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM113.NormalOperation</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkRelease in the Synchronize Mode,
        then the function FrNm_NetworkRelease shall set the Network Request Flag FrNm_NetworkRequested to FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0132</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkRelease in the
        Network Mode, then the function FrNm_NetworkRelease shall set the Network
        Request Flag FrNm_NetworkRequested to FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.FRNM114.RepeatMessage</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM114.ReadySleep</srcid><srcstatus/><internalId>508</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM114.NormalOperation</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM265</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The function FrNm_GetPduData shall get the whole NM PDU data out of the most recently received NM message.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0141</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM266</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>2</version>
      <description>
        The function FrNm_GetPduData shall only be available if the configuration
        parameter FrNmControlBitVectorEnabled or FrNmSourceNodeIdentifierEnabled
        or FrNmUserDataEnabled is set to ON.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</srcid><srcstatus/><internalId>512</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the node detection feature is enabled, then the function
        FrNm_RepeatMessageRequest shall request node detection on the FlexRay Bus NM nodes.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0097</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0096</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If FrNm module's environment is calling the function the FrNm_RepeatMessageRequest in
        the Network Mode and if the Node detection service is activated (FrNmNodeDetectionEnabled),
        then the function FrNm_RepeatMessageRequest shall set the flag FrNm_RepeatMessage to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00226</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>2</version>
      <description>
        The function FrNm_RepeatMessageRequest shall be only available if the
        configuration parameter FrNmNodeDetectionEnabled is set to ON.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If the node detection feature is enabled, then the function FrNm_GetNodeIdentifier shall
        provide the node identifier from the most recently received NM-message.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00047</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        If node detection is enabled, then the function FrNm_GetLocalNodeIdentifier
        shall provide the node identifier configured for the local host node (FrNmNodeId).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00046</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM272</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The function FrNm_GetVersionInfo shall return the version information Module Id
        Vendor Id Vendor specific version numbers.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0153</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM273</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      If source code for caller and callee of the API FrNm_GetVersionInfo is
      available, then the FrNm module should realize FrNm_GetVersionInfo as a
      macro, defined in the module's header file.
    </description>
       <comment>
      This requirement is not applicable because FrNm_GetVersionInfo is
      provided as a normal C function because source code of the caller
      is not available.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM274</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The function FrNm_GetVersionInfo shall be only available if the configuration parameter FrNmVersionInfoApi is set as ON.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM280</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The function FrNm_TriggerTransmit shall copy the triggered FlexRay NM PDU with
      respect to the triggered FlexRay NM PDU ID.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00280</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm_TxConfirmation</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Service name      | FrNm_TxConfirmation
        Syntax            | void FrNm_TxConfirmation( PduIdType TxPduId )
        Service ID[hex]   | 0x40
        Sync/Async        | Synchronous
        Reentrancy        | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in)   | TxPduId | ID of the I-PDU that has been transmitted.
        Parameters (inout)| None
        Parameters (out)  | None
        Return value      | None
        Description       | The lower layer communication module confirms the transmission of an I-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Cbk.h_81</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM255</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
       Service name    | FrNm_MainFunction_&amp;lt;NmClstIdx&amp;gt;
       Syntax          | void FrNm_MainFunction_&amp;lt;NmClstIdx&amp;gt;( void)
       Service ID[hex] | 0xf0
       Timing          | FIXED_CYCLIC
       Description     | Main function of FlexRay NM.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM283</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        There shall be one dedicated FlexRay NM Main Function for each NM cluster. The
        API names are therefore: FrNm_MainFunction_0() for FlexRay NM cluster
        associated with FlexRay NM cluster 0 FrNm_MainFunction_1() for FlexRay NM
        cluster associated with FlexRay NM cluster 1 Etc.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM344</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The Service ID of FrNm_MainFunction_&amp;lt;NmClstIdx&amp;gt; shall be 0xf0 + NmClstIdx.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM256</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        API function                    | Description
        Dem_ReportErrorStatus           | Queues the reported events from the BSW modules (API is only used  by BSW modules).
                                        | The interface has an asynchronous behavior,  because the processing of the event
                                        | is done within the Dem main  function.
        FrIf_GetGlobalTime              | Wraps the FlexRay Driver API function Fr_GetGlobalTime().
        FrIf_GetNmVector                | Derives the FlexRay NM Vector.
        FrIf_Transmit                   | Requests the sending of a PDU.
        Nm_BusSleepMode                 | Notification that the network management has entered Bus-Sleep Mode.
        Nm_NetworkMode                  | Notification that the network management has entered Network Mode.

        Note: The Generic NM Interface is currently seen as thin adaptation layer (e.g. implemented as c-macros)
        which will be used to interface to the ComM and FrSm.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00256</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM257</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        API function                    | Description
        --------------------------------------------------------------------------------------------------------------------------------
        Det_ReportError                 | Service to report development errors.
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_CarWakeUpIndication          | This function is called by a &amp;lt;Bus&amp;gt;Nm to indicate reception of a  CWU request.
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_CoordReadyToSleepIndication  | Sets an indication, when the NM Coordinator Sleep Ready bit in  the Control Bit Vector is set
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_NetworkStartIndication       | Notification that a NM-message has been received in the Bus-Sleep  Mode, what indicates that
                                        | some nodes in the network have already  entered the Network Mode.
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_RemoteSleepCancellation      | Notification that the network management has detected that not all other  nodes on the
                                        | network are longer ready to enter Bus-Sleep Mode.
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_RemoteSleepIndication        | Notification that the network management has detected that
                                        | all other  nodes on the network are ready to enter Bus-Sleep Mode.
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_StateChangeNotification      | Notification that the state of the lower layer &amp;amp;lt;BusNm&amp;amp;gt; has changed.
        --------------------------------------------------------------------------------------------------------------------------------
        Nm_SynchronizationPoint         | Notification to the NM Coordinator functionality that this
                                        | is a suitable point in time to initiate the coordination algorithm on.
        --------------------------------------------------------------------------------------------------------------------------------
        PduR_FrNmTriggerTransmit        | The lower layer communication module requests the buffer of the SDU  for
                                        | transmission from the upper layer module.
        --------------------------------------------------------------------------------------------------------------------------------
        PduR_FrNmTxConfirmation         | The lower layer communication module confirms the transmission of an I-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00257</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM290</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        All configuration parameters are configured at pre-compile time.
      </description>
      <comment>
        Some parameters are configured at Post-Build time.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PartialPBSupport</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM291</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        All configuration parameters of the container FrNmGlobalConfig related to enable or disable
        an optional feature shall be configurable at pre-compile time. The remaining configuration
        parameters shall be configurable at link time.
      </description>
      <comment>
        Link-time configuration is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_28</srcid><srcstatus/><internalId>1070</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM292</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The parameters contained in FrNmChannelConfig are configurable at post-build time.
        The parameters contained in FrNmGlobalConfig are configurable at pre-compile time
      </description>
      <comment>
        Not all parameters contained in FrNmChannelConfig are configurable at post-build time.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PartialPBSupport</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM017</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      The Global Scope specifies configuration parameters that shall be defined in the
      module's configuration header file FrNm_Cfg.h.
    </description>
       <comment>
      This requirement is informational only.
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The Channel Scope (FrNm_ChannelConfig) specifies configuration parameters that
        shall be located in a data structure of type  FrNm_ConfigType.
      </description>
      <comment>
        As currently only some parameters are PostBuild (and the have been added to the
        FrNm_ConfigType structure), not all parameters in FrNm_ChannelConfig are in this structure.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PartialPBSupport</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0001_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Container Name        | FrNmGlobalConfig{FrNm_GlobalConfig}
        Description           | This container contains all global configuration parameters for the FrNm module.
        Included Containers
          Container Name        | Multiplicity  | Scope / Dependency
          FrNmGlobalConstants   | 1             | This container contains module constants related to the FlexRay NM functionality.
          FrNmGlobalFeatures    | 1             | This container contains module features related to the FlexRay NM functionality
          FrNmGlobalProperties  | 1             | This container contains module properties related to the FlexRay NM functionality.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1945</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>FrNm.ECUC_FrNm_00001</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0041_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>2</version>
      <description>
        Name               | FrNmControlBitVectorEnabled {FRNM_CONTROL_BIT_VECTOR_ENABLED}
        Description        | Pre-processor switch for enabling control bit vector support.
                           | calculationFormula = If (FrNmNodeDetectionEnabled == False) then Equal(False) else Equal(False or True)
        Multiplicity       | 1
        Type               | EcucBooleanParamDef
        Default value      | --
        ConfigurationClass | Pre-compile time | X | All Variants
                           | Link time | --
                           | Post-build time | --
        Scope / Dependency | scope: module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2022</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0059_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      Name               | FrNmRepeatMessageBitEnabled {FRNM_REPEAT_MESSAGE_BIT_ENABLED}
      Description        | Pre-processor switch for enabling the repeat message bit support.
      Multiplicity       | 1
      Type               | EcucBooleanParamDef
      Default value      | -
      ConfigurationClass | Pre-compile time X All Variants
                         | Link time -
                         | Post-build time -Scope /
      Scope / Dependency | scope: module
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2366</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0002</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0009</srcid><srcstatus/><internalId>1362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0069_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name               | FrNmPnEiraRxNSduRef {FRNM_PN_EIRA_RX_NSDU_REF}
        Description        | Reference to a Pdu in the COM-Stack. Only one SduRef is required for FrNm because the
                           | EIRA is the aggregation over all FlexRay Channels.
        Multiplicity       | 1
        Type               | Reference to [ Pdu ]
        ConfigurationClass | Pre-compile time X VARIANT-PRE-COMPILE
                           | Link time X VARIANT-LINK-TIME, VARIANT-POST BUILD
                           | Post-build time
        Scope / Dependency | scope: Module
                           | dependency: only available if FrNmPnEnabled == true for at least one  FrNm Channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ECUC_FrNm_00069</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0066_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name               | FrNmPnFilterMaskByteValue {FRNM_PN_FILTER_MASK_BYTE_VALUE}
        Description        | Parameter to configure the filter mask byte.
        Multiplicity       |  1
        Type               |  EcucIntegerParamDef
        Range              |  0 .. 255
        Default value      |  0
        ConfigurationClass | Pre-compile time X VARIANT-PRE-COMPILE
                           | Link time X VARIANT-LINK-TIME, VARIANT-POST BUILD
                           | Post-build time -
        Scope / Dependency | scope: Module
                           | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ECUC_FrNm_00066</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0035_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      Name               | FrNmMainFunctionPeriod {FRNM_MAIN_FUNCTION_PERIOD}
      Description        | This parameter defines the processing cycle of the main function of FrNm module in seconds.
      Multiplicity       | 1
      Type               | EcucFloatParamDef
      Range              | 0.001 ..0.02
      Default value      | --
      ConfigurationClass | Pre-compile time | X | VARIANT-PRE-COMPILE
                         | Link time        | X | VARIANT-LINK-TIME, VARIANT-POST BUILD
                         | Post-build time
      Scope / Dependency | scope: Module
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1437</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0028_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name               | FrNmMsgTimeoutTime {FRNM_MSG_TIMEOUT_TIME}
        Description        | Timeout of a NM-message. It determines in seconds how long the NM shall wait with
                           | notification of transmission failure while communication errors occur on the bus.
        Multiplicity       | 1
        Type               | EcucFloatParamDef
        Range              | 0 .. 65.535
        Default value      | --
        ConfigurationClass | Pre-compile time | X | VARIANT-PRE-COMPILE
                           | Link time        | X | VARIANT-LINK-TIME
                           | Post-build time  | X | VARIANT-POST-BUILD
        Scope / Dependency | scope: instance
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1465</srcid><srcstatus/><internalId>1002</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0131</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0007_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Container Name | FrNmChannelIdentifiers {Channel Identifiers}
        Description    | This container contains instance specific identifiers
                       | related to the respective FlexRay Channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ECUC_FrNm_00007</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0020_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
      Name                | FrNmControlBitVectorActive {FRNM_CONTROL_BIT_VECTOR_ACTIVE}
      Description         | This parameter is used to activate or deactivate the control bit vector support for a Fr Nm Channel.
      Multiplicity        | 1
      Type                | EcucBooleanParamDef
      Default value       | --
      ConfigurationClass  | Pre-compile time X VARIANT-PRE-COMPILE
                          | Link time X VARIANT-LINK-TIME, VARIANT-POST BUILD
                          | Post-build time -
      Scope / Dependency  | scope: instance
                          | dependency: This parameter may only be set to TRUE if FrNmControlBitVectorEnabled is set to True
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_313</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0002</srcid><srcstatus/><internalId>1352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0071_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name                | FrNmPnEraCalcEnabled {FRNM_PN_ERA_CALC_ENABLED}
        Description         | Specifies if FrNm calculates the PN request information for external  requests. (ERA)
                            | false: PN request are not calculated
                            | true: PN request are  calculated
        Multiplicity        | 1
        Type                | EcucBooleanParamDef
        Default value       | false
        ConfigurationClass  | Pre-compile time X VARIANT-PRE-COMPILE
                            | Link time X VARIANT-LINK-TIME, VARIANT-POST BUILD
                            | Post-build time -Scope /
        Scope / Dependency  | scope: Module
                            | dependency: only available if FrNmPnEnabled == true
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ECUC_FrNm_00071</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0019_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name                | FrNmRepeatMessageBitActive {FRNM_REPEAT_MESSAGE_BIT_ACTIVE}
        Description         | This parameter is used to activate or deactivate the repeat message bit support for a Fr Nm Channel.
        Multiplicity        | 1
        Type                | EcucBooleanParamDef
        Default value       | --
        ConfigurationClass  | Pre-compile time X VARIANT-PRE-COMPILE
                            | Link time X VARIANT-LINK-TIME, VARIANT-POST BUILD
                            | Post-build time
        Scope/ Dependency   | scope: instance
                            | dependency: This parameter may only be set to TRUE if FrNmRepeatMessageBitEnabled is set to True
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_582</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_RepeatMessageRequestInternal</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0002</srcid><srcstatus/><internalId>1352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0057_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name                | FrNmTxUserDataPduRef
        Description         | Reference to the NM User Data I-PDU in the global PDU collection.
        Multiplicity        | 1
        Type                | Reference to [ Pdu ]
        ConfigurationClass  | Pre-compile time X VARIANT-PRE-COMPILE
                            | Link time X VARIANT-LINK-TIME, VARIANT-POST BUILD 
                            | Post-build time -
       Scope / Dependency
      </description>
       <comment>
        Because of the new FrNm.EB.REQPROD_270453_1.RFC_54396.FrNmTxUserDataPduRef requirement,
        FrNm0057_Conf becomes obsolete as the configuration class PostBuild is not
        supported if the variant is VARIANT-POST-BUILD (according to Autosar specs).
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ECUC_FrNm_00057</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM400</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The standardized common published parameters as required by BSW00402 in the General Requirements
        on Basic Software Modules shall be published within the header file of this module and need to be
        provided in the BSW Module Description. The according module abbreviation can be found in the
        List of Basic Software Modules.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_8</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FRNM069</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        The following configuration constraints are conditionally recommended for FlexRay NM:

        NM_REPEAT_MESSAGE_TIME = 0 (conditions: (1) startup of all applications is completed as soon as
        the FlexRay communication is started and (2) node detection is not required in the FlexRay NM-cluster)

        FrNmReadySleepCnt=1 (condition : bus communication is always shut down at the end of the NM
        Repetition cycle in all node within the same FlexRay NM-cluster, even in presence of race conditions)
      </description>
       <comment>
        This requirement is not applicable. Requirement has changed but the current implementation is
        aligned with AUTOSAR 20-11 meaning.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>FrNm.ASR403.FrNm0018_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, V4.0.3</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxConfirmationPduId
        Parent Container          | FrNmTxPdu
        Description               | Handle Id to be used by the Lower Layer to confirm the transmission of the FrNmTxPdu to the LowerLayer.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range                     | 0.. 65535
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: instance
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ECUC_FrNm_00018</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <defaults>
      <idprefix>FrNm.</idprefix>
    </defaults>

    <specobject>
      <id>FrNm.ECUC_FrNm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name        | FrNmGlobalConfig
        Parent Container      | FrNm
        Description           | This container contains all global configuration parameters for the FrNm module.
        Included Containers
          Container Name        | Multiplicity  | Scope / Dependency
          FrNmGlobalFeatures    | 1             | This container contains module features related to the FlexRay NM functionality
          FrNmGlobalProperties  | 1             | This container contains module properties related to the FlexRay NM functionality.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FrNm0001_Conf</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name      | FrNmChannelConfig
        Parent Container    | FrNm
        Description         | This container contains the configuration parameters for all FlexRay NM channels.
        Included Containers
          Container Name      | Multiplicity | Scope / Dependency 
          FrNmChannel         | 1..*         | This container contains the configuration parameters for a FlexRay NM Channel.
      </description>
       <comment>
        Multiple module configurations are not supported.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.MultipleModuleConfig</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_82</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name      | FrNmGlobalProperties
        Parent Container    | FrNmGlobalConfig 
        Description         | This container contains module properties related to the FlexRay NM functionality.
        Included Parameters
          Parameter Name        | SWS Item ID
          FrNmDevErrorDetect    | ECUC_FrNm_00036
          FrNmMainAcrossFrCycle | ECUC_FrNm_00038
          FrNmVersionInfoApi    | ECUC_FrNm_00037
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2765</srcid><srcstatus/><internalId>1058</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name    | FrNmGlobalFeatures
        Parent Container  | FrNmGlobalConfig
        Description       | This container contains module features related to the FlexRay NM functionality.
        Included Parameters
          Parameter Name                              | SWS Item ID
          FrNmBusSynchronizationEnabled               | ECUC_FrNm_00048
          FrNmComUserDataSupport                      | ECUC_FrNm_00054
          FrNmCoordinatorSyncSupport                  | ECUC_FrNm_00081
          FrNmCycleCounterEmulation                   | ECUC_FrNm_00060
          FrNmDualChannelPduEnable                    | ECUC_FrNm_00049
          FrNmDynamicPncToChannelMappingSupport       | ECUC_FrNm_00090
          FrNmHwVoteEnable                            | ECUC_FrNm_00050
          FrNmPassiveModeEnabled                      | ECUC_FrNm_00043
          FrNmPduRxIndicationEnabled                  | ECUC_FrNm_00046
          FrNmPnEiraCalcEnabled                       | ECUC_FrNm_00067
          FrNmPnResetTime                             | ECUC_FrNm_00068
          FrNmPnSyncShutdownErrorReactionEnabled      | ECUC_FrNm_00093
          FrNmRemoteSleepIndicationEnabled            | ECUC_FrNm_00044
          FrNmStateChangeIndicationEnabled            | ECUC_FrNm_00047
          FrNmUserDataEnabled                         | ECUC_FrNm_00039
          FrNmVotingNextToLastRepetitionCycleDisable  | ECUC_FrNm_00073
          FrNmPnEiraRxNSduRef                         | ECUC_FrNm_00069
        Included Containers
          Container Name  | Multiplicity | Scope / Dependency
          FrNmPnInfo      | 0..1         | PN information configuration
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1957</srcid><srcstatus/><internalId>1024</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name                    | FrNmChannel
        Parent Container                  | FrNmChannelConfig
        Description                       | This container contains the configuration parameters for a FlexRay NM Channel.
        Post-Build Variant Multiplicity   | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE, VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Link time
                                          | Post-build time
        Included Containers 
          Container Name          | Multiplicity  | Scope / Dependency 
          FrNmChannelIdentifiers  | 1             | This container contains instance specific identifiers related to the respective FlexRay Channel.
          FrNmChannelTiming       | 1             | This container contains instance-specific timing related to the respective FlexRay Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_100</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name            | FrNmChannelIdentifiers
        Parent Container          | FrNmChannel
        Description               | This container contains instance specific identifiers related to the respective FlexRay Channel.
        Included Parameters
          Parameter Name                        | SWS Item ID
          FrNmActiveWakeupBitEnabled            | ECUC_FrNm_00082
          FrNmCarWakeUpBitPosition              | ECUC_FrNm_00076
          FrNmCarWakeUpBytePosition             | ECUC_FrNm_00075
          FrNmCarWakeUpFilterEnabled            | ECUC_FrNm_00077
          FrNmCarWakeUpFilterNodeId             | ECUC_FrNm_00078
          FrNmCarWakeUpRxEnabled                | ECUC_FrNm_00074
          FrNmDynamicPncToChannelMappingEnabled | ECUC_FrNm_00092
          FrNmNodeDetectionEnabled              | ECUC_FrNm_00086
          FrNmNodeId                            | ECUC_FrNm_00017
          FrNmPduScheduleVariant                | ECUC_FrNm_00022
          FrNmPnEnabled                         | ECUC_FrNm_00072
          FrNmPnEraCalcEnabled                  | ECUC_FrNm_00071
          FrNmRepeatMsgIndEnabled               | ECUC_FrNm_00091
          FrNmSourceNodeIdentifierEnabled       | ECUC_FrNm_00085
          FrNmSynchronizationPointEnabled       | ECUC_FrNm_00021
          FrNmSynchronizedPncShutdownEnabled    | ECUC_FrNm_00094
          FrNmChannelHandle                     | ECUC_FrNm_00013
          FrNmComMNetworkHandleRef              | ECUC_FrNm_00014
          FrNmPnEraRxNSduRef                    | ECUC_FrNm_00070
        Included Containers
          Container Name    | Multiplicity  | Scope / Dependency
          FrNmRxPdu         | 1..*          | This container describes the FlexRay NM RX PDU:s.
          FrNmTxPdu         | 0..4          | This container describes the FlexRay NM TX PDU:s.
          FrNmUserDataTxPdu | 0..1          | This optional container is used to configure the UserNm PDU. This container is only available if FrNmComUserDataSupport is enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_120</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_MultipleRxTxPDUs_3</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_MultipleRxTxPDUs_1</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_MultipleRxTxPDUs_2</srcid><srcstatus/><internalId>1123</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0007_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name    | FrNmChannelTiming
        Parent Container  | FrNmChannel
        Description       | This container contains instance-specific timing related to the respective FlexRay Channel.
        Included Parameters
          Parameter Name            | SWS Item ID
          FrNmDataCycle             | ECUC_FrNm_00031
          FrNmMainFunctionPeriod    | ECUC_FrNm_00035
          FrNmReadySleepCnt         | ECUC_FrNm_00051
          FrNmRemoteSleepIndTime    | ECUC_FrNm_00029
          FrNmRepeatMessageTime     | ECUC_FrNm_00030
          FrNmRepetitionCycle       | ECUC_FrNm_00033
          FrNmVoteInhibitionEnabled | ECUC_FrNm_00053
          FrNmVotingCycle           | ECUC_FrNm_00032
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1385</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name      | FrNmTxPdu
        Parent Container    | FrNmChannelIdentifiers
        Description         | This container describes the FlexRay NM TX PDU:s.
        Included Parameters
          Parameter Name          | SWS Item ID
          FrNmTxConfirmationPduId | ECUC_FrNm_00018
          FrNmTxPduContainsData   | ECUC_FrNm_00024
          FrNmTxPduContainsVote   | ECUC_FrNm_00023
          FrNmTxPduRef            | ECUC_FrNm_00011
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1047</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name      | FrNmRxPdu
        Parent Container    | FrNmChannelIdentifiers
        Description         | This container describes the FlexRay NM RX PDU:s.
        Included Parameters
          Parameter Name        | SWS Item ID
          FrNmRxPduContainsData | ECUC_FrNm_00027
          FrNmRxPduContainsVote | ECUC_FrNm_00026
          FrNmRxPduId           | ECUC_FrNm_00025
          FrNmRxPduRef          | ECUC_FrNm_00012
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_863</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxPduRef
        Parent Container          | FrNmTxPdu 
        Description               | The reference to a PDU in the global PDU structure described in the AUTOSAR ECU Configuration Specification.
                                  | This reference is used to derive the PDU Id that is defined by the FrIf module.
        Multiplicity              | 1
        Type                      | Reference to [ Pdu ]
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1164</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRxPduRef
        Parent Container          | FrNmRxPdu
        Description               | The reference to a PDU in the global PDU structure described in the AUTOSAR ECU Configuration Specification.
                                  | This reference will be used by the FrIf module to derive the PDU Id.
        Multiplicity              | 1
        Type                      | Reference to [ Pdu ]
        Post-Build Variant Value  | true 
        Value Configuration Class | Pre-compile time  | X | VARIANT-PRE-COMPILE
                                  | Link time         | X | VARIANT-LINK-TIME
                                  | Post-build time   | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_991</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmChannelHandle
        Parent Container          | FrNmChannelIdentifiers
        Description               | Channel identifier configured for the respective instance of the NM. The FrNmChannelHandle shall be encoded
                                  | in the FrNmRxPduId parameter which is passed to FrNm_RxIndication() function called by the FrIf.
        Multiplicity              | 1
        Type                      | Symbolic name reference to [ FrIfCluster ]
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.ECUC_FrNm_00013.ChannelHandle</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.ChannelHandle</srcid><srcstatus/><internalId>698</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.FrNmChannelHandle.NoPostBuild</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmComMNetworkHandleRef
        Parent Container          | FrNmChannelIdentifiers
        Description               | This reference points to the unique channel defined by the ComMChannel and
                                  | provides access to the unique channel index value in ComMChannelId.
        Multiplicity              | 1
        Type                      | Symbolic name reference to [ ComMChannel ]
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time  | X | VARIANT-PRE-COMPILE
                                  | Link time         | X | VARIANT-LINK-TIME 
                                  | Post-build time   | X | VARIANT-POST-BUILD 
        Scope / Dependency        | scope: local
                                  | dependency: It must be unique for each NM instance within one ECU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.ECUC_FrNm_00014.PreCompile</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmComMNetworkHandleRef.NoPostBuild</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmNodeId
        Parent Container          | FrNmChannelIdentifiers
        Description               | NM node identifier configured for the respective FlexRay Channel. It is used for identifying the respective
                                  | NM node in the NM-cluster. It must be unique for each NM node within one NM cluster.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 0.. 255
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_417</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0143</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxConfirmationPduId
        Parent Container          | FrNmTxPdu
        Description               | Handle Id used by the Lower Layer when calling FrNm_TriggerTransmit() or FrNm_TxConfirmation()
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range                     | 0.. 65535
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time | -
                                  | Post-build time | -
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/changelog/Deviations.xml_735</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1088</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0018_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmSynchronizationPointEnabled
        Parent Container          | FrNmChannelIdentifiers
        Description               | This parameter defines if this channel shall provide the synchronization point indication to the NM Interface.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_667</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0104</srcid><srcstatus/><internalId>1210</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0008</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPduScheduleVariant
        Parent Container          | FrNmChannelIdentifiers 
        Description               | This parameter defines the PDU scheduling variant that should be used for this channel.
                                  | Option 1 NM-Vote and NM-Data in static segment (one PDU)Option 2 NM-Vote and NM-Data 
                                  | in dynamic segment (one PDU)Option 3 NM-Vote and NM-Data in static segment (separate PDU)Option 
                                  | 4 NM-Vote in static segment and NM-Data in dynamic segmentOption 5 NM-Vote in dynamic segment 
                                  | and NM-Data in static segmentOption 6 NM-Vote and NM-Data in dynamic segment (separate PDU)
                                  | Option 7 Combined NM-Vote and CBV in static segment and NM-Data in dynamic segment 
        Multiplicity              | 1
        Type                      | EcucEnumerationParamDef
        Range                     | FRNM_PDU_SCHEDULE_VARIANT_1 | NM-Vote and NM-Data in static segment (one PDU)
                                  | FRNM_PDU_SCHEDULE_VARIANT_2 | NM-Vote and NM-Data in dynamic segment (one PDU)
                                  | FRNM_PDU_SCHEDULE_VARIANT_3 | NM-Vote and NM-Data in static segment (separate PDU)
                                  | FRNM_PDU_SCHEDULE_VARIANT_4 | NM-Vote in static segment and NM-Data in dynamic segment
                                  | FRNM_PDU_SCHEDULE_VARIANT_5 | NM-Vote in dynamic segment and NM-Data in static segment
                                  | FRNM_PDU_SCHEDULE_VARIANT_6 | NM-Vote and NM-Data in dynamic segment (separate PDU)
                                  | FRNM_PDU_SCHEDULE_VARIANT_7 | Combined NM-Vote and CBV in static segment and NM-Data in dynamic segment
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV1</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV2</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV3</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV4</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV5</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV6</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.ECUC_FrNm_00022.SchV7</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_453</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxPduContainsVote
        Parent Container          | FrNmTxPdu
        Description               | This parameter defines if the PDU contains NM Vote information.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1139</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxPduContainsData
        Parent Container          | FrNmTxPdu
        Description               | This parameter defines if the PDU contains NM Data.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1116</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRxPduId
        Parent Container          | FrNmRxPdu
        Description               | PDU identifier configured for the respective FlexRay Channel. It is used for referring to the FlexRay
                                  | Interface receive function. It must be consistent with the value configured in the FlexRay Interface.
                                  | This ID is used for the combined reception of NM Vote and NM Data or for the reception of the NM Vote 
                                  | if NM Data is received in a separate PDU.
                                  | ImplementationType: PduIdType
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range                     | 0.. 65535
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/changelog/Deviations.xml_736</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_959</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRxPduContainsVote
        Parent Container          | FrNmRxPdu
        Description               | This parameter defines if the PDU contains NM Vote information.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_934</srcid><srcstatus/><internalId>977</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRxPduContainsData
        Parent Container          | FrNmRxPdu
        Description               | This parameter defines if the PDU contains NM Data.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME 
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_900</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRemoteSleepIndTime
        Parent Container          | FrNmChannelTiming
        Description               | Timeout for Remote Sleep Indication. It defines the time in seconds how long it shall take to recognize
                                  | that all other nodes are ready to sleep. The value "0" denotes that no Remote Sleep Indication functionality is configured.
        Multiplicity              | 1
        Type                      | EcucFloatParamDef 
        Range                     | [0.. 65.535]
        Default value             | --
        Post-Build Variant Value  | false 
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                  | Post-build time
        Scope / Dependency        | scope: local
                                  | dependency: Condition: FrNmRemoteSleepIndTime &gt;= FrNmRepetitionCycle or FrNmRemoteSleepIndTime = 0 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1543</srcid><srcstatus/><internalId>1005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0007</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRepeatMessageTime
        Parent Container          | FrNmChannelTiming
        Description               | Timeout for Repeat Message State. Defines the time in seconds how long the NM shall stay in the Repeat
                                  | Message State. The value "0" denotes that no Repeat Message State is configured, which means that
                                  | Repeat Message State is transient and implies that it is left immediately after entry and consequently
                                  | no startup stability is guaranteed and no node detection procedure is possible.
        Multiplicity              | 1
        Type                      | EcucFloatParamDef
        Range                     | [0.. 65.535]
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                  | Post-build time
        Scope / Dependency        | scope: ECU
                                  | dependency: Timing value shall be an integer multiple of the time for one repetition cycle.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1606</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleepEntry</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NormalOperationEntry</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmDataCycle
        Parent Container          | FrNmChannelTiming
        Description               | Number of FlexRay Schedule Cycles needed to transmit the NM Data of all ECUs on the FlexRay bus 
        Multiplicity              | 1
        Type                      | EcucEnumerationParamDef
        Range                     | FRNM_CYCLE_VALUE_1
                                  | FRNM_CYCLE_VALUE_16
                                  | FRNM_CYCLE_VALUE_2
                                  | FRNM_CYCLE_VALUE_32
                                  | FRNM_CYCLE_VALUE_4
                                  | FRNM_CYCLE_VALUE_64
                                  | FRNM_CYCLE_VALUE_8
        Post-Build Variant Value  | false 
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1400</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmVotingCycle
        Parent Container          | FrNmChannelTiming
        Description               | Number of FlexRay Schedule Cycles needed to transmit the Nm vote of all ECUs on the FlexRay Bus.
        Multiplicity              | 1
        Type                      | EcucEnumerationParamDef
        Range                     | FRNM_CYCLE_VALUE_1
                                  | FRNM_CYCLE_VALUE_16
                                  | FRNM_CYCLE_VALUE_2
                                  | FRNM_CYCLE_VALUE_32
                                  | FRNM_CYCLE_VALUE_4
                                  | FRNM_CYCLE_VALUE_64
                                  | FRNM_CYCLE_VALUE_8
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1706</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRepetitionCycle
        Parent Container          | FrNmChannelTiming
        Description               | Number of Flexray Schedule Cycles used to repeat the transmission of the Nm vote of all ECUs on the Flexray Bus.
        Multiplicity              | 1
        Type                      | EcucEnumerationParamDef
        Range                     | FRNM_CYCLE_VALUE_1
                                  | FRNM_CYCLE_VALUE_16
                                  | FRNM_CYCLE_VALUE_2
                                  | FRNM_CYCLE_VALUE_32
                                  | FRNM_CYCLE_VALUE_4
                                  | FRNM_CYCLE_VALUE_64
                                  | FRNM_CYCLE_VALUE_8
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
                                  | dependency: Condition: FrNmRepetitionCycle = n * FrNmVotingCycle; n = [1,2,4,8,16,32,64]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1643</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmMainFunctionPeriod
        Parent Container          | FrNmChannelTiming
        Description               | This parameter defines the processing cycle of the main function of FrNm module in seconds.
        Multiplicity              | 1
        Type                      | EcucFloatParamDef
        Range                     | 0 .. INF
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.MainFunctionPeriod</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FrNm0035_Conf</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmDevErrorDetect
        Parent Container          | FrNmGlobalProperties
        Description               | Switches the development error detection and notification on or off.
                                  | true: detection and notification is enabled.
                                  | false: detection and notification is disabled.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | false
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2777</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmVersionInfoApi
        Parent Container          | FrNmGlobalProperties
        Description               | Pre-processor switch for enabling version info API support.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | false
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2878</srcid><srcstatus/><internalId>1062</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0153</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmMainAcrossFrCycle
        Parent Container          | FrNmGlobalProperties
        Description               | If the FlexRay NM MainFunction is executed completely within the FlexRay
                                  | communication cycle where the last NM vote of the current vote cycle is received, the
                                  | FrNmMainAcrossFrCycle shall be configured to FALSE. If the FlexRay NM MainFunction is executed
                                  | completely within the FlexRay communication cycle subsequent to the one where the last NM vote
                                  | of the current vote cycle is received, the FrNmMainAcrossFrCycle shall be configured to TRUE
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time 
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2804</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0002</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmUserDataEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling user data support.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants 
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2470</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPassiveModeEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling Passive Node Configuration support.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants 
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2209</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRemoteSleepIndicationEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling remote sleep indication. calculationFormula =
                                  | If (FrNmPassiveModeEnabled == True) then Equal(False) else Equal(False or True)
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2334</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPduRxIndicationEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling PDU reception indication.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2233</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmStateChangeIndicationEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling state change indication.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2421</srcid><srcstatus/><internalId>1043</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmBusSynchronizationEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling the bus synchronization.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1971</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmDualChannelPduEnable
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling the support of dual channel transmission and reception of NM messages.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2096</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_DualChannelEnabled</srcid><srcstatus/><internalId>1380</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_VoteInhibition_DualChannel</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmHwVoteEnable
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling the processing of FlexRay Hardware aggregated
                                  | NM-Votes. This switch enables/disables the optional API FrIf_GetNmVector.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2159</srcid><srcstatus/><internalId>1034</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmReadySleepCnt
        Parent Container          | FrNmChannelTiming
        Description               | FrNm switches to bus sleep mode at the end of the FrNmReadySleepCnt+1 repetition
                                  | cycle without any NM vote. E.g. on a value of "1", the NM-State Machine will leave the Ready
                                  | Sleep State after two NM Repetition Cycles with no "keep awake" votes.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 0.. 65535
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
                                  | dependency: Condition: FrNmReadySleepCnt &gt;= 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1513</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0155</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_RMStateToRSState</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmVoteInhibitionEnabled
        Parent Container          | FrNmChannelTiming
        Description               | Pre-processor switch for enabling the inhibition of vote changes from the next-to-
                                  | last repetition cycle to the last repetition cycle before the Ready Sleep Counter expires.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1681</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_VoteInhibition</srcid><srcstatus/><internalId>1354</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_VoteInhibition_DualChannel</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmComUserDataSupport
        Parent Container          | FrNmGlobalFeatures
        Description               | Preprocessor switch for enabling the Tx path of Com User Data. Use case: Setting of NMUserData via SWC.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1994</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name          | FrNmUserDataTxPdu
        Parent Container        | FrNmChannelIdentifiers
        Description             | This optional container is used to configure the UserNm PDU. This container is only available if FrNmComUserDataSupport is enabled.
        Included Parameters
          Parameter Name        | SWS Item ID
          FrNmTxUserDataPduId   | ECUC_FrNm_00056
          FrNmTxUserDataPduRef  | ECUC_FrNm_00057
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1204</srcid><srcstatus/><internalId>988</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_2</srcid><srcstatus/><internalId>1110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxUserDataPduId
        Parent Container          | FrNmUserDataTxPdu
        Description               | This parameter defines the Handle ID of the NM User Data I-PDU.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range                     | 0.. 65535
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1231</srcid><srcstatus/><internalId>990</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmTxUserDataPduRef
        Parent Container          | FrNmUserDataTxPdu
        Description               | Reference to the NM User Data I-PDU in the global PDU collection.
        Multiplicity              | 1
        Type                      | Reference to [ Pdu ]
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1263</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmCycleCounterEmulation
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling the cycle counter emulation.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2073</srcid><srcstatus/><internalId>1030</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name            | FrNmPnInfo
        Parent Container          | FrNmGlobalFeatures 
        Description               | PN information configuration 
        Included Parameters
          Parameter Name    | SWS Item ID
          FrNmPnInfoLength  | ECUC_FrNm_00063
          FrNmPnInfoOffset  | ECUC_FrNm_00062
        Included Containers 
          Container Name        | Multiplicity  | Scope / Dependency
          FrNmPnFilterMaskByte  | 1..63         | Filter mask byte configuration
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2560</srcid><srcstatus/><internalId>1048</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnInfoOffset
        Parent Container          | FrNmPnInfo
        Description               | Specifies the offset of the PN request information in the NM message.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef 
        Range                     | 1.. 63
        Default value             | 1
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time                 | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
                                  | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_500</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2616</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10010</srcid><srcstatus/><internalId>1101</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrNmPnInfo_504PNCs</srcid><srcstatus/><internalId>1350</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrNmPnResetTime_504PNCs</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnInfoLength
        Parent Container          | FrNmPnInfo
        Description               | Specifies the length of the PN request information in the NM message.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 1.. 63
        Default value             | 1
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time 
        Scope / Dependency        | scope: local
                                  | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_488</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2583</srcid><srcstatus/><internalId>1050</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10011</srcid><srcstatus/><internalId>1102</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrNmPnInfo_504PNCs</srcid><srcstatus/><internalId>1350</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrNmPnResetTime_504PNCs</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name            | FrNmPnFilterMaskByte
        Parent Container          | FrNmPnInfo
        Description               | Filter mask byte configuration
        Configuration Parameters
        Parameter Name
          Parameter Name            | SWS Item ID
          FrNmPnFilterMaskByteIndex | ECUC_FrNm_00065
          FrNmPnFilterMaskByteValue | ECUC_FrNm_00066
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2658</srcid><srcstatus/><internalId>1053</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnFilterMaskByteIndex
        Parent Container          | FrNmPnFilterMaskByte
        Description               | Index of the filter mask byte. Specifies the position within the filter mask byte array.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 0.. 63
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time | --
        Scope / Dependency        | scope: local
                                  | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel. FrNmPnFilterMaskByteIndex &lt; FrNmPnInfoLength 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.ECUC_FrNm_00065.Range</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmPnFilterMaskByteIndex</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>doc/public/changelog/Deviations.xml_737</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnFilterMaskByteValue
        Parent Container          | FrNmPnFilterMaskByte
        Description               | Parameter to configure the filter mask byte.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 0.. 255
        Default value             | 0
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
                                  | dependency: only available if FrNmPnEnabled== true for at least one FrNm Channel; FrNmPnFilterMaskByteIndex &lt; FrNmPnInfoLength
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2724</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0066_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmPnEiraCalcEnabled
        Parent Container                  | FrNmGlobalFeatures
        Description                       | Specifies if FrNm calculates the PN request information for internal an external requests. (EIRA)
                                          | true:  PN request are calculated
                                          | false: PN request are not calculated
        Multiplicity                      | 0..1
        Type                              | EcucBooleanParamDef
        Default value                     | false
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time  | X | VARIANT-PRE-COMPILE
                                          | Link time         | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time  | X | VARIANT-PRE-COMPILE 
                                          | Link time         | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2256</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmPnResetTime
        Parent Container                  | FrNmGlobalFeatures
        Description                       | Specifies the runtime of the reset timer in seconds. This reset time is valid for
                                          | the reset of PN requests in the EIRA and in the ERA. The value shall be the same for every
                                          | channel. Thus it is a global config parameter.
        Multiplicity                      | 0..1
        Type                              | EcucFloatParamDef
        Range                             | [0.001.. 65.535]
        Default value                     | --
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time 
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                          | Post-build time 
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2296</srcid><srcstatus/><internalId>1039</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Rx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmPnEiraRxNSduRef
        Parent Container                  | FrNmGlobalFeatures
        Description                       | Reference to a Pdu in the COM-Stack. Only one SduRef is required for FrNm because
                                          | the EIRA is the aggregation over all FlexRay Channels.
        Multiplicity                      | 0..1
        Type                              | Reference to [ Pdu ]
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | true
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PnEiraRxNSduRef</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>doc/public/changelog/Deviations.xml_738</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.FrNmPnEiraRxNSduRef</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0069_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmPnEraRxNSduRef
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Reference to a global Pdu. The SduRef is required for every FrNm Channel, because ERA is reported per channel.
        Multiplicity                      | 0..1
        Type                              | Reference to [ Pdu ]
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | true
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmPnEraCalcEnabled == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoSupportVariantHandling</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FrNm_Cfg.c_148</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_741</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmPnEraCalcEnabled
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Specifies if FrNm calculates the PN request information for external requests. (ERA)
                                          | false: PN request are not calculated
                                          | true: PN request are calculated
        Multiplicity                      | 0..1
        Type                              | EcucBooleanParamDef
        Default value                     | false
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time 
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmPnEnabled == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_546</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0071_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnEnabled
        Parent Container          | FrNmChannelIdentifiers
        Description               | Enables or disables support of partial networking.
                                  | false: Partial networking Range not supported
                                  | true: Partial networking supported
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | false
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: local
                                  | dependency: If FrNmPnEnabled == TRUE thenFrNmComUserDataSupport = TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_499</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PNEnabled_False</srcid><srcstatus/><internalId>1363</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PNEnabled_true</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmCarWakeUpRxEnabled
        Parent Container          | FrNmChannelIdentifiers
        Description               | Enables or disables support of CarWakeUp bit evaluation in received NM messages.
                                  | FALSE - CarWakeUp not supported
                                  | TRUE - CarWakeUp supported
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_286</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_false</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_DataRx_Indication_02</srcid><srcstatus/><internalId>1383</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_DataRx_Indication_04</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmCarWakeUpBytePosition
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Specifies the Byte position of the CWU within the NM-Message.
        Multiplicity                      | 0..1
        Type                              | EcucIntegerParamDef
        Range                             | 2.. 7
        Default value                     | --
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time        | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time        | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_189</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmCarWakeUpBitPosition
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Specifies the Bit position of the CWU within the NM-Message.
        Multiplicity                      | 0..1
        Type                              | EcucIntegerParamDef
        Range                             | 0.. 7
        Default value                     | --
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_160</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmCarWakeUpFilterEnabled
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | If CWU filtering is supported, only the CWU bit within the NM message with source
                                          | node identifier FrNmCarWakeUpFilterNodeId is considered as CWU request.
                                          | FALSE - CWU Filtering is not supported
                                          | TRUE - CWU Filtering is supported
        Multiplicity                      | 0..1
        Type                              | EcucBooleanParamDef
        Default value                     | --
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_221</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmCarWakeUpFilterNodeId
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Source node identifier for CWU filtering. If CWU filtering is supported, only the CWU bit
                                          | within the NMmessage with source node identifier FrNmCarWakeUpFilterNodeId is considered as CWUrequest.
        Multiplicity                      | 0..1
        Type                              | EcucIntegerParamDef
        Range                             | 0.. 255
        Default value                     | --
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_253</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmCoordinatorSyncSupport
        Parent Container          | FrNmGlobalFeatures
        Description               | Enables/disables the coordinator synchronization support.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
                                  | Link time | --|
                                  | Post-build time | --|
        Scope / Dependency        | scope: local
                                  | dependency: FrNmCoordinatorSyncSupport has to be set to FALSE if FrNmPassiveModeEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2043</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmActiveWakeupBitEnabled
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Enables/Disables the handling of the Active Wakeup Bit in the FrNm module.
        Multiplicity                      | 0..1
        Type                              | EcucBooleanParamDef
        Default value                     | false
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_134</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_2</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_3</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_4</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_4_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1246</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module Name                 | FrNm
        Module Description          | The Flexray Nm module
        Post-Build Variant Support  | true
        Supported Config Variants   | VARIANT-LINK-TIME, VARIANT-POST-BUILD, VARIANT-PRE-COMPILE
        Included Containers
          Container Name    | Multiplicity  | Scope / Dependency 
          FrNmChannelConfig | 1             | This container contains the configuration parameters for all FlexRay NM channels.
          FrNmGlobalConfig  | 1             | This container contains all global configuration parameters for the FrNm module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_16</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmSourceNodeIdentifierEnabled
        Parent Container          | FrNmChannelIdentifiers
        Description               | This parameter is used to enable or disable SourceNodeIdentifier support for a FrNm Channel.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_639</srcid><srcstatus/><internalId>967</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_SourceNodeIdOnOff_0</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_SourceNodeIdOnOff_1</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_SourceNodeIdOnOff_2</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_SourceNodeIdOnOff_3</srcid><srcstatus/><internalId>1159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmNodeDetectionEnabled
        Parent Container          | FrNmChannelIdentifiers
        Description               | This parameter is used to enable or disable node detection support for a FrNm Channel.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time
        Scope / Dependency        | scope: local
                                  | dependency: FrNmSourceNodeIdentifierEnabled needs to be TRUE to use this feature for the
                                  | corresponding FrNm Channel. calculationFormula = If (FrNmPassiveModeEnabled == False) then Equal(NmNodeDetectionEnabled) else Equal(False)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_377</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_SourceNodeIdOnOff_0</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_SourceNodeIdOnOff_4</srcid><srcstatus/><internalId>1160</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmVotingNextToLastRepetitionCycleDisable
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for disabling vote changes in the last two repetition cycles before the Ready Sleep Counter expires.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time
                                  | Post-build time
        Scope / Dependency        | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.VotingNextToLastRepetitionCycle</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmDynamicPncToChannelMappingSupport
        Parent Container          | FrNmGlobalFeatures
        Description               | Precompile time switch to enable the dynamic PNC-to-channel-mapping handling.
                                  | False: Dynamic PNC-to-channel-mapping is disabled
                                  | True: Dynamic PNC-to-channel-mapping is enabled Tags:
        Multiplicity              | 1 
        Type                      | EcucBooleanParamDef 
        Default value             | --
        Post-Build Variant Value  | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
                                  | Link time 
                                  | Post-build time 
        Scope / Dependency        | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoDynamicPncToChannelMappingSupport</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2121</srcid><srcstatus/><internalId>1032</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmRepeatMsgIndEnabled
        Parent Container          | FrNmChannelIdentifiers
        Description               | Enable/disable the notification that a RepeatMessageRequest bit has been received.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                                  | Post-build time
        Scope / Dependency        | scope: ECU
                                  | dependency: FrNmRepeatMsgIndEnabled = FALSE if FrNmPassiveModeEnabled == TRUE or
                                  | (FrNmNodeDetectionEnabled == FALSE &amp;&amp; FrNmDynamicPncToChannelMappingEnabled == FALSE).
                                  | FrNmRepeatMsgIndEnabled = TRUE if FrNmDynamicPncToChannelMappingEnabled == TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmRepeatMsgIndEnabled</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_605</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmDynamicPncToChannelMappingEnabled
        Parent Container                  | FrNmChannelIdentifiers
        Description                       | Channel-specific parameter to enable the dynamic PNC-to-channel-mapping feature.
                                          | False: Dynamic PNC-to-channel-mapping is disabled
                                          | True: Dynamic PNC-to-channel-mapping is enabled
        Multiplicity                      | 0..1
        Type                              | EcucBooleanParamDef
        Default value                     | false
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: Shall only be TRUE if FrNmDynamicPncToChannelMappingSupport is TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoLinkTimeSupportACG9</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoDynamicPncToChannelMappingSupport</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.NoSupportForPostBuildVariantValue</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_341</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnSyncShutdownErrorReactionEnabled
        Parent Container          | FrNmGlobalFeatures
        Description               | Pre-processor switch for enabling reaction, if a top-level PNC coordinator received a PN shutdown
                                  | message on a NM-channel which refer to a ComM channel that is actively coordinated by a PNC gateway.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | --
        Post-Build Variant Value  | false
        Value Configuration Class | Pre-compile time | X | All Variants
                                  | Link time 
                                  | Post-build time
        Scope / Dependency        | scope: local
                                  | dependency: This parameter shall only be set to TRUE if FrNmSynchronizedPncShutdownEnabled is set to TRUE on at least one channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNCSynchronizedShutdownErrorReaction</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>FrNm.ECUC_FrNm_00094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name                              | FrNmSynchronizedPncShutdownEnabled
        Parent Container                  | FrNmChannelIdentifiers 
        Description                       | Specifies if FrNm handle PN shutdown messages to support a synchronized PNC shutdown across a PN topology.
                                          | This is only used for ECUs in the role of a top-level PNC coordinator or intermediate PNC coordinator.
                                          | Thus, the PNC gateway functionality is enabled and therefore ERA calculation is used.
                                          | FALSE: synchronized PNC shutdown is disabled
                                          | TRUE: synchronized PNC shutdown is enabled.
        Multiplicity                      | 0..1
        Type                              | EcucBooleanParamDef
        Default value                     | false
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | false
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                          | Link time | X | VARIANT-LINK-TIME 
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE 
                                          | Link time | X | VARIANT-LINK-TIME 
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: Only available if FrNmPnEnabled == TRUE and FrNmPnEraCalcEnabled == TRUE 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_692</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10013</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_DET_01</srcid><srcstatus/><internalId>1268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        FlexRay NM-Data PDU format shall be defined as follows:
        The figure below shows an example for 8 bytes PDU length
        Bit 7  | Bit 6 | Bit 5 | Bit 4 | Bit 3 | Bit 2 | Bit 1 | Bit 0
        Byte 7 | User data 5 
        Byte 6 | User data 4 
        Byte 5 | User data 3 
        Byte 4 | User data 2 
        Byte 3 | User data 1 
        Byte 2 | User data 0 
        Byte 1 | Source Node Identifier 
        Byte 0 | Set to "0" | Control Bit Vector 
        Table [REF]-[REF] FlexRay NM-Data PDU Format
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00155</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall call the FlexRay Interface function FrIf_Transmit to
        transmit NM-Vote and NM-Data if the transmission of cyclic NM-messages is started.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrIf_Transmit_1</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_RxIndication shall handle the data from an NM-message—this means that the 
        function shall copy the received FlexRay NM PDU and store it locally associated with the 
        received FlexRay NM PDU ID.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0140</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00020</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Both static and runtime configuration parameters shall be located outside the source code of the module.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error                                                                 | Related error code      | Error value
        API service used without module initialization                                | FRNM_E_UNINIT           | 01h
        API service called with invalid channel handle                                | FRNM_E_INVALID_CHANNEL  | 02h
        API service called with Invalid pointer                                       | FRNM_E_PARAM_POINTER    | 03h
        API service called with invalid PDU ID as input parameter                     | FRNM_E_PDU_ID_INVALID   | 04h
        FrNm initialization has failed, e.g. selected configuration set doesn't exist | FRNM_E_INIT_FAILED      | 05h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_CHANNEL</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_POINTER</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_Init shall initialize the FrNm module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_DET_OFF_ValidCfg</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_Init shall deactivate the periodic transmission of NM-Vote and NM-Data after the initialization of the FrNm module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0121</srcid><srcstatus/><internalId>1335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00034</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each service other than FrNm_Init refers to one NM cluster only.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNm_TxConfirmation is called with result E_NOT_OK then FrNm shall call the function Nm_TxTimeoutException.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.ReliableTxConfirmation</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>dev.FrNm.FrNm_TxConfirmationResultParameter</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The following runtime configurable parameters shall be configurable for each channel separately.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_70</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The set of the Source Node Identifier shall be configurable using the configuration parameter FrNmNodeId 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0143</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        After the initialization of the FrNm module, the function FrNm_Init shall set the Reserved Bytes in the NM-Data and NM-Vote PDU to 0.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1360</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If user data handling is enabled for the FrNm module, then the function FrNm_SetUserData shall set the user data.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0139</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If user data handling is enabled for the FrNm module, then the function FrNm_GetUserData shall provide the user data from the last received NM-Data PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0140</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Within the initialization of the FrNm module the function FrNm_Init shall set the User Data bytes to FFh.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1372</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PN_Initialization</srcid><srcstatus/><internalId>1376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_GetLocalNodeIdentifier shall provide the node identifier configured for the 
        local host node (FrNmNodeId) if FrNmSourceNodeIdentifierEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0143</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_GetNodeIdentifier shall provide the node identifier from the most recently 
        received NM-message if FrNmSourceNodeIdentifierEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0142</srcid><srcstatus/><internalId>1391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If DET is enabled and the FlexRay NM API service is called with an invalid handle, then the corresponding function
        shall report FRNM_E_INVALID_CHANNEL error to the Default Error Tracer and it shall return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_878</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_944</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_998</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1054</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1111</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1118</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1176</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1237</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1292</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1373</srcid><srcstatus/><internalId>842</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1440</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1509</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1554</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1625</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1730</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1797</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1859</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2588</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2647</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_CHANNEL</srcid><srcstatus/><internalId>1106</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall consist of:
        Bit 0 Repeat Message Request Bit (RptMsgRequest):
          0: Repeat Message State not requested
          1: Repeat Message State requested
        Bit 1 PN Shutdown Request Bit (PNSR):
          0: NM message does not contain synchronized Partial Network shutdown request
          1: NM message does contain synchronized Partial Network shutdown request for at least one PNC 
        Bit 3 NM Coordinator Sleep Ready Bit:
          0: NM cluster is not ready to sleep
          1: NM cluster is ready to sleep (All nodes of the NM cluster are ready to sleep)
        Bit 4 Active Wakeup Bit:
          0: Node has not woken up the network
          1: Node has woken up the network
        Bit 5 Partial Network Learning Bit (PNL):
          0: PNC learning is not requested
          1: PNC learning is requested
        Bit 6 Partial Network Information Bit (PNI):
          0: NM message contains no Partial Network request information
          1: NM message contains Partial Network request information
        Bit 2, 7 are reserved for future extensions 0: Disabled / Reserved for future usage.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00055.PNShutdownRequestBit</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkLearningBit</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Development errors shall not be returned by API functions. In case of a development error the
        corresponding API function shall return E_NOT_OK, if applicable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_CHANNEL</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_POINTER</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Production errors shall not be returned by API functions. In case of a production error the 
        corresponding API function shall return E_NOT_OK, when applicable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_CHANNEL</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_POINTER</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM decisions shall be influenced by every received NM-Vote and every NM-Vote aggregated by the FlexRay controller.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0006</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The following configuration constraints are conditionally recommended for FlexRay NM:

        NM_REPEAT_MESSAGE_TIME = 0 (conditions: (1) startup of all applications is completed as soon as
        the FlexRay communication is started and (2) node detection is not required in the FlexRay NM-cluster)

        FrNmReadySleepCnt = 0 (condition: bus communication is always shut down at the end of the NM
        Repetition Cycle in all nodes within the same FlexRay NM-cluster, even in presence of race conditions)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00069.RepeatMessageTime</srcid><srcstatus/><internalId>538</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00069.ReadySleepCnt</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall store the initialization status in a private variable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_388</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The support for user data in the FrNm module shall be configurable at pre-compile time by the
        configuration parameter FrNmUserDataEnabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Every network node shall transmit periodic NM-Vote messages to indicate if the node requires bus-communication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00137</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00308</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If bus communication is released the FlexRay NM module shall perform the transition into the
        Bus-Sleep Mode at the end of the FrNmReadySleepCnt + 1 repetition cycle without any positive NM
        vote. The absolute time until transition to Bus-Sleep is therefore given with the formula
        (FrNmReadySleepCnt +1) * FrNmRepetitionCycle * 'Duration of one FlexRay Cycle' and it starts at
        the completion of the last repetition cycle containing a positive NM vote.
      </description>
      <comment>
        Example: FrNmReadySleepCnt = 3; Repetition Cycle = 4 FlexRay Cycle; FlexRay
        Cycle = 5 msec: Ready Sleep Time = (3+1)* 4* 5 msec = 80 msec.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ScheduleVariant1Vote</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNmAllNmMessagesKeepAwake_TRUE</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0108</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0099</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0154</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrIf_GetNmVector_NotOk</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_NmVector_0x00</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_590</srcid><srcstatus/><internalId>913</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_602</srcid><srcstatus/><internalId>914</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_646</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00102</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The AUTOSAR FlexRay NM state machine shall contain states, transitions and triggers required by
        the AUTOSAR FlexRay NM coordination algorithm as seen from the point of view of one single node in the NM-cluster.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Transitions in the AUTOSAR FlexRay NM state machine shall be triggered by calls to selected
        interface functions or by the expiration of internal timers or counters.
      </description>
      <comment>
        This requirement is refined by several other requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FRNM133</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>FrNm.ASR403.FRNM139</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00125</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00129</srcid><srcstatus/><internalId>278</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00316</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00317</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00124.RMRequest</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00124.RMBit</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequest</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequestBit</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_GetState shall provide consistent information about the current state and the current mode of the NM state machine.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0137</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0137_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0098</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0098_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0099</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0118</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0121</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0122</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0123</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0124</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0172</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0173</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The AUTOSAR FrNm shall consist of three operational modes:
          Bus-Sleep Mode
          Synchronize Mode
          Network Mode
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Changes in the AUTOSAR FrNm operational modes shall be notified by the FrNm module to the
        Generic NM Interface module by calling callback function Nm_StateChangeNotification.
      </description>
      <comment>
        This requirement is refined by several other requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00134</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00192</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Network Mode of the FrNm module shall consist of three internal states:
          Repeat Message State
          Normal Operation State
          Ready Sleep State
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        On entering the Network Mode state, the FlexRay Network Management shall first enter the internal sub-state Repeat message state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0137</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0137_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module has entered the Network Mode, it shall notify the Generic NM Interface module by calling Nm_NetworkMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0177</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall synchronize all state changes into and within the Network Mode with the boundary between two NM Repetition Cycles.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00124.RMRequest</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequest</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Repeat Message State, it shall activate the transmission of NM-
        Data if the node is configured for NM-Data transmissions and the node shall vote to keep the
        cluster awake if the node is configured to allow voting.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00116.DataPDU</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00116.VotePDU</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Repeat Message State, it shall start the NM Repeat
        Message Timer (time is configurable by parameter 'FrNmRepeastMessageTime'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0157</srcid><srcstatus/><internalId>1233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Repeat Message State if the NM Repeat Message Timer is expired.
        During this transition it shall clear the Repeat Message Request Bit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FlexRay NM module leaves the Repeat Message State, it shall enter the Normal Operation State if the network is requested.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0100</srcid><srcstatus/><internalId>1219</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0100_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_2</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwRequestSyncState</srcid><srcstatus/><internalId>1253</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwRequestSyncState_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwRequestRMState</srcid><srcstatus/><internalId>1255</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwRequestRMState_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwRequestNOState</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwRequestNOState_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NormalOperationEntry</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FlexRay NM module leaves the Repeat Message State it shall enter the Ready Sleep State if the network is released.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0101</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwReleaseRMState</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NwReleaseRSState</srcid><srcstatus/><internalId>1260</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0117</srcid><srcstatus/><internalId>1326</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleepEntry</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Normal Operation State, it shall activate the transmission of
        NM-Data and the Node shall vote to keep the cluster awake (send "positive" NM-Votes)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00123.DataPDU</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00123.VotePDU</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmNodeDetectionEnabled is set to TRUE the FlexRay NM module shall leave the Normal
        Operation State and enter the Repeat Message State at the end of a NM Repetition Cycle when a
        Repeat Message Request is active. During this transition it shall set the Repeat Message
        Request Bit if the Repeat Message Request is active due to a call of FrNm_RepeatMessageRequest.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00124.RMRequest</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00124.RMBit</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM module shall leave the Normal Operation State and enter the Ready Sleep State if 
        no Repeat Message Request is active and the network has been released and if a Repetition Cycle is completed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0102</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_1</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_1_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Ready Sleep State, it shall deactivate the transmission of
        NM-Data and shall transmit negative NM-Votes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00126.DataPDU</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.MissingNegativeVotesInReadySleep</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM module shall leave the Ready Sleep State (and the Network Mode) and enter the
        Bus-Sleep Mode at the end of the FrNmReadySleepCnt +1 NM Repetition Cycle without any positive NM-Votes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_RMS_RSS</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0099</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrIf_GetNmVector_NotOk</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_NmVector_0x00</srcid><srcstatus/><internalId>1358</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_General</srcid><srcstatus/><internalId>1390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmNodeDetectionEnabled is set to TRUE the FlexRay NM module shall leave the Ready Sleep 
        State and enter the Repeat Message State at the end of a NM Repetition Cycle when a Repeat 
        Message Request is active and Ready Sleep Time has not expired. During this transition it shall 
        set the Repeat Message Request Bit if the Repeat Message Request is active due to a call of 
        FrNm_RepeatMessageRequest.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequest</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequestBit</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM module shall leave the Ready Sleep State and enter the Normal Operation State at 
        the end of a NM Repetition Cycle if Ready Sleep Time has not expired and no Repeat Message 
        Request is active and the network has been requested.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0098</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0098_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_1</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_1_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When Bus-Sleep Mode is entered, the FlexRay NM shall notify the Generic Network Management Interface by
        calling Nm_StateChangeNotification, except when the Bus-Sleep Mode is entered by default during initialization.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0108</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When Bus-Sleep Mode is entered, except by default at initialization, the FrNm module shall
        notify the upper layer by calling the call-back function Nm_BusSleepMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0099</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0177</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        FlexRay NM shall set the flag FrNm_NetworkRequest to FALSE after initialization and enter into bus sleep mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0117</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Bus-Sleep Mode, the module shall deactivate the transmission of both NM-Data and NM-Vote.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0124</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PduTransmission</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_PassiveStartUp shall trigger the transition from Bus-Sleep Mode to the
        Network Mode in Repeat Message State (via the Synchronize State).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_2</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0118</srcid><srcstatus/><internalId>1327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall leave the Synchronize Mode and enter the Network Mode at the first boundary between two NM Repetition Cycles.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_RMS_RSS</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0122</srcid><srcstatus/><internalId>1336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall be able to separately transmit NM Data and NM Vote.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0126</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00148</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Every FlexRay NM node shall be capable of sending the NM-Vote (in the either the
        static or the dynamic segment) of the FlexRay bus schedule if the node is not configured as "Passive"
      </description>
      <comment>
        This requirement is not applicable because it is the responsibility
        of the FrIf module to actually transmit the PDUs according to the FlexRay schedule configuration.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00151</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Every FlexRay NM node shall be capable of sending the NM-Data in either a static slot or in a dynamic slot.
      </description>
      <comment>
        This requirement is not applicable because it is the responsibility of the FrIf module to actually transmit
        the PDUs according to the FlexRay schedule configuration.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The difference between applied standardized bytes and the NM-Data PDU length in the FrNm module shall be user data.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_153</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_163</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_198</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_208</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The NM-Data PDU Control Bit Vector of the FrNm module format shall be defined as follows:
              | Bit 7     | Bit 6                           | Bit 5                         | Bit 4             | Bit 3                       | Bit 2     | Bit 1                   | Bit 0
        Byte  | Reserved  | Partial Network Information Bit | Partial Network Learning Bit  | Active Wakeup Bit | NM Coordinator Sleep Ready  | Reserved  | PN Shutdown Request Bit | RptMsgRequest
      </description>
      <comment>
        Bit 1 and 2 were used in R3.2 as NM Coordinator ID (Low Bit)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00055</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00161</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        It shall be configurable with the configuration parameter FRNM_PDU_SCHEDULE_VARIANT which NM-message transmission
        format (NM-Data, NM-Vote and the combined NM-Data/Vote format) are recognized by the FrNm module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_886</srcid><srcstatus/><internalId>975</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1073</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall set the reserved bit(s) of the Control Bit Vector to 0b.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0127</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall combine the NM-Vote PDU Format with the Control Bit Vector Format of the
        NM-Data PDU in case the FrNm module shall transmit the NM-Vote in the same PDU as the NM-Data.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0129</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall synchronize state changes in the FlexRay NM state machine with the FlexRay periodic Schedule.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        In every FlexRay NM node it shall be independently configurable through the configuration parameter FrNmHwVoteEnable
        to use the FlexRay NM HW support for reception of NM-Votes that are transmitted in the static segment.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2158</srcid><srcstatus/><internalId>1033</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall support the function FrNm_RequestBusSynchronization by returning E_OK without executing any functionality.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0103</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module successfully receives a positive Nm vote, and is currently in the Bus-Sleep Mode,
        it shall notify the ComM via the NmIf module by calling Nm_NetworkStartIndication
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0120</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00179</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The AUTOSAR FlexRay NM algorithm shall support up to 64 nodes per NM-Cluster.
      </description>
      <comment>
        This requirement is informational only as it cannot be ensured by the FrNm module.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The detection of remote sleep indication by the FrNm module shall be configurable at
        pre-compile time by the configuration parameter FrNmRemoteSleepIndicationEnabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If no NM-messages with an indication to keep the bus awake are received in the Normal Operation
        State for a configurable amount of time determined by the FrNmRemoteSleepIndTime, then the NM
        shall notify the Generic NM Interface module that all other nodes in the cluster are ready to
        sleep (the 'Remote Sleep Indication') by calling Nm_RemoteSleepIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00181.FrNmNotify</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.RemoteSleepIndTime</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM function FrNm_CheckRemoteSleepIndication shall provide the information about current status
        of Remote Sleep Indication (i.e. whether a Remote Sleep Indication has already been detected or not).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall reject a check of Remote Sleep Indication (FrNm_CheckRemoteSleepIndication) when not in Network Mode.
        The function FrNm_CheckRemoteSleepIndication shall immediately return the value E_NOT_OK when not in Network Mode and shall not execute any functionality.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1588</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0150</srcid><srcstatus/><internalId>1393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Passive Mode Configuration shall be configurable at pre-compile time by the configuration parameter FRNM_PASSIVE_MODE_ENABLED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If Passive Mode Configuration is enabled, then the FrNm module shall not use the Remote Sleep Indication options.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_RSIPassiveMode</srcid><srcstatus/><internalId>1329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The NM PDU Reception indication shall be configurable at pre-compile time by the configuration parameter FrNmPduRxIndicationEnabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0130</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If NM PDU Reception indication is enabled, then the FrNm module shall
        call the function NM_PduRxIndication at the successful reception of an NM-PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0130</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The inclusion of the optional state change notification service shall be configurable
        at pre-compile time by the configuration parameter FrNmStateChangeIndicationEnabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0108</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0113</srcid><srcstatus/><internalId>1146</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the optional state change notification service is enabled, then the FrNm module shall
        notify all state changes except when entering Bus Sleep Mode during initialization to the
        NmIf module by calling Nm_StateChangeNotification.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0113</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0115</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0112</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0110</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0114</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0111</srcid><srcstatus/><internalId>1151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00193</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module's integrator shall define the FlexRay NM Voting Cycle
        (FrNmVotingCycle configuration parameter) as the number of cycles needed
        to transmit at least once the NM-Vote of every node.
      </description>
       <comment>
        This requirement is not applicable for FrNm module because it is a
        requirement for the module's integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00194</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module's integrator shall define the FlexRay NM Data Cycle
        (FrNmDataCycle configuration parameter) as the number of cycles needed
        to transmit the NM-Data of every node at least once.
      </description>
      <comment>
        This requirement is not applicable for FrNm module because it is a
        requirement for the module's integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM schedule specific cycle configuration parameters FrNmVotingCycle, FrNmDataCycle
        and FrNmRepetitionCycle shall have a value chosen from among the values 1, 2, 4, 8, 16, 32 or 64.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1422</srcid><srcstatus/><internalId>1000</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1666</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1728</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM Repetition Cycle (FrNmRepetitionCycle configuration parameter) shall be an
        integer multiple (including 1) of the NM Voting Cycle (FrNmVotingCycle).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1675</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00205</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A FlexRay NM Message shall only contain NM-Vote, NM-Data or both.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The NM-Vote PDU format of the FrNm module shall be defined as follows:
                | Bit 7 | Bit 6 | Bit 5 | Bit 4 | Bit 3 | Bit 2 | Bit 1 | Bit 0 |
        Byte 0  | Vote  | Set to "0"                                            |
        NM-Vote PDU Format
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0127</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The NM-Vote PDU format of the FrNm module shall contain a Voting Bit (Vote) with the following meaning:
        0: vote against keeping awake
        1: vote for keeping awake
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0127</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FlexRay NM shall use only OS objects and/or related OS services according to the table defined in [REF]
      </description>
      <comment>
        FrNm does not require any Os services (even the allowed services in BSW00429 - "GetCounterValue" and
        "GetElapsedCounterValue" are not used by the FrNm module).
        This requirement can only be verified by a Manual review of the source code.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.man.FRNM220</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00222</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The support of the Source Node Identifier by the FrNm module shall be configurable at
        pre-compile time by the configuration parameter FrNmSourceNodeIdentifierEnabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_638</srcid><srcstatus/><internalId>966</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0142</srcid><srcstatus/><internalId>1391</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0143</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00225</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module's implementer shall realize the FlexRay NM coordination algorithm processor
        independent, which means the FlexRay NM coordination algorithm shall not rely on any processor
        specific hardware support and thus shall be realizable on any processor architecture that is in
        the scope of AUTOSAR.
      </description>
      <comment>
        This requirement is not applicable as it is not a functional requirement.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the FlexRay NM module's environment is calling the function FrNm_RepeatMessageRequest in
        "Bus Sleep Mode" or "Synchronize" no functionality shall be executed and E_NOT_OK shall be returned.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1314</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0106</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0107</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0097</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0096</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a Remote Sleep Indication has been previously detected by the FrNm module and if an NM-message
        with an indication to keep the bus awake is received in the Normal Operation State or Ready Sleep State,
        then the NM shall notify the Generic NM Interface module that some nodes in the cluster are not ready
        to sleep anymore (Remote Sleep Cancellation) by calling Nm_RemoteSleepCancellation. The Remote Sleep
        cancellation needs to be provided as soon as a vote is received to keep the network awake.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00229.NormalOperation</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00229.ReadySleep</srcid><srcstatus/><internalId>495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and the FrNm enters the Repeat Message
        State from the Normal Operation State or from the Ready Sleep State, then the NM shall notify
        the Generic NM Interface module that some nodes in the cluster are not ready to sleep anymore
        (the 'Remote Sleep Cancellation') by calling Nm_RemoteSleepCancellation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00230.NormalOperation</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00230.ReadySleep</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The dual FlexRay channel PDU support of the FlexRay NM shall be statically configurable at pre-compile
        time by the configuration parameter FrNmDualChannelPduEnable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00234</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        In the case when a combined NM-Vote and CBV is transmitted in static and dynamic segment,
        the FrNm module shall use the combined NM-Vote and CBV in the static part for the evaluation of the NM-Vote.
      </description>
      <comment>
        This requirement is informational only.
        FrNm has no control over static or dynamic segment. A combined NM-Vote and CBV
        is always assumed to be in static segment and with schedule variant as 7.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00235</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module          | Header File       | Imported Type
        ComStack_Types  | ComStack_Types.h  | NetworkHandleType
                        | ComStack_Types.h  | PNCHandleType
                        | ComStack_Types.h  | PduIdType
                        | ComStack_Types.h  | PduInfoType
                        | ComStack_Types.h  | PduLengthType
        Nm              | NmStack_types.h   | Nm_ModeType
                        | NmStack_types.h   | Nm_StateType
        Std             | Std_Types.h       | Std_ReturnType
                        | Std_Types.h       | Std_VersionInfoType
      </description>
       <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_Init
        Syntax              | void FrNm_Init (const FrNm_ConfigType* nmConfigPtr)
        Service ID [hex]    | 0x00
        Sync/Async          | Synchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | nmConfigPtr | Pointer to the selected configuration set.
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | None
        Description         | Initializes the FlexRay NM and its internal state machine.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.SignatureOfFrNm_Init</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_455</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DET_OFF_NotValidCfg</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_DET_OFF_ValidCfg</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0108</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_PassiveStartUp
        Syntax              | Std_ReturnType FrNm_PassiveStartUp (NetworkHandleType NetworkHandle)
        Service ID [hex]    | 0x01
        Sync/Async          | Asynchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Start of network management has failed
        Description         | Initiates the Passive Startup of the FlexRay NM.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_477</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartUp_SyncMode</srcid><srcstatus/><internalId>1325</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0173</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PassiveMode_TwoChannels_1</srcid><srcstatus/><internalId>1384</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PassiveMode_SingleChannel_1</srcid><srcstatus/><internalId>1389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00238</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_NetworkRequest
        Syntax              | Std_ReturnType FrNm_NetworkRequest (NetworkHandleType NetworkHandle)
        Service ID [hex]    | 0x02
        Sync/Async          | Asynchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel 
        Parameters (inout)  | None 
        Parameters (out)    | None 
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Requesting of bus communication has failed
        Description         | This function requests the network because the ECU needs to communicate on the bus. Network state shall be changed to 'requested'
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_528</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0137</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0122</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0123</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0172</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0173</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0008</srcid><srcstatus/><internalId>1360</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0132</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00239</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_NetworkRelease
        Syntax              | Std_ReturnType FrNm_NetworkRelease (NetworkHandleType NetworkHandle)
        Service ID [hex]    | 0x03
        Sync/Async          | Asynchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Releasing of bus communication has failed
        Description         | This function releases the network because the ECU doesn't have to communicate on the bus. Network state shall be changed to 'released'
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_572</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0132</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00240</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_SetUserData
        Syntax              | Std_ReturnType FrNm_SetUserData (NetworkHandleType NetworkHandle, const uint8* nmUserDataPtr)
        Service ID [hex]    | 0x06
        Sync/Async          | Synchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
                            | nmUserDataPtr | User data for the next transmitted NM message
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Setting of user data has failed
        Description         | This function sets user data for NM-Data transmitted next on the bus.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_598</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0172</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0176</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0139</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_GetUserData
        Syntax              | Std_ReturnType FrNm_GetUserData (NetworkHandleType NetworkHandle, uint8* nmUserDataPtr)
        Service ID [hex]    | 0x07
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | nmUserDataPtr | Pointer to the location where the user data from the last successfully received NM message shall be copied.
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Getting of user data has failed
        Description         | This function gets user data from the last successfully received NM message.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_625</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_GetUserData</srcid><srcstatus/><internalId>1367</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0140</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_GetPduData
        Syntax              | Std_ReturnType FrNm_GetPduData (NetworkHandleType NetworkHandle, uint8* nmPduData)
        Service ID [hex]    | 0x08
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel 
        Parameters (inout)  | None
        Parameters (out)    | nmPduData | Pointer where NM PDU shall be copied to.
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Getting of NM PDU Data has failed or is not configured for this network handle.
        Description         | Gets PDU data.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_649</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0141</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00243</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_RepeatMessageRequest
        Syntax              | Std_ReturnType FrNm_RepeatMessageRequest (NetworkHandleType NetworkHandle)
        Service ID [hex]    | 0x09
        Sync/Async          | Asynchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Setting of Repeat Message Request Bit has failed or is not configured for this network handle.
        Description         | This function causes a Repeat Message Request to be transmitted next on the bus.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_671</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0107</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Apis_Return_E_NOT_OK_Det_On</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Apis_Return_E_NOT_OK_Det_Off</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00244</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_GetNodeIdentifier
        Syntax              | Std_ReturnType FrNm_GetNodeIdentifier (NetworkHandleType NetworkHandle, uint8* nmNodeIdPtr)
        Service ID [hex]    | 0x0a
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | nmNodeIdPtr | Pointer to the location where the node identifier from the last successfully received NM-message shall be copied.
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Getting of the node identifier out of the last received NM-message has failed or is not configured for this network handle.
        Description         | This function gets the node identifier from the last successfully received NM-message.
        Available via       | FrNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_696</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Apis_Return_E_NOT_OK_Det_On</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Apis_Return_E_NOT_OK_Det_Off</srcid><srcstatus/><internalId>1323</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0142</srcid><srcstatus/><internalId>1391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00245</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_GetLocalNodeIdentifier
        Syntax              | Std_ReturnType FrNm_GetLocalNodeIdentifier (NetworkHandleType NetworkHandle, uint8* nmNodeIdPtr)
        Service ID [hex]    | 0x0b
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | nmNodeIdPtr | Pointer the location where the node identifier of the local node shall be copied.
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Getting of the node identifier of the local node has failed or is not configured for this network handle.
        Description         | This function gets the node identifier configured for the local node.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_721</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Apis_Return_E_NOT_OK_Det_On</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Apis_Return_E_NOT_OK_Det_Off</srcid><srcstatus/><internalId>1323</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0143</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_RequestBusSynchronization
        Syntax              | Std_ReturnType FrNm_RequestBusSynchronization (NetworkHandleType NetworkHandle)
        Service ID [hex]    | 0xc0
        Sync/Async          | Asynchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-Cluster
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Function failed
        Description         | This function has no functionality - the service is provided only to be compatible to future extensions and to be compatible to the CAN-NM interface.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_745</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0103</srcid><srcstatus/><internalId>1209</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FunctionCallsInBusSleepState</srcid><srcstatus/><internalId>1386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00247</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_CheckRemoteSleepIndication
        Syntax              | Std_ReturnType FrNm_CheckRemoteSleepIndication (NetworkHandleType NetworkHandle, boolean* nmRemoteSleepIndPtr)
        Service ID [hex]    | 0x0d
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant (but not for the same NM-Channel)
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | nmRemoteSleepIndPtr | Pointer to the location where the check result of remote sleep indication shall be copied.
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Checking of remote sleep indication bits has failed
        Description         | This function checks if remote sleep indication has taken place or not.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_772</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00248</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | FrNm_GetState
        Syntax             | Std_ReturnType FrNm_GetState (NetworkHandleType NetworkHandle, Nm_StateType* nmStatePtr, Nm_ModeType* nmModePtr)
        Service ID [hex]   | 0x0e
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | NetworkHandle | Identification of the NM-channel 
        Parameters (inout) | None
        Parameters (out)   | nmStatePtr | Pointer to the location where the state of the network management shall be copied.
                           | nmModePtr | Pointer to the location where the mode of the network management shall be copied.
        Return value       | Std_ReturnType | E_OK: No error
                                            | E_NOT_OK: Getting of NM state has failed
        Description        | This function returns the state and the mode of the network management.
        Available via      | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_803</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DET_OFF_NotValidCfg</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_DET_OFF_ValidCfg</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_No_init</srcid><srcstatus/><internalId>1144</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0098</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0098_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00249</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_GetVersionInfo
        Syntax              | void FrNm_GetVersionInfo (Std_VersionInfoType* NmVerInfoPtr)
        Service ID [hex]    | 0x0f
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant
        Parameters (in)     | None
        Parameters (inout)  | None
        Parameters (out)    | NmVerInfoPtr | Pointer to the location where the version information of this module shall be copied.
        Return value        | None
        Description         | Returns the version information.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_827</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0153</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00251</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | FrNm_RxIndication
        Syntax             | void FrNm_RxIndication (PduIdType RxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex]   | 0x42
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in)    | RxPduId | ID of the received PDU.
        PduInfoPtr         | Contains the length (SduLength) of the received PDU, a pointer to a buffer (SduDataPtr) containing the PDU, and the MetaData related to this PDU.
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Indication of a received PDU from a lower layer communication interface module.
        Available via      | FrNm_FrIf.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNm_FrIf.h</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Cbk.h_37</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0120</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_VoteRx_Indication_01</srcid><srcstatus/><internalId>1382</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_VoteRx_Indication_03</srcid><srcstatus/><internalId>1387</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0142</srcid><srcstatus/><internalId>1391</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0140</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0141</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00252</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | FrNm_TriggerTransmit
        Syntax             | Std_ReturnType FrNm_TriggerTransmit (PduIdType TxPduId, PduInfoType* PduInfoPtr)
        Service ID [hex]   | 0x41
        Sync/Async         | Synchronous 
        Reentrancy         | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in)    | TxPduId     | ID of the SDU that is requested to be transmitted.
        Parameters (inout) | PduInfoPtr  | Contains a pointer to a buffer (SduDataPtr) to where the SDU data shall be copied,
                                         | and the available buffer size in SduLengh. On return, the service will 
                                         | indicate the length of the copied SDU data in SduLength.
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: SDU has been copied and SduLength indicates the number of copied bytes.
                                            | E_NOT_OK: No SDU data has been copied. PduInfoPtr must not be used since it may 
                                                        contain a NULL pointer or point to invalid data.
        Description        | Within this API, the upper layer module (called module) shall check whether the available data fits
                           | into the buffer size reported by PduInfoPtr-&gt;SduLength. If it fits, it shall copy its data into
                           | the buffer provided by PduInfoPtr-&gt;SduDataPtr and update the length of the actual copied data in
                           | PduInfoPtr-&gt;SduLength. If not, it returns E_NOT_OK without changing PduInfoPtr.
        Available via      | FrNm_FrIf.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNm_FrIf.h</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Cbk.h_65</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0176</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0139</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00255</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name      | FrNm_MainFunction_&lt;FrNmChannel.ShortName&gt;
        Syntax            | void FrNm_MainFunction_&lt;FrNmChannel.ShortName&gt; (void)
        Service ID [hex]  | 0xf0
        Description       | Main function of FlexRay NM.
        Available via     | SchM_FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmMainFunctionNaming</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00256</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function          | Header File | Description 
        FrIf_GetGlobalTime    | FrIf.h      | Wraps the FlexRay Driver API function Fr_GetGlobalTime(). Important Note: FrIf_GetGlobalTime may be called within an exclusive area.
        FrIf_Transmit         | FrIf.h      | Requests transmission of a PDU.
        Nm_BusSleepMode       | Nm.h        | Notification that the network management has entered Bus-Sleep Mode.
        Nm_NetworkMode        | Nm.h        | Notification that the network management has entered Network Mode.
        Nm_SynchronizeMode    | Nm.h        | Notification that the network management has entered Synchronize Mode.
        Nm_TxTimeoutException | Nm.h        | Service to indicate that an attempt to send an NM message failed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.SWS_FrNm_00010</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00110</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00135</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00335</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00375</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00257</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        API function                      | Header File | Description
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Det_ReportError                   | Det.h       | Service to report development errors.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        FrIf_GetNmVector                  | FrIf.h      | Derives the FlexRay NM Vector.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_CarWakeUpIndication            | Nm.h        | This function is called by a &lt;Bus&gt;Nm to indicate reception of a CWU request.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_CoordReadyToSleepCancellation  | Nm.h        | Cancels an indication, when the NM Coordinator Sleep Ready bit in the Control
                                                        | Bit Vector is set back to 0.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_CoordReadyToSleepIndication    | Nm.h        | Sets an indication, when the NM Coordinator Sleep Ready bit in the Control Bit Vector is set
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_ForwardSynchronizedPncShutdown | Nm.h        | Notification that the network management has received a PN shutdown message on a particular
                                                        | NM-channel. This is used to grant a nearly synchronized PNC shutdown across the entire PN topology.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_NetworkStartIndication         | Nm.h        | Notification that a NM-message has been received in the Bus-Sleep Mode, what indicates that some
                                                        | nodes in the network have already entered the Network Mode.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_PduRxIndication                | Nm.h        | Notification that a NM message has been received.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_RemoteSleepCancellation        | Nm.h        | Notification that the network management has detected that not all other nodes on the network
                                                        | are longer ready to enter Bus-Sleep Mode.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_RemoteSleepIndication          | Nm.h        | Notification that the network management has detected that all other nodes on the network are
                                                        | ready to enter Bus-Sleep Mode.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_RepeatMessageIndication        | Nm.h        | Service to indicate that an NM message with set Repeat Message Re- quest Bit has been
                                                        | received. This is needed for node detection and the Dynamic PNC-to-channel-mapping feature.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_StateChangeNotification        | Nm.h        | Notification that the state of the lower layer &lt;BusNm&gt; has changed.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_SynchronizationPoint           | Nm.h        | Notification to the NM Coordinator functionality that this is a suitable point in time to initiate
                                                        | the coordinated shutdown on.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        PduR_FrNmTriggerTransmit          | PduR_FrNm.h | Within this API, the upper layer module (called module) shall check whether the available data fits
                                                        | into the buffer size reported by PduInfoPtr-&gt; SduLength. If it fits, it shall copy its data into
                                                        | the buffer provided by PduInfoPtr-&gt; SduDataPtr and update the length of the actual copied data
                                                        | in PduInfoPtr-&gt;SduLength. If not, it returns E_NOT_OK without changing PduInfoPtr.
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        PduR_FrNmTxConfirmation           | PduR_FrNm.h | The lower layer communication interface module confirms the transmission of a PDU, or the failure to
                                                        | transmit a PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FRNM396</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>FrNm.ASR403.FRNM022</srcid><srcstatus/><internalId>109</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00134</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00192</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00322</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>FrNm.SWS_FrNm_00394</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00229.NormalOperation</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00229.ReadySleep</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00230.NormalOperation</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00230.ReadySleep</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00181.FrNmNotify</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_PassiveStartUp shall initiate the Passive Startup of the FlexRay NM.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0117</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00260</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the current state is not Bus-Sleep Mode, the function FrNm_PassiveStartUp shall have no
        effect on the operation mode of the FrNm module and shall return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00260.Synchronize</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00260.NormalOperation</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00260.RepeatMessage</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00260.ReadySleep</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00261</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_NetworkRequest shall be only available if the configuration parameter FRNM_PASSIVE_MODE_ENABLED is set to OFF.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</srcid><srcstatus/><internalId>506</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00262</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_NetworkRelease shall be only available if the configuration parameter
        FRNM_PASSIVE_MODE_ENABLED is set to OFF.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00263</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_SetUserData shall be only available if the configuration parameter FrNmUserDataEnabled is set as ON.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.FrNm_SetUserData.Available</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00264</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_GetUserData shall be only available if the configuration parameter
        FrNmUserDataEnabled is set as ON.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00269</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_RequestBusSynchronization shall be only available if the configuration parameter
        FrNmBusSynchronizationEnabled is set as ON.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00270</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module and the NmIf module shall be initialized correctly before the FrNm module's 
        environment is calling the function FrNm_CheckRemoteSleepIndication.
      </description>
      <comment>
        This requirement is not applicable as it is a requirement for the system designer/integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00271</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function FrNm_CheckRemoteSleepIndication shall be only available if the configuration parameter
        FrNmRemoteSleepIndicationEnabled is set as ON.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00276</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrIf module and the FrNm module must be initialized correctly before the FrNm module's 
        environment calls the function FrNm_RxIndication.
      </description>
      <comment>
        This requirement is not applicable as it is a requirement for the system designer/integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00277</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrIf module and the FrNm module shall be initialized correctly before the FrNm module's
        environment calls the function FrNm_TriggerTransmit.
      </description>
      <comment>
        This requirement is not applicable as it is a requirement for the system designer/integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00280</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmComUserDataEnabled is enabled the FrNm shall collect the NM User Data from the
        referenced NM I-PDU by calling PduR_FrNmTriggerTransmit and combine the user data with the
        further NM bytes within the call of FrNm_TriggerTransmit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0176</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0139</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00283</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        There shall be one dedicated FlexRay NM Main Function for each NM cluster. The API names are 
        therefore: FrNm_MainFunction_&lt;FrNmChannel.ShortName&gt;() where &lt;FrNmChannel.ShortName&gt; is the 
        Short Name of the corresponding FlexRay NM channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmMainFunctionNaming</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00307</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall immediately leave the Network mode when the function FrNm_Init is called.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.InitCall</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.FrNm.EB_INTREQ_FrNm_0002</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00308</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Synchronize mode, it shall deactivate the transmission of NM-Data and deactivate the transmission of the NM-Vote.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0123</srcid><srcstatus/><internalId>1337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00311</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        FlexRay NM module shall provide a configuration parameter named FrNmMainAcrossFrCycle to select 
        adapt the behavior of the FlexRay NM MainFunction to the point in time the FlexRay NM 
        MainFunction is executed
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0002</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0006</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ability of the FrNm module to send NM-Data PDU shall be configurable at pre-compile time by 
        the configuration parameter FRNM_USER_DATA_ENABLED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2469</srcid><srcstatus/><internalId>1045</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0139</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00316</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        BusSleep Mode shall be left and the Synchronize Mode shall be entered if Generic NM Interface calls FrNm_NetworkRequest.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Synchronized_longErr</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartUpErrorReaction</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00317</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        BusSleep Mode shall be left and the Synchronize Mode shall be entered if Generic NM Interface calls FrNm_PassiveStartUp.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartUp_SyncMode</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00322</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        In order to support the NM Coordination algorithm in the NmIf module, an indication
        Nm_SyncrhonizationPoint provided to the NmIf module only at the repetition cycle boundaries,
        when the FrNm module is in Network Mode, and when the configuration parameter
        FRNM_SYNCHRONIZATIONPOINT_ENABLED is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0104</srcid><srcstatus/><internalId>1210</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0008</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00323</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        FRNM_SYNCHRONIZATIONPOINT_ENABLED is allowed to be set to true only when
        FRNM_REMOTE_SLEEP_INDICATION_ENABLED is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00335</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When NM-Vector hardware service from the FlexRay CC is used, then FrIf_GetNmVector will be used to retrieve the aggregated NM-Vector.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0006</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrIf_GetNmVector_NotOk</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_NmVector_0x00</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00338</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Ready Sleep state, the configuration parameter FRNM_CYCLE_COUNTER_EMULATION
        is set to FALSE, network is still not requested and on reception of FrNm_StartupError the
        FlexRay NM shall perform a transition to Bus Sleep state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleep_longErr</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3497</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00340</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Synchronize state and FlexRay NM receives the indication FrNm_StartupError 
        and if the network is requested, then FlexRay NM shall remain in Synchronize state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Synchronized_longErr</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Synchronized_longErr_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartUpErrorReaction</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartUpErrorReaction_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1291</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00342</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Normal Operation state and FlexRay NM cannot retrieve global time,
        then FlexRay NM shall perform a transition to Synchronize state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NormalOperation_shortErr</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_BusOff_SingleChannel</srcid><srcstatus/><internalId>1385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3477</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00344</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Service ID of FrNm_MainFunction_&lt;FrNmChannel.ShortName&gt; shall be 0xf0 + NetworkHandle.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmMainFunctionNaming</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00356</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The state machine guards, transitions, conditions, and actions should be evaluated at most once 
        in each execution of the FrNm_MainFunction_&lt;FrNmChannel.ShortName&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmMainFunctionNaming</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00357</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Vote changes for all nodes except one in a FlexRay cluster in certain dual-FlexRay channel
        topologies shall be forbidden in the next-to-last repetition cycle before the Ready Sleep
        Counter expires, i.e., the NM votes transmitted by the Single-FlexRay channel nodes will be
        identical in both the last repetition cycle and the next-to-last repetition cycle if the Ready
        Sleep Counter were to expire. This shall be statically configurable at pre-compile time by the
        configuration parameter FrNmVotingNextToLastRepetitionCycleDisable.
      </description>
      <rationale>
        Vote changes in next to last repetition cycle shall be statically configurable at pre-compile
        time by the configuration parameter FrNmVotingNextToLastRepetitionCycleDisable.
        Above mentioned part of the requirement is not implemented because the
        usage of parameter FrNmVotingNextToLastRepetitionCycleDisable is not clear.
      </rationale>
      <comment>
        Note from the SWS : The challenging topology to manage effectively is the
        topology that has nodes attached only to Channel A, nodes attached only to
        Channel B, and nodes that are dual-channel.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesLastRepetition</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00359</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_Transmit
        Syntax              | Std_ReturnType FrNm_Transmit (PduIdType TxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex]    | 0x49
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in)     | TxPduId | Identifier of the PDU to be transmitted 
                            | PduInfoPtr | Length of and pointer to the PDU data and pointer to MetaData.
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: Transmit request has been accepted.
                                             | E_NOT_OK: Transmit request has not been accepted.
        Description         | Requests transmission of a PDU.
        Available via       | FrNm.h
      </description>
      <comment>
        Refer the requirement "FrNm.API.Transmit" in EB_Refinements.xml
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmTransmit</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.API.Transmit</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00364</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmComUserDataEnabled is set to TRUE and NM-PDU is not configured for triggered 
        transmission in FrIf (FrIfImmediate = TRUE) the FrNm shall collect the NM User Data from the 
        referenced NM I-PDU by calling "PduR_FrNmTriggerTransmit" and combine the user data with the 
        further NM bytes each time before it requests the transmission of the corresponding NM message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM364</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00365</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmComUserDataEnabled is set to TRUE the FrNm shall call "PduR_FrNmTxConfirmation" within
        the message transmission confirmation function "FrNm_TxConfirmation" called by the FrIf and
        with the result passed by FrIf.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNm_TxConfirmationResultParameter</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM365</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00366</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmComUserDataEnabled is set to TRUE the FrNm implementation shall provide an API
        FrNm_Transmit. FrNm_Transmit shall be an empty function returning E_OK at any time as an
        additional asynchronous message transmission is not possible on FlexRay.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNmTransmit</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FRNM366</srcid><srcstatus/><internalId>67</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00375</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm module shall retrieve the current FlexRay communication cycle via the API FrIf_GetGlobalTime().
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NormalOperation_shortErr</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_RepeatMessage_shortErr</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0178</srcid><srcstatus/><internalId>1217</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0179a</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0177</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00376</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Synchronize state and FlexRay NM receives the indication FrNm_StartupError 
        and if the network is released, then FlexRay NM shall perform a transition to Bus Sleep State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Synchronized_longErr</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Synchronized_longErr_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0132</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1291</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00378</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM enters Ready Sleep state and the configuration parameter
        FRNM_CYCLE_COUNTER_EMULATION is set to TRUE, the FlexRay NM shall provide a mechanism that
        detects the repetition cycle end independently from the global time.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ReadySleep_shortErr</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleep_longErr</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_780</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00379</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Ready Sleep state, the configuration parameter FRNM_CYCLE_COUNTER_EMULATION
        is set to TRUE and the FlexRay Global Time could not be retrieved, every time the emulated
        repetition cycle end is reached, the FlexRay NM shall count this as one NM Repetition Cycle
        without any positive vote. If FlexRay NM counted FrNmReadySleepCnt plus one NM Repetition
        Cycles without any positive NM-Vote the FlexRay NM shall perform a transition to Bus Sleep state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleep_shortErr</srcid><srcstatus/><internalId>1134</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_780</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00381</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the parameter FRNM_SOURCE_NODE_IDENTIFIER_ENABLED  is set to FALSE, this byte shall be used for user data.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0176</srcid><srcstatus/><internalId>1348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00384</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Repeat Message State and global time could not be retrieved, then FlexRay
        NM shall perform a transition to Synchronize state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3477</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_RepeatMessage_shortErr</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0179a</srcid><srcstatus/><internalId>1218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00387</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name      | FrNm_EnableCommunication
        Syntax            | Std_ReturnType FrNm_EnableCommunication (NetworkHandleType nmChannelHandle)
        Service ID [hex]  | 0x05
        Sync/Async        | Asynchronous
        Reentrancy        | Reentrant (but not for the same NM-channel)
        Parameters (in)   | nmChannelHandle | Identification of the NM-channel
        Parameters (inout)| None
        Parameters (out)  | None
        Return value      | Std_ReturnType | E_OK: No error
                                           | E_NOT_OK: Enabling of NM PDU transmission ability has failed
        Description       | Enable the NM PDU transmission ability due to a ISO14229 Communication Control (28hex) service.
        Available via     | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_889</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_EnableDisableCommunication_ReadySleep</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_EnableDisableCommunication_RepeatMessageState</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0144</srcid><srcstatus/><internalId>1204</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FunctionCallsInBusSleepState</srcid><srcstatus/><internalId>1386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00388</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The service FrNm_EnableCommunication shall return E_NOT_OK, if the current mode is not Network Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00388.Synchronize</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00388.BusSleep</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00389</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the module operates in passive mode (FRNM_PASSIVE_MODE_ENABLED), then the service
        FrNm_EnableCommunication shall have no effects and directly return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0146</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00390</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_DisableCommunication
        Syntax              | Std_ReturnType FrNm_DisableCommunication (NetworkHandleType nmChannelHandle)
        Service ID [hex]    | 0x0c
        Sync/Async          | Asynchronous
        Reentrancy          | Reentrant (but not for the same NM-channel)
        Parameters (in)     | nmChannelHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Disabling of NM PDU transmission ability has failed
        Description         | Disable the NM PDU transmission ability due to a ISO14229 Communication Control (28hex) service
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_908</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_EnableDisableCommunication_ReadySleep</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_EnableDisableCommunication_RepeatMessageState</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0144</srcid><srcstatus/><internalId>1204</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FunctionCallsInBusSleepState</srcid><srcstatus/><internalId>1386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00391</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The service FrNm_DisableCommunication shall return E_NOT_OK if the current mode is not Network Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00391.Synchronize</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00391.BusSleep</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00392</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the module operates in passive mode (FRNM_PASSIVE_MODE_ENABLED), then the service 
        FrNm_DisableCommunication shall have no effect and directly return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0146</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00394</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmComUserDataEnabled is set to TRUE FrNm shall call PduR_FrNmTriggerTransmit within the
        function FrNm_TriggerTransmit called by the FrIf.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM394</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00396</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNm has entered Network Mode or called Nm_CoordReadyToSleepCancellation before it shall
        notify the Nm by calling Nm_CoordReadyToSleepIndication on the first reception of a NM message
        with the with the NmCoordinatorSleepReady bit set to 1.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.CallNmCoordReadyToSleepIndicationNetworkMode</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00397</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The API FrNm_SetSleepReadyBit() and the feature "Coordinated Bus Shutdown" shall only be 
        available if FrNmCoordinatorSyncSupport is set to TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00398</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The NMcoordinatorSleepReady bit in the Control Bit Vector shall be set via the API FrNm_SetSleepReadyBit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_3</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_1</srcid><srcstatus/><internalId>1395</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00402</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The position of the CWU bit in NM messages shall be defined by FrNmCarWakeUpBytePosition and FrNmCarWakeUpBitPosition.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3886</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00404</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        FrNm shall be able to distinguish between an NM PDU without PN request information and an NM 
        PDU with PN request information contained in the NM user data. This is indicated by the Partial 
        Network Information Bit (PNI) in the CBV of the NM PDU. Meaning of the PNI bit: 0 -&gt; NM PDU 
        contains no PN request information 1 -&gt; NM PDU contains PN request information
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PNEnabled_False</srcid><srcstatus/><internalId>1363</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PNEnabled_true</srcid><srcstatus/><internalId>1374</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_CRIbit_0_PDU</srcid><srcstatus/><internalId>1375</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2004</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00405</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The FrNm extensions for partial networking are enabled with the configuration switch FrNmPnEnabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_498</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00406</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is FALSE, FrNm shall perform the standard FrNm RxIndication and the partial
        networking extensions shall be disabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Rx_Indication_Pn_Disabled</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PNEnabled_False</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00407</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE and the PNI bit in the NM PDU provided by FrNm_RxIndication() has the 
        value 0, FrNm shall perform the standard FrNm RxIndication and omitting the extensions for 
        partial networking.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_CRIbit_0_PDU</srcid><srcstatus/><internalId>1375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00408</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE and the PNI bit in the NM PDU provided by FrNm_RxIndication() has the 
        value 1, FrNm module shall process the Partial Networking Information of the NM-PDU as 
        described in chapter [REF] Aggregation of internal and external requested PNs and [REF] 
        Aggregation of external requested PNs
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00409</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE, FrNm shall set the value of the PNI bit to 1 in transmitted NM PDUs.
        Note: If partial networking is used on the ECU, this ECU always has to send Partial Network
        Information in its NM user data.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PNEnabled_true</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00410</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmCwuRxEnabled is TRUE, FrNmCarWakeUpFilterEnabled is FALSE and NM PDU is received where 
        the car wakeup bit is '1', FrNm shall call Nm_CarWakeUpIndication and perform the standard Rx indication handling.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_false</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3903</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00411</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNm_GetPduData is called in the context of Nm_CarWakeUpIndication, FrNm shall return the 
        PDU data of the PDU that causes the call of Nm_CarWakeUpIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2092</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00412</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmCwuRxEnabled is TRUE, FrNmCarWakeUpFilterEnabled is TRUE and a Nm PDU is received where 
        the car wakeup bit is '1' and the received Node ID is equal to FrNmCarWakeUpFilterNodeId the 
        FrNm module shall call Nm_CarWakeUpIndication and perform the standard Rx Indication handling.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3909</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00416</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The PN filter mask FrNmPnFilterMaskByte shall be a byte array with the length of FrNmPnInfoLength.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2654</srcid><srcstatus/><internalId>1052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00418</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        By means of the configuration parameter FrNmPnFilterMaskByte the FrNm is able to detect which
        PN request information is relevant for the ECU and which not. Each bit of FrNmPnFilterMaskByte
        has the following meaning:
          0 -&amp;gt; The PN request information is irrelevant for the ECU.
          1 -&amp;gt; The PN request information is relevant for the ECU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00420</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If at least one bit within the PN request information Range of the received NM-PDU (defined by
        the parameters FrNmPnInfoOffset and FrNmPnInfoLength) matches with the corresponding bit in the
        PN filter mask, the PN request information is relevant for the ECU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00421</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE FrNm shall provide the possibility to store external and
        internal requested PNs combined over all relevant channels (all FrNm channels where
        FrNmPnEnabled is TRUE). At initialization the values of all PNs shall be set to 0 (not requested)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_639</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00423</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If * FrNmPnEiraCalcEnabled is TRUE * a NM-PDU is received * PNs are requested within this 
        message (bits set to 1) * and the requested PNs are set to 1 within the [configured PN filter 
        mask] then FrNm shall store the request information (value 1) for these PNs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00424</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If : * FrNmPnEiraCalcEnabled is TRUE * NM-PDU is being requested to send by FrNm * PNs are
        requested within this message (bits set to 1) * and the requested PNs are set to 1 within the
        [configured PN filter mask] then FrNm shall store the request information (value 1) for these PNs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_TX_EIRA_VERIFICATION</srcid><srcstatus/><internalId>1369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00425</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE FrNm shall provide a possibility to monitor for each PN if 
        this PN is still externally or internally requested on at least one of the relevant channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00426</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE and a PN is requested by message reception or sending the
        monitoring for this PN shall be restarted with respect to the FrNmPnResetTime.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Rx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM426</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00428</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE and a PN is not requested again within FrNmPnResetTime the 
        corresponding stored value for this PN shall be set to not requested (value 0)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00429</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE and the stored value for a PN is set to requested or back to 
        not requested  FrNm shall inform the upper layers by calling PduR_FrNmRxIndication() for the 
        configured EIRA PDU (i.e. changed EIRA information shall be passed to COM)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_MAX_EIRA_SIZE</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00432</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE FrNm shall provide the possibility to store external requested 
        PNs on each relevant channel. At initialization the values of all PNs shall be set to 0 (not requested)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_601</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1401</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00434</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If: * FrNmPnEraCalcEnabled is TRUE * a NM-PDU is received * PNSR bit is 0 * PNs are requested 
        within this message (bits set to 1) * and the requested PNs are set to 1 within the [configured 
        PN filter mask] then FrNm shall store the request information (value 1) for these PNs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2023</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00435</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE FrNm shall provide a possibility to monitor on each relevant
        channel and for each PN if this PN is still externally requested.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_1027</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00436</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE and a PN is requested by message reception the monitoring for
        this PN shall be restarted with respect to the FrNmPnResetTime.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3765</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00437</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE and a PN is not requested again within FrNmPnResetTime the
        corresponding stored value for this PN shall be set to not requested (value 0)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3858</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1370</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00438</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE and the stored value for a PN changes to requested or back to
        not requested FrNm shall inform the upper layers by calling PduR_FrNmRxIndication() for the
        configured ERA PDU (i.e. changed ERA information shall be passed to COM)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3779</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3872</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00297</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the FrNm performs a state change from Synchronize Mode to Network Mode and the previous 
        state change from state Bus Sleep Mode to Synchronize was caused by a call of FrNm_NetworkRequest()
        (due to an active wakeup) and FrNmActiveWakeupBitEnabled is TRUE, the FrNm shall set the ActiveWakeupBit in the CBV
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_2</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_3</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_4</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_4_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_5</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_5_FrNm_NetworkGwEraRequest_1</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_5_FrNm_NetworkGwEraRequest_2</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_Sequence_1</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_Sequence_2</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_Sequence_3</srcid><srcstatus/><internalId>1263</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_Sequence_4</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_Sequence_5</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_Sequence_6</srcid><srcstatus/><internalId>1266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00298</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the FrNm module leaves the Network Mode and FrNmActiveWakeupBitEnabled is TRUE, the FrNm module shall clear the ActiveWakeupBit in the CBV.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_3</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00444</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FlexRay NM is in Ready Sleep state, the configuration parameter FRNM_CYCLE_COUNTER_EMULATION is set to FALSE,
        global time cannot be retrieved and network is requested again then FlexRay NM shall perform a transition to Synchronize state.
      </description>
      <releases>
      <release>AUTOSAR R20-11</release>
      <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
      <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleep_shortErr</srcid><srcstatus/><internalId>1134</internalId></linkedfrom></coveredby></needscov>
      <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3488</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00447</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When FrNm_SetUserData is called the FrNm module shall set the Network Management user data for 
        the Network Management PDUs transmitted next on the bus.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1136</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00449</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        It shall be possible to perform an independent processing of transmission- and reception-
        handling inside the main function according to SRS_BSW_00432 [4]
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00452</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is FALSE, FrNm shall set the value of the PNI bit to 0 in transmitted NM PDUs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PNEnabled_False</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM410</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00453</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The range of the PN request information in the NM user data is defined by the parameters
        FrNmPnInfoOffset and FrNmPnInfoLength. Each bit in the PN range shall have the following
        meaning: Bit value Meaning:
          0 -&gt; The PN is not requested
          1 -&gt; The PN is requested
        Note:FrNmPnInfoOffset + FrNmPnInfoLength shall not exceed the Length of the NM PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PN_RequestInfo_Chk</srcid><srcstatus/><internalId>1378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00454</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name          | FrNm_ConfigType
        Kind          | Structure
        Description   | Contains configuration parameters.
        Available via | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_91</srcid><srcstatus/><internalId>1067</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00460</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_TxConfirmation
        Syntax              | void FrNm_TxConfirmation (PduIdType TxPduId, Std_ReturnType result)
        Service ID [hex]    | 0x40
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in)     | TxPduId | ID of the PDU that has been transmitted.
                            | result  | E_OK: The PDU was transmitted.
                                      | E_NOT_OK: Transmission of the PDU failed.
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | None
        Description         | The lower layer communication interface module confirms the transmission of a PDU, or the failure to transmit a PDU.
        Available via       | FrNm_FrIf.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.FrNm_TxConfirmationResultParameter</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR403.FrNm_TxConfirmation</srcid><srcstatus/><internalId>133</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00461</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE and FrNmPnEraCalcEnabled is TRUE, the PN status information 
        has to be stored separately for both, the EIRA and ERA information (compare SWS_FrNm_00421 and 
        SWS_FrNm_00432)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00461.Eira</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00461.Era</srcid><srcstatus/><internalId>541</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00393</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_StartupError
        Syntax              | void FrNm_StartupError (NetworkHandleType NetworkHandle)
        Service ID [hex]    | 0x10
        Sync/Async          | Synchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | NetworkHandle | Identification of the NM-channel
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | None
        Description         | This function is called by the FrSM when synchronization of the FlexRay cluster could not be achieved.
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_843</srcid><srcstatus/><internalId>774</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Synchronized_longErr</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0132</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00467</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The evaluation of the condition RepetitionCycleCompleted and thus the generation of the
        RepetitionCycleCompleted event  shall be subject to the following rules:

        a) If FrNmMainAcrossFrCycle is set to FALSE, then a RepetitionCycleCompleted event shall be
        generated in the last FlexRay communication cycle of the repetition cycle after we receive
        all the votes.

        b) If FrNmMainAcrossFrCycle is set to TRUE, then a RepetitionCycleCompleted event shall be
        generated if a repetition cycle boundary has been crossed since the previous call of the
        FlexRay NM MainFunction execution before any vote is transmitted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.False</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.True</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00470</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | &lt;Nm_NetworkStartIndication&gt;
        Syntax             | void &lt;Nm_NetworkStartIndication&gt; (NetworkHandleType nmNetworkHandle)
        Service ID [hex]   
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant for different FrNm Clusters. Non reentrant for the same FrNm Cluster
        Parameters (in)    | nmNetworkHandle | Identification of the NM-Cluster
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | This API service of an upper layer Nm is called by the FlexRay Network Management
                           | to indicate to this upper layer BSW module that a NM-message was successfully
                           | received and the FrNm is in the Bus-Sleep Mode.
        Available via | &lt;none&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_277</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0120</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00471</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | &lt;Nm_PduRxIndication&gt;
        Syntax              | void &lt;Nm_PduRxIndication&gt; (NetworkHandleType nmNetworkHandle)
        Service ID [hex]    | --
        Sync/Async          | Synchronous
        Reentrancy          | Reentrant for different FrNm Clusters. Non reentrant for the same FrNm Cluster
        Parameters (in)     | nmNetworkHandle | Identification of the NM-Cluster
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | None
        Description         | This API service of an upper NM is called by the FlexRay Network Management to
                            | indicate to this upper layer BSW module Nm that a NM-message was successfully received.
                            | This function is only available on the definition of _PDU_RX_INDICATION_ENABLED
        Available via       | &lt;none&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_161</srcid><srcstatus/><internalId>902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0130</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00472</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | &lt;UL_RemoteSleepCancellation&gt;
        Syntax             | void &lt;UL_RemoteSleepCancellation&gt; (NetworkHandleType nmNetworkHandle)
        Service ID [hex]
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant for different FrNm Clusters. Non reentrant for the same FrNm Cluster
        Parameters (in)    | nmNetworkHandle | Identification of the NM-Cluster
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | This API service of an upper layer BSW module &lt;UL&gt; (e.g. ComM) is called by the
                           | FlexRay Network Management to indicate to this upper layer BSW module that the "Remote Sleep"
                           | has been cancelled as an NM-message with an indication to keep the bus awake has been received
                           | and the Remote Sleep indication has been previously detected.
        Available via      | &lt;none&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1302</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0148</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00473</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | &lt;UL_RemoteSleepIndication&gt;
        Syntax             | void &lt;UL_RemoteSleepIndication&gt; (NetworkHandleType nmNetworkHandle)
        Service ID [hex]
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant for different FrNm Clusters. Non reentrant for the same FrNm Cluster 
        Parameters (in)    | nmNetworkHandle | Identification of the NM-Cluster 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | None 
        Description        | This API service of an upper layer BSW module &lt;UL&gt; (e.g. ComM) is called by the 
                           | FlexRay Network Management to indicate to this upper layer BSW module that all other nodes in 
                           | the cluster are ready to sleep (the 'Remote Sleep Indication'), as no NM-messages with an 
                           | indication to keep the bus awake are received in the Normal Operation State for a configurable 
                           | amount of time determined by the FRNM_REMOTE_SLEEP_IND_TIME (configuration parameter)
        Available via      | &lt;none&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1021</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0148</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00474</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | &lt;UL_TransmissionTimeoutException&gt;
        Syntax             | void &lt;UL_TransmissionTimeoutException&gt; (NetworkHandleType nmNetworkHandle)
        Service ID [hex]   | -
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant for different FrNm Clusters. Non reentrant for the same FrNm Cluster 
        Parameters (in)    | nmNetworkHandle | Identification of the NM-Cluster 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | None 
        Description        | This API service of an upper layer BSW module &lt;UL&gt; is called by the FlexRay
                           | Network Management when FrIf calls FrNm_TxConfirmation with result E_NOT_OK to indicate to this 
                           | upper layer BSW module that NM-message could not be transmitted successfully.
        Available via      | &lt;none&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.ReliableTxConfirmation</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name        | FrNm_SetSleepReadyBit
        Syntax              | Std_ReturnType FrNm_SetSleepReadyBit (NetworkHandleType nmChannelHandle, boolean nmSleepReadyBit)
        Service ID [hex]    | 0x12
        Sync/Async          | Synchronous
        Reentrancy          | Non Reentrant
        Parameters (in)     | nmChannelHandle | Identification of the NM-channel
                            | nmSleepReadyBit | Value written to ReadySleep Bit in CBV
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: No error
                                             | E_NOT_OK: Writing of remote sleep indication bit has failed
        Description         | Set the NM Coordinator Sleep Ready bit in the Control Bit Vector
        Available via       | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_929</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_3</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_1</srcid><srcstatus/><internalId>1395</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00475</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the FrNm module has entered Synchronize Mode, it shall notify the Generic NM Interface 
        module by calling Nm_SynchronizeMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.NmSynchronizeMode</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00491</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If function FrNm_PnLearningRequest is called on a channel where 
        FrNmDynamicPncToChannelMappingEnabled is set to TRUE and FrNm is in the Network Mode the FrNm 
        module shall set the Repeat Message Bit and the Partial Network Learning Bit in the CBV to 1 on 
        this channel and change to or restart the Repeat Message State at the end of a NM Repetition 
        Cycle.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00492</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the bits Partial Network Learning and Repeat Message Request both are received on a channel 
        where FrNmDynamicPncToChannelMappingEnabled is set to TRUE and FrNm is in the Network Mode the 
        FrNm module shall set the Partial Network Learning Bit in the CBV to 1 on this channel and 
        change to or restart the Repeat Message State at the end of a NM Repetition Cycle.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00493</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmDynamicPncToChannelMappingSupport is set to TRUE FrNm shall clear the Partial Network 
        Learning Bit when leaving the Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00494</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmRepeatMsgIndEnabled is set to TRUE and the Repeat Message Request bit set to 1 is 
        received FrNm module shall call the callout function Nm_RepeatMessageIndication only the first 
        time until Repeat Message State has been left again. In case the Partial Network Learning Bit 
        is also received with value 1 and FrNmDynamicPncToChannelMappingEnabled is set to TRUE the 
        parameter pnLearningBitSet shall be set to TRUE in this function call, otherwise to FALSE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00495</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function FrNm_PnLearningRequest is called in Synchronize Mode or Bus Sleep Mode no 
        functionality shall be executed and E_NOT_OK shall be returned.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00501</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and the FrNm module is indicated via 
        FrNm_RequestSynchronizedPncShutdown, the FrNm module shall store the given PNC (pncId) per 
        given Nm-Channel (nmChannelHandle) as pending request for a synchronized PNC shutdown.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4001</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_03</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_08</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_03</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_08</srcid><srcstatus/><internalId>1304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00502</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is TRUE and the PNSR bit is set to 1 of the received NM
        PDU, the FrNm module shall set the bits in the ERA PDU to 0 of the corresponding bits which are
        set to 1 in the received PN info range, stop the according monitoring for these externally 
        requested PNs and inform the upper layers in the given order: call PduR_FrNmRxIndication()
        for the configured ERA PDU call Nm_ForwardSynchronizedPncShutdown() with the configured
        NetworkHandle (FrNmComMNetworkHandleRef).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_54</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00503</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE the FrNm implementation shall provide an API FrNm_RequestSynchronizedPncShutdown.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2615</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_DET_01</srcid><srcstatus/><internalId>1268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00504</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is 1, the
        PNSR bit in the received NM-PDU is 1 and the corresponding ComMChannel configured via
        FrNmComMNetworkHandleRef is actively coordinated (ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE),
        then the FrNm module shall ignore the received NM-PDU. Additionally, the FrNm module shall:
          - Report the runtime error FRNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST to the Default Error Tracer
          - If FrNmPnSyncShutdownErrorReactionEnabled is set to TRUE, a NM message with the current PN
            information shall immediately be transmitted on the affected NM-Channel
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00504.RuntimeError</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00504.PNInformationTransmitted</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00505</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, requests for synchronized PNC shutdown
        are pending and no transmission confirmation (indicated via FrNm_TxConfirmation) of a previous
        call is pending, then the FrNm module shall call FrNm_IfTransmit per NM-Channel with the 
        configured PDU ID derived from FrNmTxPduRef within the corresponding FrNm_MainFunction_&lt;
        FrNmChannel.ShortName&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_54</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00506</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the transmission of cyclic NM-messages started, FrNmSynchronizedPncShutdownEnabled is set to
        TRUE and requests for synchronized PNC shutdown are pending, the FrNm module shall transmit the
        NM-Data as PN shutdown message. Otherwise the current PN Info shall be transmitted
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_54</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00507</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC shutdown
        are pending, then the FrNm module shall set for this message additionally the following data
        beneath the normal data within the call of FrNm_TriggerTransmit:
          - Set the PNSR bit in the CBV to 1
          - Overwrite the PN information in the user data (after NM User Data has been fetched, if
            FrNmComUserDataEnabled is enabled) by setting bits that correspond to PNC IDs stored as
            pending request for a synchronized PNC shutdown to "1" and all other bits to "0"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_54</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00508</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a
        transmission due to synchronized PNC shutdown and FrNm_TxConfirmation is called with result
        E_OK, the FrNm shall consider those PNC IDs stored as pending request for a synchronized PNC
        shutdown as completed and remove them from storage.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.ASR21-11.SWS_FrNm_00508</srcid><srcstatus/><internalId>458</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00508.CancelRetransmission</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_00509</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a
        transmission due to synchronized PNC shutdown , FrNm_TxConfirmation is called with result
        E_NOT_OK or an expected transmission confirmation (via FrNm_TxConfirmation) is pending, the
        FrNm shall keep those PNC IDs stored as pending request for a synchronized PNC shutdown as long
        as the corresponding EIRA PN reset timer is running and the PN is neither externally nor
        internally requested again.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00509.RetransmissionNextDataCycle</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error                               | Related error code                      | Error value
        A NM message with PN Shutdown Request Bit   |
        was received on a channel that is actively  |
        coordinated by the ComM PNC Gateway         | FRNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST | 0x20
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1974</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_RxPath_01</srcid><srcstatus/><internalId>1286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | FrNm_RequestSynchronizedPncShutdown
        Syntax             | Std_ReturnType FrNm_RequestSynchronizedPncShutdown (NetworkHandleType nmChannelHandle, PNCHandleType pncId)
        Service ID [hex]   | 0xf3
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant for different nmChannelHandle. Non reentrant for the same nmChannelHandle.
        Parameters (in)    | nmChannelHandle | Identifier of the NM-Channel where the given PNC (pncId) is assigned to.
                           | pncId | Identifier of the PNC which is requested for a synchronized shutdown across the PN topology 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | Std_ReturnType | E_OK: Request has been accepted.
                                            | E_NOT_OK: Request has not been accepted.
        Description        | Requests transmission of a NM-PDU with PNSR bit set to 1 (PN shutdown message) 
        Available via      | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_959</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_DET_01</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_05</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_11</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_13</srcid><srcstatus/><internalId>1281</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_14</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_05</srcid><srcstatus/><internalId>1301</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_11</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_13</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_14</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_15</srcid><srcstatus/><internalId>1311</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_33_RequestSynchShutDown_01</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>FrNm.SWS_FrNm_91005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name       | FrNm_PnLearningRequest
        Syntax             | Std_ReturnType FrNm_PnLearningRequest (NetworkHandleType NetworkHandle)
        Service ID [hex]   | 0xf1
        Sync/Async         | Asynchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: No error
                                            | E_NOT_OK: PN Learning Request has failed or is not configured for this network handle.
        Description        | Set Repeat Message Request Bit and Partial Network Learning Bit for NM messages transmitted next on
                           | the bus. This will force all nodes to enter the PNC Learning Phase. This is needed for the optional
                           | Dynamic PNC-to-channel-mapping feature.
        Available via      | FrNm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <defaults>
      <idprefix>FrNm.ASR21-11.</idprefix>
    </defaults>

    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00540</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is TRUE and the PNI bit in the received NM-PDU is set to 1 and
        the PNSR bit is set to 1, FrNm module shall extract the PNC bit vector from the received NM-PDU according
        to the partial network configuration (NmPncBitVectorOffset and NmPncBitVectorLength of the corresponding NM-channel)
        and forward the PNC bit vector by calling Nm_ForwardSynchronizedPncShutdown
      </description>
      <comment>
        PNSR Bit set to 1 is only possible if a synchronized PNC shutdown is requested.
        A synchronized PNC shutdown should be handled across the PN topology. Therefore,
        it is assumed that either all coordinators have the synchronized PNC shutdown enabled or all 
        coordinators have the synchronized PNC shutdown disabled. A mixture of both would lead to an unsynchronized PNC shutdown, which has to be avoided.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00540.PNSR</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00548</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, requests for synchronized PNC shutdown are pending and NM-PDU is configured for 
        immediate transmission in FrIf (FrIfImmediate set to TRUE), 
        then the FrNm module shall transmit a NM-PDU as PN shutdown message by performing the following actions in the given order:
         - Set the PNSR bit in the CBV to 1
         - If user data is enabled, fetch the available data (either from Com if FrNmComUserDataSupport is enabled or from internal storage) and 
           copy the data in the user data range of the NM-PDU
         - Write the PNC bit vector with respect to NmPncBitVectorOffset and NmPncBitVectorLength of the corresponding NM-channel by setting 
           bits that corresponds to PNC IDs stored as pending request for a synchronized PNC shutdown to 1 and all other bits to 0
         - Trigger transmission of the NM-PDU by calling FrIf_Transmit
      </description>
      <comment>
         - The aggregation of all PNCs which are requested for a synchronized PNC shutdown and the transmission as PN shutdown message 
           (set the PNSR bit in the CBV to 1) is done asynchronously in the context of the FrNm_TriggerTransmit function call, 
           the NM-PDU is configured with FrIfImmediate set to FALSE
         - A pending request for a synchronized PNC shutdown has always to be handled as fast as possible and with a 
           higher priority, then the cyclic NM message
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.SWS_FrNm_00548.PncBitVector</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00510</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmPnShutdownMessageRetransmissionDuration is configured and transmission of a PN shutdown message is requested (refer to [SWS_FrNm_00505]) 
        for the first time, then the corresponding retransmission timer for PN shutdown messages shall be started with 
        FrNmPnShutdownMessageRetransmissionDuration on all affected NM-channels.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4054</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_04</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_09</srcid><srcstatus/><internalId>1305</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_16</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_17</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    
    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00508</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a transmission of a NM-PDU as PN shutdown
        message (see SWS_FrNm_00548) and FrNm_TxConfirmation is called with result E_OK, the FrNm shall consider those PNC IDs stored
        as pending request for a synchronized PNC shutdown of the corresponding NM-channel as completed and remove them from storage.
        Additionally, if FrNmPnShutdownMessageRetransmissionDuration is configured, then FrNm shall cancel 
        the retransmission timer for PN shutdown messages of the affected NM-channel.
      </description>
      <comment>
        FrNm has to ensure that new request for a synchronized PNC shutdown (indicated via FrNm_RequestSynchronizedPncShutdown) are
        not lost, during an on going transmission of a PN shutdown NM frame.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00508.PncStore</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    
    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00509</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a transmission due to synchronized PNC shutdown, 
        FrNm_TxConfirmation is called with result E_NOT_OK or the transmission request for this PN shutdown message was not accepted (FrIf_Transmit
        returned E_NOT_OK), then the FrNm module shall keep those PNC IDs stored as pending request for a synchronized PNC shutdown and perform 
        a retransmission in the next data cycle.
      </description>
      <comment>
        - FrNm has to perform a retry transmission handling for PN shutdown messages if transmission of the PN shutdown message was not
          confirmed by the lower layer (FrNm_TxConfirmation return with E_NOT_OK ).
          The retry for the transmission requests should cover error cases, where the lower layer cannot transmit the Nm messages.
          This collide in the worst case with a postponed NM-Data PDU containing the PNC bit vector (see SWS_FrNm_00506).
          But in any case, if the capability to transmit NM messages is not re-covered within the PN reset time (EIRA),
          the PNCs will shutdown not synchronized, which might lead to timeout errors on application level.
        - The dependency to a pending transmission confirmation indicated by the lower layer, should support reliable communication,
          e.g. ensure PN shutdown message was transmitted on the bus.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00509.RetransmissionNextDataCycle</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    
    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00511</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and the FrNm module has stored PNC IDs as pending request for a synchronized PNC shutdown,
        then the FrNm shall remove those PNC IDs from storage which are either externally or internally requested again.
         - FrNm shall check on reception of an NM-message, if externally requested PNCs are received
         - FrNm shall check up front to each transmission of an PN shutdown message if internal PNC requests are available by deriving the
           internal PNC requests from the corresponding ComPdu (see FrNmTxUserDataPduRef)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00511.ComMRequests</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    
    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00512</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, FrNmPnShutdownMessageRetransmissionDuration is not configured,
        the FrNm module has requested a transmission due to synchronized PNC shutdown (see [SWS_FrNm_00505]),
        FrNm_TxConfirmation is called with result E_NOT_OK or the transmissions request for this PN shutdown message was not accepted
        (FrIf_Transmit returned E_NOT_OK), then the FrNm shall remove the PNC IDs stored as pending request for a synchronized PNC shutdown of
        the corresponding NM-channel and report the runtime error FRNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED to DET.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00513</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and a retransmission timer for a PN shutdown message (see ECUC_FrNm_00510) expires, 
        then FrNm shall remove the pending request for a synchronized PNC shutdown of the corresponding NM-channel 
        from the storage and report the runtime error FRNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED to DET
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4029</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_04</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_09</srcid><srcstatus/><internalId>1305</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_16</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_17</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00541</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE, and either FrNmSynchronizedPncShutdownEnabled is set to TRUE and no requests for
        synchronized PNC shutdown are pending or FrNmSynchronizedPncShutdownEnabled is set to FALSE, then the
        FrNm module shall perform the following actions in the given order within the call of FrNm_TriggerTransmit:
        - Call Nm_PncBitVectorTxIndication(NM-channel, buffer to store the unfiltered PNC bit vector of aggregated internal PNC requests)
          to indicate the transmission request and to retrieve internal PNC requests
        - Copy the received PNC bit vector for internal PNC requests to the NM-PDU by considering
          NmPncBitVectorOffset and NmPncBitVectorLength of the corresponding NM-channel
        - If user data is enabled, fetch the available data (either from Com if FrNmComUserDataSupport is enabled or from internal storage) and
          copy the data in the user data range of the NM-PDU
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00541.UserData</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>FrNm.ASR21-11.SWS_FrNm_00542</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC shutdown are pending,
        then the FrNm module shall set for this message additionally the following data beneath the normal data within the call of FrNm_TriggerTransmit:
          - Set the PNSR bit in the CBV to 1
          - If user data is enabled, fetch the available data (either from Com if FrNmComUserDataSupport is enabled or from internal storage) and
            copy the data in the user data range of the NM-PDU
          - Write the PNC bit vector with respect to NmPncBitVectorOffset and NmPncBitVectorLength of the 
            corresponding NM-channel by setting bits that corresponds to PNC IDs stored as pending request for a synchronized PNC shutdown to 1
            and all other bits to 0
      </description>
      <comment>
        The FrNm modul has to aggregate all PNCs which were indicated for a synchronized PNC shutdown and transfer the pncId’s to a byte array (PN Info range). 
        Each bit (PNC bit) of the PN Info range represent a particular PNC. 
        The byteIndex and bitindex within the PN Info range of a PNC bit shall be determined as follows:
         - byteIndex = (PncId div 8) – NmPncBitVectorOffset
         - bitIndex = (PncId mod 8)
         - A pending request for a synchronized PNC shutdown has always to be handeled as fast as possible and with a higher priority, then the cyclic NM message.         
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</srcid><srcstatus/><internalId>537</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>FrNm.ASR21-11.ECUC_FrNm_00095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:               FrNmPnShutdownMessageRetransmissionDuration 
        Parent Container:   FrNmGlobalProperties 
        Description:        Specifies the duration in seconds of retransmission phase of a PN shutdown message. 
                            A retransmission shall be performed per affected NM channel, 
                            as long as the PN shutdown message could not be successfully sent and the retransmission timer is running. 
                            The value shall be a multiple integral of FrNmMainFunctionPeriod. 
        Multiplicity:       0..1 
        Type:               EcucFloatParamDef 
        Range:              [0.001 .. 65.535]
        Default value:      -- 
        Post-Build          
        Variant             
        Multiplicity:       false
        Post-Build          
        Variant Value:      false
        Multiplicity        
        Configuration       
        Class:              Pre-compile time   X  VARIANT-PRE-COMPILE 
                            Link time          X  VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                            Post-build time    --
        Value               
        Configuration       
        Class:              Pre-compile time   X  VARIANT-PRE-COMPILE 
                            Link time          X  VARIANT-LINK-TIME, VARIANT-POST-BUILD 
                            Post-build time    --
        Scope / Dependency: scope: local dependency: 
                             - Only valid if FrNmSynchronizedPncShutdownEnabled == TRUE 
                             - FrNmPnShutdownMessageRetransmissionDuration smaller or eqaul to FrNmPnResetTime
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2835</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_04</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_16</srcid><srcstatus/><internalId>1312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>FrNm.EB.ConfigPduLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>Configuring the PduLength larger than the underlying layer supports
        results in an invalid configuration.</description>
      <comment>This requirement is based on[ecuc_sws_6030] from ECU Configuration.</comment>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.FrNm.EB_INTREQ_FrNm_0001</srcid><srcstatus/><internalId>0</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <defaults>
      <idprefix>FrNm.EB_Ref.</idprefix>
      <source>EB Refinement</source>
    </defaults>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.FrIf</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file FrIf.h for the interface of FlexRay Interface.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_61</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.PduR</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FRNM_COM_USER_DATA_SUPPORT is enabled or FRNM_PN_EIRA_CALC_ENABLED
        is enabled or FRNM_PN_ERA_CALC_ENABLED is enabled,then the FrNm module shall include the header file PduR_FrNm.h for interface of PduR.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_72</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.Nm_Cbk</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file Nm_Cbk.h for the callback interface of Nm.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_59</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.Det</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If Development error detection is enabled, the FrNm module shall include the header file Det.h for the interface of DET.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_67</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.Dem</id>
      <status>rejected</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file Dem.h for interface of DEM.
      </description>
      <comment>
        This requirement is not applicable because FrNm does not report any production errors.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.NmStack_Types</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file NmStack_Types.h for common NM types.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_6</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.SchM_FrNm</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file SchM_FrNm.h for interface to Schedule Manager.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_57</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.MemMap</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file MemMap.h for locating software in memory using the memory map.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_120</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM066.FrSM</id>
      <status>rejected</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall include the header file FrSM.h for interface of FlexRay State Manager.
      </description>
      <comment>
        This requirement is not applicable because FrNm does not require the interface of FlexRay State Manager.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00116.DataPDU</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Repeat Message State, it shall activate
        the transmission of NM-Data PDUs if the node is configured for NM Data transmissions.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PduTransmission</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00116.VotePDU</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Repeat Message State, it shall activate
        the transmission of NM-Vote PDUs to keep the cluster awake if the node is configured to allow voting.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PduTransmission</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When a Repetition Cycle is completed and if the flag FrNm_RepeatMessage
        is set to FALSE, the FrNm module shall leave the Repeat Message State.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0100</srcid><srcstatus/><internalId>1219</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0100_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ReadySleepEntry</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NormalOperationEntry</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00123.DataPDU</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Normal Operation State, it shall activate the transmission of NM-Data PDUs.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00123.VotePDU</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Normal Operation State, it shall
        activate the transmission of NM-Vote PDUs with positive NM-Vote.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_TriggerTransmitVoteBitSet</srcid><srcstatus/><internalId>1111</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_0005</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00124.RMRequest</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmNodeDetectionEnabled is set to TRUE the FlexRay NM module shall leave the Normal
        Operation State and enter the Repeat Message State at the end of a NM Repetition Cycle when a
        Repeat Message Request is active due to a call of FrNm_RepeatMessageRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0097</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00124.RMBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmNodeDetectionEnabled is set to TRUE the FlexRay NM module shall leave the Normal
        Operation State and enter the Repeat Message State at the end of a NM Repetition Cycle when a
        Repeat Message Request is active. The Repeat Message Request Bit shall be set during this transition.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NOStateToRMState_RMBit</srcid><srcstatus/><internalId>1222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00126.DataPDU</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Ready Sleep State, it shall deactivate
        the transmission of NM-Data PDUs.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_35_NegativeVoteInReadySleep</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0171</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_794</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSendNegativeVoteInReadySleepState is set to FALSE when the FrNm
        module enters the Ready Sleep State, it shall deactivate the
        transmission of the NM-Vote PDUs.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0171</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_799</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_809</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSendNegativeVoteInReadySleepState is set to TRUE then when the
        FrNm module enters the Ready Sleep State, it shall transmit negative
        NM-Votes.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_35_NegativeVoteInReadySleep</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_General</srcid><srcstatus/><internalId>1390</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4294</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_523</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequest</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmNodeDetectionEnabled is set to TRUE the FlexRay NM module shall leave the Ready Sleep
        State and enter the Repeat Message State at the end of a NM Repetition Cycle when a Repeat
        Message Request is active and Ready Sleep Time has not expired.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0096</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequestBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When the FrNm module enter in the Repeat Message State due to a call of
        FrNm_RepeatMessageRequest, then the Repeat Message Request Bit shall be set.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_RSStateToRMState_RMBit</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain a Repeat Message
        Request Bit (RptMsgRequest) with the following meaning:
          0: Repeat Message State not requested
          1: Repeat Message State requested
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Rx_Indication_Pn_Disabled</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0097</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_NOStateToRMState_RMBit</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_RSStateToRMState_RMBit</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain an Active
        Wakeup Bit with the following meaning:
          0: Node has not woken up the network
          1: Node has woken up the network
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_2</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_3</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain a Partial
        Partial Network Information Bit (PNI) with the following meaning:
          0: NM message contains no Partial Network request information
          1: NM message contains Partial Network request information
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PNEnabled_False</srcid><srcstatus/><internalId>1363</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_PNEnabled_true</srcid><srcstatus/><internalId>1374</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_CRIbit_0_PDU</srcid><srcstatus/><internalId>1375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain a NM Coordinator
        Sleep Ready Bit with the following meaning:
          0: NM cluster is not ready to sleep
          1: NM cluster is ready to sleep (All nodes of the NM cluster are ready to sleep) 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_3</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_2</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_1</srcid><srcstatus/><internalId>1395</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00055.PNShutdownRequestBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain a NM Coordinator
        PN Shutdown Request Bit (PNSR):
          0: NM message does not contain synchronized Partial Network shutdown request
          1: NM message does contain synchronized Partial Network shutdown request for at least one PNC 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_03</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_13</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkLearningBit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The Control Bit Vector of the FrNm module shall contain a NM Coordinator
        Partial Network Learning Bit (PNL):
          0: PNC learning is not requested
          1: PNC learning is requested
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNLearning</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00229.NormalOperation</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If a Remote Sleep Indication has been previously detected by the FrNm module and an NM-message
        with an indication to keep the bus awake is received in the Normal Operation State,
        the FrNm module shall call Nm_RemoteSleepCancellation() to notify the NM Interface module that
        some nodes in the cluster are not ready to sleep anymore.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00229.ReadySleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If a Remote Sleep Indication has been previously detected by the FrNm module and an NM-message
        with an indication to keep the bus awake is received in the Ready Sleep State,
        the FrNm module shall call Nm_RemoteSleepCancellation() to notify the NM Interface module that
        some nodes in the cluster are not ready to sleep anymore.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0151</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00230.NormalOperation</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and the FrNm enters the Repeat Message
        State from the Normal Operation State, the NM shall call Nm_RemoteSleepCancellation() to notify
        the NM Interface module that some nodes in the cluster are not ready to sleep anymore.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0152</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00230.ReadySleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and the FrNm enters the Repeat Message
        State from the Ready Sleep State, the NM shall call Nm_RemoteSleepCancellation() to notify the
        NM Interface module that some nodes in the cluster are not ready to sleep anymore.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0148</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.InitCall</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The FrNm module shall immediately leave the Network mode or Synchronize
        Mode when the &lt;function&gt;FrNm_Init()&lt;/function&gt; is called.
      </description>
      <rationale>
        Whenever FrNm_Init() is called, FrNm Module shall go to the Bus Sleep
        Mode irrespective of its present Mode.
      </rationale>
      <comment>
        This is the decided behavior of RFC
        http://www.autosar.org/bugzilla/show_bug.cgi?id=52460 and the
        requirement [SWS_FrNm_00136] is updated in AR-4.1.1 SWS.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0136</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0137</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0137_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0138</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartUpErrorReaction</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartUpErrorReaction_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00260.Synchronize</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the current state is Synchronize, the function FrNm_PassiveStartUp shall have no
        effect on the operation mode of the FrNm module and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartUp_SyncMode</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00260.NormalOperation</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the current state is Normal Operation, the function FrNm_PassiveStartUp shall have no 
        effect on the operation mode of the FrNm module and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartUp_NwMode</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00260.RepeatMessage</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the current state is Repeat Message, the function FrNm_PassiveStartUp shall have no 
        effect on the operation mode of the FrNm module and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartUp_NwMode</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00260.ReadySleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the current state is Ready Sleep, the function FrNm_PassiveStartUp shall have no
        effect on the operation mode of the FrNm module and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartUp_NwMode</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM113.RepeatMessage</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkRequest is called in the Repeat Message
        State, the flag FrNm_NetworkRequested shall be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwRequestRMState</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM113.ReadySleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkRequest is called in the Ready Sleep State,
        the flag FrNm_NetworkRequested shall be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0098</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM113.NormalOperation</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkRequest is called in the Normal Operation
        State, the flag FrNm_NetworkRequested shall be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwRequestNOState</srcid><srcstatus/><internalId>1257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The function FrNm_NetworkRequest shall be available if the configuration parameter FrNmPassiveModeEnabled is set to 'false'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM114.RepeatMessage</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkRelease is called in the Repeat Message
        State, the flag FrNm_NetworkRequested shall be set to FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwReleaseRMState</srcid><srcstatus/><internalId>1259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM114.ReadySleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkRelease is called in the Ready Sleep
        State, the flag FrNm_NetworkRequested shall be set to FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwReleaseRSState</srcid><srcstatus/><internalId>1260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM114.NormalOperation</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkRelease is called in the Normal Operation
        State, the flag FrNm_NetworkRequested shall be set to FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0151</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The function FrNm_NetworkRelease shall be available if the configuration parameter FrNmPassiveModeEnabled is set to 'false'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</id>
      <status>approved</status><source>EB Refinement</source>
      <version>2</version>
      <description>
        The function FrNm_GetPduData shall be available if the configuration
        parameter FrNmControlBitVectorEnabled is set to 'true'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM266</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</id>
      <status>approved</status><source>EB Refinement</source>
      <version>2</version>
      <description>
        The function FrNm_GetPduData shall be available if for a least a channel
        the configuration parameter FrNmSourceNodeIdentifierEnabled is set to 'true'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM266</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</id>
      <status>approved</status><source>EB Refinement</source>
      <version>2</version>
      <description>
        The function FrNm_GetPduData shall be available if the configuration
        parameter FrNmUserDataEnabled is set to 'true'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM266</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00388.Synchronize</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The service FrNm_EnableCommunication shall return E_NOT_OK, if the current mode is Synchronize.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0145</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00388</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00388.BusSleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The service FrNm_EnableCommunication shall return E_NOT_OK, if the current mode is Bus Sleep.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0145</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00388</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00391.Synchronize</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The service FrNm_DisableCommunication shall return E_NOT_OK if the current mode is Synchronize.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0145</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00391.BusSleep</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The service FrNm_DisableCommunication shall return E_NOT_OK if the current mode is Bus Sleep.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0145</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Vote changes for all nodes except one in a FlexRay cluster in certain dual-FlexRay channel
        topologies shall be forbidden in the next-to-last repetition cycle before the Ready Sleep
        Counter expires, i.e., the NM votes transmitted by the Single-FlexRay channel nodes will be
        identical in both the last repetition cycle and the next-to-last repetition cycle if the Ready
        Sleep Counter were to expire.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_VoteInhibition</srcid><srcstatus/><internalId>1354</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_VoteInhibition_DualChannel</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesLastRepetition</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Vote changes in next to last repetition cycle shall be statically configurable at pre-compile
        time by the configuration parameter FrNmVotingNextToLastRepetitionCycleDisable.
      </description>
      <comment>
        This requirement is not implemented because the usage of parameter
        FrNmVotingNextToLastRepetitionCycleDisable is not clear.
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.VotingNextToLastRepetitionCycle</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV1</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_1: NM-Vote and NM-Data in static segment (one PDU).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_448</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Rx</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Tx</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV2</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_2: NM-Vote and NM-Data in dynamic segment (one PDU).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_449</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Rx</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Tx</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV3</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_3: NM-Vote and NM-Data in static segment (separate PDU).
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.ScheduleVariants</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV4</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_4: NM-Vote in static segment and NM-Data in dynamic segment.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_450</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Rx</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Tx</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV5</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_5: NM-Vote in dynamic segment and NM-Data in static segment.
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.ScheduleVariants</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV6</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_6: NM-Vote and NM-Data in dynamic segment (separate PDU).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_451</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Rx</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Tx</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.ECUC_FrNm_00022.SchV7</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        User shall be able to configure FrNmPduScheduleVariant as FRNM_PDU_SCHEDULE_VARIANT_7: Combined NM-Vote and CBV in static segment and NM-Data in dynamic segment.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_452</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Rx</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_CBV_Tx</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00540.PNSR</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is TRUE and the PNSR bit is set to 1 of the received NM PDU, the FrNm module shall set the bits in 
        the ERA PDU to 0 of the corresponding bits which are set to 1 in the received PN info range, stop the according 
        monitoring for these externally requested PNs (see SWS_FrNm_00436) and inform the upper layers in the given order:
         - call PduR_FrNmRxIndication() for the configured ERA PDU
         - call Nm_ForwardSynchronizedPncShutdown() with the configured NetworkHandle (FrNmComMNetworkHandleRef)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4211</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_RxPath_02</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_34_Multicore_01</srcid><srcstatus/><internalId>1316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00540</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00508.PncStore</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a transmission of a NM-PDU as PN
        shutdown message (see SWS_FrNm_00548) and FrNm_TxConfirmation is called, the FrNm shall consider those PNC IDs stored
        as pending request for a synchronized PNC shutdown of the corresponding NM-channel as completed and remove them from storage.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4102</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_03</srcid><srcstatus/><internalId>1299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00508.CancelRetransmission</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a transmission of a NM-PDU
        as PN shutdown message (see SWS_FrNm_00548) and FrNm_TxConfirmation is called, and
        if FrNmPnShutdownMessageRetransmissionDuration is configured, then FrNm shall cancel the
        retransmission timer for PN shutdown messages of the affected NM-channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4072</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_03</srcid><srcstatus/><internalId>1299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    
    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00509.RetransmissionNextDataCycle</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, the FrNm module has requested a transmission due to synchronized PNC shutdown,
        and the FrNm_TxConfirmation is not called for the channel, then the FrNm module shall keep those PNC IDs stored as pending request
        for a synchronized PNC shutdown and  perform a retransmission in the next data cycle if FrNmPnShutdownMessageRetransmissionDuration
        is configured.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4073</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_18</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00509</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00509</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    
    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00511.ComMRequests</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and the FrNm module has stored PNC IDs as pending request for a synchronized PNC shutdown,
        then the FrNm shall remove those PNC IDs from storage which are either externally or internally requested again.
        External or internal requests are filtered by ComM and these requests are not forwarded to CanNm
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2660</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_03</srcid><srcstatus/><internalId>1271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00511</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    
    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, FrNmPnShutdownMessageRetransmissionDuration is not configured,
        the FrNm module has requested a transmission due to synchronized PNC shutdown (see [SWS_FrNm_00505]), and
        the transmissions request for this PN shutdown message was not accepted
        (FrIf_Transmit returned E_NOT_OK), then the FrNm shall remove the PNC IDs stored as pending request for a synchronized PNC shutdown of
        the corresponding NM-channel and report the runtime error FRNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED to DET.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3000</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3265</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_04</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_09</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_10</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_06</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_07</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_08</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_09</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_10</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00512</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00541.UserData</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmPnEnabled is TRUE, and either FrNmSynchronizedPncShutdownEnabled is set to TRUE and no requests for
        synchronized PNC shutdown are pending or FrNmSynchronizedPncShutdownEnabled is set to FALSE, then the
        FrNm module shall perform the following actions in the given order within the call of FrNm_TriggerTransmit:
        - If user data is enabled, fetch the available data (either from Com if FrNmComUserDataSupport is enabled or from internal storage) and
          copy the data in the user data range of the NM-PDU
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2350</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_12</srcid><srcstatus/><internalId>1280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00541</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00181.FrNmNotify</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If no NM-messages with an indication to keep the bus awake are received in the Normal Operation
        State for a configurable amount of time determined by the FrNmRemoteSleepIndTime, then the FrNm module
        shall notify the Generic NM Interface module that all other nodes in the cluster are ready to
        sleep (the 'Remote Sleep Indication') by calling Nm_RemoteSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00504.RuntimeError</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is 1, the
        PNSR bit in the received NM-PDU is 1 and the corresponding ComMChannel configured via
        FrNmComMNetworkHandleRef is actively coordinated (ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE),
        then the FrNm module shall ignore the received NM-PDU. Additionally, the FrNm module shall:
        - Report the runtime error FRNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST (0x20) to the Default Error Tracer
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1973</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_RxPath_01</srcid><srcstatus/><internalId>1286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00504</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00504.PNInformationTransmitted</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is 1, the
        PNSR bit in the received NM-PDU is 1 and the corresponding ComMChannel configured via
        FrNmComMNetworkHandleRef is actively coordinated (ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE),
        then the FrNm module shall ignore the received NM-PDU. Additionally, the FrNm module shall:
          - If FrNmPnSyncShutdownErrorReactionEnabled is set to TRUE, a NM message with the current PN
            information shall immediately be transmitted on the affected NM-Channel
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrNm.PNCSynchronizedShutdownErrorReaction</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00504</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>


    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC shutdown are pending,
        then the FrNm module shall set for this message additionally the following data beneath the normal data within the call of FrNm_TriggerTransmit:
          - Set the PNSR bit in the CBV to 1
          - If user data is enabled, fetch the available data (either from Com if FrNmComUserDataSupport is enabled or from internal storage) and
            copy the data in the user data range of the NM-PDU
          - Write the PNC bit vector with respect to FrNmPnInfoOffset and FrNmPnInfoLength of the 
            corresponding NM-channel by setting bits that corresponds to PNC IDs stored as pending request for a synchronized PNC shutdown to 1
            and all other bits to 0
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2385</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_13</srcid><srcstatus/><internalId>1281</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_14</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_16</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_17</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_12</srcid><srcstatus/><internalId>1308</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_13</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_14</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_15</srcid><srcstatus/><internalId>1311</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_34_Multicore_02</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00542</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00069.RepeatMessageTime</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The following configuration constraint is conditionally recommended for FlexRay NM:
        NM_REPEAT_MESSAGE_TIME = 0 (conditions: (1) startup of all applications is completed as soon as
        the FlexRay communication is started and (2) node detection is not required in the FlexRay NM-cluster)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1640</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00069.ReadySleepCnt</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The following configuration constraint is conditionally recommended for FlexRay NM:
        FrNmReadySleepCnt = 0 (condition: bus communication is always shut down at the end of the NM
        Repetition Cycle in all nodes within the same FlexRay NM-cluster, even in presence of race conditions)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1540</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00461.Eira</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmPnEiraCalcEnabled is TRUE, the PN status information for EIRA has to be stored combined for over all relevant channels.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_1132</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00461.Era</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmPnEraCalcEnabled is TRUE for a channel, the PN status information from ERA has to be stored individually per channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_1059</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.False</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmMainAcrossFrCycle is set to FALSE, then a RepetitionCycleCompleted event shall be
        generated in the last FlexRay communication cycle of the repetition cycle after we receive
        all the votes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_768</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0113</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0115</srcid><srcstatus/><internalId>1147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.True</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If FrNmMainAcrossFrCycle is set to TRUE, then a RepetitionCycleCompleted event shall be
        generated if a repetition cycle boundary has been crossed since the previous call of the
        FlexRay NM MainFunction execution before any vote is transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_0002</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_0170</srcid><srcstatus/><internalId>1353</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <defaults>
      <idprefix>FrNm.EB.</idprefix>
      <source>EB</source>
    </defaults>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.FrNmUserDataRxPdu</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Container Name   | FrNmUserDataRxPdu
        Parent Container | FrNmChannelIdentifiers
        Description      | This container shall be optional and shall be used to configure the user Nm data PDU, if desired by user.
                         | This container shall only be available if FrNmComUserDataSupport is enabled.
                         | If this container is enabled and FrNmComUserDataSupport is disabled, then configuration error shall occur.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1295</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1309</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.FrNmRxUserDataPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name             | FrNmRxUserDataPduId
        Parent Container | FrNmUserDataRxPdu
        Description      | Handle Id of the NM User Data I-PDU.
        Multiplicity     | 1
        Type             | EcucIntegerParamDef
        Range            | 0.. 65535
        Default value    | 0
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1322</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>


    <specobject>
      <id>FrNm.EB.ComUserDataSupport.FrNmRxUserDataPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name               | FrNmRxUserDataPduRef
        Description        |  Reference to the NM User Data I-PDU in the global PDU collection.
        Multiplicity       | 1
        Type               | Reference to [ Pdu ]
        ConfigurationClass | Pre-compile time | X | VARIANT-PRE-COMPILE
                           | Link time        | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1353</srcid><srcstatus/><internalId>997</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.ConfigCheck1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the parameter FrNmComUserDataSupport is enabled and either FrNmUserDataTxPdu
        or FrNmUserDataRxPdu is not enabled, Tresos shall display a warning.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2014</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.ConfigCheck2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmComUserDataSupport is disabled but FrNmUserDataTxPdu is enabled, Tresos shall display an error.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1222</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.FrNmUserDataRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmUserDataRxPdu is enabled and FrNmComUserDataSupport is true,
        FrNm shall call PduR_FrNmRxIndication() in the FrNm_RxIndication() context to
        forward the FrNm User Data to the PduR (i.e. the FrNm Header shall be stripped).
      </description>
      <comment>
        If FrNmUserDataRxPdu is not enabled, FrNm shall not call PduR_FrNmRxIndication().
        User shall retreive FrNm User Data using FrNm_GetuserData().
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_2</srcid><srcstatus/><internalId>1110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.PduR_FrNmUserDataRxId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmUserDataRxPdu is enabled, Pdu reference configured in FrNmRxUserDataPduRef
        shall be searched in PduR module's Routing tables for matching PduRSrcPduRef
        and respective PduRSourcePduHandleId shall be used for PduR_FrNmRxIndication()
        call from FrNm. If no matching PduRSrcPduRef is found, configuration error shall occur.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_220</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.UserDataLength</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        RX User Data Length shall be calculated for FrNmRxPdu from the EcuC PduLength referenced
        by FrNmRxPduRef where FrNmRxPduContainsData is true. Similarly TX User Data Length shall
        be calculated for FrNmTxPdu from the EcuC PduLength referenced by FrNmTxPduRef where
        FrNmTxPduContainsData is true. Correct PduLength shall be calculated by subtracting the
        header byte(s) from PduLength. If these lengths are unequal then generation error shall
        be given.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_153</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_163</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_198</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_208</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.UserDataLength.NoUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UserDataLength = 0, then FrNmUserDataTxPdu and FrNmUserDataRxPdu shall be disabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_142</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_187</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.UserDataLength.Error</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmComUserDataSupport is enabled and if UserDataLength doesn't match to EcuC PduLength
        referenced by FrNmTxUserDataPduRef or FrNmRxUserDataPduRef, generation error shall be given.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_153</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_163</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_198</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_208</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UserDataLength is equal to 0 for a FrNm channel, then FrNm_SetUserData() and
        FrNm_GetUserData() functions shall return E_NOT_OK for the respective
        channel and if DET is enabled, DET error FRNM_E_INVALID_FUNCTION_ARG shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_INVALID_FUNCTION_ARG</srcid><srcstatus/><internalId>1108</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.PduRCallsUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the optional container FrNmUserDataTxPdu exists and if FrNmComUserDataSupport == true,
        then FrNm shall issue PduR_FrNmTriggerTransmit() and PduR_FrNmTxConfirmation() shall call
        to PduR for the respective channels.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_3</srcid><srcstatus/><internalId>1364</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_4</srcid><srcstatus/><internalId>1365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComUserDataSupport.FrNmSetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmComUserDataSupport is enabled the API FrNm_SetUserData shall not be available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>FrNm.EB.BSWMDGeneration_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The FrNm module's generator shall generate a basic software
        module description (BSWMD) based on the FrNm module's
        configuration containing information on the exclusive areas
        required by the FrNm module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>FrNm.EB.BSWMDGeneration_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The FrNm module's generator shall generate a basic software
        module description (BSWMD) based on the FrNm module's
        configuration containing information on the scheduled
        MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>

    <specobject>
      <id>FrNm.EB.BSWMDGeneration_3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The FrNm module's BSWMD shall be generated using a generator mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the attribute "SHORT-NAME" is not specifed for the container
        FrNmTxUserDataPdu, the symbolic name macros for FrNmTxUserDataPduId
        shall be generated adhering to the following naming pattern:
        FrNmConf_&amp;lt;ChannelName&amp;gt;_FrNmUserDataTxPdu,
        where &amp;lt;ChannelName&amp;gt; is the name of the channel containing
        FrNmUserDataTxPdu.
      </description>
      <rationale>
        If no short-name is specifed, EB tresos Studio assumes the name
        of the corresponding schema node as a default. Thus, the symbolic name
        macros generated according to requirement [ecuc_sws_2108] will not
        be unique.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmRxUserDataPdu is enabled in a channel,
        a symbolic name macro shall be generated for the parameter
        FrNmRxUserDataPduId.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the attribute "SHORT-NAME" is not specifed for the container
        FrNmRxUserDataPdu, the symbolic name macros for FrNmRxUserDataPduId
        shall be generated adhering to the following naming pattern:
        FrNmConf_&amp;lt;ChannelName&amp;gt;_FrNmUserDataRxPdu,
        where &amp;lt;ChannelName&amp;gt; is the name of the channel containing
        FrNmUserDataRxPdu.
      </description>
      <rationale>
        If no short-name is specifed, EB tresos Studio assumes the name
        of the corresponding schema node as a default. Thus, the symbolic name
        macros generated according to requirement [ecuc_sws_2108] will not
        be unique.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PduRAPIs.TxPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The 'TxPduId' parameter passed to the functions 'PduR_FrNmTxConfirmation'
        and 'PduR_FrNmTriggerTransmit' for a network channel shall be the value
        of the parameter 'PduRDestPduHandleId' inside the 'PduRDestPdu' container
        in PduR module for which the Pdu reference in 'PduRDestPduRef' matches
        the Pdu reference configured in 'FrNmTxUserDataPduRef' for the channel.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
      <id>FrNm.EB.EventQueue</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        An event shall not be added to the event queue if an entry of
        this event is already present in the queue. Therefore, the size of
        the event queue shall be equal to the total number of defined events.
      </description>
      <rationale>
        Not queuing duplicate events avoids an overflow of the queue.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_MultipleRequestsQueued_2</srcid><srcstatus/><internalId>1252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>FrNm.EB.RemoteSleepWarning</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the value of parameter FrNmRemoteSleepIndTime is equal to
        one Repetition Cycle time, tresos Studio shall produce a warning.
      </description>
      <comment>
        If FrNmRemoteSleepIndTime is equal to Repetition Cycle time, it is
        possible that Nm_RemoteSleepIndication() and Nm_RemoteSleepCancellation()
        are called within the same Repetition Cycle. This does not affect
        any external behavior since the NM Mode is not changed.
        However, the FrNmRemoteSleepIndTime should be greater than one
        Repetition Cycle time to ensure that all possible votes are regarded.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1599</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
      <id>FrNm.EB.DualChannelProperty</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If there are double channels configured, then more than one vote PDU might
        be configured for same channel and in this case transmission shall be done
        for each PDU.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_DualChannelEnabled</srcid><srcstatus/><internalId>1380</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_VoteInhibition_DualChannel</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrIf_GetNmVector.ReturnNotOk</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrIf_GetNmVector return E_NOT_OK, it shall be treated as no vote received.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_FrIf_GetNmVector_NotOk</srcid><srcstatus/><internalId>1357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
      <id>FrNm.EB.DependencyCheck.FrNmPnEnabled.ComUserDataSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the configuration parameter 'FrNmPnEnabled' is set to 'true',
        the FrNm schema shall ensure that "Com UserData Support" is enabled,
        i.e., the parameter 'FrNmComUserDataSupport' is set to 'true'.
      </description>
      <rationale>
        Without ComUserDataSupport, Aggregation of EIRA / ERA does not make sense.
      </rationale>
      <comment>
        See http://www.autosar.org/bugzilla/show_bug.cgi?id=54044
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ComUserDataSupport_1</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_535</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>FrNm.EB.TriggerTransmit.PassiveMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case the configuration parameter FrNmPassiveMode is set to 'true',
        the FrNm_TriggerTransmit function shall return E_NOT_OK. Additionally,
        the FRNM_E_PDU_ID_INVALID error shall be reported to DET.
      </description>
      <rationale>
        In case passive mode is enabled, it makes no sense to call this function
        but it's still needed by FrIf to avoid linktime errors.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_TriggerTransmit_TxConfirmation</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>FrNm.EB.TxConfirmation.PassiveMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case the configuration parameter FrNmPassiveMode is set to 'true',
        FRNM_E_PDU_ID_INVALID error shall be reported to DET.
      </description>
      <rationale>
        In case passive mode is enabled, it makes no sense to call this function
        but it's still needed by FrIf to avoid linktime errors.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_TriggerTransmit_TxConfirmation</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmVoteBitValue</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        Name                      | FrNmVoteBitValue
        Parent Container          | FrNmGlobalFeatures
        Description               | Specifies the value of the vote bit
        Multiplicity              | 0 .. 1
        Type                      | EcucIntegerParamDef
        Range                     | [0,1]
        Default value             | 0
        Value Configuration Class | Pre-compile time  | X | VARIANT-PRE-COMPILE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2389</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

    <specobject>
      <id>FrNm.EB.VoteBitValueScheduleVariant2</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        In case the optional parameter FrNmVoteBitValue is
        enabled and the FrNmPduScheduleVariant is FRNM_PDU_SCHEDULE_VARIANT_2,
        the value of voting bit from any Nm Data PDU sent in any FrNm state
        will be given by the value of the parameter FrNmVoteBitValue.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_731</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_766</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_TestVoteBit_ScheduleVariant2</srcid><srcstatus/><internalId>1114</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>

    <specobject>
      <id>FrNm.EB.VoteBitValueScheduleVariant6</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case the optional parameter FrNmVoteBitValue is
        enabled and the FrNmPduScheduleVariant is FRNM_PDU_SCHEDULE_VARIANT_6,
        the value of voting bit from any Nm Data PDU sent in any FrNm state
        will be given by the value of the parameter FrNmVoteBitValue.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_732</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_767</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_TestVoteBit_ScheduleVariant6</srcid><srcstatus/><internalId>1115</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>

    <specobject>
      <id>FrNm.EB.Format.VCC-62</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The post-build configuration of the module SHALL be provided in
        Motorola S-Record format as defined in the "Motorola M68000
        Family Programmer's Reference Manual", Appendix C.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_5</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FormatC</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The post-build configuration of the module SHALL be provided as _PbCfg.c and _PbCfg.h files as well.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_174</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ImplementationConfigVariant</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The IMPLEMENTATION_CONFIG_VARIANT of the module SHALL be set to VariantPostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_49</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_116</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2674</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ImplementationConfigClasss</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of each configuration element SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element SHALL be set
        in a way that the implemented configuration class of the respective parameter
        is reflected (e.g., to PreCompile if it's a pre-compile time parameter and to
        PostBuild if it's a post-build time parameter).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_68</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_722</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1760</srcid><srcstatus/><internalId>1016</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2201</srcid><srcstatus/><internalId>1035</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmPnEnabled.PostBuildConfigClass</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The configuration class of FrNmPnEnabled parameter SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_525</srcid><srcstatus/><internalId>961</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmRxPduRef.PostBuildConfigClass</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The configuration class of FrNmRxPduRef parameter SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1007</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmTxPduRef.PostBuildConfigClass</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The configuration class of FrNmTxPduRef parameter SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1180</srcid><srcstatus/><internalId>987</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmTxUserDataPduRef.PostBuildConfigClass</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The configuration class of FrNmTxUserDataPduRef parameter SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1276</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmPnFilterMaskByteValue.PostBuildConfigClass</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The configuration class of FrNmPnFilterMaskByteValue parameter SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2744</srcid><srcstatus/><internalId>1057</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>FrNm.EB.IsValidApi.ServiceId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The module SHALL implement the function FrNm_IsValidConfig() with service id 0x60.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_401</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ExtendHashValue</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The module post-build configuration struct SHALL be extended by a hash value
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_94</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>

    <specobject>
      <id>FrNm.EB.InitExtend</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The Init() function SHALL be extended so that the configuration can be obtained
        from the PbcfgM if a NULL_PTR is passed to the function.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_471</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>FrNm.EB.Impl.PbCfgM</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support in the module SHALL be enabled only when the PbcfgM references the module.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_100</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmPnSupported</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnSupported
        Parent Container          | FrNmGeneral
        Description               | This parameter enables or disables support of partial networking.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1836</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMaxPn</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmMaxPn
        Parent Container          | FrNmGeneral
        Description               | The maximum number of Partial Networking Clusters that can be configured.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 0.. 504
        Default value             | 0
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1902</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>FrNm.EB.RelocatablePBCfg</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmRelocatablePbcfgEnable
        Parent Container          | FrNmGeneral
        Description               | This parameter enables/disables support for relocatable postbuild configuration.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Scope / Dependency        | scope:
                                  | dependency: The parameter SHALL only be available (enabled) if the PbCfgM module configuration references the FrNm module.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1871</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_PBcfgM_Off</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrNm_Test_PBcfgM_On</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>FrNm.EB.Init.Failed</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNm initialization does not succeed, the module
        shall report FRNM_E_INIT_FAILED error code (with value 0x06)
        to DET.
      </description>
      <rationale>
        In case FrNm_IsValidConfig returns E_NOT_OK (because of an
        invalid configuration pointer), this should be reported to
        DET.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_348</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <specobject>
      <id>FrNm.EB.Impl.Relocatable</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The post-build configuration SHALL only be relocatable if
        FrNmRelocatablePbcfgEnable is set to true and if PbcfgM
        enabled relocatable configurations.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_107</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_74</srcid><srcstatus/><internalId>1066</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ScheduleVariant2</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        In case FrNmPduScheduleVariant is FRNM_PDU_SCHEDULE_VARIANT_2, the presence
        of the Nm Pdu itself will be considered as a positive vote. In this
        situation, the actual value of the vote bit from the CBV needs to be
        ignored but in case a constant value is required (eg. to indicate
        the vote bit is unused), this can be configured using the
        FrNmVoteBitValue parameter.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2201</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ScheduleVariant2Vote</srcid><srcstatus/><internalId>1118</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ScheduleVariant6</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNmPduScheduleVariant is FRNM_PDU_SCHEDULE_VARIANT_6, the presence
        of the Nm Pdu itself will be considered as a positive vote. In this
        situation, the actual value of the vote bit from the CBV needs to be
        ignored but in case a constant value is required (eg. to indicate
        the vote bit is unused), this can be configured using the
        FrNmVoteBitValue parameter.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2139</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_RxIndication_ScheduleVariant6</srcid><srcstatus/><internalId>1116</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmAllNmMessagesKeepAwake</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name               | FrNmAllNmMessagesKeepAwake
        Description        | Specifies if FrNm drops irrelevant NM messages. false: Only  NM messages
                           | with an with PN info bit = true and containing an PN request for this ECU
                           | triggers the standard RX indication handling  true: Every NM message triggers
                           | the standard RX indication  handling
                           | In case PN is enabled and the message does not contain PN info Bit in the CBV or
                           | all PN information is zero the received CBV is not updated.
                           | This affects:
                           |  - Received Vote (Mixed PDUs only)
                           |  - Received Repeat Message Request is not handled (Mixed and Data PDUs).
                           |  - Outdated CBV when FrNm_GetPduData is called (Mixed and Data PDUs)
        Multiplicity       | 0..1
        Type               | EcucBooleanParamDef
        Default value      | false
        ConfigurationClass | Pre-compile time   X   VARIANT-PRE-COMPILE, VARIANT-LINK-TIME, VARIANT POST-BUILD
                           | Link time          -
                           | Post-build time    -
        Scope/Dependency   | scope: Module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1745</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ScheduleVariant1Vote</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ScheduleVariant2Vote</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ScheduleVariant1Vote_KeepAwakeFalse</srcid><srcstatus/><internalId>1119</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNmAllNmMessagesKeepAwake_TRUE</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNmAllNmMessagesKeepAwake_FALSE</srcid><srcstatus/><internalId>1125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>FrNm.EB.EmulatedCounter_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case parameter FrNmCycleCounterEmulation is set to true, the FrNm
       shall provide an emulated counter.
        The emulated counter shall behave like the global time received from
       FrIf via FrIf_GetGlobalTime.
        The emulated counter shall be used when when synchronization is lost
       only in Ready Sleep State to decrement the FrNmReadySleepCnt.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_742</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

    <specobject>
      <id>FrNm.EB.EmulatedCounter_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The emulated counter shall be considered valid after Synchronize Mode
       is entered and FrIf_GetGlobalTime returned E_OK.
        In this case the emulated counter's value shall be initialized with
       time read from FrIf via FrIf_GetGlobalTime.
        After the emulated counter is synchronized with the value read from
       FrIf, the emulated counter shall be incremented with 1 (range [0..63])
        The emulated counter shall be considered invalid after Network Mode
       is left.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_743</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>

    <specobject>
      <id>FrNm.EB.EmulatedCounter_3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The emulated counter shall be considered valid after Synchronize Mode
       is entered and FrIf_GetGlobalTime returned E_OK.
        In this case the emulated counter's value shall be initialized with
       time read from FrIf via FrIf_GetGlobalTime.
        After the emulated counter is synchronized with the value read from
       FrIf, the emulated counter shall be incremented with 1 (range [0..63])
        The emulated counter shall be considered invalid after Network Mode
       is left.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_744</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SynchLoss</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
       If the FrNm state machine is in Synchronize Mode and the synchronization
       is lost (FrIf_GetGlobalTime returns NOT_OK) the FrNm state machine shall
       not enter Network Mode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1272</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_StartupSynchLoss</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartupSynchLoss_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>FrNm.EB.Implicit.Uninit.State</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
       Before the initialization, FrNm module shall set the Network Management State
       to NM_STATE_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_458</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DET_OFF_NotValidCfg</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_DET_OFF_ValidCfg</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ComM_Init.NULL_PTR</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNm_Init is called with NULL_PTR and FrNmDevErrorDetect is set to false
        and PbcfgM_GetConfig(or FrNm is not configured in the PbcfgM module)
        cannot return a valid configuration, the FrNm shall not be initialized.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_518</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DET_OFF_NotValidCfg</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

    <specobject>
      <id>FrNm.EB.CarWakeupRxPduDoesNotContainData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNmCarWakeUpRxEnabled is set to true and
        none of the Rx Pdus has FrNmRxPduContainsData set to true,
        the configuration tool shall generate an error.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_248</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PnEnabled_FALSE_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNm_RxIndication is called and PnEnabled for a channel is set to false,
        FrNm shall not perform aggregation of the Partial Network Information.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1996</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNmPnEnabled_False_1</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PnEnabled_FALSE_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case transmission is done and PnEnabled for a channel is set to false,
        FrNm shall not perform EIRA aggregation of the Partial Network Information.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2427</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2888</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNmPnEnabled_False_1</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PostBuildRamSize_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case parameter value of parameter FrNmPostBuildRamSize is less
        than the internal size needed for TX and RX buffers, the module shall generate
        error at generation time.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_256</srcid><srcstatus/><internalId>753</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PostBuildRamSize_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        At postbuild time if the computed size needed by internal TX and RX buffers
        is greater than the precompile time value allocated for TX and RX buffers,
        FrNm shall generate a DET error FRNM_E_INIT_FAILED at initialization.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_509</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_WrongPostBuildRamSize</srcid><srcstatus/><internalId>1109</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrIfClstIdx</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        FrIf Cluster Ids shall be unique and zero-based consecutive.
      </description>
      <comment>
        If FrIfClstIdx is not zero-based consecutive,
        FrNm shall generate a configuration error.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_20</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10001</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmTxUserDataPdu</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The routing paths of User Data Tx PDU shall be configured in PduR for all channels.
        TxUserData Pdu Id shall be unique across all channels. This optional container is used
        to configure the UserNm PDU.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1257</srcid><srcstatus/><internalId>991</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10002</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>

    <specobject>
      <id>FrNm.EB.RxTxPduLength</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Rx Pdu Data Length shall match with the Tx Pdu Data Length.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_73</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10004</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmSourceNodeIdentifierEnabled_True</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If 'FrNmSourceNodeIdentifierEnabled' is set to 'true' the length of User
        Data Tx Pdu for particular channel shall be equal to Tx Pdu Length - 2.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_153</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10005</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmRxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Lengths of the two Rx Pdus (FrNmRxPdu) in a channel shall be equal.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_83</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10006</srcid><srcstatus/><internalId>1097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmPnInfoLength</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If partial networking is enabled for a channel, the length of corresponding Rx Pdu
        shall be less than (FrNmPnInfoLength + FrNmPnInfoOffset).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_91</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10007</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmSourceNodeIdentifierEnabled_False</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If 'FrNmSourceNodeIdentifierEnabled' is set to 'false' the length of
        User Data Tx Pdu for the particular channel shall be equal to Tx Pdu Length - 1.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_163</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10008</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrIfTxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Tx Pdu configured in FrIf shall be unique.
        Exactly one Tx Pdu shall be configured in FrIf.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_128</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10009</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SWS_FrNm_00187.Implicit</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Normal Operation State shall not be reached if the node is configured as passive node.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0117</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmMultiCoreSupport
        Parent Container          | FrNmGeneral
        Description               | This parameter enables module multi core support.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_257</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1813</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_NetworkStartIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_NetworkStartIndication
        instead of Nm_NetworkStartIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_570</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_NetworkStartIndication</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_NetworkMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_NetworkMode instead
        of Nm_NetworkMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_575</srcid><srcstatus/><internalId>785</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_BusSleepMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_BusSleepMode
        instead of Nm_BusSleepMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_580</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_BusSleepMode</srcid><srcstatus/><internalId>1165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_RemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_RemoteSleepIndication
        instead of Nm_RemoteSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_585</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepIndication</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepIndication_False</srcid><srcstatus/><internalId>1175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_RemoteSleepCancellation
        instead of Nm_RemoteSleepCancellation.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_590</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation_1</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation_2</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation_False</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation_1_False</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation_2_False</srcid><srcstatus/><internalId>1178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_SynchronizationPoint</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_SynchronizationPoint
        instead of Nm_SynchronizationPoint.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_595</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_SynchronizationPoint</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_SynchronizationPoint_False</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_CoordReadyToSleepIndication
        instead of Nm_CoordReadyToSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_600</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_CoordReadyToSleepIndication</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_CoordReadyToSleepIndication_False</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_PduRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_PduRxIndication
        instead of Nm_PduRxIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_605</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RxIndication</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RxIndication_False</srcid><srcstatus/><internalId>1174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_StateChangeNotification</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_StateChangeNotification
        instead of Nm_StateChangeNotification.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_610</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_RemoteSleepCancellation_False</srcid><srcstatus/><internalId>1176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_CarWakeUpIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_CarWakeUpIndication
        instead of Nm_CarWakeUpIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_615</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_CarWakeUpIndication</srcid><srcstatus/><internalId>1173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_Nm_TxTimeoutException</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE, FrNm shall call
        SchM_Call_FrNm_RequiredCSEntry_Nm_TxTimeoutException
        instead of Nm_TxTimeoutException.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Int.h_620</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SchmCall_TxTimeoutException</srcid><srcstatus/><internalId>1172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SchM_Call_DET</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmMultiCoreSupport is TRUE and DET is enabled and SchM_Call returns
        a different value from SCHM_E_OK, DET shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1957</srcid><srcstatus/><internalId>853</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3583</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_3930</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4221</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_169</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_231</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_284</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_362</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_428</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_848</srcid><srcstatus/><internalId>922</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1309</srcid><srcstatus/><internalId>928</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1339</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_CoordReadyToSleepIndication</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_SynchronizationPoint</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_CarWakeUpIndication</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_PduRxIndication</srcid><srcstatus/><internalId>1184</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_BusSleepMode</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_NetworkStartIndication</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_NetworkMode</srcid><srcstatus/><internalId>1187</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_TxTimeoutException</srcid><srcstatus/><internalId>1188</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_RemoteSleepIndication</srcid><srcstatus/><internalId>1189</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_RemoteSleepCancellation</srcid><srcstatus/><internalId>1190</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_Schm_Call_Nm_StateChangeNotification</srcid><srcstatus/><internalId>1191</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_34_Multicore_DET_01</srcid><srcstatus/><internalId>1318</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_36_NegativeVoteInReadySleep_Timeout_DET_Multicore</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>627</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBSelectable.FileName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration file names shall be changed in the following way:
        FrNm_PBcfg.* to FrNm_&lt;postBuildVariant&gt;_PBcfg.*.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_49</srcid><srcstatus/><internalId>1064</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_0_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_1_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_0_RxIndication</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_1_RxIndication</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_2_RxIndication</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_3_RxIndication</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBSelectable.TypeName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration type/variable names shall be changed in the following way:
        - FrNm_[Const]ConfigLayoutType to FrNm_&lt;postBuildVariant&gt;_[Const]ConfigLayoutType.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_55</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_0_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_1_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_0_RxIndication</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_1_RxIndication</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_2_RxIndication</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_3_RxIndication</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBSelectable.Master</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module shall generate a post-build-time
        configuration file FrNm_PBcfg.h/c which includes all the variants specific post-build-time
        configurations (FrNm_&lt;postBuildVariant&gt;[_*]_PBcfg.h/c).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_PBcfg.h_8</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FrNm_PBcfg.c_4</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_0_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_1_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_0_RxIndication</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_1_RxIndication</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_2_RxIndication</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_3_RxIndication</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmPnInfo</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        The length of the ((FrNmPnInfoOffset + FrNmPnInfoLength) -1) should not be greater then 63.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2579</srcid><srcstatus/><internalId>1049</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10012</srcid><srcstatus/><internalId>1103</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNmPnInfoOffset</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>

    <specobject>
      <id>FrNm.EB.RepeatMessageTimeZero.NoMessages</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNmRepeatMessageTime is zero, FrNm shall send no messages on the bus
        while passing through Repeat Message State.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1508</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_PassiveStartup_RepeatMessageTimeZero</srcid><srcstatus/><internalId>1366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>

    <specobject>
      <id>FrNm.EB.StateChangeNotification</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If a message is needed to be sent on the bus, first state change notification shall
        be called and after that the message shall be sent on the bus.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_1143</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_StateChangeNotification</srcid><srcstatus/><internalId>1130</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Service name      | FrNm_NetworkGwEraRequest
        Syntax            | Std_ReturnType FrNm_NetworkGwEraRequest( NetworkHandleType nmChannelHandle )
        Service ID[hex]   | 0xFE
        Sync/Async        | Asynchronous
        Reentrancy        | Reentrant (but not for the same NM-channel)
        Parameters(in)    | nmChannelHandle Identification of the NM-channel
        Parameters(inout) | None
        Parameters(out)   | None
        Return value      | Std_ReturnType | E_OK: No error
                                           | E_NOT_OK: Requesting of network has failed
        Description       | Request the network, since  ECU needs to communicate on the bus.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_550</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0137_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkGwEraRequest in the
        Bus-Sleep Mode, then the function FrNm_NetworkGwEraRequest shall cause the
        FlexRay NM to leave the Bus-Sleep Mode, set the Network Request Flag
        FrNm_NetworkRequested to TRUE and then enter the Synchronize Mode.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Synchronized_longErr_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_StartUpErrorReaction_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1006</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.NetworkMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkGwEraRequest in the
        Network Mode, then the function FrNm_NetworkGwEraRequest shall set the Network
        Request Flag FrNm_NetworkRequested to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm.EB.FrNm_NetworkGwEraRequest.RepeatMessage</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB.FrNm_NetworkGwEraRequest.ReadySleep</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>FrNm.EB.FrNm_NetworkGwEraRequest.NormalOperation</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.SynchronizeMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the FrNm module's environment calls the function FrNm_NetworkGwEraRequest in the
        Synchronize Mode, then the function FrNm_NetworkGwEraRequest shall set the Network
        Request Flag FrNm_NetworkRequested to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwRequestSyncState_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.Available</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The function FrNm_NetworkGwEraRequest shall be available if the configuration parameter
        FrNmPassiveModeEnabled is set to 'false'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>638</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNmActiveWakeupBitEnabled is set to true and Network Mode is entered from Synchronize state
        due to FrNm_NetworkGwEraRequest active wakeup bit shall not be set.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_1_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_4_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_5_FrNm_NetworkGwEraRequest_1</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_5_FrNm_NetworkGwEraRequest_2</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_341</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNmActiveWakeupBitEnabled is set to true and Network Mode is entered from BusSleepMode
        due to PassiveStartup NetworkRequest sequence active wakeup bit shall not be set.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_2</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_ActiveWakeupBit_4</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm_HsmFrNmFnct.c_342</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.RepeatMessage</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkGwEraRequest is called in the Repeat Message
        State, the flag FrNm_NetworkRequested shall be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwRequestRMState_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.NetworkMode</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.ReadySleep</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkGwEraRequest is called in the Ready Sleep State,
        the flag FrNm_NetworkRequested shall be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0098_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.NetworkMode</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_NetworkGwEraRequest.NormalOperation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the function FrNm_NetworkGwEraRequest is called in the Normal Operation
        State, the flag FrNm_NetworkRequested shall be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_NwRequestNOState_FrNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>1258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.NetworkMode</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>

    <specobject>
      <id>FrNm.EB.EB_FrNm_Define</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        FrNm shall define EB_FrNm in order for Nm module to check if FrNm module is provided by Elektrobit or not.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm.h_31</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    
    <specobject>
      <id>FrNm.EB.FrNmSynchronizedPncShutdownMulticoreForwardSynchFails</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case FrNmSynchronizedPncShutdownEnabled is set to true and FrNmMultiCoreSupport is set to true
        and SchM Call FrNm_ForwardSynchronizedPncShutdown fails DET shall be reported with
        FRNM_E_PNSR_FORWARD_SYNCHRONIZED_SHUTDOWN, code: 251
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_34_Multicore_DET_01</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4222</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ECUC_FrNm_00065.Range</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmPnFilterMaskByteIndex
        Parent Container          | FrNmPnFilterMaskByte
        Description               | Index of the filter mask byte. Specifies the position within the filter mask byte array.
        Multiplicity              | 1
        Type                      | EcucIntegerParamDef
        Range                     | 0.. 62
        Default value             | --
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | X | VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                  | Post-build time | --
        Scope / Dependency        | scope: local
                                  | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel. FrNmPnFilterMaskByteIndex &lt; FrNmPnInfoLength 
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2678</srcid><srcstatus/><internalId>1055</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_FrNmPnInfo_504PNCs</srcid><srcstatus/><internalId>1350</internalId></linkedfrom><linkedfrom><srcid>TS_FRNM_FrNmPnResetTime_504PNCs</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ECUC_FrNm_00013.ChannelHandle</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmChannelHandle
        Parent Container          | FrNmChannelIdentifiers
        Description               | Reference to the FlexRay Cluster to which the respective instance of the NM is associated
        Multiplicity              | 1
        Type                      | Symbolic name reference to [ FrIfCluster ]
        Post-Build Variant Value  | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
                                  | Link time | --
                                  | Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency        | scope: ECU
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_779</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>

    <specobject>
      <id>FrNm.EB.ECUC_FrNm_00014.PreCompile</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmComMNetworkHandleRef
        Parent Container          | FrNmChannelIdentifiers
        Description               | This reference points to the unique channel defined by the ComMChannel and
                                  | provides access to the unique channel index value in ComMChannelId.
        Multiplicity              | 1
        Type                      | Symbolic name reference to [ ComMChannel ]
        Value Configuration Class | Pre-compile time  | X | VARIANT-PRE-COMPILE
                                  | Link time         | -
                                  | Post-build time   | -
        Scope / Dependency        | scope: local
                                  | dependency: It must be unique for each NM instance within one ECU.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_813</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FRNM064.ProvidedFiles</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The following source code files shall be provided by the FrNm module.
        FrNm.c (for implementation of provided functionality)
        FrNm_Cfg.c (for pre-compile time configurable parameters)
        FrNm_Pbcfg.c (for post build time configurable parameters)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FrNm_Cfg.c_2</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/FrNm.xgen_174</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FRNM154.NMDataLength</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The length of the NM-Data PDU for the FrNm module shall be configurable at
        pre-compile time to any integer value from 1 to 4294967295.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_57</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/FrNm_Checks.m_112</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_GEN_10003</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>

    <specobject>
      <id>FrNm.EB.SWS_FrNm_00548.PncBitVector</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNmSynchronizedPncShutdownEnabled is set to TRUE, requests for synchronized PNC shutdown are pending and NM-PDU is configured for
        immediate transmission in FrIf (FrIfImmediate set to TRUE),
        then the FrNm module shall transmit a NM-PDU as PN shutdown message by performing the following actions in the given order:
         - Set the PNSR bit in the CBV to 1
         - If user data is enabled, fetch the available data (either from Com if FrNmComUserDataSupport is enabled or from internal storage) and 
           copy the data in the user data range of the NM-PDU
         - Write the PNC bit vector with respect to FrNmPnInfoOffset and FrNmPnInfoLength by setting
           bits that corresponds to PNC IDs stored as pending request for a synchronized PNC shutdown to 1 and all other bits to 0
         - Trigger transmission of the NM-PDU by calling FrIf_Transmit
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_2818</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_01</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_02</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_03</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_04</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_06</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_07</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_08</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_09</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_10</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_30_FrIf_Transmit_15</srcid><srcstatus/><internalId>1283</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_01</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_02</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_03</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_04</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_05</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_06</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_07</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_08</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_31_FrIf_Transmit_09</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_01</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_02</srcid><srcstatus/><internalId>1298</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_03</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_06</srcid><srcstatus/><internalId>1302</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_07</srcid><srcstatus/><internalId>1303</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_08</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_32_FrIf_Transmit_10</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00548</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>651</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmInt.InitStatus</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        After a successful initialization of the FrNm module, the function FrNm_Init
        shall set the initialization status to FRNM_INIT, otherwise to FRNM_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_646</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DET_OFF_NotValidCfg</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_DET_OFF_ValidCfg</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_SetUserData.UninitState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNm_SetUserData is called and the FrNm module is in UnInit state, then E_NOT_OK shall be returned.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_1106</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRNM_DET_ERROR_UNINIT</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>

    <specobject>
      <id>FrNm.EB.NMcoordinatorSleepReadyBitAvailability</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The NMcoordinatorSleepReady bit in the Control Bit Vector shall be
        available only if parameter FrNmCoordinatorSyncSupport is set to 'true'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_3</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_SetSleepReadyBit_1</srcid><srcstatus/><internalId>1395</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>

    <specobject>
      <id>FrNm.EB.GetNodeIdentifier.Available</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The function FrNm_GetNodeIdentifier shall be available if at least for a channel
        configuration parameters FrNmSourceNodeIdentifierEnabled and FrNmNodeDetectionEnabled are set to 'true'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>

    <specobject>
      <id>FrNm.EB.GetLocalNodeIdentifier.Available</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The function FrNm_GetLocalNodeIdentifier shall be available if for at least a channel
        configuration parameter FrNmSourceNodeIdentifierEnabled and FrNmNodeDetectionEnabled are set to 'true'.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNm_SetUserData.Available</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The function FrNm_SetUserData shall be available if the configuration
        parameter FrNmUserDataEnabled is set to 'true' and the configuration
        parameter FrNmComUserDataSupport is set to 'false'.
      </description>
      <comment>
        The function Nm_SetUserData is only available if the parameter
        NmUserDataEnabled is set to 'true' and NmComUserDataSupport is set
        to 'false'.
     </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_30001</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30010</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30002</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30003</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30004</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30005</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30006</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30007</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30008</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30012</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30011</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>TS_FrNm_30013</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>657</internalId></specobject>

    <specobject>
      <id>FrNm.EB.StartupError.Asynchronously</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The FlexRay Network Management must react (execute) asynchronously on
        reception of the indication FrNm_StartupError from the FlexRay State Manager.
      </description>
      <rationale>
        FrSm and FrNm are normally scheduled from the same entity and FrSm needs
        to be scheduled even if synchronization is lost because it is the task of
        FrSm to organize the re-synchronization of the FlexRay channel.Therefore,
        we strongly assume that the FrNm will also be scheduled if the
        synchronization is lost and hence a synchronous reaction is not necessary.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0132</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>

    <specobject>
      <id>FrNm.EB.VersionCheck</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The version check shall be implemented as specified in EB requirements [BSWM_CHK_400] and [BSWM_CHK_401].
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_78</srcid><srcstatus/><internalId>809</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>

    <specobject>
      <id>FrNm.EB.API.Transmit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The signature of the function FrNm_Transmit() shall be as follows:

        Service name    | FrNm_Transmit
        Syntax          | Std_ReturnType FrNm_Transmit (PduIdType TxPduId, const PduInfoType* PduInfoPtr)
        Service ID[hex] | 0x49
        Parameters (in) | TxPduId | Identifier of the PDU to be transmitted 
                        | PduInfoPtr | Length of and pointer to the PDU data and pointer to MetaData.
        Return value    | Std_ReturnType (always E_NOT_OK)
        Description     | FrNm_Transmit is an empty function returning E_NOT_OK at any time. This requirement
                        | is relevant to avoid linker errors as PduR expects this API to be provided.
      </description>
      <rationale>
        The function  FrNm_Transmit() can be referred by the Pdu Router.
        Therefore the signature of FrNm_Transmit has to match the signature
        expected by the Pdu Router to avoid compilation errors.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrNm_Api.h_869</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0173</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>FrNm.SWS_FrNm_00359</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmPnEiraRxNSduRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                              | FrNmPnEiraRxNSduRef
        Parent Container                  | FrNmGlobalFeatures
        Description                       | Reference to a Pdu in the COM-Stack. Only one SduRef is required for FrNm because
                                          | the EIRA is the aggregation over all FlexRay Channels.
        Multiplicity                      | 0 .. 1
        Type                              | Reference to [ Pdu ]
        Post-Build Variant Multiplicity   | false
        Post-Build Variant Value          | true
        Multiplicity Configuration Class  | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time
                                          | Post-build time
        Value Configuration Class         | Pre-compile time | X | VARIANT-PRE-COMPILE
                                          | Link time
                                          | Post-build time
        Scope / Dependency                | scope: local
                                          | dependency: only available if FrNmPnEnabled == true for at least one FrNm Channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2524</srcid><srcstatus/><internalId>1047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_Rx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>

    <specobject>
      <id>FrNm.EB.RepeatMessage</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Ready Sleep State from Repeat Message
        state, the Ready Sleep Counter shall be initialized with the value of
        the parameter FrNmReadySleepCnt + 1.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_RMStateToRSState</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>

    <specobject>
      <id>FrNm.EB.NormalOperation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the FrNm module enters the Ready Sleep State from Normal Operation
        state, the Ready Sleep Counter shall be initialized with the value of
        the parameter FrNmReadySleepCnt + 1.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0155</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmSendNegativeVoteInReadySleepState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name                      | FrNmSendNegativeVoteInReadySleepState
        Parent Container          | FrNmGlobalFeatures
        Description               | This parameter enables transmission of negative vote in ready sleep state.
        Multiplicity              | 1
        Type                      | EcucBooleanParamDef
        Default value             | false
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_2444</srcid><srcstatus/><internalId>1044</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name:               FrNmMultiCoreUseSingleCS
        Parent Container    FrNmGeneral
        Description:        In case FrNmMultiCoreUseSingleCS is set to TRUE, single client server
                            shall be used for FrNm_PassiveStartup, FrNm_NetworkRequest and 
                            FrNm_NetworkRelease.
        Multiplicity:       1
        Type:               EcucBooleanParamDef
        Default value:      false
        ConfigurationClass: Pre-compile time X All variants
                            Link time        -
                            Post-build time  -
        Dependency:         dependency: Parameter shall be set to false if FrNmMultiCoreSupport is
                                        set to false.
                                        Parameter shall have the same value as NmMultiCoreSupport.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FrNm_Cfg.h.m4_265</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1782</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_03</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_04</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Service name      : FrNm_MultipleNetworkOperations
        Syntax            : Std_ReturnType  FrNm_MultipleNetworkOperations(
                                NetworkHandleType nmChannelHandle, uint8 operation)

        Service ID[hex]   : -
        Sync/Async        : Asynchronous
        Reentrancy        : Reentrant(but not for the same NM-Channel)
        Parameters (in)   : nmChannelHandle  Identification of the NM-channel
                            operation   Identification of operation to be executed 
                                        (0 FrNm_PassiveStartUp, 1 FrNm_NetworkRequest,
                                         2 FrNm_NetworkRelease, 3 FrNm_NetworkGwEraRequest,)
        Parameters(inout) : None
        Parameters(out)   : None
        Return value      : Std_ReturnType
                                 E_OK: No error
                                 E_NOT_OK: operation failed.
        Description       : In context of multicore, ensures handling order of FrNm_PassiveStartUp,
                            FrNm_NetworkRequest, FrNm_NetworkRelease, FrNm_NetworkGwEraRequest is kept as there are received
                            by being the single client server interface. Executes one of the 
                            operation selected (FrNm_PassiveStartUp, FrNm_NetworkRequest,
                            FrNm_NetworkRelease, FrNm_NetworkGwEraRequest).
        Available via     : FrNm.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4307</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_01</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_03</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_04</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations.Available</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        FrNm_MultipleNetworkOperations api shall be available only if FrNmMultiCoreUseSingleCS
        parameter is set to true.        
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4305</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS.PassiveStartup</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNm_MultipleNetworkOperations is called with operation parameter set to 0 then
        FrNm_PassiveStartUp shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4315</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_01</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_04</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNm_MultipleNetworkOperations is called with operation parameter set to 1 then
        FrNm_NetworkRequest shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4321</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>

    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkRelease</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNm_MultipleNetworkOperations is called with operation parameter set to 2 then 
        FrNm_NetworkRelease shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4326</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    
    <specobject>
      <id>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkGwEraRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If FrNm_MultipleNetworkOperations is called with operation parameter set to a 
        different value than 0,1,2 then FrNm_NetworkGwEraRequest shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrNm.c.m4_4331</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_FrNm_MultipleNetworkOperations_03</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>    

  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>FrNm.man.FRNM220</id>
      <status>approved</status>
      <shortdesc>Manual review of code for the use of Os services</shortdesc>
      <version>1</version>
      <furtherinfo>This review shall be carried out for each external release.</furtherinfo>
      <verifycrit>
        Review is successful when the source code does not contain any calls to Os services except "GetCounterValue" and "GetElapsedCounterValue".
      </verifycrit>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrNm.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DBGINST_001</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>

    <specobject>
      <id>FrNm.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DBGINST_001</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>

    <specobject>
      <id>FrNm.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DBGINST_001</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>

    <specobject>
      <id>FrNm.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DBGINST_001</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>

    <specobject>
      <id>FrNm.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_DBGINST_001</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrNm.EB.PBCFGM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name: FrNm_IsValidConfig
        Syntax: Std_ReturnType FrNm_IsValidConfig( void* ConfigPtr )
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): ConfigPtr, post build configuration manager
        configuration.
        Parameters (inout): None
        Parameters (out): None
        Return value: Returns E_OK if the FrNm configuration is valid otherwise E_NOT_OK. A
        null pointer is interpreted as invalid configuration.
        Description: This function determines if the FrNm configuration is valid. This
        function can be called also before the FrNm is initialized. No error reporting
        is necessary within this function.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM102</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration is valid
        - if the platform signature in the post build configuration equals the value
          determined by the macro TS_PlatformSigIsValid.
        - if the link time signature in the post build configuration equals the link time
          signature in the link time configuration file.
        - if the compile time signature in the post build configuration equals the value of
          the macro FRNM_CFG_SIGNATURE.
        - if the compile time signature of Published information in the post build configuration
          equals the value of the macro FRNM_PUBLIC_INFO_SIGNATURE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM104</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          CfgSignature.
        - the FrNm_Cfg.h file shall contain the macro
          FRNM_CFG_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM104_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          PublicInfoSignature.
        - the FrNm_Cfg.h file shall contain the macro
          FRNM_PUBLIC_INFO_SIGNATURE.
        - The MCG shall generate this signature value from the list of parameters of
          configuration class 'PublishedInformation' except 'Release'. The XPath function
          asc:getConfigSignature(nodeset) shall be used to determine the signature out of the
          list of parameters. The list of parameters shall be determined with the function
          asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the link time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          LcfgSignature.
        - the link time configuration shall contain the uint32 value
          FrNm_LcfgSignature.
        - the MCG shall generate this signature value of link time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of link time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For Platform verification:
        - the FrNm post build configuration structure shall contain the value
          uint32 PlatformSignature. This uint32 must be the first value of the post build
          configuration structure to guarantee the correct access not disturbed by any padding
          bytes.
        - the MCG shall generate this signature for the selected target. The generator shall
          use the x-path function asc:getPlatformSignature() to determine this value.
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
        https://issue.ebgroup.elektrobit.com/browse/ASCBASE-1485
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM107</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support shall be enabled or disabled via the macro
        FRNM_PBCFGM_SUPPORT_ENABLED defined in the file
        FrNm_Cfg.h.
        If the PbcfgM configuration references the FrNm configuration
        the macro is set to STD_ON otherwise, or if no PbcfgM configuration is
        available it is set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>FrNm_Test_PBcfgM_Off</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM108</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the FrNm is referenced by the PbcfgM, the parameter regarding the
        relocatable feature, shall not be editable and the MCG shall use the configuration of
        the PbcfgM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_PBcfgM_Off</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrNm_Test_PBcfgM_On</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>FrNm_ComTest_NoPBCfg</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrNm.xdm.m4_1896</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PBCFGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrNm_Init() function must be extended to enable the PbcgfM
        features.
        The initialization function shall obtain the FrNm configuration
        from the PbcfgM if the PbcfgM support is enabled within this FrNm
        and the initialization function is called with a null pointer.
        The validity of the configuration shall be checked by the function
        FrNm_IsValidConfig(). The validity shall be check regardless the PbcfgM
        support is enabled or not.
        If no valid configuration can be obtained the initialization function shall
        return, leaving the FrNm uninitialized.
        In the case error reporting is enabled and no valid configuration can be obtained
        an erroneous parameter shall be indicated.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PostBuild_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrNm module shall compile and build an executable even in the absence
        of a post build configuration, i.e. without any post build generated .c and .h files
        available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_ComTest_NoPBCfg</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PbcfgM_General_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrNm shall provide the following macros in the header file
        FrNm_Cfg.h:
        - FRNM_RELOCATABLE_CFG_ENABLE which is set to STD_ON
          if relocatable config shall be enabled, otherwise it's set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_PBcfgM_On</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>

    <specobject>
      <id>FrNm.EB.PbcfgM_General_6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PbcfgM support is enabled FrNm shall define the following macros in
        FrNm_PBCfg.c:
        - TS_PB_CFG_LAYOUT_TYPE: Shall expand to the type definition of the Postbuild
          configuration layout type (e.g. FrNm_ConstConfigLayoutType)
        - TS_PB_CFG_NAME: Shall expand to the name of the structure defining the Postbuild
          configuration layout (e.g. FrNm_ConfigLayout)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrNm_Test_PBcfgM_Off</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrNm_Test_PBcfgM_On</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrNm.EB.PDULENGTHTYPE001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrNm module shall support the following values of PduLengthType:
        [UINT32, UINT16]
      </description>
      <verifycrit>
        Use case 1 - Modules not capable of handling more than 64 kbytes of data:
          - use PduLengthType value 'UINT32' with conformance test
          - verify successful test run, verify absence of metric violations
            (MISRA-C:2012, static code analysis, compiler warnings)
        Use case 2 - Modules capable of handling more than 64 kbytes of data:
          - use conformance test which handles more than 64 kbytes of data
          - apply "boundary" tests using data length of:
            [&lt;&lt;65535,65535, 65536, &gt;131072][bytes]
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_FRNM_0149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrNm.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrNm_VerifyCodeStub</srcid><srcstatus/><internalId>1077</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.FrNm.ScheduleVariants</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>dev.FrNm.MultipleModuleConfig</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>dev.FrNm.RemoteSleepIndTime</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>dev.FrNm.AsyncReactiontoFrNmStartupError</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>dev.FrNm.VotingNextToLastRepetitionCycle</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesLastRepetition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>dev.FrNm.DebugAndTrace</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>dev.FrNm.ChannelHandle</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>290</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNmComMNetworkHandleRef.NoPostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNmChannelHandle.NoPostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NoLinkTimeSupportACG8</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>dev.FrNm.PartialPBSupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNmPnFilterMaskByteIndex</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNmMainFunctionNaming</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>dev.FrNm.CallNmCoordReadyToSleepIndicationNetworkMode</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>478</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00396</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>dev.FrNm.MainFunctionPeriod</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>dev.FrNm.PNLearning</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkLearningBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00493</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NmSynchronizeMode</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>dev.FrNm.PnEiraRxNSduRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNmRepeatMsgIndEnabled</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>dev.FrNm.PNCSynchronizedShutdownErrorReaction</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00504.PNInformationTransmitted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNm_FrIf.h</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>dev.FrNm.ReliableTxConfirmation</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00474</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNmTransmit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>dev.FrNm.SignatureOfFrNm_Init</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>doc/public/changelog/Deviations.xml_735</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>doc/public/changelog/Deviations.xml_736</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>doc/public/changelog/Deviations.xml_737</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>doc/public/changelog/Deviations.xml_738</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NoSupportVariantHandling</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NegativeVotesInReadySleep</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>dev.FrNm.MissingNegativeVotesInReadySleep</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>915</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NoLinkTimeSupportACG9</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>972</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NoDynamicPncToChannelMappingSupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>dev.FrNm.NoSupportForPostBuildVariantValue</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>dev.FrNm.FrNm_TxConfirmationResultParameter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00365</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM369</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Impl.PbCfgM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_107</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Impl.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FrNm_Cfg.h.m4_500</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_Cfg.h.m4</sourcefile>
      <sourceline>500</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/FrNm_PBcfg.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/include/FrNm_PBcfg.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/FrNm_Cfg.c_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/src/FrNm_Cfg.c</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FRNM064.ProvidedFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FrNm_Cfg.c_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/src/FrNm_Cfg.c</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/FrNm_PBcfg.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate/src/FrNm_PBcfg.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrIfClstIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_57</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FRNM154.NMDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RxTxPduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_83</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmRxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnInfoLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FRNM154.NMDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrIfTxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength.NoUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmSourceNodeIdentifierEnabled_True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmSourceNodeIdentifierEnabled_False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_187</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength.NoUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength.Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.UserDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.PduR_FrNmUserDataRxId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.CarWakeupRxPduDoesNotContainData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FrNm_Checks.m_256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_macros/FrNm_Checks.m</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PostBuildRamSize_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrNm.h_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm.h</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.EB_FrNm_Define</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.NmStack_Types</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Init.Failed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM367</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_477</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_671</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>671</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_721</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>721</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_745</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_843</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00393</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.API.Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_889</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00387</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_908</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>908</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_929</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>929</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Api.h_959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Api.h</sourcefile>
      <sourceline>959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrNm_Cbk.h_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Cbk.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM368</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Cbk.h_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Cbk.h</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Cbk.h_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Cbk.h</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Cbk.h_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Cbk.h</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_575</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>575</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_SynchronizationPoint</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_600</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>600</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_605</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>605</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_TxTimeoutException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_1027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>1027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_1058</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>1058</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_1059</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>1059</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00461.Era</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_1064</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>1064</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrNm_Int.h_1132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/include/FrNm_Int.h</sourcefile>
      <sourceline>1132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00461.Eira</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FRNM064.ProvidedFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_49</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_52</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_57</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.SchM_FrNm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.Nm_Cbk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.FrIf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.Det</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_72</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.PduR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VersionCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM066.MemMap</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.IsValidApi.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_454</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Implicit.Uninit.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.InitExtend</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM395</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_509</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>509</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PostBuildRamSize_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComM_Init.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_639</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>639</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmInt.InitStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_742</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.EmulatedCounter_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.EmulatedCounter_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.EmulatedCounter_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_768</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>768</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00378</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00379</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_878</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>878</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1006</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1006</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1106</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.UninitState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1237</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1237</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1509</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1509</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1554</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1554</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1730</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1730</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1756</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1756</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1859</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1859</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1950</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1950</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM396</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1973</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1973</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00504.RuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1974</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1974</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_1996</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>1996</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PnEnabled_FALSE_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2092</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2092</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ScheduleVariant6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ScheduleVariant2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00541.UserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PnEnabled_FALSE_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00503</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2647</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2647</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00511.ComMRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_2888</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>2888</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PnEnabled_FALSE_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3477</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3477</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3497</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3497</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3765</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3765</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3779</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM433</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3858</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3858</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3903</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00410</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_3930</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>3930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4001</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4001</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4029</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4029</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00513</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00510</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4072</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4072</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00508.CancelRetransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00509.RetransmissionNextDataCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00508.PncStore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00540.PNSR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmSynchronizedPncShutdownMulticoreForwardSynchFails</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm.c.m4_4331</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm.c.m4</sourcefile>
      <sourceline>4331</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_341</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>341</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_428</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_731</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>731</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VoteBitValueScheduleVariant2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_732</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>732</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VoteBitValueScheduleVariant6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VoteBitValueScheduleVariant2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VoteBitValueScheduleVariant6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_794</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.DataPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_848</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>848</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1021</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1021</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SynchLoss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00376</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1309</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrNm_HsmFrNmFnct.c_1508</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/src/FrNm_HsmFrNmFnct.c</sourcefile>
      <sourceline>1508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RepeatMessageTimeZero.NoMessages</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_49</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigVariant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigClasss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_70</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_82</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigVariant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_286</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>286</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0020_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_341</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>341</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_447</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>447</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_448</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>448</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_451</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_453</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_498</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>498</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnEnabled.PostBuildConfigClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.DependencyCheck.FrNmPnEnabled.ComUserDataSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_605</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>605</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_638</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>638</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_639</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>639</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_667</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>667</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_692</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>692</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigClasss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_779</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ECUC_FrNm_00013.ChannelHandle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ECUC_FrNm_00014.PreCompile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_863</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>863</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmRxPduRef.PostBuildConfigClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1047</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1047</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1088</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1088</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmTxPduRef.PostBuildConfigClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1204</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.ConfigCheck2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmTxUserDataPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1276</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmTxUserDataPduRef.PostBuildConfigClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmUserDataRxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1309</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmUserDataRxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1353</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmRxUserDataPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0035_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0028_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1540</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00069.ReadySleepCnt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1543</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1543</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RemoteSleepWarning</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1640</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1640</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00069.RepeatMessageTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1666</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1666</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1681</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1681</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1706</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1745</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1745</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1760</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigClasss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1836</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1836</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1896</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1902</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1902</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMaxPn</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1945</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0001_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_1994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>1994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2014</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2014</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.ConfigCheck1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2022</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2022</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2043</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2043</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2096</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2096</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigClasss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0059_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2389</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmVoteBitValue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmSendNegativeVoteInReadySleepState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2470</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2470</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnEiraRxNSduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnInfo</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2654</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2654</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2658</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2658</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2674</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2674</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ImplementationConfigVariant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ECUC_FrNm_00065.Range</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnFilterMaskByteValue.PostBuildConfigClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2765</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2765</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2804</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2804</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.ECUC_FrNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrNm.xdm.m4_2878</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/config/FrNm.xdm.m4</sourcefile>
      <sourceline>2878</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Format.VCC-62</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_49</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Impl.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ExtendHashValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/FrNm.xgen_174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/src/Autosar/generate_var/xgen/FrNm.xgen</sourcefile>
      <sourceline>174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FRNM064.ProvidedFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FormatC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>doc/public/releasenotes/Limitations.xml_28</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/releasenotes/Limitations.xml</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>doc/public/releasenotes/Limitations.xml_54</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/doc/public/releasenotes/Limitations.xml</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00507</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00505</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrNm_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function FrNm_IsValidConfig() is implemented as specified.
  
Test Object: 
    FrNm_IsValidConfig()
  
Test Precondition: 
    The FrNm module is not initialized.
  
Test Execution: 
    01: Call the function FrNm_IsValidConfig() with an NULL_PTR.
    02: VP:
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function FrNm_IsValidConfig() with this invalid configuration.
    05: VP(FrNm.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    The following 3 steps are only executed if the module has a link-time configuration:
        06: Create an invalid configuration regarding the link time configuration.
        07: Call the function FrNm_IsValidConfig() with this invalid configuration.
        08: VP(FrNm.EB.PBCFGM105):
                The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function FrNm_IsValidConfig() with this invalid configuration.
    11: VP(FrNm.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function FrNm_IsValidConfig() with this invalid configuration.
    14: VP(FrNm.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function FrNm_IsValidConfig() with a valid configuration.
    16: VP:
        The function must have returned with E_OK.
    17: VP(FrNm.EB.PBCFGM107):
        Check if FRNM_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>FrNm_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the FrNm can be initialized via the PbcfgM.
  
Test Object: 
    FrNm_IsValidConfig()
  
Test Precondition: 
    The FrNm module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function FrNm_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function FrNm_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    The following 3 steps are only executed if the module has a link-time configuration:
        07: Create an invalid configuration regarding the link time configuration.
        08: Call the function FrNm_Init() with this invalid configuration.
        09: VP:
            A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function FrNm_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function FrNm_Init() with a null pointer.
    15: VP:
        The function PbcfgM_GetConfig() must have been called once.
    16: VP:
        No Det call must have been performed.
    17: VP:
        The module internal configuration pointer FrNm_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call FrNm_Init with NULL_PTR.
    20: VP(FrNm.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrNm_Test_PBcfgM_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PbcfgM_Off_Compile_Test.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that if PbcfgM support is disabled then FrNm_PBCfg.c shall define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
      FRNM_PBCFGM_SUPPORT_ENABLED shall be set to STD_OFF.
      FRNM_RELOCATABLE_CFG_ENABLE shall be set to STD_OFF.
    
Test Object: None.
Test Precondition: 
      - PbcfgM configuration does not refer to module FrNm (or no config exists)
      - Include FrNm_PBcfg.c only for step 01 and 02.
      - Include FrNm_Cfg.h for step 03.
    
Test Execution: 
        01: VP(FrNm.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exists.
        02: VP(FrNm.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME has the value
            FrNm_ConfigLayoutType and FRNM_CONFIG_NAME respectively.
        03: VP (FrNm.EB.PBCFGM107):
            Verify that FRNM_PBCFGM_SUPPORT_ENABLED is set to STD_OFF.
        04: VP(FrNm.EB.PBCFGM108, FrNm.EB.RelocatablePBCfg):
            FRNM_RELOCATABLE_CFG_ENABLE shall be STD_OFF
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrNm_Test_PBcfgM_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_PbcfgM_On_Compile_Test.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      1.)
      Verify that FRNM_RELOCATABLE_CFG_ENABLE is defined
      in the header file FrNm_Cfg.h.
      2.)
      Verify that if PbcfgM support is enabled then FrNm_PBCfg.c shall NOT define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
    
Test Object: None.
Test Precondition: 
        - FRNM_PBCFGM_SUPPORT_ENABLED = STD_ON
    
Test Execution: 
        ------------------------ 1.) ---------------------
        01: VP (FrNm.EB.PbcfgM_General_3,
                FrNm.EB.PBCFGM108,
                FrNm.EB.RelocatablePBCfg):
            Verify that FRNM_RELOCATABLE_CFG_ENABLE is set to STD_ON.
        ------------------------ 2.) ---------------------
        02: Include FrNm_PBcfg.c.
        03: VP(FrNm.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exist.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/build/reqm/common_req/FrNm_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(FrNm.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30001</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_1/source/application/test_config.h</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with only
      one channel and all optional features and APIs disabled.
    - Verify that Rte is generating SchM stubs, Main_Function and
      Exclusive areas required by FrNm module.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmVersionInfoApi" is set to 'false'
      - "FrNmDevErrorDetect" is set to 'false'
      - "FrNmUserDataEnabled" is set to 'false'
      - "FrNmStateChangeIndicationEnabled" is set to 'false'
      - "FrNmHwVoteEnable" is set to 'false'
      - "FrNmComUserDataSupport" is set to 'false'
      - "FrNmDualChannelPduEnable" is set to 'false'
      - "FrNmCycleCounterEmulation" is set to 'false'
      - "FrNmPduRxIndicationEnabled" is set to 'false'
      - "FrNmBusSynchronizationEnabled" is set to 'false'
      - "FrNmMainAcrossFrCycle" is set to 'false'
      - "FrNmRepeatMessageBitActive" is set to 'false'
      - "FrNmPassiveModeEnabled" is set to 'true'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
      - "FrNmSynchronizationpointEnabled" is set to 'false'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'false'
      - "FrNmCoordinatorSyncSupport" is set to 'false'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEnabled" is set to 'false'
      - Only one channel is configured
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - FrNm_NetworkRequest()
      - FrNm_NetworkRelease()
      - FrNm_TriggerTransmit()
      - FrNm_TxConfirmation()
      - FrNm_SetUserData()
      - FrNm_GetUserData()
      - FrNm_GetPduData()
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_RequestBusSynchronization()
      - FrNm_CheckRemoteSleepIndication()
      - FrNm_SetSleepReadyBit()
      - FrNm_GetVersionInfo()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.EB_FrNm_Define</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30010</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_10/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that source code gets compiled for the configuration
      with FrNmPnEraCalcEnabled set to true and FrNmPnEiraCalcEnabled
      set to false.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'true'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'true'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'true'
      - "FrNmPassiveModeEnabled" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'true'
      - "FrNmSynchronizationpointEnabled" is set to 'true'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'true'
      - "FrNmCoordinatorSyncSupport" is set to 'true'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEraCalcEnabled" is set to 'true'
      - "FrNmPnEnabled" is set to 'true'
      - Only one channel is configured
  
Test Execution: None.
Test Input: None.
Test Output: 
    FrNmConf_FrNmRxPdu_FrNmRxPdu_0             0U
    FrNmConf_FrNmRxPdu_FrNmRxPdu_1             1U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_0             0U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_1             1U
    FrNmConf_FrNmChannel_0_FrNmUserDataTxPdu   0U
    FrNmConf_FrNmUserDataRxPdu_0               0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_PnEnabled_FALSE_COMPILE_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_11/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that source code gets compiled for the configuration
      with FrNmPnEraCalcEnabled set to true and FrNmPnEiraCalcEnabled
      set to false.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'true'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'true'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'true'
      - "FrNmPassiveModeEnabled" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'true'
      - "FrNmSynchronizationpointEnabled" is set to 'true'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'true'
      - "FrNmCoordinatorSyncSupport" is set to 'true'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEraCalcEnabled" is set to 'true'
      - "FrNmPnEnabled" is set to 'true'
      - Only one channel is configured
  
Test Execution: None.
Test Input: None.
Test Output: 
    FrNmConf_FrNmRxPdu_FrNmRxPdu_0             0U
    FrNmConf_FrNmRxPdu_FrNmRxPdu_1             1U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_0             0U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_1             1U
    FrNmConf_FrNmChannel_0_FrNmUserDataTxPdu   0U
    FrNmConf_FrNmUserDataRxPdu_0               0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30002</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_2/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that source code gets compiled for the configuration where some of
    the features are enabled and some disabled and only a single channel
    is present.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'false'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'true'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'false'
      - "FrNmPassiveModeEnabled" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
      - "FrNmSynchronizationpointEnabled" is set to 'false'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'false'
      - "FrNmCoordinatorSyncSupport" is set to 'true'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEnabled" is set to 'true'
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not prvovided,
      dummy implementations are provided for the following API functions:
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_CheckRemoteSleepIndication()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM176_Implicit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30003</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_3/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      only one channel and all optional features enabled.
    - Check that symbolic name macros are generated correctly.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'true'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'true'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'true'
      - "FrNmPassiveModeEnabled" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'true'
      - "FrNmSynchronizationpointEnabled" is set to 'true'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'true'
      - "FrNmCoordinatorSyncSupport" is set to 'true'
      - "FrNmPnEiraCalcEnabled" is set to 'true'
      - "FrNmPnEraCalcEnabled" is set to 'true'
      - "FrNmPnEnabled" is set to 'true'
      - Only one channel is configured
  
Test Execution: None.
Test Input: None.
Test Output: 
    FrNmConf_FrNmRxPdu_FrNmRxPdu_0             0U
    FrNmConf_FrNmRxPdu_FrNmRxPdu_1             1U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_0             0U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_1             1U
    FrNmConf_FrNmChannel_0_FrNmUserDataTxPdu   0U
    FrNmConf_FrNmUserDataRxPdu_0               0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30004</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_4/source/application/test_config.h</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with more
      than one channels and all optional features disabled.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to 'true'
      - "FrNmVersionInfoApi" is set to 'false'
      - "FrNmDevErrorDetect" is set to 'false'
      - "FrNmUserDataEnabled" is set to 'false'
      - "FrNmStateChangeIndicationEnabled" is set to 'false'
      - "FrNmHwVoteEnable" is set to 'false'
      - "FrNmComUserDataSupport" is set to 'false'
      - "FrNmDualChannelPduEnable" is set to 'false'
      - "FrNmCycleCounterEmulation" is set to 'false'
      - "FrNmPduRxIndicationEnabled" is set to 'false'
      - "FrNmBusSynchronizationEnabled" is set to 'false'
      - "FrNmMainAcrossFrCycle" is set to 'false'
      - "FrNmRepeatMessageBitActive" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
      - "FrNmSynchronizationpointEnabled" is set to 'false'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'false'
      - "FrNmCoordinatorSyncSupport" is set to 'false'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEnabled" is set to 'false'
      - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - FrNm_NetworkRequest()
      - FrNm_NetworkRelease()
      - FrNm_TriggerTransmit()
      - FrNm_TxConfirmation()
      - FrNm_SetUserData()
      - FrNm_GetUserData()
      - FrNm_GetPduData()
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_RequestBusSynchronization()
      - FrNm_CheckRemoteSleepIndication()
      - FrNm_SetSleepReadyBit()
      - FrNm_GetVersionInfo()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30005</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_5/source/application/test_config.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      some of the features are enabled and some disabled and more than one
      channels are present.
    - Verify the generation of symbolic name macros when
      FRNM_PROVIDE_LEGACY_SYMBOLIC_NAMES is ON.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
     - "FrNmVersionInfoApi" is set to 'true'
     - "FrNmDevErrorDetect" is set to 'false'
     - "FrNmUserDataEnabled" is set to 'true'
     - "FrNmStateChangeIndicationEnabled" is set to 'true'
     - "FrNmHwVoteEnable" is set to 'true'
     - "FrNmComUserDataSupport" is set to 'true'
     - "FrNmDualChannelPduEnable" is set to 'true'
     - "FrNmCycleCounterEmulation" is set to 'true'
     - "FrNmPduRxIndicationEnabled" is set to 'true'
     - "FrNmBusSynchronizationEnabled" is set to 'true'
     - "FrNmMainAcrossFrCycle" is set to 'true'
     - "FrNmRepeatMessageBitActive" is set to 'false'
     - "FrNmPassiveModeEnabled" is set to 'false'
     - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
     - "FrNmSynchronizationpointEnabled" is set to 'false'
     - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
     - "FrNmNodeDetectionEnabled" is set to 'false'
     - "FrNmControlBitVectorEnabled" is set to 'false'
     - "FrNmControlBitVectorActive" is set to 'false'
     - "FrNmCoordinatorSyncSupport" is set to 'true'
     - "FrNmPnEiraCalcEnabled" is set to 'false'
     - "FrNmPnEnabled" is set to 'true'
     - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_CheckRemoteSleepIndication()
  
Test Execution: None.
Test Input: None.
Test Output: 
    FrNmConf_FrNmRxPdu_FrNmRxPdu_0   0U
    FrNmConf_FrNmRxPdu_FrNmRxPdu_1   1U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_0   0U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_1   1U
    FrNmConf_FrNmChannel_0_FrNmUserDataTxPdu   0U
    FrNmConf_FrNmChannel_1_FrNmUserDataTxPdu   1U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30006</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_6/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      more than one channels and all optional features enabled
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'true'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'true'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'true'
      - "FrNmPassiveModeEnabled" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'true'
      - "FrNmSynchronizationpointEnabled" is set to 'true'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'true'
      - "FrNmNodeDetectionEnabled" is set to 'true'
      - "FrNmControlBitVectorEnabled" is set to 'true'
      - "FrNmControlBitVectorActive" is set to 'true'
      - "FrNmCoordinatorSyncSupport" is set to 'true'
      - "FrNmPnEiraCalcEnabled" is set to 'true'
      - "FrNmPnEraCalcEnabled" is set to 'true'
      - "FrNmPnEnabled" is set to 'true'
      - Two channels are configured
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30007</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_7/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      one channel and FrNmDevErrorDetect' is set to 'false' and
      'FrNmComUserDataSupport' is set to 'true'.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
     - "FrNmVersionInfoApi" is set to 'true'
     - "FrNmDevErrorDetect" is set to 'false'
     - "FrNmUserDataEnabled" is set to 'true'
     - "FrNmStateChangeIndicationEnabled" is set to 'true'
     - "FrNmHwVoteEnable" is set to 'true'
     - "FrNmComUserDataSupport" is set to 'true'
     - "FrNmDualChannelPduEnable" is set to 'true'
     - "FrNmCycleCounterEmulation" is set to 'true'
     - "FrNmPduRxIndicationEnabled" is set to 'true'
     - "FrNmBusSynchronizationEnabled" is set to 'true'
     - "FrNmMainAcrossFrCycle" is set to 'true'
     - "FrNmRepeatMessageBitActive" is set to 'false'
     - "FrNmPassiveModeEnabled" is set to 'false'
     - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
     - "FrNmSynchronizationpointEnabled" is set to 'false'
     - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
     - "FrNmNodeDetectionEnabled" is set to 'false'
     - "FrNmControlBitVectorEnabled" is set to 'false'
     - "FrNmControlBitVectorActive" is set to 'false'
     - "FrNmCoordinatorSyncSupport" is set to 'true'
     - "FrNmPnEiraCalcEnabled" is set to 'false'
     - "FrNmPnEnabled" is set to 'true'
     - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_CheckRemoteSleepIndication()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30008</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_8/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      one channel and FrNmDevErrorDetect' is set to 'false' and
      'FrNmComUserDataSupport' is set to 'true'.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
     - "FrNmVersionInfoApi" is set to 'true'
     - "FrNmDevErrorDetect" is set to 'false'
     - "FrNmUserDataEnabled" is set to 'false'
     - "FrNmStateChangeIndicationEnabled" is set to 'true'
     - "FrNmHwVoteEnable" is set to 'true'
     - "FrNmComUserDataSupport" is set to 'true'
     - "FrNmDualChannelPduEnable" is set to 'true'
     - "FrNmCycleCounterEmulation" is set to 'true'
     - "FrNmPduRxIndicationEnabled" is set to 'true'
     - "FrNmBusSynchronizationEnabled" is set to 'true'
     - "FrNmMainAcrossFrCycle" is set to 'true'
     - "FrNmRepeatMessageBitActive" is set to 'false'
     - "FrNmPassiveModeEnabled" is set to 'false'
     - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
     - "FrNmSynchronizationpointEnabled" is set to 'false'
     - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
     - "FrNmNodeDetectionEnabled" is set to 'false'
     - "FrNmControlBitVectorEnabled" is set to 'false'
     - "FrNmControlBitVectorActive" is set to 'false'
     - "FrNmCoordinatorSyncSupport" is set to 'true'
     - "FrNmPnEiraCalcEnabled" is set to 'false'
     - "FrNmPnEnabled" is set to 'true'
     - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_CheckRemoteSleepIndication()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30012</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_9/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      one channel and FrNmDevErrorDetect' is set to 'false' and
      'FrNmComUserDataSupport' is set to 'true'.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
     - "FrNmVersionInfoApi" is set to 'true'
     - "FrNmDevErrorDetect" is set to 'false'
     - "FrNmUserDataEnabled" is set to 'false'
     - "FrNmStateChangeIndicationEnabled" is set to 'true'
     - "FrNmHwVoteEnable" is set to 'true'
     - "FrNmComUserDataSupport" is set to 'true'
     - "FrNmDualChannelPduEnable" is set to 'true'
     - "FrNmCycleCounterEmulation" is set to 'true'
     - "FrNmPduRxIndicationEnabled" is set to 'true'
     - "FrNmBusSynchronizationEnabled" is set to 'true'
     - "FrNmMainAcrossFrCycle" is set to 'true'
     - "FrNmRepeatMessageBitActive" is set to 'false'
     - "FrNmPassiveModeEnabled" is set to 'false'
     - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
     - "FrNmSynchronizationpointEnabled" is set to 'false'
     - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
     - "FrNmNodeDetectionEnabled" is set to 'false'
     - "FrNmControlBitVectorEnabled" is set to 'false'
     - "FrNmControlBitVectorActive" is set to 'false'
     - "FrNmCoordinatorSyncSupport" is set to 'true'
     - "FrNmPnEiraCalcEnabled" is set to 'true'
     - "FrNmPnEnabled" is set to 'true'
     - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the FrNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - FrNm_RepeatMessageRequest()
      - FrNm_GetNodeIdentifier()
      - FrNm_GetLocalNodeIdentifier()
      - FrNm_CheckRemoteSleepIndication()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrNm_ComTest_NoPBCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_NoPbCfg/source/application/ComTest_NoPBcfg.c.m4</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall prove that that the FrNm also compiles without any post build information
  
Test Object: 
    Compile test
  
Test Precondition: 
        * The merged make file holds a rule which removes all post build files after generation
  
Test Execution: 
        The test run is successful when the FrNm compiles under sticking to the precondition.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30011</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_SchmCall_1/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that source code gets compiled for the configuration
      with FrNmMultiCoreSupport on true.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmMultiCoreSupport" is set to 'true'
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'true'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'true'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'true'
      - "FrNmPassiveModeEnabled" is set to 'false'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'true'
      - "FrNmSynchronizationpointEnabled" is set to 'true'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'true'
      - "FrNmCoordinatorSyncSupport" is set to 'true'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEraCalcEnabled" is set to 'true'
      - "FrNmPnEnabled" is set to 'true'
      - Only one channel is configured
  
Test Execution: None.
Test Input: None.
Test Output: 
    FrNmConf_FrNmRxPdu_FrNmRxPdu_0             0U
    FrNmConf_FrNmRxPdu_FrNmRxPdu_1             1U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_0             0U
    FrNmConf_FrNmTxPdu_FrNmTxPdu_1             1U
    FrNmConf_FrNmChannel_0_FrNmUserDataTxPdu   0U
    FrNmConf_FrNmUserDataRxPdu_0               0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_30013</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_ComTest_SchmCall_2/source/application/test_config.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that source code gets compiled for the configuration
      with FrNmMultiCoreSupport on true.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmMultiCoreSupport" is set to 'true'
      - "FrNmVersionInfoApi" is set to 'true'
      - "FrNmDevErrorDetect" is set to 'true'
      - "FrNmUserDataEnabled" is set to 'true'
      - "FrNmStateChangeIndicationEnabled" is set to 'true'
      - "FrNmHwVoteEnable" is set to 'true'
      - "FrNmComUserDataSupport" is set to 'true'
      - "FrNmDualChannelPduEnable" is set to 'true'
      - "FrNmCycleCounterEmulation" is set to 'true'
      - "FrNmPduRxIndicationEnabled" is set to 'true'
      - "FrNmBusSynchronizationEnabled" is set to 'false'
      - "FrNmMainAcrossFrCycle" is set to 'true'
      - "FrNmRepeatMessageBitActive" is set to 'true'
      - "FrNmPassiveModeEnabled" is set to 'true'
      - "FrNmRemoteSleepIndicationEnabled" is set to 'false'
      - "FrNmSynchronizationpointEnabled" is set to 'true'
      - "FrNmSourceNodeIdentifierEnabled" is set to 'false'
      - "FrNmNodeDetectionEnabled" is set to 'false'
      - "FrNmControlBitVectorEnabled" is set to 'false'
      - "FrNmControlBitVectorActive" is set to 'true'
      - "FrNmCoordinatorSyncSupport" is set to 'false'
      - "FrNmPnEiraCalcEnabled" is set to 'false'
      - "FrNmPnEraCalcEnabled" is set to 'true'
      - "FrNmPnEnabled" is set to 'true'
      - Only one channel is configured
  
Test Execution: None.
Test Input: None.
Test Output: 
    FrNmConf_FrNmRxPdu_FrNmRxPdu_0             0U
    FrNmConf_FrNmRxPdu_FrNmRxPdu_1             1U
    FrNmConf_FrNmChannel_0_FrNmUserDataTxPdu   0U
    FrNmConf_FrNmUserDataRxPdu_0               0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM228</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.GetLocalNodeIdentifier.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00261.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00262.FrNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmControlBitVectorEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmSourceNodeIdentifierEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM266.FrNmUserDataEnabled</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0041_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmTxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SymbolicName.FrNmRxUserDataPdu.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10001</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_01_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if the referenced FrIf Cluster Ids are zero-based consecutive.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrIfClstIdx) Check if an error is thrown if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrIfClstIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10002</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_02_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if the routing paths of User Data Tx PDU (FrNmTxUserDataPdu) is configured
    in PduR for all channels.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrNmTxUserDataPdu) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmTxUserDataPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10003</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_03_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Ensure that Rx Pdu length is in range 1-8.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FRNM154.NMDataLength) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FRNM154.NMDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10004</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_04_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if Rx Data Pdu Length for all channels match with the Tx Pdu Data Length!
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.RxTxPduLength) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RxTxPduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10005</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_05_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if 'FrNmSourceNodeIdentifierEnabled' is set to 'true' but length
    of User Data Tx Pdu for particular channel is not equal to Tx Pdu Length - 2!
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrNmSourceNodeIdentifierEnabled_True) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmSourceNodeIdentifierEnabled_True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10006</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_06_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if the lengths of the two Rx Pdus (FrNmRxPdu) in a channel are equal.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrNmRxPduRef) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmRxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10007</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_07_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if partial networking is enabled for a channel, but length of corresponding Rx Pdu
    is less than (FrNmPnInfoLength + FrNmPnInfoOffset).
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrNmPnInfoLength) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnInfoLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10008</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_08_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if 'FrNmSourceNodeIdentifierEnabled' is set to 'false' but length of
    User Data Tx Pdu for the particular channel is not equal to Tx Pdu Length - 1!
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrNmSourceNodeIdentifierEnabled_False) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmSourceNodeIdentifierEnabled_False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10009</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_09_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check if Tx Pdus configured in FrIf (FrIfUserTxUL) are unique.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrIfTxPduRef) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrIfTxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10010</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_10_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
   Check the range of FrNmPnInfoOffset is from 1 to 63.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.ECUC_FrNm_00062) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10011</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_11_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check the range of FrNmPnInfoLength is from 1 to 63.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.ECUC_FrNm_00063) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10012</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_12_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that the length of the ((FrNmPnInfoOffset + FrNmPnInfoLength) -1) should not be greater then 63.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.EB.FrNmPnInfo) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnInfo</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_GEN_10013</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Compile/IN/FrNm_GenTest_13_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that the in case synchronized pnc shut down is enabled for a channel pn enabled shall also be set to true
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(FrNm.ECUC_FrNm_00094) Check if an error is trow if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRNM_DET_ERROR_UNINIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_1/source/application/FrNm_ConTest_1.c</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify DET detection functionality for error FRNM_E_UNINIT.
    [FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022,
     FrNm.EB.FrNm_SetUserData.UninitState]
    Verify the service ID of FrNm_MainFunction_&lt;NmClstIdx&gt; shall
    be 0xf0 + NmClstIdx.[FrNm.ASR403.FRNM344]
    Verify FrNm_Init initialize the FrNm module.[FrNm.SWS_FrNm_00028]
    Note:  All Apis do not return E_OK even if FrNm module is initialised.
           Some APIs return E_NOT_OK. Api FrNm_SetUserData and
           FrNm_RepeatMessageRequest return FRNM_E_INVALID_CHANNEL and E_NOT_OK
           respectively.
  
Test Object: None.
Test Precondition: 
    FrNmDevErrorDetect = true
    FrNm should be in the uninitialized state.
  
Test Execution: 
    01: Clear the DET stubs.
    02: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_PassiveStartUp for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    03: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_PassiveStartUp().
    04: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_NetworkRequest for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    05: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_NetworkRequest().
    06: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_NetworkGwEraRequest for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    07: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_NetworkGwEraRequest().
    08: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_NetworkRelease for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    09: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_NetworkRelease().
    10: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_DisableCommunication for an uninitialized FrNmchannel and
        verify that it returns E_NOT_OK.
    11: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_DisableCommunication().
    12: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_EnableCommunication for an uninitialized FrNmchannel and
        verify that it returns E_OK.
    13: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_EnableCommunication().
    14: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_SetUserData for an uninitialized FrNmchannel and verify that
        it returns E_NOT_OK.
    15: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_SetUserData().
    16: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_GetUserData for an uninitialized FrNmchannel and verify that
        it returns E_NOT_OK.
    17: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_GetUserData().
    18: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_GetNodeIdentifier for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    19: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_GetNodeIdentifier().
    20: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_GetLocalNodeIdentifier for an uninitialized FrNmchannel and
        verify that it returns E_NOT_OK.
    21: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_GetLocalNodeIdentifier().
    22: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_RepeatMessageRequest for an uninitialized FrNmchannel and
        verify that it returns E_NOT_OK.
    23: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_RepeatMessageRequest().
    24: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_GetPduData for an uninitialized FrNmchannel and verify that it
        returns E_NOT_OK.
    25: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_GetPduData().
    26: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_GetState for an uninitialized FrNmchannel and verify that it
        returns E_NOT_OK.
    27: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_GetState().
    28: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_RequestBusSynchronization for an uninitialized FrNmchannel and
        verify that it returns E_NOT_OK.
    29: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_RequestBusSynchronization().
    30: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_CheckRemoteSleepIndication for an uninitialized FrNmchannel
        and verify that it returns E_NOT_OK.
    31: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_CheckRemoteSleepIndication().
    32: Loop through the configured FrNmTxPdus and find the entry for the
        channel in TxPdu mapping table.
    33: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - Call FrNm_TxConfirmation for an uninitialized FrNmchannel and verify
        that the DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_TxConfirmation().
    34: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - Call FrNm_RxIndication for an uninitialized FrNmchannel and verify that
        the DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_RxIndication().
    35: VP (FrNm.ASR403.FRNM344):
         - The service ID of FrNm_MainFunction_&lt;NmClstIdx&gt; is 0xf0 + NmClstIdx.
    36: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - Call FrNm_StartupError for an uninitialized FrNmchannel and verify that
        the DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_StartupError().
    37: Loop through the configured FrNmTxPdus and find the entry for the
        channel in TxPdu mapping table.
    38: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_TriggerTransmit for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    39: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_TriggerTransmit().
    40: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.EB.FrNm_SetUserData.UninitState, FrNm.ASR403.FRNM022):
         - Call FrNm_SetSleepReadyBit for an uninitialized FrNmchannel and verify
        that it returns E_NOT_OK.
    41: VP (FrNm.ASR403.FRNM032, FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id 'FRNM_E_UNINIT' for
        FrNm_SetSleepReadyBit().
    42: Clear DET Error count.
    43: VP (FrNm.SWS_FrNm_00028):
         - Call FrNm_Init and verify that FrNm_Init initialize the FrNm modules.
         - the return value of all APIs is E_OK/E_NOT_OK and DET
        error is not reported.
    44: Check that the DET error is not reported.
  
Test Input: None.
Test Output: 
    The APIs with return values will return E_NOT_OK.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_SetUserData.UninitState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.EmulatedCounter_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.EmulatedCounter_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.EmulatedCounter_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00379</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>TS_FRNM_DET_ERROR_INVALID_CHANNEL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_1/source/application/FrNm_ConTest_1.c</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify DET detection functionality for error FRNM_E_INVALID_CHANNEL /
  FRNM_E_PDU_ID_INVALID.
  [FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00056, FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00051, FrNm.ASR403.FRNM022]

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
    01: Initialize the FrNm Module.
    02: Clear the DET stubs.
    03: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_PassiveStartUp with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    04: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_PassiveStartUp().
    05: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_NetworkRequest with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    06: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_NetworkRequest().
    07: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_NetworkGwEraRequest with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    08: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_NetworkGwEraRequest().
    09: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_NetworkRelease with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    10: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_NetworkRelease().
    11: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_DisableCommunication with an invalid channel handle as
        parameter and verify that it returns E_NOT_OK.
    12: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_DisableCommunication().
    13: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_EnableCommunication with an invalid channel handle as
        parameter and verify that it returns E_NOT_OK.
    14: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_EnableCommunication().
    15: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_SetUserData with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    16: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_SetUserData().
    17: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_SetUserData with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    18: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_SetUserData().
    19: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetUserData with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    20: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_GetUserData().
    21: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetNodeIdentifier with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    22: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_GetNodeIdentifier().
    23: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetLocalNodeIdentifier with an invalid channel handle as
        parameter and verify that it returns E_NOT_OK.
    24: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_GetLocalNodeIdentifier().
    25: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_RepeatMessageRequest with an invalid channel handle as
        parameter and verify that it returns E_NOT_OK.
    26: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_RepeatMessageRequest().
    27: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetPduData with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    28: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_GetPduData().
    29: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetState with an invalid channel handle as parameter
        and verify that it returns E_NOT_OK.
    30: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_GetState().
    31: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_RequestBusSynchronization with an invalid channel handle as
        parameter and verify that it returns E_NOT_OK.
    32: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_RequestBusSynchronization().
    33: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_CheckRemoteSleepIndication with an invalid channel handle as
        parameter and verify that it returns E_NOT_OK.
    34: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_CheckRemoteSleepIndication().
    35: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - Call FrNm_RxIndication with an invalid PduId and verify that the DET
        error is reported with error id 'FRNM_E_PDU_ID_INVALID'.
    36: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - Call FrNm_TxConfirmation with an invalid PduId and Verify that the DET
        error is reported with error id 'FRNM_E_PDU_ID_INVALID'.
    37: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - Call FrNm_StartupError with an invalid Channel Id and Verify that the
        DET error is reported with error id 'FRNM_E_INVALID_CHANNEL'.
    38: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_TriggerTransmit with an invalid Pdu Id and verify that it
        returns E_NOT_OK.
    39: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_PDU_ID_INVALID' for FrNm_TriggerTransmit().
    40: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_SetSleepReadyBit with an invalid channel Id and verify that it
        returns E_NOT_OK.
    41: VP (FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00051):
         - The DET error is reported with error id
        'FRNM_E_INVALID_CHANNEL' for FrNm_SetSleepReadyBit().
Test Input: None.
Test Output: 
  The APIs with return values will return E_NOT_OK.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>TS_FRNM_DET_ERROR_INVALID_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_1/source/application/FrNm_ConTest_1.c</sourcefile>
      <sourceline>768</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify DET detection functionality for error FRNM_E_INVALID_POINTER.
    [FrNm.SWS_FrNm_00021, FrNm.SWS_FrNm_00056, FrNm.SWS_FrNm_00057, FrNm.ASR403.FRNM022]
  
Test Object: None.
Test Precondition: 
    None.
  
Test Execution: 
    01: Initialize the FrNm Module.
    02: Clear the DET stubs.
    03: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_SetUserData with an invalid pointer as parameter and verify
        that it returns E_NOT_OK.
    04: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_SetUserData().
    05: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetUserData with an invalid pointer and verify that it returns
        E_NOT_OK.
    06: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_GetUserData().
    07: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetNodeIdentifier with an invalid pointer and verify that it
        returns E_NOT_OK.
    08: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_GetNodeIdentifier().
    09: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetLocalNodeIdentifier with an invalid pointer and verify that
        it returns E_NOT_OK.
    10: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_GetLocalNodeIdentifier().
    11: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetPduData with an invalid pointer and verify that it returns
        E_NOT_OK.
    12: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_GetPduData().
    13: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_GetState with an invalid pointer and verify that it returns
        E_NOT_OK.
    14: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_GetState().
    15: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_CheckRemoteSleepIndication with an invalid pointer and verify
        that it returns E_NOT_OK.
    16: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_CheckRemoteSleepIndication().
    17: VP (FrNm.SWS_FrNm_00021):
         - Call FrNm_RxIndication with an invalid pointer and Verify that the DET
        error is reported with error id 'FRNM_E_INVALID_POINTER'.
    18: VP (FrNm.SWS_FrNm_00021):
         - Call FrNm_GetVersionInfo with an invalid pointer and Verify that the DET
        error is reported with error id 'FRNM_E_INVALID_POINTER'.
    19: Loop through the configured FrNmTxPdus and find the entry for the
        channel in TxPdu mapping table.
    20: VP (FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
         - Call FrNm_TriggerTransmit with an invalid pointer and verify that it
        returns E_NOT_OK.
    21: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_TriggerTransmit().
    22: VP(FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
           - Call FrNm_TriggerTransmit with an invalid pointer and verify that it
        returns E_NOT_OK.
    23: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_TriggerTransmit().
    24: VP(FrNm.SWS_FrNm_00057, FrNm.SWS_FrNm_00056, FrNm.ASR403.FRNM022):
           - Call FrNm_RxIndication with an invalid pointer
    25: VP (FrNm.SWS_FrNm_00021):
         - The DET error is reported with error id
        'FRNM_E_INVALID_POINTER' for FrNm_RxIndication().
  
Test Input: None.
Test Output: 
    The APIs with return values will return E_NOT_OK.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>TS_FRNM_DET_ERROR_INVALID_FUNCTION_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_1/source/application/FrNm_ConTest_1.c</sourcefile>
      <sourceline>979</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify DET detection functionality for error FRNM_E_INVALID_FUNCTION_ARG.

Test Object: None.
Test Precondition: 
  PduLength Shall configured to 2 if FrNmSourceNodeIdentifierEnabled is
  true else 1.

Test Execution: 
    01: Initialize the FrNm Module.
    02: Clear the DET stubs.
    03: VP (FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData):
         - Call FrNm_SetUserData with an invalid channel handle as parameter and
        verify that it returns E_NOT_OK.
    04: VP (FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData):
         - The DET error is reported with error id
        'FRNM_E_INVALID_FUNCTION_ARG' for FrNm_SetUserData().
    05: VP (FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData):
         - Call FrNm_GetUserData with an invalid channel handle as parameter and
        verify that it returns E_NOT_OK.
    06: VP (FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData):
         - The DET error is reported with error id
        'FRNM_E_INVALID_FUNCTION_ARG' for FrNm_GetUserData().
    07: VP (FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData):
         - The DET error is reported with error id
        'FRNM_E_INVALID_FUNCTION_ARG' for FrNm_RxIndication().

Test Input: None.
Test Output: 
  The APIs with return values will return E_NOT_OK.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.SetGetUserDataNoUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>TS_FrNm_WrongPostBuildRamSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_1/source/application/FrNm_ConTest_1.c</sourcefile>
      <sourceline>1060</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   The test should prove that in case the postbuild time
   size needed by internal RX and TX buffers is greater than
   the precompile alocated,
   the FrNm_Init shall report DET error FRNM_E_INIT_FAILED

Test Object: None.
Test Precondition: 

Test Execution: 
    01: Call FrNm Init
    02: VP(FrNm.EB.PostBuildRamSize_2)
        - Check that FrNm reports DET error FRNM_E_INIT_FAILED

Test Input: None.
Test Output: 
  The APIs with return values will return E_NOT_OK.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PostBuildRamSize_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_ComUserDataSupport_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_10/source/application/FrNm_ConTest_10.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNmUserDataRxPdu is enabled by user AND if
    FrNmComUserDataSupport is true, then FrNm module calls
    PduR_FrNmRxIndication() in the context of FrNm_RxIndication() and
    forwards the FrNm User Data to the PduR (i.e. the FrNm Header is stripped).
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmUserDataEnabled = true
      -- FrNmComUserDataSupport = true
   - Module state:
     -- The module shall be initialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNm Channel, execute steps 02 - 16.
    03: Go to Normal Operation State.
    04: Invoke FrNm_RxIndication with Pdu data.
    05: Invoke FrNm_MainFunction once.
    06: VP (FrNm.EB.ComUserDataSupport.FrNmUserDataRxIndication):
        - PduR_FrNmRxIndication is invoked for the channel for which
          Com user data enabled.
        - PduR_FrNmTriggerTransmit_Stub contains the same data that is sent
          through FrNm_RxIndication.
        - PduR_FrNmRxIndication is not invoked for the channel for which
          Com user data not enabled.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.FrNmUserDataRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>TC_FRNM_TriggerTransmitVoteBitSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_10/source/application/FrNm_ConTest_10.c</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Vote bit transmitted through FrNm_TriggerTransmit is 1
    when FrNm is in normal operation state.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm and stubs.
    02: For each configured FrNm Channel execute Tst_GoToNormalOperationState
        to enter normal operation State.
    03. Invoke FrNm_TriggerTransmit for each configured TxPduId with
        type 'VOTE'.
    04: VP (FrNm.EB_Ref.SWS_FrNm_00123.VotePDU):
        - The vote bit in PduInfo is set to 1.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00123.VotePDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PduR_FrNmTriggerTransmit_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_10/source/application/FrNm_ConTest_10.c</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case PduR_FrNmTriggerTransmit returns E_NOT_OK
    the last data shall be returned by function FRNM_PduR_FrNmTriggerTransmit.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize Stubs and FrNm
    02: Initialize buffer for PduR_FrNmTriggerTransmit
    03: Set PduR_FrNmTriggerTransmit to return E_OK
    04: Call FrNm_TriggerTransmit
    05: VP(FrNm.ASR403.FRNM362)
        - Check that the returned user data is the expected one
    06: Set PduR_FrNmTriggerTransmit to return E_NOT_OK
    07: Call FrNm_TriggerTransmit
    08: VP(FrNm.ASR403.FRNM362)
        - Check that the returned user data is the expected one
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Rx_Indication_Pn_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_10/source/application/FrNm_ConTest_10.c</sourcefile>
      <sourceline>322</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case PnEnabled for a channel is false
    standard RxIndication shall be performed.
    The test verifies that in case repeat message bit is received 
    in the Rx PDU, the FrNm state machine switches to Repeat Message State.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Request the network
    03: Wait until state machine goes to Normal Operation State
    04: Check the current state is Normal Operation State
    05: Perform RxIndication
    06: Wait a repetition cycle
    07: VP(FrNm.SWS_FrNm_00406, FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit)
        - Check the current state is Repeat Message State
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_TestVoteBit_ScheduleVariant2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_11/source/application/FrNm_ConTest_11.c.m4</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  Verify that in case FrNmVoteBitValue is enabled and set to PM_FrNmVoteBitYml and the schedule variant 2 is used, the Vote bit's value will be set to FrNmVoteBitValue in both RepeatMessageState and ReadySleepState states.

Test Object: None.
Test Precondition: 
  FrNmVoteBitValue is enabled and set to PM_FrNmVoteBitYml.
  FrNmPduScheduleVariant is set to FRNM_PDU_SCHEDULE_VARIANT_2.

Test Execution: 
  01: Initialise FrNm.
  02: Request the network
  03: Wait until RepeatMessageState is entered
  04: Check that in RepeatMessageState the FrIf_Transmit is called and 
      Vote Bit is set to FrNmVoteBitValue
  05: Check that the channel is still in the RepeatMessageState
  06: Wait until channel goes into NORMAL_OPERATION_STATE
  07: Release the network
  08: Wait until SENDING_SUBMODE state has been left
  09: Call FrNm_TriggerTransmit and check that the vote bit is still FrNmVoteBitValue

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VoteBitValueScheduleVariant2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>TC_FRNM_TestVoteBit_ScheduleVariant6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_11/source/application/FrNm_ConTest_11.c.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  Verify that in case FrNmVoteBitValue is enabled and set to PM_FrNmVoteBitYml and the schedule variant 6 is used, the Vote bit's value will be set to FrNmVoteBitValue in both RepeatMessageState and ReadySleepState states.

Test Object: None.
Test Precondition: 
  FrNmVoteBitValue is enabled and set to PM_FrNmVoteBitYml.
  FrNmPduScheduleVariant is set to FRNM_PDU_SCHEDULE_VARIANT_6.

Test Execution: 
  01: Initialise FrNm.
  02: Request the network
  03: Wait until RepeatMessageState is entered
  04: Check that in RepeatMessageState the FrIf_Transmit is called and 
      Vote Bit is set to FrNmVoteBitValue
  05: Check that the channel is still in the RepeatMessageState
  06: Wait until channel goes into NORMAL_OPERATION_STATE
  07: Release the network
  08: Wait until SENDING_SUBMODE state has been left
  09: Call FrNm_TriggerTransmit and check that the vote bit is still FrNmVoteBitValue

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.VoteBitValueScheduleVariant6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>TC_FRNM_RxIndication_ScheduleVariant6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_11/source/application/FrNm_ConTest_11.c.m4</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that in case VoteBit is set to zero and RxIndication is received.
  The pdu is considered as a positive vote

Test Object: None.
Test Precondition: 
  FrNmPduScheduleVariant is set to FRNM_PDU_SCHEDULE_VARIANT_6.

Test Execution: 
  01: Initialise FrNm.
  02: Do a passive startup
  03: Wait until state machine goes into Ready Sleep State
  04: Check that timout timer has not elapsed
  05: Wait until Ready Sleep timer almost expires
  06: Check that the current state is still Ready Sleep State
  07: Do an Rx Indication with vote bit set to zero
  08: Wait until Ready Sleep timer almost expires
  09: VP(FrNm.EB.ScheduleVariant6)
      Check that the current state is still Ready Sleep State
  10: Wait a last cycle for Ready Sleep timer to expire
  11: Check that the current state is Buss Sleep Mode

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ScheduleVariant6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_ScheduleVariant1Vote</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_12/source/application/FrNm_ConTest_12.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if "schedule variant 1" is selected and vote bit is set to 1 and even if the 
    EIRA bits are cleared the bus stays in Ready sleep State ().
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmPduScheduleVariant = FRNM_PDU_SCHEDULE_VARIANT_1
      -- AllNmMessagesKeepAwake = TRUE
      -- Repetition Cycle is 16 cycles.
      -- ERA or EIRA calc set to ON
   - Module state:
     -- The module shall be initialized 
  
Test Execution: 
    01: Initialize PduR_FrNmRxIndication_Stub counter.
        Initialize FrNm.
    02: Do a passive startup.
    03: Wait a repetition cycle.
    04: Check state machine reached Repeat Message State.
    05: Wait until state machine reaches Ready Sleep State.
    06: Check state machine reached Ready Sleep State.
    07: Wait for a repetition cycle.
    08: Wait a couple of main functions before calling the RxIndication.
    09: Call Rx Indication.
    10: Call Main function.
    11: Check that PduR_FrNmRxIndication was called (for the setting of the EIRA bits).
    12: Check values for the PduRRx_Buffer (EIRA values).
    13: Wait a cycle before EIRA values reset (TST_FRNM_PN_RESET_TIME).
    14: The PduR_FrNmRxIndication is not called
        between the setting and resetting of EIRA values.
    15: Wait the last cycle on which the EIRA values are set to zero.
    16: Check that PduR_FrNmRxIndication was called (for the resetting of the EIRA bits).
    17: All EIRA bits are zero.
    18: Wait some main function cycles to synchronise with repetition cycle.
    19: Wait some Repetition cycles.
    20: Wait some main functions before calling RxIndication.
    21: Set used EIRA bits to 0.
    22: VP: FrNm.SWS_FrNm_00101, FrNm.EB.FrNmAllNmMessagesKeepAwake 
        Call RxIndication.
        From this point the bus will go to sleep after 
        TstReadySleepCnt repetition cycles.
    23: Wait a main function cycle
    24: Check that PduR_FrNmRxIndication is not called since there is no change in the EIRA
    25: Wait some main function cycles to synchronize with the repetition cycles.
    26: Check that the bus is not asleep yet.
    27: Wait the last main function from the repetition cycle.
    28: Check that the bus reached bus sleep mode.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ScheduleVariant2Vote</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_12/source/application/FrNm_ConTest_12.c</sourcefile>
      <sourceline>230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if "schedule variant 2" is selected and vote bit is set to 0 and even if the 
    EIRA bits are cleared the bus stays in Ready sleep State ().
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmPduScheduleVariant = FRNM_PDU_SCHEDULE_VARIANT_2
      -- AllNmMessagesKeepAwake = TRUE
      -- Repetition Cycle is 16 cycles.
      -- ERA or EIRA calc set to ON
   - Module state:
     -- The module shall be initialized 
  
Test Execution: 
    01: Initialize PduR_FrNmRxIndication_Stub counter.
        Initialize FrNm.
    02: Do a passive startup.
    03: Wait a repetition cycle.
    04: Check state machine reached Repeat Message State.
    05: Wait until state machine reaches Ready Sleep State.
    06: Check state machine reached Ready Sleep State.
    07: Wait for a repetition cycle.
    08: Wait a couple of main functions before calling the RxIndication.
    09: Call Rx Indication.
    10: Call Main function.
    11: Check that PduR_FrNmRxIndication was called (for the setting of the EIRA bits).
    12: Check values for the PduRRx_Buffer (EIRA values).
    13: Wait a cycle before EIRA values reset (TST_FRNM_PN_RESET_TIME).
    14: The PduR_FrNmRxIndication is not called
        between the setting and resetting of EIRA values.
    15: Wait the last cycle on which the EIRA values are set to zero.
    16: Check that PduR_FrNmRxIndication was called (for the resetting of the EIRA bits).
    17: All EIRA bits are zero.
    18: Wait some main function cycles to synchronise with repetition cycle.
    19: Wait some Repetition cycles.
    20: Wait some main functions before calling RxIndication.
    21: Set used EIRA bits to 0.
    22: VP: FrNm.EB.ScheduleVariant2, FrNm.EB.FrNmAllNmMessagesKeepAwake
        Call RxIndication.
        From this point the bus will go to sleep after 
        TstReadySleepCnt repetition cycles.
    23: Wait a main function cycle
    24: Check that PduR_FrNmRxIndication is not called since there is no change in the EIRA
    25: Wait some main function cycles to synchronize with the repetition cycles.
    26: Check that the bus is not asleep yet.
    27: Wait the last main function from the repetition cycle.
    28: Check that the bus reached bus sleep mode.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ScheduleVariant2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ScheduleVariant1Vote_KeepAwakeFalse</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_12/source/application/FrNm_ConTest_12.c</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if "schedule variant 1" is selected and vote bit is set to 1 and if the 
    EIRA bits are cleared the bus goes Ready sleep State regardless of the vote bit().
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmPduScheduleVariant = FRNM_PDU_SCHEDULE_VARIANT_1
      -- AllNmMessagesKeepAwake = FALSE
      -- Repetition Cycle is 16 cycles.
      -- ERA or EIRA calc set to ON
   - Module state:
     -- The module shall be initialized 
  
Test Execution: 
    01: Initialize PduR_FrNmRxIndication_Stub counter.
        Initialize FrNm.
    02: Do a passive startup.
    03: Wait a repetition cycle.
    04: Check state machine reached Repeat Message State.
    05: Wait until state machine reaches Ready Sleep State.
    06: Check state machine reached Ready Sleep State.
    07: Wait for a repetition cycle.
    08: Wait a couple of main functions before calling the RxIndication.
    09: Call Rx Indication.
    10: Call Main function.
    11: Check that PduR_FrNmRxIndication was called (for the setting of the EIRA bits).
    12: Check values for the PduRRx_Buffer (EIRA values).
    13: Wait a cycle before EIRA values reset (TST_FRNM_PN_RESET_TIME).
    14: The PduR_FrNmRxIndication is not called
        between the setting and resetting of EIRA values.
    15: Wait the last cycle on which the EIRA values are set to zero.
    16: Check that PduR_FrNmRxIndication was called (for the resetting of the EIRA bits).
    17: All EIRA bits are zero.
    18: Wait some main function cycles to synchronise with repetition cycle.
    19: Wait some Repetition cycles.
    20: Wait some main functions before calling RxIndication.
    21: Set used EIRA bits to 0.
    22: VP: FrNm.SWS_FrNm_00101, FrNm.EB.FrNmAllNmMessagesKeepAwake
        Call RxIndication.
        From this point the bus will go to sleep after 
        TstReadySleepCnt - 5 repetition cycles.
    23: Wait a main function cycle
    24: Check that PduR_FrNmRxIndication is not called since there is no change in the EIRA
    25: Wait some main function cycles to synchronize with the repetition cycles.
    26: Check that the bus is not asleep yet.
    27: Wait the last main function from the repetition cycle.
    28: Check that the bus reached bus sleep mode.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>TC_FRNM_MAX_EIRA_SIZE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_12/source/application/FrNm_ConTest_12.c</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case the number of partial networks at postbuild time
    is different than at precompile time and PN info is simulated for a partial network
    which did not existed at precompile time PduR_FrNmRxIndication is called
    after PnResetTime.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Prepare modified postbuild data
    02: Initialize module
    03: Simulate Rx data with partial network information
    04: Check that PduR_FrNmRxIndication is called
    05: VP(FrNm.SWS_FrNm_00429) - check that after expiration of PnResetTime
                    PduR_FrNmRxIndication is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRNM_MultipleRxTxPDUs_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_13/source/application/FrNm_ConTest_13.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies that the TxVotePduId is generated correctly.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Do initialization
    02: Request the network
    03: Call main functions until state machine goes into Repeat Message State
    04: Check that state machine is in Repeat Message State
    05: Check that FrIf_Transmit was called the correct number of times for the Vote+Data PDUs
    06: Check that FrIf_Transmit was called with the correct TxPdu vote ids
    07: Check that FrIf_Transmit was called with the correct TxPdu data ids
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRNM_MultipleRxTxPDUs_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_14/source/application/FrNm_ConTest_14.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
     - The correct channel handle is selected based on input RXPDU
     - The correct channel handle is selected based on input TXPDU
     - The correct generation of RxPduMap and TxPduMap
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
   01: Initialise FrNm.
   02: Initialise stub values
   03: For all RX PDUs call FrNm_RxIndication
   04: Check that correct ChannelHandle was selected
   05: For all TX PDUs call FrNm_RxIndication
   06: Check that correct ChannelHandle was selected
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>TS_FRNM_MultipleRxTxPDUs_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_14/source/application/FrNm_ConTest_14.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that the TxVotePduId is generated correctly.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Do initialization
    02: Request the network
    03: Call main functions until state machine goes into Repeat Message State
    04: Check that state machine is in Repeat Message State
    05: Check that FrIf_Transmit was called the correct number of times
    06: Check that FrIf_Transmit was called with the correct TxPdu vote ids
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrNmAllNmMessagesKeepAwake_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_15/source/application/FrNm_ConTest_15.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if "schedule variant 1" is selected and vote bit is set to 1 and if RxIndication is received
    the bus stays awake for Ready Sleep Counter time (because FrNmAllNmMessagesKeepAwake is set to true).
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmPduScheduleVariant = FRNM_PDU_SCHEDULE_VARIANT_1
      -- FrNmPnEnabled is set to true
      -- FrNmAllNmMessagesKeepAwake is true
      -- Repetition Cycle is 16 cycles.
      -- ERA, EIRA calc set to OFF
   - Module state:
     -- The module shall be initialized 
  
Test Execution: 
    01: Initialize FrNm.
    02: Do a passive startup.
    03: Wait a repetition cycle.
    04: Check state machine reached Repeat Message State.
    05: Wait until state machine reaches Ready Sleep State.
    06: Check state machine reached Ready Sleep State.
    07: Wait for a repetition cycle.
    08: Wait a couple of main functions before calling the RxIndication.
    09: Call Rx Indication.
    10: Wait some repetition cycles and also synchronize with the repetition cycle.
    11: Wait some main functions before calling RxIndication.
    12: VP: FrNm.SWS_FrNm_00101 
         Call RxIndication.
         From this point the bus will go to sleep after 
         TstReadySleepCnt repetition cycles.
    13: Wait some main function cycles to synchronize with the repetition cycles.
    14: Check that the bus is not asleep yet.
    15: Wait the last main function from the repetition cycle.
    16: Check that the bus reached bus sleep mode.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>TC_FRNM_FrNmAllNmMessagesKeepAwake_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_15/source/application/FrNm_ConTest_15.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if "schedule variant 2" is selected and vote bit is set to 1 and 
    the bus goes Ready sleep State regardless of the vote bit (because AllNmMessagesKeepAwake is set to FALSE).
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmPduScheduleVariant = FRNM_PDU_SCHEDULE_VARIANT_1
      -- AllNmMessagesKeepAwake = FALSE
      -- Repetition Cycle is 16 cycles.
      -- ERA, EIRA calc set to OFF
   - Module state:
     -- The module shall be initialized 
  
Test Execution: 
    01: Initialize FrNm.
    02: Do a passive startup.
    03: Wait a repetition cycle.
    04: Check state machine reached Repeat Message State.
    05: Wait until state machine reaches Ready Sleep State.
    06: Check state machine reached Ready Sleep State.
    07: Wait for a repetition cycle.
    08: Wait a couple of main functions before calling the RxIndication. 
    09: Call Rx Indication. 
        Rx Indication has no effect since AllNmMessagesKeepAwake is set 
        to false.
    10: Call Main function.
    11: Wait some Repetition cycles and also synchronise with repetition cycle.
    12: Wait some main functions before calling RxIndication.
    13: VP (FrNm.EB.FrNmAllNmMessagesKeepAwake)
        Call Rx Indication. 
        Rx Indication has no effect since AllNmMessagesKeepAwake is set 
        to false.
    14: Wait a main function cycle.
    15: Wait some main function cycles to synchronize with the repetition cycles.
    16: Check that the bus is not asleep yet.
    17: Wait the last main function from the repetition cycle.1
    18: Check that the bus reached bus sleep mode.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrNm_CBV_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_16/source/application/FrNm_ConTest_16.c</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the handling of Pdus from RxIndication's
    point of view is correct.
    The test verifies that the correct Pdu type masks
    are applied depending on Pdu type (VOTE, DATA, MIXED)
    Receive is verified by calling FrNm_GetPduData.
    The test is done for schedule variants:
     - SCHEDULE_VARIANT_1,
     - SCHEDULE_VARIANT_2,
     - SCHEDULE_VARIANT_4,
     - SCHEDULE_VARIANT_6,
     - SCHEDULE_VARIANT_7
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - FrNmPduScheduleVariant Channel_0 = FRNM_PDU_SCHEDULE_VARIANT_1
      - FrNmPduScheduleVariant Channel_1 = FRNM_PDU_SCHEDULE_VARIANT_2
      - FrNmPduScheduleVariant Channel_2 = FRNM_PDU_SCHEDULE_VARIANT_4
      - FrNmPduScheduleVariant Channel_3 = FRNM_PDU_SCHEDULE_VARIANT_6
      - FrNmPduScheduleVariant Channel_4 = FRNM_PDU_SCHEDULE_VARIANT_7
  
Test Execution: 
    01: Init FrNm.
    02: Set all Rx buffers to zero.
    03: VP(FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2)
        - Test Rx handling of Pdus for: SCHEDULE_VARIANT_1 and SCHEDULE_VARIANT_2.
    04: VP(FrNm.EB_Ref.ECUC_FrNm_00022.SchV4, FrNm.EB_Ref.ECUC_FrNm_00022.SchV6)
        - Test Rx handling of Pdus for: SCHEDULE_VARIANT_4 and SCHEDULE_VARIANT_6.
    05: VP(FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
        - Test Rx handling of Pdus for: SCHEDULE_VARIANT_7.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>TC_FRNM_FrNm_CBV_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_16/source/application/FrNm_ConTest_16.c</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that CBV bits and Vote Bit can be set and cleared
    for different schedule variants.
    The verifying is done on the Tx for Vote, Data and Mixed Pdus.
    Transmit is verified by checking the output of
    functions: FrIf_Transmit and FrNm_TriggerTransmit.
    The test is done for schedule variants:
     - SCHEDULE_VARIANT_1,
     - SCHEDULE_VARIANT_2,
     - SCHEDULE_VARIANT_4,
     - SCHEDULE_VARIANT_6,
     - SCHEDULE_VARIANT_7
    The test checks if:
    - VoteBit can be set and unset.
    - PnInfoBit can be set.
    - ActiveWakeupBit can be set and unset.
    - SleepReadyBit can be set and unset.
    - RepeatMessageBit can be set and unset.
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - FrNmPduScheduleVariant Channel_0 = FRNM_PDU_SCHEDULE_VARIANT_1
      - FrNmPduScheduleVariant Channel_1 = FRNM_PDU_SCHEDULE_VARIANT_2
      - FrNmPduScheduleVariant Channel_2 = FRNM_PDU_SCHEDULE_VARIANT_4
      - FrNmPduScheduleVariant Channel_3 = FRNM_PDU_SCHEDULE_VARIANT_6
      - FrNmPduScheduleVariant Channel_4 = FRNM_PDU_SCHEDULE_VARIANT_7
      - DataCycle = VoteCycle = RepetitionCycle
      - FrNmControlBitVectorActive = true (for each channel)
      - FrNmActiveWakeupBitEnabled = true (for each channel)
      - FrNmCoordinatorSyncSupport = true
      - FrNmPnEnabled = true (for each channel)
      - FrNmRepeatMessageBitActive = true (for each channel)
  
Test Execution: 
     01: Initialize FrNm
     02: Assign the FrIf_Transmit stub
     03: Verify that DataCycle = RepetitionCycle = VoteCycle
     ------------------------- 1 -------------------------
     04: Part 1: Verifies if - Vote bit can be set and unset
                             - Active Wakeup bit can be set
     05: Check that the State machine is in Bus Sleep Mode
     06: Request the network
     07: Wait a repetition cycle
     08: Check that the State machine is in Repeat Message State
     09: Wait the Repeat Message Time
     10: Check that the State machine is in Normal Operation State
     11: Wait a repetition cycle
     12: Check that the FrIf_Transmit is called the correct number of times
     13: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that the Vote, PnInfo, ActiveWakeup
           bits are set only in relevant pdus (via FrIf_Transmit)
     14: Wait a repetition cycle
     15: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that the Vote, PnInfo, ActiveWakeup
            bits are set only in relevant pdus (call FrNm_TriggerTransmit)
     16: Release The network
     17: Check that the current state is Ready Sleep State
     18: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that the PnInfo, ActiveWakeup
           bits are set and Vote Bit is cleared only in relevant pdus
           (call FrNm_TriggerTransmit)
     19: Wait until module goes to Bus Sleep Mode
     ------------------------- 2 -------------------------
     20: Part 2: Verifies if Active Wakeup bit can be unset
     21: Check that the State machine is in Bus Sleep Mode
     22: Do a passive wakeup
     23: Wait a repetition cycle
     24: Check that the State machine is in Bus Sleep Mode
     25: Wait a repetition cycle
     26: Check that the FrIf_Transmit is called the correct number of times
     27: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Active Wakeup bit is cleared (via FrIf_Transmit)
     28: Wait a repetition cycle
     29: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that ActiveWakeup bit is cleared (call FrNm_TriggerTransmit)
     30: Wait until state machine goes to Ready Sleep State
     31: Check that the State machine is in Ready Sleep State
     32: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that ActiveWakeup bit is cleared
           (call FrNm_TriggerTransmit)
     33: Wait until state machine goes into Bus Sleep Mode
     ------------------------- 3 -------------------------
     34: Part 3: Verifies if Sleep Ready bit can be set and unset
     35: Check that the State machine is in Bus Sleep Mode
     36: Request the network
     37: Wait a repetition cycle
     38: Check that the State machine is in Repeat Message State
     39: Wait the Repeat Message Time
     40: Check that the State machine is in Normal Operation State
     41: Call FrNm_SetSleepReadyBit with TRUE
     42: Wait a repetition cycle
     43: Check that the FrIf_Transmit is called the correct number of times
     44: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Sleep Ready bit is set only in relevant pdus (via FrIf_Transmit)
     45: Wait a repetition cycle
     46: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Sleep Ready bit is set only in relevant pdus
           (call FrNm_TriggerTransmit)
     47: Call FrNm_SetSleepReadyBit with TRUE
     48: Wait a repetition cycle
     49: Check that the FrIf_Transmit is called the correct number of times
     50: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Ready Sleep bit is cleared (via FrIf_Transmit)
     51: Wait a repetition cycle
     52: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Ready Sleep bit is cleared (call FrNm_TriggerTransmit)
     53: Release the network
     54: Wait a repetition cycle
     55: Check that the State machine is in Ready Sleep Mode
     56: Wait until bus goes into Bus Sleep mode
     ------------------------- 4 -------------------------
     57: Part 4: Verifies if Repeat Message bit can be set and unset
     58: Check that the State machine is in Bus Sleep Mode
     59: Request the network
     60: Wait a repetition cycle
     61: Check that the State machine is in Repeat Message State
     62: Wait the Repeat Message time
     63: Check that the State machine is in Normal Operation State
     64: Call FrNm_RepeatMessageRequest
     65: Wait a repetition cycle
     66: Check that the State machine is in Repeat Message State
     67: Wait a repetition cycle
     68: Check that the FrIf_Transmit is called the correct number of times
     69: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Repeat Message bit is set (via FrIf_Transmit)
     70: Wait a repetition cycle
     71: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Repeat Message bit is set (call FrNm_TriggerTransmit)
     72: Wait the Repeat Message Time
     73: Check that the State machine is in Normal Operation State
     74: Wait a repetition cycle
     75: Check that the FrIf_Transmit is called the correct number of times
     76: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Repeat Message bit is cleared (via FrIf_Transmit)
     77: Wait a repetition cycle
     78: VP (FrNm.EB_Ref.ECUC_FrNm_00022.SchV1, FrNm.EB_Ref.ECUC_FrNm_00022.SchV2, FrNm.EB_Ref.ECUC_FrNm_00022.SchV4,
             FrNm.EB_Ref.ECUC_FrNm_00022.SchV6, FrNm.EB_Ref.ECUC_FrNm_00022.SchV7)
         - check that Repeat Message bit is cleared (call FrNm_TriggerTransmit)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.ECUC_FrNm_00022.SchV7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_SetSleepReadyBit_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_17/source/application/FrNm_ConTest_17.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  Verify that, the NMcoordinatorSleepReady bit in the Control Bit Vector cannot be
  set/cleared when FrNm_SetSleepReadyBit() is called and FrNmControlBitVectorActive == FALSE.

Test Object: None.
Test Precondition: 
  FrNmCoordinatorSyncSupport == true.
  FrNmControlBitVectorActive == false for channel 1.

Test Execution: 
  01: Invoke FrNm_Init.
  02: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
  03: Invoke FrNm_SetSleepReadyBit and check if it returns E_NOT_OK.
  04: Invoke Main Function in a loop till time equivalent of Voting cycle expires.
  05: Check FrIf_Transmit is invoked.
  06: VP (FrNm.SWS_FrNm_00398, FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit, FrNm.SWS_FrNm_91001):
        NMcoordinatorSleepReady is not set in CBV.
  07: Invoke FrNm_SetSleepReadyBit and check if it returns E_NOT_OK.
  08: Invoke Main Function in a loop till time equivalent of Voting cycle expires.
  09: Check FrIf_Transmit is invoked.
  10: VP (FrNm.EB.NMcoordinatorSleepReadyBitAvailability, FrNm.SWS_FrNm_00398, FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit, FrNm.SWS_FrNm_91001):
        NMcoordinatorSleepReady is not set in CBV.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.NMcoordinatorSleepReadyBitAvailability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00398</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_17/source/application/FrNm_ConTest_17.c</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm do not set the ActiveWakeupBit in the CBV if a state change
    occurs from state Synchronize to state NetworkMode and if the CBV is remains cleared
    when the state machine transit from Network Mode to Synchronize Mode.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmControlBitVectorActive == false for channel 1.
  
Test Execution: 
    01: Initialize FrNm.
    02: Invoke Network Request.
    03: Invoke Main Function once to process FrNm_NetworkRequest.
    04: Check if Synchronize Mode is entered.
    05: Invoke Main Function in a loop till time equivalent of Repetition Cycle
        expires.
    06: Check if Repeat Message is entered.
    07: Check FrIf_Transmit is invoked and
        VP (FrNm.ASR403.FRNM3829):
         - ActiveWakeUp bit in CBV is not set.
         - The CRI is not set.
    08: Invoke MainFunction with RptMsgStayTime and
        if Normal Operation state is reached.
    09: Call FrNm_StartupError and MainFunction to process the call
    10: Call main function once and check that the current state is NM_STATE_SYNCHRONIZE
    11: Clear the FrIf_Transmit stub and call main function TstRepetitionCycle times
    12: VP(FrNm.ASR403.FRNM3829): Check if the CBV remained cleared
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM3829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>TC_FRNM_StateChangeNotification</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_17/source/application/FrNm_ConTest_17.c</sourcefile>
      <sourceline>270</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify when Repeat Message state is entered from Synchronize state due to an active
    request, correct state change notification is sent on the bus on the first message.
    The test also verifies that the first message is sent on the bus after Network State
    Change notification is called.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
  
Test Execution: 
    01: Initialize FrNm.
    02: Invoke Network Request.
    03: Invoke Main Function once to process FrNm_NetworkRequest.
    04: Check if Synchronize Mode is entered.
    05: Invoke Main Function in a loop till time equivalent of Repetition Cycle expires.
    06: Check if Repeat Message is entered.
    07: Check FrIf_Transmit is invoked.
    08: VP(FrNm.EB.StateChangeNotification): Check if NMS Data is sent correctly on the bus,
        on the first message.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_NormalOperation_shortErr</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FlexRay NM is in Normal Operation State and receives
    E_NOT_OK for the invocation of FrIf_GetGlobalTime(shortErr), then it transits to
    Synchronize Mode.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState() to enter Normal Operation State State.
    04: Set the return value FrIf_GetGlobalTime_Stub to E_NOT_OK.
    05: Invoke FrNm_MainFunction() until RepetitionCycle expires.
    06: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked.
    07: VP (SWS_FrNm_00342):
         - Invoke FrNm_GetState().
         - Current state is NM_STATE_SYNCHRONIZE
         - Current Mode is NM_MODE_SYNCHRONIZE.
    08: Reset FrIf_GetGlobalTime return value to E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Synchronized_longErr</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that when FlexRay NM channel is in Synchronize state due to
    FrNm_NetworkRequest(), and if FrNm_StartupError() is called, then FlexRay
    NM remains in Synchronize state. (SWS_FrNm_00340)
    If the network is released in Synchronize State verify if a transition
    to Bus Sleep Mode occur.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - FrNmPassiveModeEnabled is set to 'false'
  
Test Execution: 
    01: Initialize FrNm and stubs
    02: For each configured FrNm Channel, execute steps 03-09
    03: Ensure the current state and mode of FrNm is "Bus-Sleep"
    04: Invoke FrNm_NetworkRequest().
    05: Invoke FrNm_MainFunction() once.
    06: VP (FrNm.SWS_FrNm_00316):
        * FrNm switches to state "NM_STATE_SYNCHRONIZE" and mode
          "NM_MODE_SYNCHRONIZE".
    07: Invoke FrNm_StartupError().
    08: Invoke FrNm_MainFunction() once.
    09: VP (SWS_FrNm_00340):
        * Current State of FrNm remains in NM_STATE_SYNCHRONIZE.
        * Current mode of FrNm remains in NM_MODE_SYNCHRONIZE.
    10: Call FrNm_NetworkRelease() and main function once.
    11: Call FrNm_StartupError() and main function once.
    12: VP(SWS_FrNm_00376):
        * Call FrNm_GetState().
        * Check if the current state is NM_STATE_BUS_SLEEP.
        * Check if the current mode is NM_MODE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00376</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00393</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Synchronized_longErr_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that when FlexRay NM channel is in Synchronize state due to
    FrNm_NetworkGwEraRequest(), and if FrNm_StartupError() is called, then 
    FlexRay NM remains in Synchronize state. (SWS_FrNm_00340)
    If the network is released in Synchronize State verify if a transition
    to Bus Sleep Mode occur.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - FrNmPassiveModeEnabled is set to 'false'
  
Test Execution: 
    01: Initialize FrNm and stubs
    02: For each configured FrNm Channel, execute steps 03-09
    03: Ensure the current state and mode of FrNm is "Bus-Sleep"
    04: Invoke FrNm_NetworkGwEraRequest().
    05: Invoke FrNm_MainFunction() once.
    06: VP (FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode):
        * FrNm switches to state "NM_STATE_SYNCHRONIZE" and mode
          "NM_MODE_SYNCHRONIZE".
    07: Invoke FrNm_StartupError().
    08: Invoke FrNm_MainFunction() once.
    09: VP (SWS_FrNm_00340):
        * Current State of FrNm remains in NM_STATE_SYNCHRONIZE.
        * Current mode of FrNm remains in NM_MODE_SYNCHRONIZE.
    10: Call FrNm_NetworkRelease() and main function once.
    11: Call FrNm_StartupError() and main function once.
    12: VP(SWS_FrNm_00376):
        * Call FrNm_GetState().
        * Check if the current state is NM_STATE_BUS_SLEEP.
        * Check if the current mode is NM_MODE_BUS_SLEEP.
  
Test Input: 
    FrNm_NetworkGwEraRequest call
    FrNm_StartupError call during synchronize state
    FrNm_NetworkRelease call
  
Test Output: 
    Nm state/mode is set as specified in verification points
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00376</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ReadySleep_shortErr</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FlexRay NM is in Ready sleep state and FlexRay NM receives
    E_NOT_OK for the invocation of FrIf_GetGlobalTime(shortErr), then it stays in
    m4_ifelse(PM_FrNmCycleCounterEmulation,true,\-:m4_dnl
    Ready Sleep State when the configuration parameter FRNM_CYCLE_COUNTER_EMULATION is set
    to TRUE and the network is requested.
    :-/,m4_ifelse( :else: )\-:m4_dnl
    Ready Sleep State when the configuration parameter FRNM_CYCLE_COUNTER_EMULATION is set
    to FALSE and the network is not requested.
    :-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Object: None.
Test Precondition: 
    m4_ifelse(PM_FrNmCycleCounterEmulation,false,\-:m4_dnl
    FrNmCycleCounterEmulation == false
    :-/,m4_ifelse( :else: )\-:m4_dnl
    FrNmCycleCounterEmulation == true
    :-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Set the return value FrIf_GetGlobalTime_Stub to E_NOT_OK.
    05: Invoke FrNm_MainFunction().
    m4_ifelse(PM_FrNmCycleCounterEmulation,true,\-:m4_dnl
    06: VP (SWS_FrNm_00378):
        - Invoke FrNm_GetState.
        - Current state is NM_STATE_READY_SLEEP.
        - Current mode is NM_MODE_NETWORK.
    07: VP (SWS_FrNm_00379):
        Call main function ReadySleepCnt * RepetitionCycle times and check that
        the transition to Bus Sleep occur.
    08: Reset FrIf_GetGlobalTime return value to E_OK.
    :-/,m4_ifelse( :else: )\-:m4_dnl
    06: While network is released check:
        - Invoke FrNm_GetState.
        - Current state is NM_STATE_READY_SLEEP.
        - Current mode is NM_MODE_NETWORK.
    07: Call FrNm_NetworkRequest() and main function once.
    08: VP (SWS_FrNm_00444): While network is requested check:
        - Invoke FrNm_GetState.
        - Current state is NM_STATE_SYNCHRONIZE.
        - Current mode is NM_MODE_SYNCHRONIZE.
    09: Reset FrIf_GetGlobalTime return value to E_OK.
    :-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00378</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00379</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ReadySleep_longErr</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>480</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FlexRay NM is in Ready Sleep State and FlexRay NM receives
    the indication FrNm_StartupError(longErr), then FlexRay NM transits to
    m4_ifelse(PM_FrNmCycleCounterEmulation,true,\-:m4_dnl
    Ready Sleep State when the configuration parameter FRNM_CYCLE_COUNTER_EMULATION is set
    to TRUE and the network is requested.
    :-/,m4_ifelse( :else: )\-:m4_dnl
    Bus Sleep State when the configuration parameter FRNM_CYCLE_COUNTER_EMULATION is set
    to FALSE and the network is not requested.
    :-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Object: None.
Test Precondition: 
    m4_ifelse(PM_FrNmCycleCounterEmulation,false,\-:m4_dnl
    FrNmCycleCounterEmulation == false
    :-/,m4_ifelse( :else: )\-:m4_dnl
    FrNmCycleCounterEmulation == true
    :-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_StartupError().
    05: Invoke FrNm_MainFunction().
    m4_ifelse(PM_FrNmCycleCounterEmulation,true,\-:m4_dnl
    06: VP (SWS_FrNm_00378):
        - Invoke FrNm_GetState.
        - Current state is NM_STATE_READY_SLEEP.
        - Current mode is NM_MODE_NETWORK.
    :-/,m4_ifelse( :else: )\-:m4_dnl
    06: VP (SWS_FrNm_00338):
        - Invoke FrNm_GetState.
        - Current state is NM_STATE_BUS_SLEEP.
        - Current mode is NM_MODE_BUS_SLEEP.
    :-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00378</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>TC_FRNM_RepeatMessage_shortErr</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FlexRay NM is in Repeat Message State and receives
    E_NOT_OK for the invocation of FrIf_GetGlobalTime(shortErr), then it transits to
    Synchronize Mode.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToRepeatMessageState() to enter Repeat Message State State.
    04: Set the return value FrIf_GetGlobalTime_Stub to E_NOT_OK.
    05: Invoke FrNm_MainFunction() until RepetitionCycle expires.
    06: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked.
    07: VP (SWS_FrNm_00384):
         - Invoke FrNm_GetState().
         - Current state is NM_STATE_SYNCHRONIZE
         - Current Mode is NM_MODE_SYNCHRONIZE.
    08: Reset FrIf_GetGlobalTime return value to E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>TC_FRNM_StartupSynchLoss</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>665</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FrIf_GetGlobalTime returns E_NOT_OK and
    a active or passive startup is performed the state machine does not enter
    Network Mode.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Set FrIf_GetGlobalTime return value to E_NOT_OK
    04: Do a PassiveWakeup/ActiveStartup
    05: Call Mainfunction for at least one repetition time
    06: VP(FrNm.EB.SynchLoss)
        Check that FrNm is still in Synchronize state
    07: Release the network if it was requested
    08: Call Startup Error
    09: Call Main Function once
    10: Check that the current state is BusSleepMode
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SynchLoss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>TC_FRNM_StartupSynchLoss_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_18/source/application/FrNm_ConTest_18.c.m4</sourcefile>
      <sourceline>765</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FrIf_GetGlobalTime returns E_NOT_OK and wake up occured
    due to FrNm_NetworkGwEraRequest() the state machine does not enter Network
    Mode.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Set FrIf_GetGlobalTime return value to E_NOT_OK
    04: Invoke FrNm_NetworkGwEraRequest()
    05: Call Mainfunction for at least one repetition time
    06: VP(FrNm.EB.SynchLoss)
        Check that FrNm is still in Synchronize state
    07: Release the network if it was requested
    08: Call Startup Error
    09: Call Main Function once
    10: Check that the current state is BusSleepMode
  
Test Input: 
    FrNm_NetworkGwEraRequest call
    FrIf_GetGlobalTime returns E_NOT_OK
  
Test Output: 
    Nm state/mode is set as specified in verification points
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SynchLoss</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_DET_OFF_NotValidCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_19/source/application/FrNm_ConTest_19.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  
Test Object: None.
Test Precondition: 
   * FRNM_DEV_ERROR_DETECT should be FALSE.
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: Call FrNm_MainFunction.
    03: VP (FrNm.EB.FrNmInt.InitStatus, FrNm.SWS_FrNm_00236, FrNm.SWS_FrNm_00248):
        - Check after FrNm_Init if initialization is not done and if current state of module 
    is NM_STATE_UNINIT.
    04: VP (FrNm.EB.ComM_Init.NULL_PTR):
        - Check if current state is NM_STATE_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Implicit.Uninit.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmInt.InitStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ComM_Init.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>TS_FrNm_DET_OFF_ValidCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_19/source/application/FrNm_ConTest_19.c</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  
Test Object: None.
Test Precondition: 
   * FRNM_DEV_ERROR_DETECT should be FALSE.
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: Call FrNm_MainFunction.
    03: VP (FrNm.EB.FrNmInt.InitStatus, FrNm.SWS_FrNm_00028, FrNm.SWS_FrNm_00236, FrNm.SWS_FrNm_00248):
        - Check after FrNm_Init if initialization is done and current state of module is 
    NM_STATE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.Implicit.Uninit.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmInt.InitStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>TS_FrNm_RepeatMessageRequestInternal</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_19/source/application/FrNm_ConTest_19.c</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   The test should prove that in case FrNm_RepeatMessageRequest is called
   and FrNmRepeatMessageBitActive is set to false
   the state machine switches to Repeat Message State, but in the sent
   PDU the Repeat Message Bit is not set.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Request the network
    03: Wait until state machine switches to Normal Operation State
    04: Check the current state is Normal Operation State
    05: Call FrNm_RepeatMessageRequest
    06: Wait until state machine goes to Repeat Message State
    07: Check the current state is Repeat Message State
    08: Wait until the first message is sent on the buss
    09: Check the current state is Repeat Message State
    10: Check that in the sent message the repeat message bit is not set
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>TS_FrNm_EnableDisableCommunication_ReadySleep</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_19/source/application/FrNm_ConTest_19.c</sourcefile>
      <sourceline>273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   The test should prove that in case Disable/Enable Communication
   is called in Ready Sleep State when going back to 
   Normal Operation State the effect is still visible.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Do a passive startup
    03: Wait until state machine goes to Ready Sleep State
    04: Check the current state is Ready Sleep State
    05: Disable Communication
    06: Request the network
    07: Wait until state machine goes to Normal Operation State
    08: Check the current state is Normal Operation State
    09: Call mainfunction for 128 times
    10: VP(FrNm.SWS_FrNm_00390)
        - Check no messages have been sent on the buss
    11: Release the network
    12: Wait until state machine goes to Ready Sleep State
    13: Check the current state is Ready Sleep State
    14: Enable communication
    15: Request the network
    16: Wait until state machine goes to Normal Operation State
    17: Check that the current state is normal operation state
    18: Call mainfunction for 128 times
    19: VP(FrNm.SWS_FrNm_00387)
        - Check messages hace been sent on the buss
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00387</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>TS_FrNm_EnableDisableCommunication_RepeatMessageState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_19/source/application/FrNm_ConTest_19.c</sourcefile>
      <sourceline>439</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   The test should prove that in case Disable/Enable Communication
   is called in Repeat Message State when going to  
   Normal Operation State the effect is still visible.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Request the network
    03: Wait until state machine goes to Repeat Message State
    04: Check that the current state is Repeat Message State
    05: Call Disable Communication
    06: Wait until state machine goes to Normal operation state
    07: Check the current state is Normal Operation State
    08: Wait 128 time mainfunction
    09: VP(FrNm.SWS_FrNm_00390)
        - Check no messages are sent on the buss 
    10: Call FrNm_RepeatMessageRequest
    11: Wait until state machine goes to Repeat Message State
    12: Check the current state is Repeat Message State
    13: Enable Communication
    14: Wait until state machine goes to Normal Operation State
    15: Check the current state is Normal Operation State
    16: Call mainfunction for 128 times
    17: VP(FrNm.SWS_FrNm_00387)
        - Check messages are sent on the buss
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00387</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_No_init</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   The test should prove that in case FRNM is not initialized
   function FrNm_GetState will return E_NOT_OK.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke FrNm_GetState and check that it returns E_NOT_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0108</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    1. Verify that when the Ready Sleep Counter expires in Ready Sleep State,
       Bus-Sleep Mode is entered.
    2. Verify that when Bus-Sleep Mode is entered from Ready Sleep State,
       FrNm notifies Generic Network Management Interface by calling
       Nm_StateChangeNotification.
    3. Verify that Nm_StateChangeNotification is not invoked when
       Bus-Sleep Mode is entered initially by means of FrNm_Init.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmStateChangeIndicationEnabled = true
  
Test Execution: 
    01: Initialise FrNm.
    02: For each configured FrNm Channel do the following:
    03: Invoke FrNm_GetState.
    04: VP (FrNm.SWS_FrNm_00134):
         - Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
         - Nm_StateChangeNotification is not invoked to Nm
    05: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    06: VP (SWS_FrNm_00101):
         - Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        (FrNmRepetitionCycle * FrNmReadySleepCnt) expires
    07: Invoke FrNm_GetState.
    08: VP (FrNm.ASR403.FRNM133):
         - Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
    09: VP (FrNm.SWS_FrNm_00134, FrNm.SWS_FrNm_00191):
         - Nm_StateChangeNotification(nmPreviousState = NM_STATE_READY_SLEEP,
        nmCurrentState = NM_STATE_BUS_SLEEP) is invoked
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0113</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module notifies all its state changes to the
    Generic NM Interface module by calling Nm_StateChangeNotification for state
    change from NM_STATE_REPEAT_MESSAGE to NM_STATE_NORMAL_OPERATION.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmStateChangeIndicationEnabled = true
  
Test Execution: 
    01: Initialise FrNm.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToRepeatMessageState to enter
        Repeat Message State.
    04: Call MainFuntion continuously till the RepeatMsgStayTime expires to
        enter Normal Operation State.
    05: VP (FrNm.SWS_FrNm_00191, FrNm.SWS_FrNm_00192):
         - Nm_StateChangeNotification(nmPreviousState = NM_STATE_REPEAT_MESSAGE,
        nmCurrentState = NM_STATE_NORMAL_OPERATION) is invoked
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0115</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module notifies all its state changes to the
    Generic NM Interface module by calling Nm_StateChangeNotification for state
    change from NM_STATE_NORMAL_OPERATION to NM_STATE_READY_SLEEP.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmStateChangeIndicationEnabled = true
  
Test Execution: 
    01: Initialise FrNm.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Invoke FrNm_NetworkRelease
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle expires.
    06: Invoke FrNm_GetState.
    07: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK.
    08: VP (FrNm.SWS_FrNm_00192):
         - Nm_StateChangeNotification(nmPreviousState = NM_STATE_NORMAL_OPERATION,
        nmCurrentState = NM_STATE_READY_SLEEP) is invoked
  
Test Input: 
  
Test Output: 
    State change Notification occurred for for state change from
    NM_STATE_NORMAL_OPERATION to NM_STATE_READY_SLEEP according to the
    verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0112</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module notifies all its state changes to the
    Generic NM Interface module by calling Nm_StateChangeNotification for state
    change from NM_STATE_READY_SLEEP to NM_STATE_NORMAL_OPERATION.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmStateChangeIndicationEnabled = true
  
Test Execution: 
    01: Initialise FrNm.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_NetworkRequest.
    05: Verify that FrNm_NetworkRequest returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle expires
    07: Invoke FrNm_GetState.
    08: Verify that the current state is NM_STATE_NORMAL_OPERATION and
        Current mode is NM_MODE_NETWORK.
    09: VP (FrNm.SWS_FrNm_00192):
         - Nm_StateChangeNotification(nmPreviousState = NM_STATE_READY_SLEEP,
        nmCurrentState = NM_STATE_NORMAL_OPERATION) is invoked
  
Test Input: 
  
Test Output: 
    State change Notification occurred for for state change from
    NM_STATE_READY_SLEEP to NM_STATE_NORMAL_OPERATION according to the
    verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0110</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that FrNm module notifies all its state changes to the Generic NM
  Interface module by calling Nm_StateChangeNotification for state change
  from NM_STATE_READY_SLEEP to NM_STATE_REPEAT_MESSAGE.

Test Object: None.
Test Precondition: 
  FrNmNodeDetectionEnabled == true
  FrNmMainAcrossFrCycle == false
  FrNmStateChangeIndicationEnabled = true
  FrNmRepeatMessageTime &gt; 0

Test Execution: 
  01: Initialise FrNm.
  02: For each configured FrNm Channel do the following:
  03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
  04: Invoke FrNm_RepeatMessageRequest.
  05: Verify FrNm_RepeatMessageRequest returns E_OK.
  06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
      FrNmRepetitionCycle expires
  07: Invoke FrNm_GetState.
  08: Verify that current state is NM_STATE_REPEAT_MESSAGE and
      Current mode is NM_MODE_NETWORK.
  09: VP (FrNm.SWS_FrNm_00192):
       - Nm_StateChangeNotification(nmPreviousState = NM_STATE_READY_SLEEP,
      nmCurrentState = NM_STATE_REPEAT_MESSAGE) is invoked

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0114</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that FrNm module notifies all its state changes to the
  Generic NM Interface module by calling Nm_StateChangeNotification for state
  change from NM_STATE_REPEAT_MESSAGE to NM_STATE_READY_SLEEP.

Test Object: None.
Test Precondition: 
  FrNmPassiveModeEnabled == false
  FrNmMainAcrossFrCycle == false
  FrNmStateChangeIndicationEnabled = true
  FrNmRepeatMessageTime &gt; 0

Test Execution: 
  01: Initialise FrNm.
  02: For each configured FrNm Channel do the following:
  03: Invoke Tst_GoToRepeatMessageState_FrNm_NetworkGwEraRequest to enter
      Repeat Message State State.
      (Use Tst_GoToRepeatMessageState_FrNm_NetworkGwEraRequest instead of 
      Tst_GoToRepeatMessageState to ensure coverage for function 
      FrNm_NetworkGwEraRequest.)
  04: Invoke FrNm_NetworkRelease
  05: Invoke FrNm_MainFunction_CFGIF in a loop till the latest time by which
      the module can stay in state NM_STATE_REPEAT_MESSAGE. i.e till the time
      FrNmRepeatMessageTime + (T - FrNmMainFunctionPeriod) expires.
      (T = Time equivalent of FrNmRepetitionCycle -
           (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)
      ).
  06: Invoke FrNm_GetState.
  07: Verify current state is NM_STATE_READY_SLEEP and
      Current mode is NM_MODE_NETWORK.
  08: VP (FrNm.SWS_FrNm_00192):
       - Nm_StateChangeNotification(nmPreviousState = NM_STATE_REPEAT_MESSAGE,
      nmCurrentState = NM_STATE_READY_SLEEP) is invoked

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0111</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>673</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that FrNm module notifies all its state changes to the
  Generic NM Interface module by calling Nm_StateChangeNotification for state
  change from NM_STATE_NORMAL_OPERATION to NM_STATE_REPEAT_MESSAGE.

Test Object: None.
Test Precondition: 
  FrNmPassiveModeEnabled == false
  FrNmNodeDetectionEnabled == true
  FrNmMainAcrossFrCycle == false
  FrNmStateChangeIndicationEnabled = true
  FrNmRepeatMessageTime &gt; 0

Test Execution: 
  01: Initialise FrNm.
  02: For each configured FrNm Channel do the following:
  03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
  04: Invoke FrNm_RepeatMessageRequest.
  05: VP:
      FrNm_RepeatMessageRequest returns E_OK.
  06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
      FrNmRepetitionCycle
  07: Invoke FrNm_GetState.
  08: Verify current state is NM_STATE_REPEAT_MESSAGE and
      Current mode is NM_MODE_NETWORK.
  09: VP (FrNm.SWS_FrNm_00192):
       - Nm_StateChangeNotification(nmPreviousState = NM_STATE_NORMAL_OPERATION,
      nmCurrentState = NM_STATE_REPEAT_MESSAGE) is invoked.

Test Input: 

Test Output: 
  State change Notification occurred for for state change from
  NM_STATE_NORMAL_OPERATION to NM_STATE_REPEAT_MESSAGE according to the
  verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>TC_FRNM_RMS_RSS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_2/source/application/FrNm_ConTest_2.c</sourcefile>
      <sourceline>771</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Check that transitions from:
   - SyncronizeMode to NetworkMode
   - ReadySleepState to BusSleepMode
   are done.

Test Object: None.
Test Precondition: 
  - Important test configuration details:
    - "FrNmPassiveModeEnabled" is set to 'true'.

Test Execution: 
    01: Initialize the FrNm Module.
    02: Call Passive startup
    03: Wait until state machine goes into state SyncronizeMode
    04: Wait until state machine goes into state Networkmode
        expected behaviour: FrNm_HsmFrNmSfNetworkModeEntry is called
    05: Wait until state machine goes into state BusSleepMode
        expected behaviour: FrNm_HsmFrNmSfReadySleepStateAction1 is called
    06: Call Passive startup
    07: Wait until state machine goes into state SyncronizeMode
    08: Wait until state machine goes into state NetworkMode
        expected behaviour: FrNm_HsmFrNmSfNetworkModeEntry is called
    09: When internal state differs from NM_STATE_REPEAT_MESSAGE
        set an error so FrNm_HandleSynchError will be called
    10: Wait until state machine goes into state SyncronizeMode
        expected behaviour: FrNm_HsmFrNmSfNetworkModeAction3 is called

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_CWU_Rx_Enabled_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_20/source/application/FrNm_ConTest_20.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case FrNmCarWakeUpRxEnabled is set to false
    for a channel Nm_CarWakeUpIndication is not called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_RxIndication
    03: VP(FrNm.SWS_FrNm_00410)
        - Check that Nm_CarWakeUpIndication is not called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00410</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>TS_FrNm_CWU_Rx_Enabled_Filtering_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_20/source/application/FrNm_ConTest_20.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case FrNmCarWakeUpRxEnabled is set to true
    and FrNmCarWakeUpFilterEnabled is set to false,
    Nm_CarWakeUpIndication is called regardless of
    the FrNmCarWakeUpFilterNodeId parameter.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_RxIndication
    03: Check that Nm_CarWakeUpIndication is not called
    04: Set FrNmCarWakeUpBitPosition
    05: Call FrNm_RxIndication
    06: VP(FrNm.SWS_FrNm_00402, FrNm.SWS_FrNm_00410)
        - Check that Nm_CarWakeUpIndication is called
    07: VP(FrNm.SWS_FrNm_00411)
        - Check that when FrNm_GetPduData is called in the context
          of Nm_CarWakeUpIndication the last data received (via FrNm_RxIndication)
          is returned
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00410</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>TS_FrNm_CWU_Rx_Enabled_Filtering_Enabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_20/source/application/FrNm_ConTest_20.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case FrNmCarWakeUpRxEnabled is set to true
    and FrNmCarWakeUpFilterEnabled is set to true and
    the received node id is equal to FrNmCarWakeUpFilterNodeId,
    Nm_CarWakeUpIndication is called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_RxIndication
    03: Check that Nm_CarWakeUpIndication is not called
    04: Call FrNm_RxIndication
    05: Check that Nm_CarWakeUpIndication is not called
    07: Set correct Node Id
    08: Call FrNm_RxIndication
    09: VP(FrNm.SWS_FrNm_00402, FrNm.SWS_FrNm_00412)
        - Check that Nm_CarWakeUpIndication is called
    10: VP(FrNm.SWS_FrNm_00411)
        - check that data transmitted with Rx indication is
          the same as data returned by FrNm_GetPduData

  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_SourceNodeIdOnOff_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_21/source/application/FrNm_ConTest_21.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove
    - function FrNm_RepeatMessageRequest declines
      the request based on channel specific FrNmNodeDetectionEnabled setting.
    - function FrNm_GetNodeIdentifier declines
      the request based on channel specific FrNmSourceNodeIdentifierEnabled setting.
    - function FrNm_GetLocalNodeIdentifier declines
      the request based on channel specific FrNmSourceNodeIdentifierEnabled setting.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_GetPduData
    03: Call FrNm_RepeatMessageRequest
    04: VP(FrNm.ECUC_FrNm_00086)
        - check DET is reported
    05: Call FrNm_GetNodeIdentifier
    06: VP(FrNm.ECUC_FrNm_00085)
        - check DET is reported
    07: Call FrNm_GetLocalNodeIdentifier
    08: VP(FrNm.ECUC_FrNm_00085)
        - check DET is reported
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_SourceNodeIdOnOff_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_22/source/application/FrNm_ConTest_22.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that depending on parameter FrNmSourceNodeIdentifierEnabled
    when function FrNm_TriggerTransmit is called, in the PDU is present or not.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_TriggerTransmit
    03: VP(FrNm.ECUC_FrNm_00085)
        - Check that Node id is the correct one
    04: Call FrNm_TriggerTransmit
    05: VP(FrNm.ECUC_FrNm_00085)
        - Check that Node id is not present
    06: Call FrNm_TriggerTransmit
    07: VP(FrNm.ECUC_FrNm_00085)
        - Check that Node id is not present
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>TS_FrNm_SourceNodeIdOnOff_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_22/source/application/FrNm_ConTest_22.c</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case FrNmSourceNodeIdentifierEnabled
    is set to FALSE, when transmission occurs, NodeId is not present in the Pdu.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Request the channel
    03: Set data to be transmitted
    04: Wait until data is transmitted
    05: VP(FrNm.ECUC_FrNm_00085)
        - Check that in the transmitted buffer Node Id is not present
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>TS_FrNm_SourceNodeIdOnOff_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_22/source/application/FrNm_ConTest_22.c</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case FrNmSourceNodeIdentifierEnabled
    is set to FALSE, when transmission occurs, NodeId is not present in the Pdu.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Request the channel
    03: Set data to be transmitted
    04: Wait until data is transmitted
    05: VP(FrNm.ECUC_FrNm_00085)
        - Check that in the transmitted buffer Node Id is not present
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>TS_FrNm_SourceNodeIdOnOff_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_22/source/application/FrNm_ConTest_22.c</sourcefile>
      <sourceline>236</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case FrNmNodeDetectionEnabled
    is set to FALSE, if Repeat Message State is requested, the transition
    does not happen
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm
    02: Request the channel
    03: Wait until state machine goes to Normal Operation State
    04: Call FrNm_RxIndication
    05: VP(FrNm.ECUC_FrNm_00086)
        - Check the state machine does not changes state
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrNmPnEnabled_False_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_23/source/application/FrNm_ConTest_23.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if FrNmPnEnabled is FALSE, FrNm does not performs partial network aggregation
  
Test Object: None.
Test Precondition: 
    FrNmPnEnabled == FALSE for channel 1
  
Test Execution: 
    01: Initialize FrNm
    02: Goto Normal Operation State
    Clear PduR_FrNmRxIndication stub count
    03: Invoke Rx Indication
    04: Invoke Main Function Once
    05: VP(FrNm.EB.PnEnabled_FALSE_1)
        - check PduR_FrNmRxIndication
    06: Clear User Data
    07: Wait until a message is sent on the Buss
    08: Check that FrIf_Transmit has been invoked
    09: Check that PduR_FrNmTriggerTransmit has been invoked
    10: Wait until Pn Reset Time expires
    11: VP(FrNm.EB.PnEnabled_FALSE_2)
        - Check that PduR_FrNmRxIndication is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PnEnabled_FALSE_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PnEnabled_FALSE_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_Schm_Call</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs;
    02: Initialize FrNm;
    03: VP(FrNm.EB.SchM_Call_Nm_PduRxIndication):
        - Verify SchM_Call for Nm_PduRxIndication;
    04: VP(FrNm.EB.SchM_Call_Nm_BusSleepMode):
        - Verify SchM_Call for Nm_BusSleepMode;
    05: VP(FrNm.EB.SchM_Call_Nm_NetworkStartIndication):
        - Verify SchM_Call for Nm_NetworkStartIndication;
    06: VP(FrNm.EB.SchM_Call_Nm_NetworkMode):
        - Verify SchM_Call for Nm_NetworkMode;
    07: VP(FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
        - Verify SchM_Call for Nm_RemoteSleepCancellation;
    08: VP(FrNm.EB.SchM_Call_Nm_RemoteSleepIndication):
        - Verify SchM_Call for Nm_RemoteSleepIndication;
    09: VP(FrNm.EB.SchM_Call_Nm_CarWakeUpIndication):
        - Verify SchM_Call for Nm_CarWakeUpIndication;
    10: VP(FrNm.EB.SchM_Call_Nm_SynchronizationPoint):
        - Verify SchM_Call for Nm_SynchronizationPoint;
    11: VP(FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication):
        - Verify SchM_Call for Nm_CoordReadyToSleepIndication;
    12: VP(FrNm.EB.SchM_Call_Nm_TxTimeoutException):
        - Verify SchM_Call for Nm_TxTimeoutException;
    13: VP(FrNm.EB.SchM_Call_Nm_StateChangeNotification):
        - Verify SchM_Call for Nm_StateChangeNotification;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_SynchronizationPoint</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_TxTimeoutException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_PduRxIndication.
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: Check that the ChannelHandle is zero.
    03: Invoke FrNm_RxIndication.
    04: Call Main Function.
    05: VP (FrNm.EB.SchM_Call_Nm_PduRxIndication):
         - Nm_PduRxIndication is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_NetworkStartIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_NetworkStartIndication.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: Invoke FrNm_GetState.Verify that the current state is NM_STATE_BUS_SLEEP and
        Current mode is NM_MODE_BUS_SLEEP.
    03: Invoke FrNm_RxIndication.
    04: Call Main Function.
    05: VP (FrNm.EB.SchM_Call_Nm_NetworkStartIndication):
         - Nm_NetworkStartIndication is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_BusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_BusSleepMode.
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    03: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        FrNmReadySleepCnt - 1) expires to see that state remains in Ready Sleep
        State.
    04: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK.
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        Sleep FrNmRepetitionCycle - 1) expires to see that state remains in
        Ready State.FrNmReadySleepCnt is multiple of FrNmRepetitionCycle and 
        this is why state checked 2 times.
    06: Verify that the current state is NM_STATE_READY_SLEEP and the
        current mode is NM_MODE_NETWORK.
    07: Clear the Nm stub count.
    08: Invoke FrNm_MainFunction_CFGIF once to enter NM_STATE_BUS_SLEEP.
    09: Current state is NM_STATE_BUS_SLEEP and Current Mode is NM_MODE_BUS_SLEEP.
        Verify that Nm_BusSleepMode is invoked.
    10: VP(FrNm.EB.SchM_Call_Nm_BusSleepMode):
        - Check Nm_BusSleepMode is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepIndication.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm.
    02: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    03: Get the current FlexRay time to decide next repetition cycle interval.
    04: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime.
    05: Reduce the already elapsed flexray cycles.
    06: RemoteSlpStayTime or the time for next repetition cycle must be greater
        or equal to TstRemoteSleepIndTime and be aligned with FrNmRepetitionCycle.
    07: Clear Nm_RemoteSleepIndication_Stub.Count.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        (FrNmRemoteSleepIndTime -1)
    09: Nm_RemoteSleepIndication should not be notified to Generic NM Interface
        module.
    10: Invoke FrNm_MainFunction_CFGIF once
    11: Verify that Nm_RemoteSleepIndication() is invoked.
    12: VP(FrNm.EB.SchM_Call_Nm_RemoteSleepIndication):
        - Call FrNm_CheckRemoteSleepIndication and verify that it returns E_OK
        and verify that the pointer to the location where the check result of
        remote sleep indication is copied contains TRUE.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepCancellation</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm.
    02: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    03: Get the current FlexRay time to decide next repetition cycle interval.
    04: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime.
    05: Reduce the already elapsed flexray cycles
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM
        Interface module.
    08: Invoke FrNm_NetworkRelease
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time
        FrNmRepetitionCycle expires.
    10: Current state is NM_STATE_READY_SLEEP and current mode is NM_MODE_NETWORK
    11: Receive a Nm-vote and invoke FrNm_RxIndication with
        TST_FRNM_CHANNEL1_RXPDUID for successful reception of Pdu.
    12: Call FrNm_RxIndication and invoke FrNm_MainFunction.
    13: VP (FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
         - FrNm should notify the Generic NM Interface module by
        calling Nm_RemoteSleepCancellation.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepCancellation_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    03: Get the current FlexRay time to decide next repetition cycle interval.
    04: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime.
    05: Reduce the already elapsed flexray cycles.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Verify that FrNm_RepeatMessageRequest returns E_OK.
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle expires.
    10: Check Remote Sleep Indication
    11: Verify that the current state is NM_STATE_REPEAT_MESSAGE and
        Current mode is NM_MODE_NETWORK.
    12: VP (FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
         - Nm_RemoteSleepCancellation is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepCancellation_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Get the current FlexRay time to decide next repetition cycle interval.
    05: Calculate time to expire the remaining time of FrNmRepetitionCycle after
       completion of the time equivalent of FrNmRemoteSleepIndTime.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Invoke FrNm_NetworkRelease
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    10: Invoke FrNm_GetState.
    11: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK
    12: Invoke FrNm_RepeatMessageRequest.
    13: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    14: Invoke FrNm_GetState.
    15: Current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
    16: VP (FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
         - Nm_RemoteSleepCancellation is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_SynchronizationPoint</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>886</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_SynchronizationPoint.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm.
    02: Invoke FrNm_NetworkRequest and verify that returns E_OK.
    03: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle + FrNmMainFunctionPeriod" expires.
    04: Verify that the current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
    05: Reset Nm_SynchronizationPoint_Stub.Count to zero which is invoked previously.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - 1" expires.
    07: Nm_SynchronizationPoint is not invoked.
    08: Invoke FrNm_MainFunction_CFGIF.
    09: VP(FrNm.EB.SchM_Call_Nm_SynchronizationPoint):
        - Nm_SynchronizationPoint is invoked.
    10: Invoke FrNm_MainFunction in a loop till the time
        "FrNmRepeatMessageTime + T" expires to enter into Normal Operation State
        (T = Time equivalent of FrNmRepetitionCycle -
             (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)).
    11: Call FrNm_GetState and verify that the current state is
        NM_STATE_NORMAL_OPERATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_SynchronizationPoint</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_CoordReadyToSleepIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>981</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_CoordReadyToSleepIndication.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    03: Clear stub count for Nm_CoordReadyToSleepIndication.
    04: Invoke FrNm_RxIndication with NMcoordinatorSleepReady bit set in NM-PDU.
    05: Call Main Function once.
    06: VP(FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication):
        - Check Nm_CoordReadyToSleepIndication is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_TxTimeoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>1044</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_TxTimeoutException.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    03: Clear FrIf_Transmit stub count.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmVotingCycle expires.
    05: Verify that FrIf_Transmit is invoked.
    06: Skip Tx confirmation.
    07: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmMsgTimeoutTime - 1 expires.
    08: Nm_TxTimeoutException is not invoked.
    09: Invoke FrNm_MainFunction_CFGIF once.
    10: VP (FrNm.EB.SchM_Call_Nm_TxTimeoutException):
         - Nm_TxTimeoutException is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_TxTimeoutException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_CarWakeUpIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_24_SchM/source/application/FrNm_ConTest_24.c</sourcefile>
      <sourceline>1132</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_CarWakeUpIndication.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize FrNm.
    02: Call FrNm_RxIndication.
    03: Check that Nm_CarWakeUpIndication is called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_SchmCall_RxIndication_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_PduRxIndication.
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: Verify that Tst_ChannelHandle is zero.
    03: Invoke FrNm_RxIndication.
    04: Call Main Function.
    05: VP (FrNm.EB.SchM_Call_Nm_PduRxIndication):
         - Nm_PduRxIndication is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepIndication_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepIndication.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm.
    02: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    03: Get the current FlexRay time to decide next repetition cycle interval.
    04: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime.
    05: Reduce the already elapsed flexray cycles.
    06: RemoteSlpStayTime or the time for next repetition cycle must be greater
        or equal to TstRemoteSleepIndTime and be aligned with FrNmRepetitionCycle.
    07: Clear Nm_RemoteSleepIndication_Stub.Count.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        (FrNmRemoteSleepIndTime -1)
    09: Nm_RemoteSleepIndication should not be notified to Generic NM Interface
        module.
    10: Invoke FrNm_MainFunction_CFGIF once
    11: VP(FrNm.EB.SchM_Call_Nm_RemoteSleepIndication):
        - Verify that Nm_RemoteSleepIndication() is not invoked.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepCancellation_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm.
    02: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    03: Get the current FlexRay time to decide next repetition cycle interval.
    04: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime.
    05: Reduce the already elasped flexray cycles
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM
        Interface module.
    08: Invoke FrNm_NetworkRelease
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time
        FrNmRepetitionCycle expires.
    10: VP(FrNm.EB.SchM_Call_Nm_StateChangeNotification):
        - Nm_StateChangeNotification is not invoked.
    11: Current state is NM_STATE_READY_SLEEP and current mode is NM_MODE_NETWORK
    12: Call FrNm_RxIndication and invoke FrNm_MainFunction.
    13: VP (FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
         - Nm_RemoteSleepCancellation is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepCancellation_1_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    03: Get the current FlexRay time to decide next repetition cycle interval.
    04: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime.
    05: Reduce the already elapsed flexray cycles.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Verify that FrNm_RepeatMessageRequest returns E_OK.
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle expires.
    10: Verify that the current state is NM_STATE_REPEAT_MESSAGE and
        Current mode is NM_MODE_NETWORK.
    11: VP (FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
         - Nm_RemoteSleepCancellation is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_RemoteSleepCancellation_2_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Get the current FlexRay time to decide next repetition cycle interval.
    05: Calculate time to expire the remaining time of FrNmRepetitionCycle after
       completion of the time equivalent of FrNmRemoteSleepIndTime.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Invoke FrNm_NetworkRelease
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    10: Invoke FrNm_GetState.
    11: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK
    12: Invoke FrNm_RepeatMessageRequest.
    13: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    14: Invoke FrNm_GetState.
    15: Current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
    16: VP (FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
         - Nm_RemoteSleepCancellation is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_SynchronizationPoint_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_SynchronizationPoint.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm.
    02: Invoke FrNm_NetworkRequest and verify that returns E_OK.
    03: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle + FrNmMainFunctionPeriod" expires.
    04: Verify that the current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
    05: Reset Nm_SynchronizationPoint_Stub.Count to zero which is invoked previously.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - 1" expires.
    07: Nm_SynchronizationPoint is not invoked.
    08: Invoke FrNm_MainFunction_CFGIF.
    09: VP(FrNm.EB.SchM_Call_Nm_SynchronizationPoint):
        - Nm_SynchronizationPoint is not invoked.
    10: Invoke FrNm_MainFunction in a loop till the time
        "FrNmRepeatMessageTime + T" expires to enter into Normal Operation State
        (T = Time equivalent of FrNmRepetitionCycle -
             (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)).
    11: Call FrNm_GetState and verify that the current state is
        NM_STATE_NORMAL_OPERATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_SynchronizationPoint</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SchmCall_CoordReadyToSleepIndication_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_25_SchM/source/application/FrNm_ConTest_25.c</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and FrNm
    invokes Nm_CoordReadyToSleepIndication.
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    03: Clear stub count for Nm_CoordReadyToSleepIndication.
    04: Invoke FrNm_RxIndication with NMcoordinatorSleepReady bit set in NM-PDU.
    05: Call Main Function once.
    06: VP(FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication):
        - Check Nm_CoordReadyToSleepIndication is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_Nm_CoordReadyToSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_CoordReadyToSleepIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_CoordReadyToSleepIndication
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Set Nm_CoordReadyToSleepIndication to return E_NOT_OK
    04: Call Rx Indication
    05: VP (FrNm.EB.SchM_Call_DET)
        - Check Det is reported 
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_SynchronizationPoint</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_SynchronizationPoint
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Set Nm_SynchronizationPoint to return E_NOT_OK
    04: Request the network
    05: Wait until Nm_SynchronizationPoint is entered
    06: VP(FrNm.EB.SchM_Call_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_CarWakeUpIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_CarWakeUpIndication
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Set Nm_CarWakeup to return E_NOT_OK
    04: Call RxIndication
    05: VP(FrNm.EB.SchM_Call_DET)
        - Check DET is reported 
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_PduRxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_PduRxIndication
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Set Nm_PduRxIndication to return E_NOT_OK
    04: Call RxIndication
    05: VP(FrNm.EB.SchM_Call_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_BusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_BusSleepMode
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Do a passive startup
    04: Wait until Ready Sleep State is entered
    05: Wait until Bus Sleep Mode is entered
    06: VP(FrNm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_NetworkStartIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_NetworkStartIndication
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Set Nm_NetworkStartIndication to return E_NOT_OK
    04: Call RxIndication
    05: VP(FrNm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_NetworkMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_NetworkStartIndication
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Request the network
    04: Set NetworkMode to return E_NOT_OK
    05: Wait until Repeat Message State is entered
    06: VP(FrNm.EB.SchM_Call_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_TxTimeoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_TxTimeoutException
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Do a network request
    04: Set Nm_TxTimeoutException to return E_NOT_OK
    05: Wait until TxTimeoutException is called
    06: VP(FrNm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_RemoteSleepIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>651</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_RemoteSleepIndication
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Call Network Request
    04: Set Remote Sleep Indication to return E_NOT_OK
    05: Wait until Remote Sleep Indication has been called
    06: VP(FrNm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_RemoteSleepCancellation</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>728</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_RemoteSleepCancellation
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Request the network
    04: Wait until Remote Sleep Indication is called
    05: Set Nm_RemoteSleepCancellation to return E_NOT_OK
    06: Call Rx Indication
    07: VP (FrNm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Schm_Call_Nm_StateChangeNotification</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_26_SchMCallDet/source/application/FrNm_ConTest_26.c</sourcefile>
      <sourceline>812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case SchM_Call_FrNm_RequiredCSEntry_Nm_StateChangeNotification
    returns a different value from SCHM_E_OK, DET is reported
  
Test Object: None.
Test Precondition: 
     FrNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs
    02: Initialize FrNm
    03: Do a passive startup
    04: Wait until state machine enters Ready Sleep State
    05: Set State Change Notification to return E_NOT_OK
    06: Wait until state machine enters Bus Sleep State
    07: VP(FrNm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrNm_0_GetLocalNodeIdentifier</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_27/source/application/FrNm_ConTest_27.c</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that NodeId == 8 for V0.
    To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Set post-build selectable variants for NodeId;
    NodeId = 8 for variant V0;
  
Test Execution: 
    VP(FrNm.EB.PBSelectable.Master):
        - Check that FrNm_PBcfg.h exists and can be included.
    VP(FrNm.EB.PBSelectable.FileName):
        - Verify that file FrNm_V0_PBcfg.h exist.
    01: VP(FrNm.EB.PBSelectable.TypeName):
        - Verify that types FrNm_V0_ConstConfigLayoutType exist.
    02: Initialize FrNm.
    03: Call FrNm_GetLocalNodeIdentifier.
    04: Check value of NodeId for V0.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>TS_FrNm_1_GetLocalNodeIdentifier</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_27/source/application/FrNm_ConTest_27.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that NodeId == 16 for V1.
    To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Set post-build selectable variants for NodeId;
    NodeId = 16 for variant V1;
  
Test Execution: 
    VP(FrNm.EB.PBSelectable.Master):
        - Check that FrNm_PBcfg.h exists and can be included.
    VP(FrNm.EB.PBSelectable.FileName):
        - Verify that file FrNm_V1_PBcfg.h exist.
    01: VP(FrNm.EB.PBSelectable.TypeName):
        - Verify that types FrNm_V1_ConstConfigLayoutType exist.
    02: Initialize FrNm.
    03: Call FrNm_GetLocalNodeIdentifier.
    04: Check value of NodeId for V1.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>TS_FrNm_0_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_27/source/application/FrNm_ConTest_27.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_RxIndication could be called with two different
    "SduLength" based on initialization variant.
    Verify if SduLength = 8 for V0. No Det is reported.
    To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Set post-build selectable variants for SduLength;
    SduLength = 8 for V0;
  
Test Execution: 
    VP(FrNm.EB.PBSelectable.Master):
        - Check that FrNm_PBcfg.h exists and can be included;
    VP(FrNm.EB.PBSelectable.FileName):
        - Verify that file FrNm_V0_PBcfg.h exist;
    01: VP(FrNm.EB.PBSelectable.TypeName):
        - Verify that types FrNm_V0_ConstConfigLayoutType exist;
    02: Initialize FrNm;
    03: Call Rx Indication;
    04: Check if Det is not reported;
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>TS_FrNm_1_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_27/source/application/FrNm_ConTest_27.c</sourcefile>
      <sourceline>246</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_RxIndication could be called with two different
    "SduLength" based on initialization variant.
    Verify if Det is reported if SduLength != 8 for V1.
    To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Set post-build selectable variants for SduLength;
    SduLength != 8 for V1;
  
Test Execution: 
    VP(FrNm.EB.PBSelectable.Master):
        - Check that FrNm_PBcfg.h exists and can be included;
    VP(FrNm.EB.PBSelectable.FileName):
        - Verify that file FrNm_V1_PBcfg.h exist;
    01: VP(FrNm.EB.PBSelectable.TypeName):
        - Verify that types FrNm_V1_ConstConfigLayoutType exist;
    02: Initialize FrNm;
    03: Call Rx Indication;
    04: Check if Det is reported;
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>TS_FrNm_2_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_27/source/application/FrNm_ConTest_27.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_RxIndication could be called with two different
    "SduLength" based on initialization variant.
    Verify if SduLength = 10 for V0. No Det is reported.
    To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Set post-build selectable variants for SduLength;
    SduLength != 10 for V0;
  
Test Execution: 
    VP(FrNm.EB.PBSelectable.Master):
        - Check that FrNm_PBcfg.h exists and can be included;
    VP(FrNm.EB.PBSelectable.FileName):
        - Verify that file FrNm_V0_PBcfg.h exist;
    01: VP(FrNm.EB.PBSelectable.TypeName):
        - Verify that types FrNm_V0_ConstConfigLayoutType exist;
    02: Initialize FrNm;
    03: Call Rx Indication;
    04: Check if Det is reported;
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>TS_FrNm_3_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_27/source/application/FrNm_ConTest_27.c</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_RxIndication could be called with two different
    "SduLength" based on initialization variant.
    Verify if SduLength = 10 for V1. No Det is reported.
    To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Set post-build selectable variants for SduLength;
    SduLength = 10 for V1;
  
Test Execution: 
    VP(FrNm.EB.PBSelectable.Master):
        - Check that FrNm_PBcfg.h exists and can be included;
    VP(FrNm.EB.PBSelectable.FileName):
        - Verify that file FrNm_V1_PBcfg.h exist;
    01: VP(FrNm.EB.PBSelectable.TypeName):
        - Verify that types FrNm_V1_ConstConfigLayoutType exist;
    02: Initialize FrNm;
    03: Call Rx Indication;
    04: Check if Det is reported;
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrNmPnInfoOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_28/source/application/FrNm_ConTest_28.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if the content of EIRA changes because of a received NM PDU, FrNm
    inform the upper layers by calling PduR_FrNmRxIndication(). By means of
    the Rx Indication function the EIRA data shall be provided to the COM module.
  
Test Object: None.
Test Precondition: 
    FrNmPnInfo = true;
  
Test Execution: 
    01: Initialize FrNm and reset stub counters.
    02: Invoke FrNm_RxIndication with Pdu data.
    03: Invoke FrNm_MainFunction once.
    04: VP (FrNm.EB.FrNmPnInfo):
        - PduR_FrNmRxIndication is invoked.
    05: EIRA data provided by COM module is valid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmPnInfo</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrIf_Transmit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_29/source/application/FrNm_ConTest_29.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if partial networking is enabled and on the current main function cycle FrIf_Transmit
    return E_NOT_OK and on the next main function cycle network is requested again, FrIf_Transmit
    is not called.
  
Test Object: None.
Test Precondition: 
    FrNmPnSupported = true;
  
Test Execution: 
    01: Initialize FrNm;
    02: Set FrIf_Transmit_Stub to return value E_NOT_OK;
    03: Set FrIf_Transmit_Stub to 0;
    04: Check that the current state is NM_STATE_BUS_SLEEP for channel 0;
    05: Call FrNm_PassiveStartUp for channel 0;
    06: Call main function;
    07: Check if FrIf_Transmit_Stub = 0;
    08: Call main function once;
    09: Check if FrIf_Transmit_Stub = 1;
    10: Set FrIf_Transmit_Stub return value to E_OK;
    11: Call FrNm_NetworkRequest for channel 0;
    12: Call main function;
    13: Check if FrIf_Transmit_Stub = 0;
    14: Call main function once;
    15: VP (FrNm.SWS_FrNm_00010):
        - Check if FrIf_Transmit_Stub = 1;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_0136</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNm_Init is called in the Normal Operation State,
    FrNm channel enters the Bus Sleep Mode [FrNm.EB_Ref.InitCall].
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel execute following steps:.
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Invoke FrNm_Init to send channel into Bus Sleep Mode.
    05: Call FrNm_Mainfunction as this call of FrNm_Init() is asynchronous.
    06: VP (FrNm.EB_Ref.InitCall):
         - Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
  
Test Input: None.
Test Output: 
    FrNm channel must be entered in the Bus Sleep Mode.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.InitCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0137</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that If FrNm_Init is called in the Repeat Message State,
    then the FrNm channel set to Bus Sleep Mode [FrNm.EB_Ref.InitCall].
    Verify that FrNm module is set to Repeat message State of Network Mode
    when the FrNmRepetitionCycle is completed in Synchronize mode.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel execute following steps:.
    03: If FrNmRepeatMessageTime greater than 0 then proceed else go to step 2.
    04: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest in Bus sleep mode and check that it
        returns E_OK.
    05: Invoke FrNm_MainFunction one time for the transition to Synchronize
        mode from Bus Sleep Mode.(Deviation From CTSP Since State transition
        can happen only after the Main Function call.).
    06: VP (FrNm.SWS_FrNm_00104):
         - the current state is NM_STATE_SYNCHRONIZE and the current mode is
        NM_MODE_SYNCHRONIZE.
    07: Invoke FrNm_MainFunction with the two less than Repetition Cycle.
    08: VP (FrNm.SWS_FrNm_00104):
         - Still the the current state is NM_STATE_SYNCHRONIZE and the current
        mode is NM_MODE_SYNCHRONIZE.
    09: Invoke FrNm_MainFunction one time.
    10: VP (FrNm.SWS_FrNm_00108):
         - Current state is NM_STATE_REPEAT_MESSAGE
         - Current Mode is NM_MODE_NETWORK.
    11: Invoke FrNm_init in Repeat Message State.
    12: Call FrNm_Mainfunction as this call of FrNm_Init() is asynchronous.
    13: VP (FrNm.EB_Ref.InitCall):
         - The mode is changed from NM_MODE_SYNCHRONIZE; the current mode
         is NM_MODE_BUS_SLEEP and the current state is NM_STATE_BUS_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.InitCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0137_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that If FrNm_Init is called in the Repeat Message State,
    then the FrNm channel set to Bus Sleep Mode [FrNm.EB_Ref.InitCall].
    Verify that FrNm module is set to Repeat message State of Network Mode
    when the FrNmRepetitionCycle is completed in Synchronize mode.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel execute following steps:.
    03: If FrNmRepeatMessageTime greater than 0 then proceed else go to step 2.
    04: VP (FrNm.EB.FrNm_NetworkGwEraRequest):
         - Invoke FrNm_NetworkGwEraRequest in Bus sleep mode and check that it
        returns E_OK.
    05: Invoke FrNm_MainFunction one time for the transition to Synchronize
        mode from Bus Sleep Mode.(Deviation From CTSP Since State transition
        can happen only after the Main Function call.).
    06: VP (FrNm.SWS_FrNm_00104):
         - the current state is NM_STATE_SYNCHRONIZE and the current mode is
        NM_MODE_SYNCHRONIZE.
    07: Invoke FrNm_MainFunction with the two less than Repetition Cycle.
    08: VP (FrNm.SWS_FrNm_00104):
         - Still the the current state is NM_STATE_SYNCHRONIZE and the current
        mode is NM_MODE_SYNCHRONIZE.
    09: Invoke FrNm_MainFunction one time.
    10: VP (FrNm.SWS_FrNm_00108):
         - Current state is NM_STATE_REPEAT_MESSAGE
         - Current Mode is NM_MODE_NETWORK.
    11: Invoke FrNm_init in Repeat Message State.
    12: Call FrNm_Mainfunction as this call of FrNm_Init() is asynchronous.
    13: VP (FrNm.EB_Ref.InitCall):
         - The mode is changed from NM_MODE_SYNCHRONIZE; the current mode
         is NM_MODE_BUS_SLEEP and the current state is NM_STATE_BUS_SLEEP.
  
Test Input: 
    FrNm_Init call
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Nm state/mode is set according to verification points.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.InitCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0138</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNm_Init is called in the Ready Sleep State,
    then the FrNm channel enters the Bus Sleep Mode. [FrNm.EB_Ref.InitCall]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following steps:.
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_Init in Ready Sleep State.
    05: Call FrNm_Mainfunction as this call of FrNm_Init() is asynchronous.
    06: VP (FrNm.EB_Ref.InitCall):
         - Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.InitCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0144</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that FrNm_EnableCommunication returns E_OK when there is no error
    [FrNm.SWS_FrNm_00387].
    To verify that FrNm_EnableCommunication enables the Network Management PDU
    transmission ability if the Network Management PDU transmission ability is
    disabled by FrNm_DisableCommunication [FrNm.SWS_FrNm_00387].
    To verify that FrNm_DisableCommunication returns E_OK when there is no error
    [FrNm.SWS_FrNm_00390].
    To verify that FrNm_DisableCommunication disables the Network Management PDU
    transmission ability [FrNm.SWS_FrNm_00390].
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNmChannel execute following steps
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmDataCycle expires.
    05: For each configured FrNmTxPdu execute steps 06 and 07.
    06: If FrNmTxPduContainsData is true then proceed with step 07 else go to step 08.
    07: VP (FrNm.SWS_FrNm_00390):
         - FrIf_Transmit is invoked.
    08: VP (FrNm.SWS_FrNm_00390):
         - FrNm_DisableCommunication returns E_OK.
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time
        equivalent of FrNmDataCycle expires.
    10: VP (FrNm.SWS_FrNm_00390):
         - FrIf_Transmit is not be invoked.
    11: VP (FrNm.SWS_FrNm_00387):
         - FrNm_EnableCommunication returns E_OK.
    12: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmDataCycle expires.
    13: VP (FrNm.SWS_FrNm_00387):
         - FrIf_Transmit is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00387</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0145</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>564</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that FrNm_EnableCommunication returns E_NOT_OK, if the current
    mode is other than Network Mode.
    To verify that FrNm_DisableCommunication returns E_NOT_OK, if the current
    mode is other than Network Mode.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following steps
    03: Invoke FrNm_GetState.
    04: Verify that the current state is NM_STATE_BUS_SLEEP and
        Current mode is NM_MODE_BUS_SLEEP.
    05: VP (FrNm.EB_Ref.SWS_FrNm_00391.BusSleep):
         - FrNm_DisableCommunication returns E_NOT_OK.
    06: VP (FrNm.EB_Ref.SWS_FrNm_00388.BusSleep):
         - FrNm_EnableCommunication returns E_NOT_OK.
    07: Invoke FrNm_NetworkRequest.
    08: Verify that FrNm_NetworkRequest returns E_OK.
    09: Invoke FrNm_MainFunction_CFGIF once
    10: Verify that the current state is NM_STATE_SYNCHRONIZE and
        Current mode is NM_MODE_SYNCHRONIZE.
    11: VP (FrNm.EB_Ref.SWS_FrNm_00391.Synchronize):
         - FrNm_DisableCommunication returns E_NOT_OK.
    12: VP (FrNm.EB_Ref.SWS_FrNm_00388.Synchronize):
         - FrNm_EnableCommunication returns E_NOT_OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00388.BusSleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00388.Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00391.BusSleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00391.Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0105</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>670</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, If Repeat Message State is entered from Synchronize Mode, then
    FrNm module sets the Repeat Message Bit (FrNm_RepeatMessage) to one(TRUE) in
    control bit vector [FrNm.ASR403.FRNM109].
    Verify that, If FrNmRepeatMessageTime is expired in Repeat Message state,
    then FrNm module sets the Repeat Message Bit (FrNm_RepeatMessage) to
    zero(FALSE) in control bit vector [FrNm.ASR403.FRNM112].
    Note:
    The description above is given by CTSP, but it seems the interpretation of
    requirements FrNm.ASR403.FRNM109 and FrNm.ASR403.FRNM112 are wrong here.
    Please refer http://www.autosar.org/bugzilla/show_bug.cgi?id=42072#c5
    We do test here,
    Verify that, FrNm module enters in to Repeat Message State when it enters
    the Network Mode.
    Verify that, FrNm module leaves Repeat Message State exactly when
    FrNmRepeatMessageTime is expired(Transition must happen only upon repetition
    cycle)
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageBitEnabled == true
    FrNmControlBitVectorActive == true
    FrNmRepeatMessageBitActive == true
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmDataCycle
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke FrNm_NetworkRequest.
    04: Verify that FrNm_NetworkRequest returns E_OK.
    05: Invoke FrNm_MainFunction_CFGIF once. (Deviation from CTSP)
    06: Invoke FrNm_GetState.
    07: Verify that the current state is NM_STATE_SYNCHRONIZE and
        Current mode is NM_MODE_SYNCHRONIZE.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        'FrNmRepetitionCycle + FrNmMainFunctionPeriod' expires.
    09: VP (FrNm.ASR403.FRNM109, FrNm.ASR403.FRNM118):
         - The current state is NM_STATE_REPEAT_MESSAGE and the current mode
        is NM_MODE_NETWORK.
    10: Get the current FlexRay time to decide next repetition cycle interval.
    11: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of RepeatMessageTime.
    12: Invoke FrNm_MainFunction_CFGIF in a loop till the
        'FrNmRepeatMessageTime-1'.
    13: VP (FrNm.ASR403.FRNM112):
         - The current state is still NM_STATE_REPEAT_MESSAGE and the current
         mode still is NM_MODE_NETWORK.
    14: Invoke FrNm_MainFunction_CFGIF once.
    15: VP (FrNm.ASR403.FRNM112):
         - Current state not NM_STATE_REPEAT_MESSAGE when the Repeat Message
        Timer expires.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0106</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNm_RepeatMessageRequest is invoked in Normal Operation
    State of Network Mode, FrNm module sets the Repeat Message Bit in control
    bit vector.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageBitEnabled == true
    FrNmControlBitVectorActive == true
    FrNmRepeatMessageBitActive == true
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter
        Normal Operation State.
    04: Invoke FrNm_RepeatMessageRequest.
    05: Verify that FrNm_RepeatMessageRequest returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time
        equivalent of FrNmDataCycle expires.
    07: For each configured FrNmTxPdu execute steps 08 to 09.
    08: If FrNmTxPduContainsData == true then proceed.
    09: Verify that FrIf_Transmit is invoked
    10. (Deviation-step: Refer particularities):
        Invoke the main function till the remaining repetition cycle expires.
    11. VP (FrNm.ASR403.FRNM111, FrNm.SWS_FrNm_00226):
         - The Repeat Message Bit of PduInfoPtr is set to one in
        control bit vector.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0107</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>947</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_RepeatMessageRequest returns E_OK when there is no error.
  
Test Object: None.
Test Precondition: 
    FrNmNodeDetectionEnabled == true
    FrNmMainAcrossFrCycle == false
    FRNM_REPEAT_MESSAGE_BIT_ACTIVE == true
    FrNmRepeatMessageTime &gt; 0
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmRepetitionCycle
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNmChannel do the following:
    03: VP (FrNm.SWS_FrNm_00243,FrNm.SWS_FrNm_00226):
         - Invoke FrNm_RepeatMessageRequest in bus sleep state and verify that it
        returns E_NOT_OK.
    04: Invoke FrNm_NetworkRequest.
    05: Invoke FrNm_MainFunction once to enter synchronize state.
    06: Call FrNm_GetState and verify that the current state is
        NM_STATE_SYNCHRONIZE and the current mode is NM_MODE_SYNCHRONIZE.
    07: VP (FrNm.SWS_FrNm_00243,FrNm.SWS_FrNm_00226):
         - Invoke FrNm_RepeatMessageRequest and verify that
        FrNm_RepeatMessageRequest returns E_NOT_OK.
    08: Invoke FrNm_MainFunction in a loop till the time equivalent of
        FrNmRepetitionCycle to enter into Repeat Message State.
    09: Call FrNm_GetState and verify that the current state is
        NM_STATE_REPEAT_MESSAGE and the current mode is NM_MODE_SYNCHRONIZE.
    10: VP (FrNm.SWS_FrNm_00243,FrNm.SWS_FrNm_00226):
         - Invoke FrNm_RepeatMessageRequest and verify that
        FrNm_RepeatMessageRequest returns E_OK.
    11: Invoke FrNm_MainFunction in a loop till the time
        "FrNmRepeatMessageTime + T" expires to enter into Normal Operation
        State.
        (T = Time equivalent of FrNmRepetitionCycle - (FrNmRepeat-MessageTime %
             Time equivalent of FrNmRepetitionCycle)).
    12: Call FrNm_GetState and verify that the current state is
        NM_STATE_NORMAL_OPERATION and the current mode is NM_MODE_SYNCHRONIZE.
    13: VP (FrNm.SWS_FrNm_00243,FrNm.SWS_FrNm_00226):
         - Invoke FrNm_RepeatMessageRequest and verify that
        FrNm_RepeatMessageRequest returns E_OK.
    14: Invoke FrNm_MainFunction in a loop till the time equivalent of
        FrNmRepetitionCycle to enter into repeat message state.
    15: Invoke FrNm_NetworkRelease.
    16: Invoke FrNm_MainFunction in a loop till the time
        "FrNmRepeatMessageTime + T" expires to enter into ready sleep State.
        (T = Time equivalent of FrNmRepetitionCycle -
             (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)).
    17: Call FrNm_GetState and verify that the current state is
        NM_STATE_READY_SLEEP and the current mode is NM_MODE_SYNCHRONIZE.
    18: VP (FrNm.SWS_FrNm_00243,FrNm.SWS_FrNm_00226):
         - Invoke FrNm_RepeatMessageRequest and verify that
        FrNm_RepeatMessageRequest returns E_OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0103</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_RequestBusSynchronization returns E_OK.[FrNm.SWS_FrNm_00174]
  
Test Object: None.
Test Precondition: 
    FrNmBusSynchronizationEnabled == true.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel do the following:
    03: VP (FrNm.SWS_FrNm_00246, FrNm.SWS_FrNm_00174):
         - Invoke FrNm_RequestBusSynchronization and verify that
        FrNm_RequestBusSynchronization returns E_OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0104</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNmSynchronizationPointEnabled is set to true, FrNm module
    invokes Nm_SynchronizationPoint only after completion of the repetition
    cycle.
    [FrNm.SWS_FrNm_00322]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled = false.
    FrNmMainAcrossFrCycle = false.
    FrNmBusSynchronizationEnabled = true.
    FrNmSynchronizationPointEnabled = true.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel do the following:
    03: Invoke FrNm_NetworkRequest.
    04: Verify that FrNm_NetworkRequest returns E_OK.
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle + FrNmMainFunctionPeriod" expires.
    06: Invoke FrNm_GetState.
    07: Verify that the current state is NM_STATE_REPEAT_MESSAGE andor NM_STATE_NORMAL_OPERATION.
        Current mode is NM_MODE_NETWORK.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - 1" expires.
    09: VP(FrNm.ECUC_FrNm_00021):
        - Nm_SynchronizationPoint is not invoked.
    10: Invoke FrNm_MainFunction_CFGIF.
    11: VP (FrNm.SWS_FrNm_00322, FrNm.ECUC_FrNm_00021):
         - Nm_SynchronizationPoint is invoked.
    12: Check whether the parameter passed into Nm_SynchronizationPoint match
        with configured value of ComMChannelId.
    13: Invoke FrNm_MainFunction in a loop till the time
        "FrNmRepeatMessageTime + T" expires to enter into Normal Operation State
        (T = Time equivalent of FrNmRepetitionCycle -
             (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)).
    14: Call FrNm_GetState and verify that the current state is
        NM_STATE_NORMAL_OPERATION.
    15: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - 1" expires.
    16: VP (FrNm.ECUC_FrNm_00021):
        - Nm_SynchronizationPoint is not invoked.
    17: Invoke FrNm_MainFunction_CFGIF.
    18: VP(FrNm.SWS_FrNm_00322, FrNm.ECUC_FrNm_00021):
         - Nm_SynchronizationPoint is invoked and the parameter passed into
        Nm_SynchronizationPoint matches with configured value of ComMChannelId.
  
Test Input: None.
Test Output: 
    Nm_SynchronizationPoint() is invoked according to the verification points
    mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0149</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1328</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify if no positive vote is received in the Normal Operation State
    for the duration of FrNmRemoteSleepIndTime, then FrNm module invokes
    Nm_RemoteSleepIndication at the completion of a Repetition Cycle
    after the expiry of FrNmRemoteSleepIndTime.

    To verify If Remote Sleep Indication has been previously detected
    and if a Network Management PDU is received (through FrNm_RxIndication) in
    the Normal Operation State again, FrNm invokes Nm_RemoteSleepCancellation.

    To verify that FrNm_CheckRemoteSleepIndication updates nmRemoteSleepIndPtr
    with 1 if remote sleep indication is detected at present, with 0 if remote
    sleep indication is not detected at present.

    To verify FrNm_CheckRemoteSleepIndication returns E_OK if there is no error
  
Test Object: None.
Test Precondition: 
    FrNmRemoteSleepIndicationEnabled = true
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Get the current FlexRay time to decide next repetition cycle interval.
    05: Calculate time to expire the remaining time of FrNmRepetitionCycle after
       completion of the time equivalent of FrNmRemoteSleepIndTime.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        (FrNmRemoteSleepIndTime -1)
    07: VP (FrNm.EB_Ref.SWS_FrNm_00181.FrNmNotify):
         - Nm_RemoteSleepIndication should not be notified to Generic NM Interface
        module.
    08: Invoke FrNm_MainFunction_CFGIF once
    09: VP (FrNm.EB_Ref.SWS_FrNm_00181.FrNmNotify, FrNm.ECUC_FrNm_00025):
         - Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    10: Invoke FrNm_CheckRemoteSleepIndication API
    11: VP (FrNm.SWS_FrNm_00185, FrNm.SWS_FrNm_00247):
         - Call  FrNm_CheckRemoteSleepIndication  and verify that it returns E_OK
        and verify that the pointer to the location where the check result of
        remote sleep indication is copied contains TRUE.
    12: Invoke FrNm_RxIndication with TST_FRNM_CHANNEL1_RXPDUID for successful
        reception of vote Pdu.
    13: VP(FrNm.EB_Ref.SWS_FrNm_00229.NormalOperation, FrNm.SWS_FrNm_00251, FrNm.EB.PDULENGTHTYPE001):
         - Nm_RemoteSleepCancellation should be notified to Generic NM Interface
        module.
    14: Invoke FrNm_CheckRemoteSleepIndication API.
    15: VP (FrNm.SWS_FrNm_00185):
         - The function FrNm_CheckRemoteSleepIndication returns E_OK
        and also verify that the pointer to the location where the check result
        of remote sleep indication is copied contains FALSE.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00181.FrNmNotify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PDULENGTHTYPE001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00229.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0151</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1508</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if Remote Sleep Indication has been previously detected and
    if a Network Management PDU is received (through FrNm_RxIndication) in the
    Ready Sleep State, FrNm invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmRemoteSleepIndicationEnabled = true
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Get the current FlexRay time to decide next repetition cycle interval.
    05: Calculate time to expire the remaining time of FrNmRepetitionCycle after
       completion of the time equivalent of FrNmRemoteSleepIndTime.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Invoke FrNm_NetworkRelease
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time
        FrNmRepetitionCycle expires.
    10: Invoke FrNm_GetState.
    11: VP (FrNm.EB_Ref.FRNM114.NormalOperation):
        - Current state is NM_STATE_READY_SLEEP.
        - Current mode is NM_MODE_NETWORK
    12: Check Remote Sleep Indication
    13: Receive a Nm-vote and invoke FrNm_RxIndication with
        TST_FRNM_CHANNEL1_RXPDUID for successful reception of Pdu.
    14: VP (FrNm.EB_Ref.SWS_FrNm_00229.ReadySleep):
         - FrNm should notify the Generic NM Interface module by
        calling Nm_RemoteSleepCancellation.
  
Test Input: None.
Test Output: 
    After the reporting of Remote sleep indication to Nm, since a PDU is
    received, FrNm cancels the remote sleep indication. PDU reception, remote
    sleep cancellation will be indicated to Nm according to the verification
    points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00229.ReadySleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM114.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0152</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1659</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Verify that if Remote Sleep Indication has been previously detected and
    if Repeat Message State is entered from Normal Operation State, the FrNm
    calls the function Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmNodeDetectionEnabled == true
    FrNmRemoteSleepIndicationEnabled = true
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Get the current FlexRay time to decide next repetition cycle interval.
    05: Calculate time to expire the remaining time of FrNmRepetitionCycle after
        completion of the time equivalent of FrNmRemoteSleepIndTime
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Invoke FrNm_RepeatMessageRequest.
    09: Verify that FrNm_RepeatMessageRequest returns E_OK.
    10: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle expires.
    11: Check Remote Sleep Indication
    12: Invoke FrNm_GetState.
    13: Verify that the current state is NM_STATE_REPEAT_MESSAGE and
        Current mode is NM_MODE_NETWORK.
    14: VP (FrNm.EB_Ref.SWS_FrNm_00230.NormalOperation):
         - Nm_RemoteSleepCancellation is invoked.
  
Test Input: None.
Test Output: 
    After the reporting of Remote sleep indication to Nm, since repeat message
    is requested, FrNm cancels the remote sleep indication. Remote sleep
    cancellation will be indicated to Nm.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00230.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0148</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if Remote Sleep Indication has been previously detected and
    if Repeat Message State is entered from Ready Sleep State, the FrNm calls
    the function Nm_RemoteSleepCancellation.
    FRNM230: If Remote Sleep Indication has been previously detected and the
             FrNm enters the Repeat Message State from the Normal Operation
             State or from the Ready Sleep State, then the NM shall notify the
             Generic NM Interface module that some nodes in the cluster are not
             ready to sleep any more (the 'Remote Sleep Cancellation') by
             calling Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    FrNmNodeDetectionEnabled == true
    FrNmRemoteSleepIndicationEnabled = true
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Get the current FlexRay time to decide next repetition cycle interval.
    05: Calculate time to expire the remaining time of FrNmRepetitionCycle after
       completion of the time equivalent of FrNmRemoteSleepIndTime.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time 'T' expires.
        "T" represents the required time to expire the remaining time of
        FrNmRepetitionCycle after completion of the time equivalent of
        FrNmRemoteSleepIndTime.
    07: Verify that Nm_RemoteSleepIndication should be notified to Generic NM Interface
        module.
    08: Invoke FrNm_NetworkRelease
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    10: Invoke FrNm_GetState.
    11: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK
    12: Invoke FrNm_RepeatMessageRequest.
    13: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    14: Invoke FrNm_GetState.
    15: VP (FrNm.EB_Ref.SWS_FrNm_00230.ReadySleep):
        Current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
    16: VP (FrNm.EB_Ref.SWS_FrNm_00230.ReadySleep):
         - Nm_RemoteSleepCancellation is invoked.
  
Test Input: None.
Test Output: 
    After the reporting of Remote sleep indication to Nm, since repeat message
    is requested, FrNm cancels the remote sleep indication. Remote sleep
    cancellation will be indicated to Nm according to the verification points
    mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00230.ReadySleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>TC_FRNM_StartUpErrorReaction</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>1950</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm channel transits to Synchronize Mode from Bus-Sleep State
    when FrNm_NetworkRequest is called. (FrNm.SWS_FrNm_00316)
    Verify that when FlexRay NM channel is in Synchronize state due to
    FrNm_NetworkRequest(), and if FrNm_StartupError() is called, then FlexRay
    NM remains in Synchronize state. (SWS_FrNm_00340)
    Verify that if FrNm_Init is called in Synchronize mode, then FlexRay NM
    module enters the Bus Sleep State. (FrNm.EB_Ref.InitCall)
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - FrNmPassiveModeEnabled is set to 'false'
  
Test Execution: 
    01: Initialize FrNm and stubs
    02: For each configured FrNm Channel, execute steps 03-12
    03: Ensure the current state and mode of FrNm is "Bus-Sleep"
    04: Invoke FrNm_NetworkRequest().
    05: Invoke FrNm_MainFunction() once.
    06: VP (FrNm.SWS_FrNm_00316):
        * FrNm switches to state "NM_STATE_SYNCHRONIZE" and mode
          "NM_MODE_SYNCHRONIZE".
    07: Invoke FrNm_StartupError().
    08: Invoke FrNm_MainFunction() once.
    09: VP (SWS_FrNm_00340):
        * Current State of FrNm remains in NM_STATE_SYNCHRONIZE.
        * Current mode of FrNm remains in NM_MODE_SYNCHRONIZE.
    10: Invoke FrNm_Init().
    11: Invoke FrNm_MainFunction() once.
    12: VP (FrNm.EB_Ref.InitCall):
        * FrNm switches to state "NM_STATE_BUS_SLEEP" and mode
          "NM_MODE_BUS_SLEEP".
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.InitCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>TC_FRNM_StartUpErrorReaction_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2064</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm channel transits to Synchronize Mode from Bus-Sleep State
    when FrNm_NetworkGwEraRequest is called. (FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode)
    Verify that when FlexRay NM channel is in Synchronize state due to
    FrNm_NetworkGwEraRequest(), and if FrNm_StartupError() is called, then FlexRay
    NM remains in Synchronize state. (SWS_FrNm_00340)
    Verify that if FrNm_Init is called in Synchronize mode, then FlexRay NM
    module enters the Bus Sleep State. (FrNm.EB_Ref.InitCall)
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - FrNmPassiveModeEnabled is set to 'false'
  
Test Execution: 
    01: Initialize FrNm and stubs
    02: For each configured FrNm Channel, execute steps 03-12
    03: Ensure the current state and mode of FrNm is "Bus-Sleep"
    04: Invoke FrNm_NetworkGwEraRequest().
    05: Invoke FrNm_MainFunction() once.
    06: VP (FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode):
        * FrNm switches to state "NM_STATE_SYNCHRONIZE" and mode
          "NM_MODE_SYNCHRONIZE".
    07: Invoke FrNm_StartupError().
    08: Invoke FrNm_MainFunction() once.
    09: VP (SWS_FrNm_00340):
        * Current State of FrNm remains in NM_STATE_SYNCHRONIZE.
        * Current mode of FrNm remains in NM_MODE_SYNCHRONIZE.
    10: Invoke FrNm_Init().
    11: Invoke FrNm_MainFunction() once.
    12: VP (FrNm.EB_Ref.InitCall):
        * FrNm switches to state "NM_STATE_BUS_SLEEP" and mode
          "NM_MODE_BUS_SLEEP".
  
Test Input: 
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Synchronize state.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.InitCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0178</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FlexRay NM receives E_NOT_OK for the invocation
    of FrIf_GetGlobalTime in Normal Operation state, then FlexRay NM
    enters Synchronize state
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Set the return value of FrIf_GetGlobalTime_Stub to E_NOT_OK.
    05: Invoke FrNm_MainFunction_CFGIF till RepetitionCycle expires.
    06: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked.
    07: Invoke FrNm_GetState.
    08: Current state is NM_STATE_SYNCHRONIZE
         - Current Mode is NM_MODE_SYNCHRONIZE.
    09: Revert the return value of FrIf_GetGlobalTime_Stub to E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0179a</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FlexRay NM is in Repeat Message state and receives
    E_NOT_OK for the invocation of FrIf_GetGlobalTime, then it transits to
    Bus Sleep state if the configuration parameter FRNM_CYCLE_COUNTER_EMULATION
    is set to TRUE.
  
Test Object: None.
Test Precondition: 
    FrNmCycleCounterEmulation == false
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State State.
    04: Set the return value FrIf_GetGlobalTime_Stub to E_NOT_OK.
    05: Invoke FrNm_MainFunction_CFGIF  till RepetitionCycle expires.
    06: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked
    07: Invoke FrNm_GetState.
    08: VP (FrNm.SWS_FrNm_00384):
         - Current state is NM_STATE_SYNCHRONIZE
         - Current Mode is NM_MODE_SYNCHRONIZE.
    09: Revert the return value of FrIf_GetGlobalTime_Stub to E_OK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0100</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that FlexRay NM module set to Normal Operation State from the Repeat
  Message state if FrNm_NetworkRequest was called and FrNmRepeatMessageTime and
  time equivalent of Repetition Cycle has elapsed.

Test Object: None.
Test Precondition: 
   FrNmPassiveModeEnabled == false
   FrNmMainAcrossFrCycle == false
   FrNmRepeatMessageTime &gt; 0

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNm Channel do the following:
  03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State State.
  04: Invoke FrNm_MainFunction_CFGIF in a loop till the latest time by which
      the module can stay in state NM_STATE_REPEAT_MESSAGE. i.e till the time
      FrNmRepeatMessageTime + (T - FrNmMainFunctionPeriod) expires.
      (T = Time equivalent of FrNmRepetitionCycle -
           (FrNmRepeatMessageTime % Time equivalent of FrNmRepetitionCycle)).
  05: Invoke FrNm_GetState.
  06: VP (FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle):
       - Current state is NM_STATE_REPEAT_MESSAGE.
       - Current mode is NM_MODE_NETWORK.
  07: Invoke FrNm_MainFunction_CFGIF once to trigger state into
      'Normal Operation'.
  08: Invoke FrNm_GetState.
  09: VP (FrNm.SWS_FrNm_00121):
       - Current state is NM_STATE_NORMAL_OPERATION.
       - Current mode is NM_MODE_NETWORK.

Test Input: 

Test Output: 
  FrNm module enters Normal Operation State from the Repeat Message state
  according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0100_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that FlexRay NM module set to Normal Operation State from the Repeat
  Message state if FrNm_NetworkGwEraRequest was called and FrNmRepeatMessageTime and
  time equivalent of Repetition Cycle has elapsed.

Test Object: None.
Test Precondition: 
   FrNmPassiveModeEnabled == false
   FrNmMainAcrossFrCycle == false
   FrNmRepeatMessageTime &gt; 0

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNm Channel do the following:
  03: Invoke Tst_GoToRepeatMessageState_FrNm_NetworkGwEraRequest to enter 
      Repeat Message State State.
  04: Invoke FrNm_MainFunction_CFGIF in a loop till the latest time by which
      the module can stay in state NM_STATE_REPEAT_MESSAGE. i.e till the time
      FrNmRepeatMessageTime + (T - FrNmMainFunctionPeriod) expires.
      (T = Time equivalent of FrNmRepetitionCycle -
           (FrNmRepeatMessageTime % Time equivalent of FrNmRepetitionCycle)).
  05: Invoke FrNm_GetState.
  06: VP (FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle):
       - Current state is NM_STATE_REPEAT_MESSAGE.
       - Current mode is NM_MODE_NETWORK.
  07: Invoke FrNm_MainFunction_CFGIF once to trigger state into
      'Normal Operation'.
  08: Invoke FrNm_GetState.
  09: VP (FrNm.SWS_FrNm_00121):
       - Current state is NM_STATE_NORMAL_OPERATION.
       - Current mode is NM_MODE_NETWORK.

Test Input: 
  FrNm_NetworkGwEraRequest call

Test Output: 
  FrNm module enters Normal Operation State from the Repeat Message state
  according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0097</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2588</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that, FlexRay NM module enters Repeat Message state from
    Normal Operation State if FrNm_RepeatMessageRequest is called and time
    equivalent of Repetition Cycle is completed.
    To verify that FrNm_RepeatMessageRequest requests node detection on the
    FlexRay Bus NM nodes.
  
Test Object: None.
Test Precondition: 
     FrNmNodeDetectionEnabled = true
     FrNmMainAcrossFrCycle = false
     FrNmRepeatMessageTime &gt; 0
     FrNmControlBitVectorActive = true
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Invoke FrNm_RepeatMessageRequest.
    05. Verify that FrNm_RepeatMessageRequest returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - FrNmMainFunctionPeriod" expires to check
        the state still remains at NM_STATE_NORMAL_OPERATION.
    07: Invoke FrNm_GetState.
    08: VP (FrNm.EB_Ref.SWS_FrNm_00124.RMRequest):
        Current state is NM_STATE_NORMAL_OPERATION.
        Current mode is NM_MODE_NETWORK.
    09: VP (FrNm.ASR403.FRNM172):
         - Check if Repeat message bit (Bit-0 of Byte-0) is still not set as the
        transition to repeat message not yet done.
    10: Invoke FrNm_MainFunction_CFGIF once to transit to Repeat Message state.
    11: Invoke FrNm_GetState.
    12: VP (FrNm.EB_Ref.SWS_FrNm_00124.RMRequest):
        - Current state is NM_STATE_REPEAT_MESSAGE.
        - Current mode is NM_MODE_NETWORK.
    13: VP (FrNm.ASR403.FRNM172):
         - FrIf_Transmit is invoked.
        Repeat message bit (Bit-0 in Byte-0) is set.
    14: Reset the contents of the NM-Data Pdu;
        Invoke FrNm_TriggerTransmit for the Tx Confirmation Pdu Id to trigger
        the transmission of a NM-Data Pdu.
    15: VP (FrNm.ASR403.FRNM172, FrNm.SWS_FrNm_00226, FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit):
         - Repeat message bit is set in the CBV of the NM-Data Pdu (Byte-0, Bit-0).
    16: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepeatMessgeTime - 1", here FrNmRepeatMessgeTime must be aligned
        to FrNmRepetitionCycle.
    17: Invoke FrNm_GetState.
    18: Verify that the current state is NM_STATE_REPEAT_MESSAGE and
        Current mode is NM_MODE_NETWORK.
    19: Reset the contents of the NM-Data Pdu;
        Invoke FrNm_TriggerTransmit for the Tx Confirmation Pdu Id to trigger
        the transmission of a NM-Data Pdu.
    20: VP (FrNm.ASR403.FRNM172, FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit):
         - Repeat message bit is set in the CBV of the NM-Data Pdu (Byte-0, Bit-0)
    21: Invoke FrNm_MainFunction_CFGIF once
    22: Invoke FrNm_GetState.
    23: Verify that current state is NM_STATE_NORMAL_OPERATION and
        Current mode is NM_MODE_NETWORK.
    24: VP (FrNm.ASR403.FRNM172):
         - FrIf_Transmit is invoked.
         - Repeat message bit (Bit-0 in Byte-0) is cleared.
    25: Reset the contents of the NM-Data Pdu;
        Invoke FrNm_TriggerTransmit for the Tx Confirmation Pdu Id to trigger
        the transmission of a NM-Data Pdu.
    26: VP (FrNm.ASR403.FRNM172, FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit):
         - Repeat message bit is reset in the CBV of the NM-Data Pdu
        (Byte-0, Bit-0).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00124.RMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NOStateToRMState_RMBit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2824</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The FrNm module leaves the Normal Operation State and enters the
    Repeat Message State if a Repetition Cycle is completed and a
    Repeat Message Request is active due to the Repeat Message Request Bit
    in a received NM-PDU.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to 'false'.
      - "FrNmNodeDetectionEnabled" is set to 'true'.
      - "FrNmRepeatMessageTime" is set to be greater than 0.
      - "FrNmControlBitVectorActive" is set to 'true'.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Normal Operation State.
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Simulate the reception of an NM-PDU with Repeat Message Bit set.
    05: Invoke the channel's main function in a loop until the time equivalent
        of "FrNmRepetitionCycle - FrNmMainFunctionPeriod" elapses.
    06: VP (FrNm.EB_Ref.SWS_FrNm_00124.RMBit):
         - The channel remains in Normal Operation state.
    07: Invoke the channel's main function once.
    08: VP (FrNm.EB_Ref.SWS_FrNm_00124.RMBit):
         - The FrNm module changes the state from Normal Operation
        State to Repeat Message State.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00124.RMBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0101</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>2925</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that FlexRay NM module enters the Ready Sleep State from the
    Repeat Message state if FrNm_NetworkRelease is called and
    FrNmRepeatMessageTime and time equivalent of Repetition Cycle has elapsed.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
     FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    04: Invoke FrNm_NetworkRelease
    05: Verify that FrNm_NetworkRelease returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the latest time by which
        the module can stay in state NM_STATE_REPEAT_MESSAGE. i.e till the time
        FrNmRepeatMessageTime + (T - FrNmMainFunctionPeriod) expires.
        (T = Time equivalent of FrNmRepetitionCycle -
             (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)).
    07: Invoke FrNm_GetState.
    08: Verify that FrNm_GetState returns E_OK.
        Verify that the Current state is still NM_STATE_REPEAT_MESSAG and
        Current mode is still NM_MODE_NETWORK.
    09: Invoke FrNm_MainFunction_CFGIF once to enter Ready Sleep State.
    10: Invoke FrNm_GetState.
    11: VP (FrNm.SWS_FrNm_00122):
        Current state is NM_STATE_READY_SLEEP.
        Current mode is NM_MODE_NETWORK.
  
Test Input: 
  
Test Output: 
    FrNm module enters Ready Sleep State from Repeat Message State,
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0102</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3030</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that FlexRay NM module enters the Ready Sleep State from the
    Normal Operation State if FrNm_NetworkRelease is called and time equivalent
    of Repetition Cycle has elapsed.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Invoke FrNm_NetworkRelease
    05: Verify that FrNm_NetworkRelease returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - FrNmMainFunctionPeriod" expires to check the
        state still remains at NM_STATE_NORMAL_OPERATION.
    07: Invoke FrNm_GetState.
    08: Verify that the current state is NM_STATE_NORMAL_OPERATION and
        Current mode is NM_MODE_NETWORK.
    09: Invoke FrNm_MainFunction_CFGIF once to transit to Ready Sleep state.
    10: Invoke FrNm_GetState.
    11: VP (FrNm.SWS_FrNm_00125):
        Current state is NM_STATE_READY_SLEEP.
        Current mode is NM_MODE_NETWORK.
  
Test Input: 
  
Test Output: 
    FrNm module enters Ready Sleep State from Normal Operation State,
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0096</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that FlexRay NM module enters the Repeat Message state from
    the Ready Sleep State if FrNm_RepeatMessageRequest is called and time
    equivalent of Repetition Cycle has elapsed.

    To verify that the state machine guards, transitions, conditions,
    and actions are evaluated in each execution of the FrNm_MainFunction.

    To verify that FrNm_RepeatMessageRequest request node detection
    on the FlexRay Bus NM nodes.
  
Test Object: None.
Test Precondition: 
     FrNmNodeDetectionEnabled == true
     FrNmMainAcrossFrCycle == false
     FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_RepeatMessageRequest.
    05: Verify that FrNm_RepeatMessageRequest returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        FrNmRepetitionCycle - 1) to see that state remains in Ready Sleep State.
    07: Invoke FrNm_GetState.
    08: VP (FrNm.ASR403.FRNM356):
        Current state is NM_STATE_READY_SLEEP.
        Current mode is NM_MODE_NETWORK.
    09: Invoke FrNm_MainFunction_CFGIF once to enter Repeat Message state.
    10: Invoke FrNm_GetState.
    11: VP (FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequest, FrNm.ASR403.FRNM356):
        Current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
    12: VP (FrNm.ASR403.FRNM172, FrNm.SWS_FrNm_00226):
         - FrIf_Transmit is invoked.
        Repeat message bit (Bit-0 in Byte-0) is set.
    13: Reset the contents of the NM-Data Pdu;
        Invoke FrNm_TriggerTransmit for the Tx Confirmation Pdu Id to trigger.
        the transmission of a NM-Data Pdu.
    14: VP (FrNm.ASR403.FRNM172):
         - Repeat message bit is set in the CBV of the NM-Data Pdu
        (Byte-0, Bit-0).
    15: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepeatMessgeTime - 1", here FrNmRepeatMessgeTime must be
        aligned to FrNmRepetitionCycle.
    16: Invoke FrNm_GetState.
    17: Verify that Verify that the current state is NM_STATE_REPEAT_MESSAGE and
        Current mode is NM_MODE_NETWORK.
    18: Reset the contents of the NM-Data Pdu;
        Invoke FrNm_TriggerTransmit for the Tx Confirmation Pdu Id to trigger
        the transmission of a NM-Data Pdu.
    19: VP (FrNm.ASR403.FRNM172):
         - Repeat message bit is set in the CBV of the NM-Data Pdu
       (Byte-0, Bit-0)
    20: Invoke FrNm_MainFunction_CFGIF once
    21: Invoke FrNm_GetState.
    22: Verify that current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK.
    23: VP (FrNm.ASR403.FRNM172):
         - FrIf_Transmit is not invoked.
    24: Reset the contents of the NM-Data Pdu;
        Invoke FrNm_TriggerTransmit for the Tx Confirmation Pdu Id to trigger
        the transmission of a NM-Data Pdu.
    25: VP (FrNm.ASR403.FRNM172):
         - Repeat message bit is reset in the CBV of the NM-Data Pdu
        (Byte-0, Bit-0).
  
Test Input: 
  
Test Output: 
  FrNm module enters Repeat Message State from Ready Sleep State,
  according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>TC_FRNM_RSStateToRMState_RMBit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3358</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The FrNm module leaves the Ready State and enters the Repeat Message State
    if a Repetition Cycle is completed, the Ready Sleep Counter has not expired
    and a Repeat Message Request is active due to the Repeat Message Request
    Bit in a received NM-PDU.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmNodeDetectionEnabled" is set to 'true'.
      - "FrNmRepeatMessageTime" is set to be greater than 0.
      - "FrNmControlBitVectorActive" is set to 'true'.
    * Module state:
      - FrNm module is initialized.
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following.
    03: Trigger a transition to Synchronize State using FrNm_PassiveStartUp().
    04: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    05: Verify that FlexRay NM module enters into Repeat Message state.
    06: Invoke the channel's main function in a loop until the Repeat Message
           timer elapses (to enter Ready Sleep state)
    07: Verify that FlexRay NM module enters into  Ready Sleep state.
    08: Invoke the channel's main function in a loop until "Ready Sleep Time"
        requires two more invocations of the main function to elapse.
    09: Simulate the reception of an NM-PDU with Repeat Message Bit set.
    10: Invoke the channel's main function once so that "Ready Sleep Time"
        requires one more invocation of the main function to elapse.
    11: VP (FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequestBit):
         - The channel remains in Ready Sleep state.
    12: Invoke the channel's main function once so that "Ready Sleep Time"
        elapses.
    13: VP (FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequestBit):
         - FrNm module leaves the Ready Sleep State and enters into
        Repeat Message State when the Repetition Cycle is completed.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00130.RepeatMessageRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.RepeatMessageRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0098</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that, FrNm module enters Normal Operation State from the Ready Sleep
    State if FrNm_NetworkRequest is called and if time equivalent of Repetition
    Cycle is completed with out invoking FrNm_RepeatMessageRequest.

    To verify that, FrNm_GetState updates nmStatePtr with current State and the
    nmModePtr with current Mode

    To verify that, FrNm_GetState function returns E_OK when there is No error.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_NetworkRequest
    05: Verify that FrNm_NetworkRequest returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - FrNmMainFunctionPeriod" to see that state remains
        at NM_STATE_READY_SLEEP.
    07: Invoke FrNm_GetState.
    08: VP (FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00248):
         - Current state is 'NM_STATE_READY_SLEEP' and
           current mode is 'NM_MODE_NETWORK'.
    09: Invoke FrNm_MainFunction_CFGIF once to enter Normal operation state.
    10: Invoke FrNm_GetState.
    11: VP (FrNm.SWS_FrNm_00131, FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00248, FrNm.EB_Ref.FRNM113.ReadySleep):
         - Current state is 'NM_STATE_NORMAL_OPERATION' and
           current mode is 'NM_MODE_NETWORK'.
  
Test Input: 
  
Test Output: 
    FrNm module enters Normal Operation State from Ready Sleep State,
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM113.ReadySleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0098_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that, FrNm module enters Normal Operation State from the Ready Sleep
    State if FrNm_NetworkRequest is called and if time equivalent of Repetition
    Cycle is completed with out invoking FrNm_RepeatMessageRequest.

    To verify that, FrNm_GetState updates nmStatePtr with current State and the
    nmModePtr with current Mode

    To verify that, FrNm_GetState function returns E_OK when there is No error.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_NetworkGwEraRequest
    05: Verify that FrNm_NetworkGwEraRequest returns E_OK.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle - FrNmMainFunctionPeriod" to see that state remains
        at NM_STATE_READY_SLEEP.
    07: Invoke FrNm_GetState.
    08: VP (FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00248):
         - Current state is 'NM_STATE_READY_SLEEP' and
           current mode is 'NM_MODE_NETWORK'.
    09: Invoke FrNm_MainFunction_CFGIF once to enter Normal operation state.
    10: Invoke FrNm_GetState.
    11: VP (FrNm.SWS_FrNm_00131, FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00248, FRNM113_ReadySleep):
         - Current state is 'NM_STATE_NORMAL_OPERATION' and
           current mode is 'NM_MODE_NETWORK'.
  
Test Input: 
    FrNm_NetworkGwEraRequest call from ready sleep state
  
Test Output: 
    FrNm module enters Normal Operation State from Ready Sleep State,
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.ReadySleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0099</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3704</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that,
    FrNm module enters Bus-Sleep mode from Ready Sleep State when
    NM-messages(NM-Vote) are not received in the configurable amount of time
    determined by FrNmReadySleepCnt.

    The FlexRay NM module decrements the Ready Sleep Counter at the end of an
    NM Repetition Cycle and before the evaluation of state change requests if
    FrNm_RepeatMessageRequest and FrNm_NetworkRequest are not called and the
    Ready Sleep Counter has not expired.

    When Bus-Sleep Mode is entered from Ready Sleep State, FrNm notifies
    Generic Network Management Interface by calling Nm_BusSleepMode.

    FrNm_GetState updates nmStatePtr with current State and the nmModePtr with
    current Mode
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        FrNmReadySleepCnt - 1) expires to see that state remains in Ready Sleep
        State.
    05: Invoke FrNm_GetState.
    06: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK.
    07: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        Sleep FrNmRepetitionCycle - 1) expires to see that state remains in
        Ready State.
        Note: FrNmReadySleepCnt is multiple of FrNmRepetitionCycle and this is
        why state checked 2 times.
    08: Invoke FrNm_GetState.
    09: VP (FrNm.ASR403.FRNM132):
        Current state is NM_STATE_READY_SLEEP.
        Current mode is NM_MODE_NETWORK.
    10: Invoke FrNm_MainFunction_CFGIF once to enter NM_STATE_BUS_SLEEP.
    11: Invoke FrNm_GetState.
    12: VP (SWS_FrNm_00101, FrNm.ASR403.FRNM132, FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00129, FrNm.SWS_FrNm_00135):
        Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
        Verify that Nm_BusSleepMode is invoked.
  
Test Input: 
  
Test Output: 
    FrNm module enters Bus-Sleep mode from Network mode, according to the
    verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0156</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3844</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that in the Ready Sleep State, if FrNm_NetworkRequest is invoked
    between expiry of FrNmReadySleepCnt and transition to Bus-Sleep mode, then
    FrNm_NetworkRequest is ignored.

    Note: CTSP description is not correct. It checks for scenario
    "if FrNm_NetworkRequest is invoked after expiry of FrNmReadySleepCnt and
    before expiry of FrNmRepetitionCycle",.
    This is not feasible since unit of FrNmReadySleepCnt is FrNmRepetitionCycle.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "ReadySleep counter - FrNmMainFunctionPeriod" expires.
    05: Invoke FrNm_RxIndication with vote bit set.
        Note: Here the ready sleep counter will reset since this is a request
        from remote node, but no verification is described in CTSP.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        FrNmReadySleepCnt - FrNmMainFunctionPeriod) expires to check that the
        state remains in Ready Sleep State.
    07: Invoke FrNm_NetworkRequest
    08: Invoke FrNm_MainFunction_CFGIF once. Last FrNm_NetworkRequest must have
        ignored.
    09: Invoke FrNm_GetState.
    10: VP:(FrNm.ASR403.FRNM314.LocalReq)
        FrNm_GetState returns E_OK.
        Verify that the last FrNm_NetworkRequest is ignored and the current
        state is NM_STATE_BUS_SLEEP and the current mode is 'NM_MODE_BUS_SLEEP'.
  
Test Input: 
  
Test Output: 
    FrNm module enters the Bus Sleep State ignoring FrNm_NetworkRequest
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM314.LocalReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0156_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>3981</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that in the Ready Sleep State, if FrNm_NetworkGwEraRequest is invoked
    between expiry of FrNmReadySleepCnt and transition to Bus-Sleep mode, then
    FrNm_NetworkGwEraRequest is ignored.

    Note: CTSP description is not correct. It checks for scenario
    "if FrNm_NetworkGwEraRequest is invoked after expiry of FrNmReadySleepCnt and
    before expiry of FrNmRepetitionCycle",.
    This is not feasible since unit of FrNmReadySleepCnt is FrNmRepetitionCycle.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "ReadySleep counter - FrNmMainFunctionPeriod" expires.
    05: Invoke FrNm_RxIndication with vote bit set.
        Note: Here the ready sleep counter will reset since this is a request
        from remote node, but no verification is described in CTSP.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        FrNmReadySleepCnt - FrNmMainFunctionPeriod) expires to check that the
        state remains in Ready Sleep State.
    07: Invoke FrNm_NetworkGwEraRequest
    08: Invoke FrNm_MainFunction_CFGIF once. Last FrNm_NetworkGwEraRequest must 
        have been ignored.
    09: Invoke FrNm_GetState.
    10: VP:(FrNm.ASR403.FRNM314.LocalReq)
        FrNm_GetState returns E_OK.
        Verify that the last FrNm_NetworkGwEraRequest is ignored and the current
        state is NM_STATE_BUS_SLEEP and the current mode is 'NM_MODE_BUS_SLEEP'.
  
Test Input: 
    FrNm_NetworkGwEraRequest call during transition to Bus-Sleep mode
  
Test Output: 
    FrNm module enters the Bus Sleep State ignoring FrNm_NetworkGwEraRequest
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM314.LocalReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0095</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that,
    FlexRay NM module does not change to the Bus-Sleep mode from Ready Sleep
    State when NM-messages (NM-Vote) are received in the configurable amount of
    time determined by FrNmReadySleepCnt.

    In Ready Sleep State, if Nm-Vote reception (ClusterAwakeVote detected) and
    the completion of the Repetition Cycle (When FrNmReadySleepCnt &gt;= 1) are
    detected in the same Main Function, then FrNm does not change to the
    Bus-Sleep mode.

    As long as NM-messages from other nodes are received, FrNm module postpones
    transition into the Bus-Sleep Mode.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "ReadySleep counter - FrNmMainFunctionPeriod" expires.
    05: Invoke FrNm_RxIndication with vote bit set.
        Note : Here the ready sleep counter will reset since this is a request
        from remote node.
    06: Invoke FrNm_MainFunction_CFGIF once.
    07: Invoke FrNm_GetState.
    08: VP:(FrNm.ASR403.FRNM314)
        FrNm_GetState returns E_OK.
        Current state is NM_STATE_READY_SLEEP
         - Current Mode is NM_MODE_NETWORK.
        Note: This test case is a subset of TC_FRNM_0156, added here to be
        con formant with CTSP.
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0157</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4243</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if Repeat Message State is entered, FrNm module starts the
    Repeat Message Timer.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToRepeatMessageState to enter repeat message state.
    04: Execute steps 05 to 07 until state enters NM_STATE_NORMAL_OPERATION and
        RepeatMessageTimeDuration less than or equal to RepeatMsgeStayTime.
    05: Invoke FrNm_MainFunction_CFGIF
    06: Increment Variable RepeatMessageTimeDuration
    07: Invoke FrNm_GetState.
    08: VP (FrNm.SWS_FrNm_00117, FrNm.ASR403.FRNM119):
        Current state is NM_STATE_NORMAL_OPERATION.
        Current mode is NM_MODE_NETWORK.
        RepeatMessageTimeDuration == Main Functions required to expire the
                                     time "T"
        ("T" = FrNmRepeatMessageTime + Remaining time to expire the
                                       time equivalent of FrNmRepetitionCycle).
  
Test Input: 
  
Test Output: 
    RepeatMessageTimeDuration must be same as mentioned in verification point.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0154</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4341</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if an NM-Vote is received in Ready Sleep State,
    FrNm module initializes the Ready Sleep Counter with the
    value of parameter FrNmReadySleepCnt.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToReadySleepState to enter ready sleep state.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmReadySleepCnt - FrNmRepetitionCycle expires to check the state
        still remains at NM_STATE_READY_SLEEP
    05: Call FrNm_Getstate and verify that the frNm module is in
        'NM_STATE_READY_SLEEP' state.
    06: Invoke FrNm_RxIndication with vote bit set as 1.
    07: Invoke MainFunction once.
    08: Call FrNm_Getstate and verify that the frNm module is still in
        'NM_STATE_READY_SLEEP' state.
    09: Loop through the steps 10 to 11 till FrNm enters Bus sleep state or
        count expires
    10: Invoke FrNm_MainFunction
    11: Increment Variable ReadySleepCountDuration
    12: Invoke FrNm_GetState.
    13: VP (FrNm.SWS_FrNm_00101):
         - FrNm module initializes the Ready Sleep Counter with the
        value of parameter FrNmReadySleepCnt when NM-Vote is received in Ready
        Sleep State.Also verify that the current state is 'NM_STATE_BUS_SLEEP'
        and the current mode is 'NM_MODE_BUS_SLEEP'.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0155</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FrNm module enters the Ready Sleep State from
    Normal Operation State, then FrNm module initializes the
    Ready Sleep Counter with the value of parameter FrNmReadySleepCnt.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter normal operation state.
    04: Invoke FrNm_NetworkRelease
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle.
    06: Invoke FrNm_GetState.
    07: Verify that the current state is NM_STATE_READY_SLEEP and
        Current mode is NM_MODE_NETWORK.
    08: Loop through the steps 09 to 11 till FrNm enters Bus sleep state or
        count expires.
    09: Invoke FrNm_MainFunction_CFGIF
    10: Increment variable ReadySleepCountDuration
    11: Invoke FrNm_GetState.
    12: VP (FrNm.EB.NormalOperation,FrNm.ECUC_FrNm_00051):
         - The Ready Sleep Counter is initialized with the value of
        the parameter FrNmReadySleepCnt.Also verify that the current state of
        FrNm is 'NM_STATE_BUS_SLEEP' and the current mode is NM_MODE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>TC_FRNM_RMStateToRSState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4591</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When the FrNm module enters the Ready Sleep State from Repeat Message state,
    the Ready Sleep Counter is initialized with the value of the parameter
    "FrNmReadySleepCnt".
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmNodeDetectionEnabled" is set to 'true'.
      - "FrNmRepeatMessageTime" is set to be greater than 0.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Repeat Message State.
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel do the following:
    03: Invoke FrNm_PassiveStartUp to trigger a transition to Synchronize State.
    04: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    05: Call FrNm_GetState and verify that Repeat Message state is entered.
    06: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    07: Call FrNm_GetState and verify that Ready Sleep State is entered.
    08: Calculate the duration of Ready Sleep state:
        ReadySleepTime = FrNmReadySleepCnt * FrNmRepetitionCycle.
    09: Invoke the channel's main function once so that "Ready Sleep Time"
        requires one more invocation of the main function to elapse.
    10: VP (FrNm.EB.RepeatMessage, FrNm.ECUC_FrNm_00051):
         - Bus Sleep State is not entered.
    11: Invoke the channel's main function once.
    12: VP (FrNm.EB.RepeatMessage, FrNm.ECUC_FrNm_00051):
         - Bus Sleep State is  entered.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RepeatMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0120</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4705</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that If FrNm_RxIndication is received in Bus-Sleep Mode then FrNm
    invokes Nm_NetworkStartIndication[FrNm.SWS_FrNm_00175].
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNmChannel do the following:
    03: Invoke FrNm_GetState.
    04: Verify that the current state is NM_STATE_BUS_SLEEP and
        Current mode is NM_MODE_BUS_SLEEP.
    05: For each configured FrNmRxPdu execute following:
    06: Check whether the FrNmRxPduContainsVote is true.
    07: Invoke FrNm_RxIndication.
    08: VP (FrNm.SWS_FrNm_00175, FrNm.SWS_FrNm_00251):
         - Nm_NetworkStartIndication is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0130</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNmPduRxIndicationEnabled is set to "true", then upon
    reception of FrNm_RxIndication, FrNm invokes Nm_PduRxIndication.[FrNm.SWS_FrNm_00190]
  
Test Object: None.
Test Precondition: 
     FrNmPduRxIndicationEnabled = true.
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNmChannel execute following:
    03: For each configured FrNmRxPdu execute following:
    04: Invoke FrNm_RxIndication.
    05: VP (FrNm.SWS_FrNm_00189, FrNm.SWS_FrNm_00190):
         - Nm_PduRxIndication is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0131</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4875</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module invokes FrIf_Transmit in Repeat Message State and
    then there is no FrNm_TxConfirmation is received for FrNmMsgTimeoutTime
    amount of time, FrNm invokes the Nm_TxTimeoutException.[FrNm.ASR403.FRNM035]
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmDataCycle
    FrNmMsgTimeoutTime &gt; 0
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Check whether RepeatMessage Time is greater than DataCycle and
       MessageTimeout time is greater than zero then proceed.
    04: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmVotingCycle expires.
    06: For each configured FrNmTxPdu execute steps 07 and 08.
    07: If FrNmTxPduContainsData is true then proceed.
    08: Verify that Verify that FrIf_Transmit is invoked.
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmMsgTimeoutTime - 1 expires.
    10: VP (FrNm.ASR403.FrNm0028_Conf):
         - Nm_TxTimeoutException is not invoked.
    11: Invoke FrNm_MainFunction_CFGIF once
    12: VP (FrNm.ASR403.FRNM035):
         - Nm_TxTimeoutException is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0028_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SetSleepReadyBit_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>4995</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, if the FrNm receives a NM message with NMcoordinatorSleepReady
    bit set (see CBV) it shall indicate this to the NmIf by calling
    Nm_CoordReadyToSleepIndication.
  
Test Object: None.
Test Precondition: 
    FrNmCoordinatorSyncSupport == true.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    04: Invoke FrNm_RxIndication with NMcoordinatorSleepReady bit set in NM-PDU.
    05: Call Main Function once.
    06: VP (FrNm.ASR403.FRNM396, FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit):
         - Check Nm_CoordReadyToSleepIndication is invoked.
    07: Change NM_Pdu data so that it doesn't have NMcoordinatorSleepReady bit
        set.
    08: Invoke FrNm_RxIndication with NMcoordinatorSleepReady bit not set in
        NM-PDU.
    09: Invoke Main Function once.
    10: VP (FrNm.ASR403.FRNM396, FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit):
         - Nm_CoordReadyToSleepIndication is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM396</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>5094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm sets the ActiveWakeupBit in the CBV if a state change
    occurs from state Synchronize to state NetworkMode and the previous state
    change from state Bus Sleep Mode to SyncHronize was caused due to an active
    wakeup.

    Verify that FrNm resets the ActiveWakeupBit in the CBV when FrNm leaves
    NetworkMode and enters Bus Sleep Mode.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel execute following.
    03: Check the Current state is Bus Sleep state.
    04: Invoke Network Request.
    05: Invoke Main Function once to process FrNm_NetworkRequest.
    06: Check if Synchronize Mode is entered.
    07: Invoke Main Function in a loop till time equivalent of Repetition Cycle
        expires.
    08: Check if Repeat Message is entered.
    09: Check FrIf_Transmit is invoked.
    10: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit in CBV is set.
    11: Invoke MainFunction with RptMsgStayTime.
    12: Check if Normal Operation state is reached.
    13: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is set in CBV.
    14: Invoke Network Release.
    15: Invoke Main Function in a loop till time equivalent of Repetition cycle
        expires.
    16: Check if Ready Sleep state is entered.
    17: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is set in CBV.
    18: Invoke Main Function in a loop till time equivalent of Ready Sleep count
        expires.
    19: Check if Bus Sleep Mode is entered.
    20: Invoke FrNm_TriggerTransmit.
    21: VP (FrNm.SWS_FrNm_00298, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is cleared in CBV.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_1_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>5309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm does not set the ActiveWakeupBit in the CBV if a state change
    occurs from state Synchronize to state NetworkMode and the previous state
    change from state Bus Sleep Mode to SyncHronize was caused due to 
    FrNm_NetworkGwEraRequest().
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel execute following.
    03: Check the Current state is Bus Sleep state.
    04: Invoke FrNm_NetworkGwEraRequest.
    05: Invoke Main Function once to process FrNm_NetworkGwEraRequest.
    06: Check if Synchronize Mode is entered.
    07: Invoke Main Function in a loop till time equivalent of Repetition Cycle
        expires.
    08: Check if Repeat Message is entered.
    09: Check FrIf_Transmit is invoked.
    10: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit in CBV is not set.
    11: Invoke MainFunction with RptMsgStayTime.
    12: Check if Normal Operation state is reached.
    13: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is not set in CBV.
    14: Invoke Network Release.
    15: Invoke Main Function in a loop till time equivalent of Repetition cycle
        expires.
    16: Check if Ready Sleep state is entered.
    17: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is not set in CBV.
    18: Invoke Main Function in a loop till time equivalent of Ready Sleep count
        expires.
    19: Check if Bus Sleep Mode is entered.
    20: Invoke FrNm_TriggerTransmit.
    21: VP (FrNm.SWS_FrNm_00298, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is cleared in CBV.
  
Test Input: 
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>5495</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that FrNm doesn't set the ActiveWakeupBit in the CBV if a state
    change occurs from state Synchronize to state NetworkMode and the previous
    state change from state Bus Sleep Mode to Synchronize was caused due to a
    passive wakeup.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel execute following.
    03: Check that FrNm is in Bus Sleep state.
    04: Invoke Passive StartUp and FrNm_NetworkRequest.
    05: Invoke Main Function once to process FrNm_PassiveStartUp.
    06: Check that FrNm is in Synchronize Mode.
    07: Invoke Main Function in a loop till time equivalent of Repetition Cycle
        expires.
    08: Check that FrNm is in Repeat Message State
    09: Check FrIf_Transmit is invoked.
    10: VP (FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit, FrNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode):
         - ActiveWakeUp bit is not set in CBV.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>5600</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm does not resets the ActiveWakeupBit in the CBV when FrNm leaves
    NetworkMode and enters Synchronize Mode.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel execute following.
    03: Check that the current state of FrNm is Bus Sleep state and the current
        mode is NM_MODE_BUS_SLEEP.
    04: Invoke Network Request.
    05: Invoke Main Function once to process FrNm_NetworkRequest.
    06: Check that the current state of FrNm is synchronize state and the
        current mode is synchronize mode.
    07: Invoke Main Function in a loop till time equivalent of Repetition Cycle
        expires.
    08: Check that the current state of FrNm is Repeat message state and the
        current mode is NetworkMode.
    09: Check FrIf_Transmit is invoked.
    10: VP(FrNm.ECUC_FrNm_00082, FrNm.SWS_FrNm_00297):
        Check that  ActiveWakeUp bit is set in CBV.
    11: Invoke FrNm_StartUpError to reach the synchronize mode from Network
        Mode.
    12: Invoke Main Function once
    13: Check that the current state of FrNm is synchronize state and the
        current mode is Synchronize Mode.
    14: Invoke Main Function in a loop till time equivalent of Repetition Cycle
        expires.
    15: Check that the current state of FrNm is Repeat message state and the
        current mode is Network Mode.
    16: VP (FrNm.SWS_FrNm_00298, FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit):
         - ActiveWakeUp bit is set in CBV.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.ActiveWakeupBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>5768</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the feature FrNmActiveWakeupBitEnabled is a per channel feature.
    For the channel on which an active start-up was performed
    the active wakeup bit is set in the CBV.
    For the second channel on which an passive wake-up was performed
    the active wakeup bit is not set in the CBV.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Get the maximum RepetitionCycle between Channel 0 and Channel 1.
    02: Initialize FrNm.
    03: Check that Channel 0 is in Bus Sleep Mode.
    04: Check that Channel 1 is in Bus Sleep Mode.
    05: Do an active start-up on Channel 0.
    06: Do a passive wake-up on Channel 1.
    07: Call main function for both channels.
    08: Check that channel 0 is in Synchronize state.
    09: Check that channel 1 is in Synchronize state.
    10: Wait until both channels are sending data on the Bus.
    11: Clear FrIf_Transmit Stub count.
    12: VP (FrNm.SWS_FrNm_00297)
        - wait main function
        - check that the correct pdu is received (compare pduid)
        - for the active channel, the active wakeup bit is set.
    13: VP (FrNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode)
       - wait main function
       - check that the correct pdu is received (compare pduid)
       - for the passive channel, the active wakeup bit is not set.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_4_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>5914</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the feature FrNmActiveWakeupBitEnabled is a per channel feature.
    For the channel on which an active start-up was performed
    the active wakeup bit is set in the CBV.
    For the second channel on which wake up is due to FrNm_NetworkGwEraRequest()
    the active wakeup bit is not set in the CBV.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Get the maximum RepetitionCycle between Channel 0 and Channel 1.
    02: Initialize FrNm.
    03: Check that Channel 0 is in Bus Sleep Mode.
    04: Check that Channel 1 is in Bus Sleep Mode.
    05: Wake up Channel 0 by invoking FrNm_NetworkRequest.
    06: Wake up Channel 1 by invoking FrNm_NetworkGwEraRequest.
    07: Call main function for both channels.
    08: Check that channel 0 is in Synchronize state.
    09: Check that channel 1 is in Synchronize state.
    10: Wait until both channels are sending data on the Bus.
    11: Clear FrIf_Transmit Stub count.
    12: VP (FrNm.SWS_FrNm_00297)
        - wait main function
        - check that the correct pdu is received (compare pduid)
        - for the active channel, the active wakeup bit is set.
    13: VP (FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState)
       - wait main function
       - check that the correct pdu is received (compare pduid)
       - for the passive channel, the active wakeup bit is not set.
  
Test Input: 
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>6063</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNmActiveWakeupBitEnabled is set for a channel
    and the first transition from Bus Sleep mode to Synchronize Mode
    is due to an active start-up the Active Wakeup bit is set in the CBV.
    Verify that after the state machine goes back to Bus Sleep Mode and
    there is a passive wakeup the Active Wakeup bit is not set in the CBV.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: Check that the current state is Bus Sleep Mode.
    03: Request the Network.
    04: Call Main Function.
    05: Check that the current state is Synchronize Mode.
    06: Reset the FrIf_Transmit counter.
    07: Wait a repetition cycle.
    08: Check that the current state is Repeat Message State.
    09: Check that FrIf_Transmit is called.
    10: Check that FrIf_Transmit is called with the correct PduId.
    11: VP (FrNm.SWS_FrNm_00297)
        - Check that in the CBV the Active Wakeup bit is set.
    12: Release the network.
    13: Wait a couple of repetition cycles until State machine goes into Ready Sleep State.
    14: Check that the current state is Ready Sleep State.
    15: Check that Messages have been transmitted.
    16: Check that FrIf_Transmit is called with the correct PduId.
    17: VP (FrNm.SWS_FrNm_00297)
        - Check that in the CBV the Active Wakeup bit is set.
    18: Wait until state machine goes into Bus Sleep Mode.
    19: Check that the current state is Bus Sleep Mode.
    20: Do a passive wakeup.
    21: Wait a main function cycle.
    22: Check that the current state is Synchronize Mode.
    23: Reset FrIf_Transmit counter.
    24: Wait a repetition cycle.
    25: Check that the current state is Repeat Message State.
    26: Check that FrIf_Transmit is called.
    27: Check that FrIf_Transmit is called with the correct PduId.
    28: VP (FrNm.SWS_FrNm_00297)
        - Check that in the CBV the Active Wakeup bit is not set.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_5_FrNm_NetworkGwEraRequest_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>6255</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNmActiveWakeupBitEnabled is set for a channel
    and the first transition from Bus Sleep mode to Synchronize Mode
    is due to FrNm_NetworkGwEraRequest() the Active Wakeup bit is not set
    in the CBV.
    Verify that after the state machine goes back to Bus Sleep Mode and
    there is an active wakeup by calling FrNm_NetworkRequest 
    the Active Wakeup bit is set in the CBV.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: Check that the current state is Bus Sleep Mode.
    03: Request the Network with FrNm_NetworkGwEraRequest().
    04: Call Main Function.
    05: Check that the current state is Synchronize Mode.
    06: Reset the FrIf_Transmit counter.
    07: Wait a repetition cycle.
    08: Check that the current state is Repeat Message State.
    09: Check that FrIf_Transmit is called.
    10: Check that FrIf_Transmit is called with the correct PduId.
    11: VP (FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState)
        - Check that in the CBV the Active Wakeup bit is not set.
    12: Release the network.
    13: Wait a couple of repetition cycles until State machine goes into Ready Sleep State.
    14: Check that the current state is Ready Sleep State.
    15: Check that Messages have been transmitted.
    16: Check that FrIf_Transmit is called with the correct PduId.
    17: VP (FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState)
        - Check that in the CBV the Active Wakeup bit is not set.
    18: Wait until state machine goes into Bus Sleep Mode.
    19: Check that the current state is Bus Sleep Mode.
    20: Do an active wakeup by calling FrNm_NetworkRequest.
    21: Wait a main function cycle.
    22: Check that the current state is Synchronize Mode.
    23: Reset FrIf_Transmit counter.
    24: Wait a repetition cycle.
    25: Check that the current state is Repeat Message State.
    26: Check that FrIf_Transmit is called.
    27: Check that FrIf_Transmit is called with the correct PduId.
    28: VP (FrNm.SWS_FrNm_00297)
        - Check that in the CBV the Active Wakeup bit is set.
  
Test Input: 
    FrNm_NetworkGwEraRequest call
    FrNm_NetworkRequest call
  
Test Output: 
    Active wakeup bit is set as specified in verification points
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_5_FrNm_NetworkGwEraRequest_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>6454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNmActiveWakeupBitEnabled is set for a channel
    and the first transition from Bus Sleep mode to Synchronize Mode
    is due to FrNm_NetworkRequest() the Active Wakeup bit is set
    in the CBV.
    Verify that after the state machine goes back to Bus Sleep Mode and
    a wakeup occured by call to FrNm_NetworkGwEraRequest the Active 
    Wakeup bit is not set in the CBV.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmPassiveModeEnabled == false.
    FrNmActiveWakeupBitEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: Check that the current state is Bus Sleep Mode.
    03: Request the Network with FrNm_NetworkGwEraRequest().
    04: Call Main Function.
    05: Check that the current state is Synchronize Mode.
    06: Reset the FrIf_Transmit counter.
    07: Wait a repetition cycle.
    08: Check that the current state is Repeat Message State.
    09: Check that FrIf_Transmit is called.
    10: Check that FrIf_Transmit is called with the correct PduId.
    11: VP (FrNm.SWS_FrNm_00297)
        - Check that in the CBV the Active Wakeup bit is not set.
    12: Release the network.
    13: Wait a couple of repetition cycles until State machine goes into Ready Sleep State.
    14: Check that the current state is Ready Sleep State.
    15: Check that Messages have been transmitted.
    16: Check that FrIf_Transmit is called with the correct PduId.
    17: VP (FrNm.SWS_FrNm_00297)
        - Check that in the CBV the Active Wakeup bit is not set.
    18: Wait until state machine goes into Bus Sleep Mode.
    19: Check that the current state is Bus Sleep Mode.
    20: Do an active wakeup by calling FrNm_NetworkRequest.
    21: Wait a main function cycle.
    22: Check that the current state is Synchronize Mode.
    23: Reset FrIf_Transmit counter.
    24: Wait a repetition cycle.
    25: Check that the current state is Repeat Message State.
    26: Check that FrIf_Transmit is called.
    27: Check that FrIf_Transmit is called with the correct PduId.
    28: VP (FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState)
        - Check that in the CBV the Active Wakeup bit is set.
  
Test Input: 
    FrNm_NetworkRequest call
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Active wakeup bit is set as specified in verification points
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.ActiveWakeupBit.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>TS_FrNm_MultipleRequestsQueued_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>6655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to ensure that when the network
      is requested and released multiple times in a row, the final status
      of the request is not lost due to the fact that multiple entries of
      the same event are not queued by the state machine.
    Test Objective:
      To verify that when FrNm_NetworkRequest() and FrNm_NetworkRelease()
      are called multiple times within the context of a main function cycle,
      the updated status of 'Network Requested' flag gets processed.
  
Test Object: None.
Test Precondition: 
    Module State:
      * FrNm is initialized
      * FrNm is in Normal Operation State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Invoke Tst_GoToNormalOperationState to enter normal operation state.
    04: Repeatedly Release and Request the network
    05: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    06: VP (FrNm.SWS_FrNm_00125):
         - FrNm is in state 'NM_STATE_READY_SLEEP'
    07: Repeatedly Request and Release the network.
    08: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    09: VP (FrNm.SWS_FrNm_00131):
         - FrNm is in state 'NM_STATE_NORMAL_OPERATION'
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>TS_FrNm_MultipleRequestsQueued_1_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>6766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to ensure that when the network
      is requested and released multiple times in a row, the final status
      of the request is not lost due to the fact that multiple entries of
      the same event are not queued by the state machine.
    Test Objective:
      To verify that when FrNm_NetworkRequest(), FrNm_NetworkGwEraRequest()
      and FrNm_NetworkRelease() are called multiple times within the context
      of a main function cycle, the updated status of 'Network Requested' 
      flag gets processed.
  
Test Object: None.
Test Precondition: 
    Module State:
      * FrNm is initialized
      * FrNm is in Normal Operation State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Invoke Tst_GoToNormalOperationState to enter normal operation state.
    04: Repeatedly Release and Request the network
        (FrNm_NetworkRelease, FrNm_NetworkRequest, FrNm_NetworkRelease).
    05: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    06: VP (FrNm.SWS_FrNm_00125):
         - FrNm is in state 'NM_STATE_READY_SLEEP'
    07: Repeatedly Request and Release the network
        (FrNm_NetworkRequest, FrNm_NetworkRelease, FrNm_NetworkRequest).
    08: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    09: VP (FrNm.SWS_FrNm_00131):
         - FrNm is in state 'NM_STATE_NORMAL_OPERATION'
         
         

    10: Repeatedly Release and Request the network
        (FrNm_NetworkRelease, FrNm_NetworkGwEraRequest, FrNm_NetworkRelease).
    11: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    12: VP (FrNm.SWS_FrNm_00125):
         - FrNm is in state 'NM_STATE_READY_SLEEP'
    13: Repeatedly Request and Release the network
        (FrNm_NetworkGwEraRequest, FrNm_NetworkRelease, FrNm_NetworkGwEraRequest).
    14: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    15: VP (FrNm.SWS_FrNm_00131):
         - FrNm is in state 'NM_STATE_NORMAL_OPERATION'

    16: Repeatedly Release and Request the network
        (FrNm_NetworkRelease, FrNm_NetworkRequest, FrNm_NetworkRelease).
    17: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    18: VP (FrNm.SWS_FrNm_00125):
         - FrNm is in state 'NM_STATE_READY_SLEEP'
    19: Repeatedly Request and Release the network
        (FrNm_NetworkGwEraRequest, FrNm_NetworkRelease, FrNm_NetworkRequest).
    20: Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle" elapses.
    21: VP (FrNm.SWS_FrNm_00131):
         - FrNm is in state 'NM_STATE_NORMAL_OPERATION'
  
Test Input: 
    FrNm_NetworkRequest call
    FrNm_NetworkGwEraRequest call
    FrNm_NetworkRelease
  
Test Output: 
    Nm state/mode as specified in verification points
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>TS_FrNm_MultipleRequestsQueued_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>6973</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to ensure that requesting and
      releasing the network continuously does not result in an event
      queue overflow.
    Test Objective:
      To verify that when FrNm_NetworkRequest(), FrNm_NetworkGwEraRequest()
      and FrNm_NetworkRelease() are called multiple times continuously within 
      the context of a main function cycle, the final status of the 
      'Network Requested' flag gets processed.
  
Test Object: None.
Test Precondition: 
    Module State:
      * FrNm is initialized
      * FrNm is in Bus Sleep State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Repeatedly invoke the passive start up request to
        possibly overflow the event queue
    04: Call MainFunction once
    05: VP (FrNm.SWS_FrNm_00138):
         - FrNm is in 'synchronize state'
    06: 06:Invoke the channel's main function in a loop until
        the time equivalent of one "Repetition Cycle - 1" elapses.
    07: VP (FrNm.SWS_FrNm_00138):
         - FrNm is in 'Repeat Message State'.
    08: Repeatedly call FrNm_NetworkRequest &amp; FrNm_NetworkRelease to
        possibly overflow the event queue
    09: Let RepeatMessageTime to be elapsed
    10: VP (FrNm.SWS_FrNm_00121, FrNm.EB.EventQueue):
         - FrNm has reached 'Normal Operation State' as the last call
        is Network request.
    11: Repeatedly call FrNm_NetworkGwEraRequest &amp; FrNm_NetworkRelease to
        possibly overflow the event queue
    12: Let RepeatMessageTime to be elapsed
    13: VP (FrNm.SWS_FrNm_00121, FrNm.EB.EventQueue):
         - FrNm has reached 'Normal Operation State' as the last call
        is Network request.
    14: Repeatedly call FrNm_NetworkRequest, FrNm_NetworkRelease, 
        FrNm_NetworkGwEraRequest to possibly overflow the event queue
    15: Let RepeatMessageTime to be elapsed
    16: VP (FrNm.SWS_FrNm_00121, FrNm.EB.EventQueue):
         - FrNm has reached 'Normal Operation State' as the last call
        is Network request.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.EventQueue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwRequestSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkRequest is called in the Synchronize Mode, FrNm finally
    enters the Normal Operation state after the expiry of the Repeat Message
    timer (to check that the flag FrNm_NetworkRequested is set to TRUE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Trigger a transition to Synchronize State using FrNm_PassiveStartUp().
    04: Invoke the channel's main function once.
    05: Verify that Synchronize State is entered.
    06: Call FrNm_NetworkRequest().
    07: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    08: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    09: VP (FrNm.SWS_FrNm_00121, FrNm.ASR403.FRNM141):
         - Normal Operation state is entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwRequestSyncState_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkGwEraRequest is called in the Synchronize Mode, FrNm finally
    enters the Normal Operation state after the expiry of the Repeat Message
    timer (to check that the flag FrNm_NetworkRequested is set to TRUE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Trigger a transition to Synchronize State using FrNm_PassiveStartUp().
    04: Invoke the channel's main function once.
    05: Verify that Synchronize State is entered.
    06: Call FrNm_NetworkGwEraRequest().
    07: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    08: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    09: VP (FrNm.SWS_FrNm_00121, FrNm.EB.FrNm_NetworkGwEraRequest.SynchronizeMode):
         - Normal Operation state is entered.
  
Test Input: 
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Nm state is set to normal operation
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.SynchronizeMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwRequestRMState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkRequest is called in the Repeat Message State, FrNm
    finally enters the Normal Operation state after the expiry of
    the Repeat Message timer (to check that the flag FrNm_NetworkRequested
    is set to TRUE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Repeat Message State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Call FrNm_PassiveStartUp to trigger a transition to Synchronize State.
    04: Invoke the channel's main function once to process the request.
    05: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses (to enter Repeat Message state)
    06: Verify that Repeat Message state is entered
    07: Call FrNm_NetworkRequest
    08: Invoke the channel's main function once to process the request
    09: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    10: VP(FrNm.SWS_FrNm_00121, FrNm.EB_Ref.FRNM113.RepeatMessage):
         - Normal Operation state is entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM113.RepeatMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwRequestRMState_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7433</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkGwEraRequest is called in the Repeat Message State, FrNm
    finally enters the Normal Operation state after the expiry of
    the Repeat Message timer (to check that the flag FrNm_NetworkRequested
    is set to TRUE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Repeat Message State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Call FrNm_PassiveStartUp to trigger a transition to Synchronize State.
    04: Invoke the channel's main function once to process the request.
    05: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses (to enter Repeat Message state)
    06: Verify that Repeat Message state is entered
    07: Call FrNm_NetworkGwEraRequest
    08: Invoke the channel's main function once to process the request
    09: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    10: VP(FrNm.SWS_FrNm_00121, FrNm.EB.FrNm_NetworkGwEraRequest.RepeatMessage):
         - Normal Operation state is entered.
  
Test Input: 
    FrNm_NetworkGwEraRequest call
  
Test Output: 
    Nm state is set to normal operation
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.RepeatMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwRequestNOState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7537</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkRequest is called in the Normal Operation State,
    FrNm remains in the Normal Operation state (to check that the flag
    FrNm_NetworkRequested is set to TRUE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Normal Operation State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation state.
    04: Call FrNm_NetworkRelease()
    05: Invoke the channel's main function once to process the request.
    06: Call FrNm_NetworkRequest()
    07: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    08: VP (FrNm.SWS_FrNm_00121, FrNm.EB_Ref.FRNM113.NormalOperation):
         - The channel remains in Normal Operation state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM113.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwRequestNOState_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7623</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkGwEraRequest is called in the Normal Operation State,
    FrNm remains in the Normal Operation state (to check that the flag
    FrNm_NetworkRequested is set to TRUE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Normal Operation State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation state.
    04: Call FrNm_NetworkRelease()
    05: Invoke the channel's main function once to process the request.
    06: Call FrNm_NetworkGwEraRequest()
    07: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    08: VP (FrNm.SWS_FrNm_00121, FrNm.EB.FrNm_NetworkGwEraRequest.NormalOperation):
         - The channel remains in Normal Operation state.
  
Test Input: 
    FrNm_NetworkGwEraRequest call during normal operation
  
Test Output: 
    Nm state is normal operation
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNm_NetworkGwEraRequest.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwReleaseRMState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7715</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkRelease is called in the Repeat Message, FrNm finally
    enters the Ready Sleep state after the expiry of the Repeat Message
    timer (to check that the flag FrNm_NetworkRequested is set to FALSE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Repeat Message State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Call FrNm_NetworkRequest to trigger a transition to Synchronize State.
    04: Invoke the channel's main function once to process the request.
    05: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses (to enter Repeat Message state)
    06: Verify that Repeat Message state is entered
    07: Call FrNm_NetworkRequest()
    08: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    09: VP (FrNm.SWS_FrNm_00122, FrNm.EB_Ref.FRNM114.RepeatMessage):
         - Normal Operation state is entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM114.RepeatMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NwReleaseRSState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7811</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If FrNm_NetworkRelease is called in the Ready Sleep State,
    FrNm remains in the Ready Sleep state (to check that the flag
    FrNm_NetworkReleaseed is set to FALSE).
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Ready Sleep State.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute following.
    03: Call FrNm_PassiveStartUp to trigger a transition to Synchronize State
        using FrNm_PassiveStartUp().
    04: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses (to enter Repeat Message state).
    05: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses.
    06: Verify that Ready Sleep state is entered.
    07: Call FrNm_NetworkRequest().
    08: Call FrNm_NetworkRelease().
    09: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    10: VP (FrNm.SWS_FrNm_00122, FrNm.EB_Ref.FRNM114.ReadySleep):
         - The channel remains in Ready Sleep state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.FRNM114.ReadySleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_Sequence_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7911</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        FrNm_PassiveStartUp
        FrNm_NetworkRelease
        FrNm_NetworkRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(FrNm.SWS_FrNm_00297)
        - Check active wakeup bit is not set
  
Test Input: 
    FrNm_PassiveStartUp, FrNm_NetworkRelease, FrNm_NetworkRequest sequnece call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_Sequence_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>7983</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        FrNm_NetworkRequest
        FrNm_NetworkRelease
        FrNm_PassiveStartUp
        FrNm_NetworkRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(FrNm.SWS_FrNm_00297)
        - Check active wakeup bit is not set
  
Test Input: 
    FrNm_NetworkRequest, FrNm_NetworkRelease, FrNm_PassiveStartUp, FrNm_NetworkRequest
    sequnece call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_Sequence_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>8058</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        FrNm_PassiveStartUp
        FrNm_NetworkGwEraRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(FrNm.SWS_FrNm_00297)
        - Check active wakeup bit is not set
  
Test Input: 
    FrNm_PassiveStartUp, FrNm_NetworkGwEraRequest sequence call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_Sequence_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>8128</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        FrNm_NetworkGwEraRequest
        FrNm_NetworkRelease
        FrNm_PassiveStartUp
    03: Check that State Machine is In Repeat Message state
    04: VP(FrNm.SWS_FrNm_00297)
        - Check active wakeup bit is not set
  
Test Input: 
    FrNm_NetworkGwEraRequest, FrNm_NetworkRelease, FrNm_PassiveStartUp sequence call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_Sequence_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>8199</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        FrNm_NetworkRequest
        FrNm_NetworkGwEraRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(FrNm.SWS_FrNm_00297)
        - Check active wakeup bit set
  
Test Input: 
    FrNm_NetworkRequest, FrNm_NetworkGwEraRequest sequence call
  
Test Output: 
    Active wakeup bit is set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ActiveWakeupBit_Sequence_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/FrNm_ConTest_3.c</sourcefile>
      <sourceline>8269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        FrNm_NetworkRequest
        FrNm_PassiveStartUp
    03: Check that State Machine is In Repeat Message state
    04: VP(FrNm.SWS_FrNm_00297)
        - Check active wakeup bit set
  
Test Input: 
    FrNm_NetworkRequest,FrNm_PassiveStartUp sequence call
  
Test Output: 
    Active wakeup bit is set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_0153</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_3/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that the function FrNm_GetVersionInfo returns the version infor-mation of this module.
  The version information includes:
   - Module Id
   - Vendor Id
   - Vendor specific version numbers

Test Object: None.
Test Precondition: 
  FrNmVersionInfoApi == true.

Test Execution: 
  01: Invoke FrNm_GetVersionInfo.
  02: VP (FrNm.ASR403.FRNM272, FrNm.SWS_FrNm_00249, FrNm.ECUC_FrNm_00037):
       Verify that NmVerInfoPtr.vendorId, NmVerInfoPtr.moduleId,
                   NmVerInfoPtr.swMajorVersion, NmVerInfoPtr.swMinorVersion and
                   NmVerInfoPtr.swPatchVersion match with the expected values.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM272</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_30_DET_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown 
     - while module is not initialized or
     - wrong channel is passed or
     - wrong pnc id is passed
    DET is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
  
Test Execution: 
    01: VP(SWS_FrNm_91003, SWS_FrNm_00503, FrNm.ECUC_FrNm_00094)
        - Call FrNm_RequestSynchronizedPncShutdown while module is not initilized
    02: Check that DET is reported
    03: VP(SWS_FrNm_91003, SWS_FrNm_00503, FrNm.ECUC_FrNm_00094)
        - Call FrNm_RequestSynchronizedPncShutdown with incorrect channel id
    04: Check that DET is reported
    05: VP(SWS_FrNm_91003, SWS_FrNm_00503, FrNm.ECUC_FrNm_00094)
        - Call FrNm_RequestSynchronizedPncShutdown with incorrect PNC id
    06: Check that DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00503</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>199</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not called 
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is active for the channel
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Wait a repetition cycle
    07: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    08: Release channel
    09: Wait a repetition cycle
    10: Check current state is Ready Sleep State
    11: Check that In Ready Sleep State No FrIf_Transmity is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu not set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are send send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector, FrNm.EB_Ref.SWS_FrNm_00511.ComMRequests)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
    16: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00511.ComMRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.PNShutdownRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>680</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   FrNm_RequestSynchronizedPncShutdown is not accepted and no synchronized pnc shut down message is sent on the bus
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels 
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not called 
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is active for the channel
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Wait a repetition cycle
    07: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    08: Release channel
    09: Wait a repetition cycle
    10: Check current state is Ready Sleep State
    11: Check that In Ready Sleep State No FrIf_Transmity is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1091</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu not set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1253</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are send send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
    16: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1441</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is not reported 
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is not reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1686</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   FrNm_RequestSynchronizedPncShutdown is not accepted and no synchronized pnc shut down message is sent on the bus
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to passive
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels 
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1837</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to active
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(FrNm.EB_Ref.SWS_FrNm_00541.UserData)
        - Check output data
  
Test Input: 
   - request network
   - call triggretransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00541.UserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>1943</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to active
   and FrNm_RequestSynchronizedPncShutdown is called 
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels     
    06: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.PNShutdownRequestBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>2080</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   and FrNm_RequestSynchronizedPncShutdown is called 
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels     
    06: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>2205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is called 
    and channel has tx pdu set to immediate (in FrIf)
    - Control bit vector is sent correctly for both data and vote pdus
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 7
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Wait a repetition cycle
    07: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
        - Check CBV
    08: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    09: Wait a repetition cycle
    10: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check CBV 
    11: Wait a repetition cycle
    12: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check CBV 
  
Test Input: 
   - request network
   - call FrNm_RequestSynchronizedPncShutdown
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>2346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is called 
    and FrNm_TriggerTransmit is called
    - Control bit vector is sent correctly for both data and vote pdus
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Schedule variant is set to 7
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - check CBV
    07: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    08: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - check CBV
  
Test Input: 
   - request network
   - call FrNm_RequestSynchronizedPncShutdown
   - call FrNm_Triggertransmit
  
Test Output: 
   - correct cbv is returned
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_FrIf_Transmit_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>2474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is called 
    and FrNm_Trigger is called
    EIRA is aggregated and send to ComM
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a cycle
    08: Call TriggerTransmit
    09: Wait a cycle
    10: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check data is aggregated 
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_RxPath_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>2604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to active
   and PNSR data is received via Rx indication
   DET is reported

  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to active
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call RxIndication
    07: VP(FrNm.EB_Ref.SWS_FrNm_00504.RuntimeError)
        - Check Det is reported
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00504.RuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>TC_FRNM_30_RxPath_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_30_PNSR_01/source/application/FrNm_ConTest_30.c</sourcefile>
      <sourceline>2719</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   and PNSR data is received via Rx indication is forwarded to Nm
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    channel gateway type is set to active
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Initialize Pn data (normal data)
    07: Call RxIndication
    08: Check that PduR_FrNmRxIndication is called
    09: Check that Nm_ForwardSynchronizedPncShutdown is called
    10: Check Pn data
    11: Simulate Synchronized Pnc Shutdown
    12: Call RxIndication
    13: Call Mainfunction
    14: VP(FrNm.EB_Ref.SWS_FrNm_00540.PNSR)
        - CHeck that Upper layer is informed 
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00540.PNSR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not called 
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is active for the channel
    Schedule variant is set to 1
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Wait a repetition cycle
    07: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    08: Release channel
    09: Wait a repetition cycle
    10: Check current state is Ready Sleep State
    11: Check that In Ready Sleep State No FrIf_Transmity is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has a tx pdu not set to immediate and one with one with immediate set (FrIf)
    - Nm messages are send in normal operation state with com data and PNSR data
    - Nm messages are send in ready sleep state and PNSR data
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    a Tx PDU is not set to immediate
    a Tx PDU is set to immediate
    Schedule variant is set to 1
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
    16: Wait a repetition cycle and check that FrIfTransmit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu not set to immediate (in FrIf) and tx pdu set to immediate
    - Nm messages are send in normal operation state with PNSR data
    - Nm messages are send in ready sleep state with PNSR data
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
    16: Wait a repetition cycle
    17: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>640</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu not set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>803</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu not set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>1097</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf)and on channel is not set to imediate and FrIf_Transmit returns a value different then E_OK
    and no PNSR data is sent on the bus runtime error is not reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 1
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is not reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is not reported
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>1213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>TC_FRNM_31_FrIf_Transmit_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_31_PNSR_02/source/application/FrNm_ConTest_31.c</sourcefile>
      <sourceline>1344</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf)and on channel is not set to imediate and FrIf_Transmit returns a value different then E_OK
    and no PNSR data is sent on the bus runtime error is not reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Tx PDU is not set to immediate
    Schedule variant is set to 4
    Dual channel mode is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is not reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is not reported
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not called 
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Gateway type is active for the channel
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Wait a repetition cycle
    07: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    08: Release channel
    09: Wait a repetition cycle
    10: Check current state is Ready Sleep State
    11: Check that In Ready Sleep State No FrIf_Transmity is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu not set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>365</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are send send in ready sleep state
    Verify that after Tx confirmation is called retransmit timer is stopped
    Verify that after Tx confirmation is called retransmission of PNSR message does not occurs
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(FrNm.EB_Ref.SWS_FrNm_00508.PncStore)
        Simulate TxConfirmation
    10: VP FrNm.EB_Ref.SWS_FrNm_00508.CancelRetransmission)
        - check that retransmission timer is stopped (det is not reported)
    11: Release channel
    12: Wait a repetition cycle
    13: Check current state is Ready Sleep State
    14: Check that In Ready Sleep State No FrIf_Transmit is called
    15: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    16: Wait a repetition cycle
    17: Check That FrIf_Trsnamit is called
    18: Simulate TxConfirmation
    19: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00508.PncStore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00508.CancelRetransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>577</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    08: Wait until message is transmitted on the bus
    09: Wait until retransmission timer almost expires
    10: Wait until retransmission timer expires
    11: VP(SWS_FrNm_00513, SWS_FrNm_00510, FrNm.ASR21-11.ECUC_FrNm_00095)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00513</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00510</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.ECUC_FrNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>718</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   FrNm_RequestSynchronizedPncShutdown is not accepted and no synchronized pnc shut down message is sent on the bus
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels 
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not called 
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Gateway type is active for the channel
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Wait a repetition cycle
    07: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    08: Release channel
    09: Wait a repetition cycle
    10: Check current state is Ready Sleep State
    11: Check that In Ready Sleep State No FrIf_Transmity is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>999</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is called
    and channel has tx pdu not set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are not send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    13: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is not called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>1161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is called
    and channel has tx pdu set to immediate (in FrIf)
    - Nm messages are send in normal operation state with com data
    - Nm messages are send send in ready sleep state
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Simulate TxConfirmation
    10: Release channel
    11: Wait a repetition cycle
    12: Check current state is Ready Sleep State
    13: Check that In Ready Sleep State No FrIf_Transmit is called
    14: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    15: Wait a repetition cycle
    16: Check That FrIf_Trsnamit is called
    17: Simulate TxConfirmation
    18: Check That FrIf_Trsnamit is not called
  TS5ATL_CHECK_IS_EQUAL(FrIf_Transmit_Stub.Count, 0U);  
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>1358</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    08: Wait until message is transmitted on the bus
    09: Wait until retransmission timer almost expires
    10: Wait until retransmission timer expires
    11: VP(SWS_FrNm_00513,SWS_FrNm_00510)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00513</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00510</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>1499</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is not call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is not reported 
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Set FrIf_TransmitRetVal to return a value different then E_OK
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: VP(SWS_FrNm_00512_Refine)
        - DET is not reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00548.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00512.TransmissionsRequestNotAccepted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>1614</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   FrNm_RequestSynchronizedPncShutdown is not accepted and no synchronized pnc shut down message is sent on the bus
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    channel gateway type is set to passive
    Schedule variant is set to 4
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels 
    07: Wait a repetition cycle
    08: VP(FrNm.EB_Ref.SWS_FrNm_00548.PncBitVector)
       - Check that FrIf_Transmit has been called 
    09: Release channel
    10: Wait a repetition cycle
    11: Check current state is Ready Sleep State
    12: Check that In Ready Sleep State No FrIf_Transmit is called
    14: Wait a repetition cycle
    15: Check That FrIf_Trsnamit is called
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>1765</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to active
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data
  
Test Input: 
   - request network
   - call triggretransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>1871</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to active
   and FrNm_RequestSynchronizedPncShutdown is called 
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels 
    07: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data
    08: Simulate TxConfirmation
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>2012</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to passive
   and FrNm_RequestSynchronizedPncShutdown is called 
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels     
    06: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>2137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Check that in case the gateway type for a channel is set to active
   and FrNm_RequestSynchronizedPncShutdown is called 
   and FrNm_Triggertransmit is called, correct data is returned
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    channel gateway type is set to passive
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: VP(SWS_FrNm_91003)
        Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels 
    07: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data
    08: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check output data        
    09: Simulate TxConfirmation
  
Test Input: 
   - request network
   - call triggertransmit
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>2294</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported.
    Check also that in case new synchronized request are received retransmission timer is reset
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Set FrIf_TransmitRetVal to return a value different then E_OK
    08: Wait until message is transmitted on the bus
    09: Wait a couple of cycles
    11: Wait until message is transmitted on the bus
    12: Wait until retransmission timer almost expires
    13: Wait until retransmission timer expires
    14: VP(SWS_FrNm_00513, SWS_FrNm_00510, FrNm.ASR21-11.ECUC_FrNm_00095)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00513</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00510</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.ECUC_FrNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>2474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is call called 
    and channel has tx pdu set to immediate (in FrIf) and FrIf_Transmit returns a value different then E_OK
    runtime error is reported.
    Check also that in case new synchronized request are received retransmission timer is reset
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Call TriggerTransmit
    08: Check output data
    09: Wait a couple of mainfunctions
    10: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    11: Check output data
    12: Wait until retransmission timer almost expires
    13: Wait until retransmission timer expires
    14: VP(SWS_FrNm_00513, SWS_FrNm_00510)
        - DET is reported
  
Test Input: 
   - request network
   - release network
   - set FrIf_Transmit to return a value different then E_OK
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00513</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR21-11.SWS_FrNm_00510</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>TC_FRNM_32_FrIf_Transmit_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_32_PNSR_03/source/application/FrNm_ConTest_32.c</sourcefile>
      <sourceline>2639</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Verify that in case FrIf_Transmit returns a value different than E_OK
   retransmission of of synchronized pnc shut down data is retrieved on the next data/vote cycles
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = true
    Tx PDU is not set to immediate
    Schedule variant is set to 1
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Call FrNm_RequestSynchronizedPncShutdown for PNCs and channels
    07: Wait a repetition cycle
    08: Check that FrIf_Transmit has been called
    09: VP(FrNm.EB_Ref.SWS_FrNm_00509.RetransmissionNextDataCycle)
        - check retransmssion occured in case FrIf_Transmit returned E_NOT_OK
  
Test Input: 
   - request network
   - release network
  
Test Output: 
   - data is sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00509.RetransmissionNextDataCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_33_RequestSynchShutDown_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_33_PNSR_04/source/application/FrNm_ConTest_33.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case FrNm_RequestSynchronizedPncShutdown is called,
    function returns E_OK if a single channel is configured with gateway type passive
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is passive for the channel
    Schedule variant is set to 1
    DET is disabled
    only on channel is configurred with gateway type set to passive
  
Test Execution: 
    01: Initialize stubs and variables
    02: VP(SWS_FrNm_91003)
        - function call returns E_OK
  
Test Input: 
   - call FrNm_RequestSynchronizedPncShutdown
  
Test Output: 
   - FrNm_RequestSynchronizedPncShutdown returns E_OK
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_34_Multicore_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_34_PNSR_05/source/application/FrNm_ConTest_34.c</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case PNSR message is received on the bus 
    data is forwarded to Nm
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is passive for the channel
    Schedule variant is set to 1
    multicore is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Simulate Synchronized Pnc Shutdown
    07: Call RxIndication
    08: Call Mainfunction
    09: VP(FrNm.EB_Ref.SWS_FrNm_00540.PNSR)
        - CHeck that Upper layer is informed 
  
Test Input: 
   - request network
   - call rx indication with PNSR set
  
Test Output: 
   - forward synchronized pnc shut down is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00540.PNSR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>TC_FRNM_34_Multicore_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_34_PNSR_05/source/application/FrNm_ConTest_34.c</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case PNSR message is received from ComM,
    PNSR data is present in PDU
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is active for the channel
    Schedule variant is set to 1
    multicore is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Simulate PNSR data
    07: Simulate multicore reception
    08: Wait a mainfunction
    09: Call triggertransmit
    10: VP(FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector)
        - Check PDU data
  
Test Input: 
   - request network
   - simulate multicore reception of PNSR data from Nm
   - call FrNm_TriggerTransmit
  
Test Output: 
   - check pdu is correct
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00542.PncBitVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>TC_FRNM_34_Multicore_DET_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_34_PNSR_05/source/application/FrNm_ConTest_34.c</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case PNSR message is received on the bus 
    and forwarding is not successful DET is reported
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmSynchronizedPncShutdownEnabled = true
    FrNmPnShutdownMessageRetransmissionDuration = false
    Gateway type is passive for the channel
    Schedule variant is set to 1
    multicore is enabled
  
Test Execution: 
    01: Initialize stubs and variables
    02: Request network
    03: check that current state is Repeat Message State
    04: Goto Normal Operation State
    05: Check current state is Normal Operation State
    06: Simulate Synchronized Pnc Shutdown
    07: Call RxIndication
    08: Call Mainfunction
    09: VP(FrNm.EB.SchM_Call_DET)
        - CHeck that det is reported
  
Test Input: 
   - request network
   - call rx indication with PNSR set
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmSynchronizedPncShutdownMulticoreForwardSynchFails</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_35_NegativeVoteInReadySleep</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_35/source/application/FrNm_ConTest_35.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that Vote bit transmitted through FrNm_TriggerTransmit is 1
    when FrNm is in repeat message and normal operation state if
    FrNmSendNegativeVoteInReadySleepState is set to TRUE.
    Verify that Vote bit transmitted through FrNm_TriggerTransmit is 0
    when FrNm is in ready sleep state if FrNmSendNegativeVoteInReadySleepState
    is set to TRUE.
  
Test Object: None.
Test Precondition: 
    FrNmSendNegativeVoteInReadySleepState is set to TRUE
  
Test Execution: 
    01: Initialize FrNm
    02: For each cluster execute steps (03-37)
    03: Reset FrIf_Transmit stub counter, clear Tx buffers
    04: Request network

    05: Transition from synchronize mode to NM_STATE_REPEAT_MESSAGE state steps (06-07)
    06: Check that one repetition cycle elapsed
    07: Check that FrNm entered NM_STATE_REPEAT_MESSAGE state

    08: Transition from NM_STATE_REPEAT_MESSAGE to NM_STATE_NORMAL_OPERATION steps (09-17)
    09: Check each voting cycle that voting/data messages were sent
              (1 message for schedule varaints 1 and 2; 2 messages for variants 4,6,7)
    10: Search for index of the voting message, when votting cycle elapses
    11: Check that the voting message was sent in current voting cycle
    12: Check that voting bit is set in voting message
    13: Reset Tx buffers
    14: Check that voting bit is not changed in Tx buffers, when not in a votting cycle
    15: Each cycle reset FrIf_Transmit stub count
    16: Call main function
    17: Check that FrNm entered NM_STATE_NORMAL_OPERATION state

    18: Release network

    19: Transition from NM_STATE_NORMAL_OPERATION to NM_STATE_READY_SLEEP (steps 20-28)
    20: Check each voting cycle that voting/data messages were sent
        (1 message for schedule varaints 1 and 2; 2 messages for variants 4,6,7)
    21: Search for index of the voting message, when votting cycle elapses
    22: Check that voting message was sent in current voting cycle
    23: Check that voting bit is set in voting message
    24: Reset Tx buffers
    25: Check that voting bit is not changed in Tx buffers, when not in a votting cycle
    26: Each cycle reset FrIf_Transmit stub count
    27: Call main function
    28: Check that FrNm entered NM_STATE_READY_SLEEP state

    29: Transition from NM_STATE_READY_SLEEP to NM_STATE_BUS_SLEEP (steps 30-37)
    30: VP(FrNm.EB_Ref.SWS_FrNm_00126.DataPDU, FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2):
        Check each voting cycle that only voting message was sent (FrIf_Transmit stub count reset is made only on votting cycle)
    31: Search for index of the voting message, when votting cycle elapses
    32: Check that voting message was sent in current voting cycle
    33: VP(FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2):
        Check that voting bit is NOT set in voting message
    34: Reset Tx buffers and FrIf_Transmit stub count (messages should only appear on votting cycle)
    35: Check that voting bit is not changed in Tx buffers, when not in a votting cycle
    36: Call main function
    37: Check that FrNm entered NM_STATE_BUS_SLEEP state
  
Test Input: 
    Transition from Synchronize,Repeat Message,Normal Operation, Ready Sleep states
  
Test Output: 
    Voting messages with bits set to 1 in Repeat Message,Normal Operation states
    Voting messages with bits set to 0 in Ready Sleep state
  </description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.DataPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>TC_FRNM_35_NegativeVoteInReadySleep_Timeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_35/source/application/FrNm_ConTest_35.c</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when in Repeat Message,Normal Operation, Ready Sleep states,
    if FrNmSendNegativeVoteInReadySleepState is set to TRUE, and a
    message fails to be transmitted for a duration of FrNmMsgTimeoutTime time
    then a timeout exception is raised (Nm_TxTimeoutException is called).
  
Test Object: None.
Test Precondition: 
    FrNmSendNegativeVoteInReadySleepState is set to TRUE
  
Test Execution: 
    01: Initialize FrNm
    02: For each cluster execute steps (03-26)
    03: Reset FrIf_Transmit stub counter
    04: Request network
    05: Ensure that FrIf_Transmit returns E_NOT_OK by setting FrIf_Transmit callout function to return E_NOT_OK

    06: Transition from synchronize mode to NM_STATE_REPEAT_MESSAGE state
    07: Check that FrNm entered NM_STATE_REPEAT_MESSAGE state
    08: Reset Nm_TxTimeoutException stub counter

    09: Transition from NM_STATE_REPEAT_MESSAGE mode to NM_STATE_NORMAL_OPERATION state (steps 10-13)
    10: VP(FrNm.ASR403.FRNM035):
        Check tx timeout occurred for message sent in NM_STATE_REPEAT_MESSAGE
    11: Reset FrIf_Transmit_callout so that FrIf_Transmit returns E_OK
    12: Call main function
    13: Check that FrNm entered NM_STATE_NORMAL_OPERATION state

    14: Release network

    15: Reset Nm_TxTimeoutException stub counter

    16: Transition from NM_STATE_NORMAL_OPERATION mode to NM_STATE_READY_SLEEP state (steps 17-20)
    17: VP(FrNm.ASR403.FRNM035):
        Check tx timeout occurred for message sent in NM_STATE_NORMAL_OPERATION
    18: Reset FrIf_Transmit_callout so that FrIf_Transmit returns E_OK
    19: Call main function
    20: Check that FrNm entered NM_STATE_READY_SLEEP state

    21: Reset Nm_TxTimeoutException stub counter

    22: Transition from NM_STATE_READY_SLEEP mode to NM_STATE_BUS_SLEEP state (steps 23-26)
    23: VP(FrNm.ASR403.FRNM035):
        Check tx timeout occurred for message sent in NM_STATE_READY_SLEEP
    24: Reset FrIf_Transmit_callout so that FrIf_Transmit returns E_OK
    25: Call main function
    26: Check that FrNm entered NM_STATE_BUS_SLEEP state
  
Test Input: 
    Messages are not transmitted for FrNmMsgTimeoutTime duration
  
Test Output: 
    Nm_TxTimeoutException calls
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_36_NegativeVoteInReadySleep_Timeout_DET_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_36/source/application/FrNm_ConTest_36.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that if FrNmSendNegativeVoteInReadySleepState is set to TRUE,
    FrNmMultiCoreSupport is set to TRUE, a message timeout occurs, and the
    function handling the message timeout returns a value different than
    SCHM_E_OK, then a Det error is reported.
  
Test Object: None.
Test Precondition: 
    FrNmSendNegativeVoteInReadySleepState is set to TRUE
    FrNmMultiCoreSupport is set to TRUE
  
Test Execution: 
    01: Initialize FrNm
    02: Set FrIf_Transmit stub return value to E_OK, and callout function to NULL
    03: For each cluster execute steps (04-17)
    04: Reset Det_ReportError stub count
    05: Request network
    06: Set FrIf_Transmit to return E_NOT_OK to trigger a timeout
    07: Ensure that Nm TxTimeout exception handling indicates a failure to handle the timeout
    08: Transition to NM_STATE_REPEAT_MESSAGE state to trigger a message transmission
    09: Check that FrNm entered NM_STATE_REPEAT_MESSAGE state
    10: Check that at least one message transmission was attempted
    11: Call main function till a timeout occurs
    12: VP(FrNm.EB.SchM_Call_DET):
        Check det error was reported
    13: Ensure that Nm TxTimeout exception handling indicates a success to handle the timeout
    14: Reset Det_ReportError stub count
    15: Call main function till a timeout occurs
    16: Check that timeout occurred
    17: Check no det error occurred
  
Test Input: 
    Failed timeout exception call when multicore is enabled
  
Test Output: 
    DET error reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_Apis_Return_E_NOT_OK_Det_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_38/source/application/FrNm_ConTest_35.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case FrNmSourceNodeIdentifierEnabled is set to false and FrNmNodeDetectionEnabled is false
	functions: FrNm_RepeatMessageRequest, FrNm_GetNodeIdentifier, FrNm_GetLocalNodeIdentifier return with E_NOT_OK
	and Det is reported
  
Test Object: None.
Test Precondition: 
    FrNmSourceNodeIdentifierEnabled = false
	FrNmNodeDetectionEnabled = false
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_RepeatMessageRequest
    03: Check Det is reported
    04: Call FrNm_GetNodeIdentifier
    05: Check Det is reported
    06: Call FrNm_GetLocalNodeIdentifier
    07: Check Det is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_Apis_Return_E_NOT_OK_Det_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_39/source/application/FrNm_ConTest_36.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case FrNmSourceNodeIdentifierEnabled is set to false and FrNmNodeDetectionEnabled is false
	functions: FrNm_RepeatMessageRequest, FrNm_GetNodeIdentifier, FrNm_GetLocalNodeIdentifier return with E_NOT_OK
  
Test Object: None.
Test Precondition: 
    FrNmSourceNodeIdentifierEnabled = false
	FrNmNodeDetectionEnabled = false
  
Test Execution: 
    01: Initialize FrNm
    02: Call FrNm_RepeatMessageRequest
    03: Call FrNm_GetNodeIdentifier
    04: Call FrNm_GetLocalNodeIdentifier
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_0177</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that,FrNm invokes the API FrIf_GetGlobalTime to get the
    FlexRay bus communication cycle.
    To verify if Bus-Sleep Mode is entered by default at initialization,
    FrNm module does not notify the upper layer by calling the Nm_BusSleepMode.
    To verify if FrNm module entered the Network Mode, it notify the
    Generic NM Interface module by calling Nm_NetworkMode.
  
Test Object: None.
Test Precondition: 
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs
    02: For each configured FrNm Channel do the following:
    03: VP (FrNm.SWS_FrNm_00135):
         - Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
        Also verify that Nm_BusSleepMode Notification is not invoked
    04: Invoke FrNm_PassiveStartup.
    05: Verify that FrNm_PassiveStartup returns E_OK
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle + FrNmMainFunctionPeriod expires.
    07: Call FrNm_GetState and verify that the current mode is NM_MODE_NETWORK.
    08: VP (FrNm.SWS_FrNm_00110):
         - Nm_NetworkMode is invoked to notify Generic NM Interface.
    09: Proceed to step 10, if repeat message time for channel is greater than 0
        else proceed to step 15.
    10: Verify that the channel is in Repeat Message State.
    11: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked as many times as equivalent
        of FrNmRepetitionCycle + FrNmMainFunctionPeriod.
    12: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        repeat message time expires.
    13: Call FrNm_GetState and verify that the current state is
        NM_STATE_READY_SLEEP and the current mode is NM_MODE_NETWORK
    14: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked as many times as equivalent
        of repeat message time.
    15: Verify that the channel is in NM_STATE_READY_SLEEP State as the repeat
        message time is configured as 0.
    16: VP (FrNm.SWS_FrNm_00375):
         - FrIf_GetGlobalTime() is invoked as many times as equivalent
        of FrNmRepetitionCycle + FrNmMainFunctionPeriod.
  
Test Input: None.
Test Output: 
  FrNm module invoked the API FrIf_GetGlobalTime to get the
  FlexRay bus communication cycle according to the verification
  points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PassiveStartUp_SyncMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that Synchronize state is reached from Bus-Sleep State
    when FrNm_PassiveStartUp is called.

    To verify FrNm_PassiveStartUp API returns E_OK
    when there is no error.

    Verify that FrNm_PassiveStartUp returns E_NOT_OK
    when the current state is Synchronize State
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == true
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke FrNm_GetState.
    04: Verify that the current state is NM_STATE_BUS_SLEE and
         - Current Mode is NM_MODE_BUS_SLEEP.
    05: Invoke FrNm_PassiveStartUp
    06: VP (FrNm.SWS_FrNm_00237):
         - FrNm_PassiveStartUp returns E_OK
    07: Invoke FrNm_MainFunction_CFGIF once.
    08: Invoke FrNm_GetState.
    09: VP (FrNm.SWS_FrNm_00317):
        Current state is NM_STATE_SYNCHRONIZE.
        Current mode is NM_MODE_SYNCHRONIZE.
    10: Invoke FrNm_PassiveStartUp
    11: VP (FrNm.EB_Ref.SWS_FrNm_00260.Synchronize):
         - FrNm_PassiveStartUp returns E_NOT_OK
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00260.Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0117</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that if FrNmPassiveModeEnabled is set to true, FrNm module
    does not enter the state Normal Operation in Network Mode. i.e FrNm module
    enters the Ready Sleep State after completion of the FrNmRepeatMessageTime
    and time equivalent of FrNmRepetitionCycle.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == true
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel do the following:
    03: Invoke FrNm_PassiveStartUp
    04: VP (FrNm.SWS_FrNm_00258):
        - FrNm_PassiveStartUp returns E_OK
    05: Invoke FrNm_MainFunction in a loop (i.e. number of times) till the
        "time equivalent of FrNmRepetitionCycle + FrNmMainFunctionPeriod"
        expires.
    06: For channels having FrNmRepeatMessageTime &gt;0, invoke FrNm_MainFunction
        in a loop till "FrNmRepeatMessageTime + T" time expires
        Here "T" represents the time gap between FrNmRepeatMessageTime
        completion to expiry of the remaining (since the timer is started before
        expiry of FrNmRepeatMessageTime) time equivalent of FrNmRepetitionCycle.
    07: Invoke FrNm_GetState.
    08: VP (FrNm.EB.SWS_FrNm_00187.Implicit, FrNm.SWS_FrNm_00136, FrNm.SWS_FrNm_00122):
        Current state is NM_STATE_READY_SLEEP.
        Current mode is NM_MODE_NETWORK.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.SWS_FrNm_00187.Implicit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0118</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module enters Synchronize State due to the invocation of
    FrNm_PassiveStartUp in Bus Sleep State. After completion of the
    FrNmRepetitionCycle in Synchronize mode, FrNm module enters the Repeat
    Message State of Network Mode.
    To verify FrNm_GetState updates nmStatePtr with current State and the
    nmModePtr with current Mode.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == true
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; 0 for at least one channel
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNm Channel having FrNmRepeatMessageTime &gt; 0,
        do the following:
    03: Invoke FrNm_GetState.
    04: VP (FrNm.SWS_FrNm_00104):
        Current state is NM_STATE_BUS_SLEEP
         - Current Mode is NM_MODE_BUS_SLEEP.
    05: Invoke FrNm_PassiveStartUp
    06: Verify that FrNm_PassiveStartUp returns E_OK
    07: Invoke FrNm_MainFunction_CFGIF once.
    08: Invoke FrNm_GetState.
    09: VP (FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00138):
        Current state is NM_STATE_SYNCHRONIZE.
        Current mode is NM_MODE_SYNCHRONIZE.
    10: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmRepetitionCycle+ MainFunctionPeriod expires.
    11: Invoke FrNm_GetState.
    12: VP (FrNm.SWS_FrNm_00104, FrNm.SWS_FrNm_00138):
        Current state is NM_STATE_REPEAT_MESSAGE.
        Current mode is NM_MODE_NETWORK.
  
Test Input: None.
Test Output: 
    FrNm_PassiveStartUp() is only accepted in the Bus sleep state and returns
    E_OK. In all other states the API returns a value E_NOT_OK according to the
    verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0146</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if the module operates in passive mode then:
    The call of FrNm_EnableCommunication in Network Mode returns E_NOT_OK
    The call of FrNm_DisableCommunication in Network Mode returns E_NOT_OK
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == true
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannel execute steps 03 to 11.
    03: Invoke FrNm_PassiveStartUp.
    04: Verify that FrNm_PassiveStartUp returns E_OK.
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the
        time equivalent of FrNmRepetitionCycle + FrNmMainFunctionPeriod expires.
    06: Invoke FrNm_GetState.
    07: Verify that the current state is NM_STATE_REPEAT_MESSAGE andor NM_STATE_READY_SLEEP.
        Current mode is NM_MODE_NETWORK.
    08: Invoke FrNm_DisableCommunication.
    09: VP (FrNm.SWS_FrNm_00392):
         - FrNm_DisableCommunication returns E_NOT_OK.
    10: Invoke FrNm_EnableCommunication.
    11: VP (FrNm.SWS_FrNm_00389):
         - FrNm_EnableCommunication returns E_NOT_OK.
  
Test Input: None.
Test Output: 
    FrNm_EnableCommunication in Network Mode returned E_NOT_OK
    and FrNm_DisableCommunication in Network Mode returned E_NOT_OK
    according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00389</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00392</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>TC_FRNM_RSIPassiveMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If "FrNmPassiveModeEnabled" is set to 'true', the FrNm module shall not
    invoke Nm_RemoteSleepIndication() and Nm_RemoteSleepCancellation().
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to 'true'.
      - "FrNmRemoteSleepIndicationEnabled" is set to 'false'.
      - "FrNmRemoteSleepIndTime" is set to 0.
    * Module state:
      - FrNm module is initialized.
  
Test Execution: 
    01: Prepare test case preconditions:
        - Initialize FrNm module
        - Clear stub counts
    02: Execute the Steps 03 - 08 for all configured channels.
    03: Trigger a transition to Repeat Message state using
        FrNm_PassiveStartUp().
    04: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses (to enter Ready Sleep state).
    05: Verify Ready Sleep state is entered.
    06: Invoke the channel's main function in a loop until Remote Sleep
        Indication time elapses.
    07: VP (FrNm.SWS_FrNm_00188):
         - Nm_RemoteSleepIndication() is not invoked.
    08: Simulate the reception of an NM-PDU with Vote Bit set.
    09: Invoke the channel's main function once to process the Rx PDU.
    10: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    11: VP (FrNm.SWS_FrNm_00188):
         - Nm_RemoteSleepCancellation() is not invoked.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>TS_FRNM_TriggerTransmit_TxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_4/source/application/FrNm_ConTest_4.c</sourcefile>
      <sourceline>719</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify DET detection functionality for error FRNM_E_PDU_ID_INVALID when the following functions
  are called in passive mode: FrNm_TxConfirmation(), FrNm_TriggerTransmit().

Test Object: None.
Test Precondition: 
  - "FrNmPassiveModeEnabled" is set to 'true'.
  - "FrNmDevErrorDetect" is set to 'true'.

Test Execution: 
    01: Initialize the FrNm Module.
    02: Call FrNm_TxConfirmation(0) - which has no functionality in passive mode.
    03: Check if an error was reported to DET.
    04: Call FrNm_TriggerTransmit(0, NULL_PTR) - which has no functionality in passive mode.
    05: Check if an error was reported to DET.

Test Input: None.
Test Output: 
  The APIs with return values will return E_NOT_OK.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.TriggerTransmit.PassiveMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.TxConfirmation.PassiveMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrNm_MultipleNetworkOperations_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_40_MultipleNetworkOperation_01_Schm/source/application/FrNm_ConTest_40.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when FrNm_MultipleNetworkOperations
    is called with parameter for PassiveStartup
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport is set to True.
    FrNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call FrNm_MultipleNetworkOperations
    03: Check that the correct state is ready sleep state
  
Test Input: 
    FrNm_MultipleNetworkOperations with operation for Passive Startup
  
Test Output: 
    Passive startup is executed
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>TC_FRNM_FrNm_MultipleNetworkOperations_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_40_MultipleNetworkOperation_01_Schm/source/application/FrNm_ConTest_40.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when FrNm_MultipleNetworkOperations
    is called with parameter for NetworkRequest and NetworkRelease
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport is set to True.
    FrNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call FrNm_MultipleNetworkOperations
    03: Check current state is Normal operation state
    04: Check active wakeup bit is set
    05: Call FrNm_MultipleNetworkOperations
    06: Check current state is Ready Sleep state
  
Test Input: 
    FrNm_MultipleNetworkOperations with operation for Network Request
    FrNm_MultipleNetworkOperations with operation for Network Release
  
Test Output: 
    Active wakeup bit is set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>TC_FRNM_FrNm_MultipleNetworkOperations_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_40_MultipleNetworkOperation_01_Schm/source/application/FrNm_ConTest_40.c</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when FrNm_MultipleNetworkOperations
    is called with parameter for NetworkGwEraRequest
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport is set to True.
    FrNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call FrNm_MultipleNetworkOperations
    03: Check current state is Normal operation state
    04: Check active wakeup bit is not set
  
Test Input: 
    FrNm_MultipleNetworkOperations with operation for Network Gw Era Request
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_FrNm_MultipleNetworkOperations_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_41_MultipleNetworkOperation_02_Schm/source/application/FrNm_ConTest_41.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when FrNm_MultipleNetworkOperations
    is called with parameter for PassiveStartup
  
Test Object: None.
Test Precondition: 
    FrNmMultiCoreSupport is set to True.
    FrNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to true
  
Test Execution: 
    01: Initialize stubs and module
    02: Call FrNm_MultipleNetworkOperations
    03: Check that the correct state is ready sleep state
  
Test Input: 
    FrNm_MultipleNetworkOperations with operation for Passive Startup
  
Test Output: 
    Passive startup is executed
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmMultiCoreUseSingleCS.FrNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_0121</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that after initialization, the FrNm module does not invoke
    FrIf_Transmit.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0122</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module is set to Network mode from Synchronize state when
    FrNmRepetitionCycle is completed.
    [SWS_FrNm_00143: Event is generated internal to FlexRay NM and is not generated
    by some other module. At each execution of the FlexRay NM main function a
    calculation is performed to indirectly determine whether a cycle has been
    completed. If FrNmRepetitionCycle is completed, FrNm generates an event.]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: Loop through the each configured FrNmChannels and execute the following:
    03: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest and check that it returns E_OK.
    04: Invoke FrNm_MainFunction once.(Deviation from CTSP).
    05: Invoke FrNm_GetState and check that FrNm_GetState returns E_OK.
    06: VP (FrNm.SWS_FrNm_00104):
         - FrNm_GetState function provides consistent information
        about the current state and current mode of theNM state machine.
    07: Invoke FrNm_MainFunction in a loop with time equivalent
        of "Repetition Cycle - 2".
    08: Invoke FrNm_GetState and check that FrNm_GetState returns E_OK.
    09: VP (FrNm.SWS_FrNm_00104):
         - FrNm_GetState function provides consistent information
        about the current state and current mode of the NM state machine.
    10: Invoke FrNm_MainFunction once for the state Transition.
    11: Invoke FrNm_GetState and check that FrNm_GetState returns E_OK.
    12: VP (SWS_FrNm_00143):
         - The current state of NM state machine is either
        NM_STATE_NORMAL_OPERATION or NM_STATE_REPEAT_MESSAGE and not in
        NM_STATE_SYNCHRONIZE.
    13: VP (SWS_FrNm_00143):
         - The current mode of NM state machine is NM_MODE_NETWORK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0123</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in Synchronize mode, FrNm module does not invoke FrIf_Transmit.
    [FrNm.SWS_FrNm_00308: After entering into the Synchronize mode FrNm deactivates the
    transmission of both NM-Data and NM-Vote, hence FrIf_Transmit is not
    invoked.]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: Loop through the each configured FrNmChannels and execute the following:
    03: Check whether Voting Cycle is greater than Data Cycle or not.
    04: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest and check that it returns E_OK.
    05: Invoke FrNm_MainFunction once for the state Transition.
    06: Invoke FrNm_GetState and check that FrNm_GetState returns E_OK.
    07: VP (FrNm.SWS_FrNm_00104):
         - Check that FrNm_GetState function provides information about the
        current state and current mode of the NM state machine.Also check
        that the current mode of NM state machine is NM_STATE_SYNCHRONIZE
        and current mode of NM state machine is NM_MODE_SYNCHRONIZE.
    08: Invoke FrNm_MainFunction in a loop till time equivalent of
        "VotingCycle + 1 expires".
    09: VP (FrNm.SWS_FrNm_00308):
         - That, in Synchronize mode FrNm deactivates the
        transmission of both NM-Data and NM-Vote and hence FrIf_Transmit
        is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0124</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that If Bus Sleep State is entered from Normal Operation State,
    FrNm module does not invoke FrIf_Transmit.
    [FrNm.SWS_FrNm_00137: Bus Sleep Mode deactivates the transmission of both  NM-Data and
    NM-Vote, hence FrIf_Transmit is not invoked]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmMainAcrossFrCycle == false.
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: Loop through the each configured FrNmChannels and execute the following:
    03: Check whether (CTFrNmPduLength - n) is greater than 0 or not.
        (n equal to 1 if FrNmSourceNodeIdentifierEnabled is set to false
        otherwise n equal to 2).
    04: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    05: Clear FrIf_Transmit_Stub Count.
    06: Set the MessageCycleTime variable as Voting Cycle if time
        equivalent of FrNmVotingCycle is greater than time equivalent
        of FrNmDataCycle.
    07: Set the MessageCycleTime variable as Data Cycle if time
        equivalent of FrNmDataCycle is greater than time equivalent
        of FrNmVotingCycle.
    08: Get the current FlexRay time to decide next repetition cycle
        interval. Do not bother the return type here as this is a stub
        function which always returns E_OK.
    09: Invoke FrNM_MainFunction in a loop till the time equivalent of
        FrNmDataCycle expires.
    10: Get the number of TxPdu configured for respective channel.
    11: Loop through the configured TxPdu.
    12: Check whether 'FrNmTxPduContainsVote and FrNmTxPduContainsData' or
        'FrNmTxPduContainsVote' or 'FrNmTxPduContainsData'is set to true.
    13: Verify that FrIf_Transmit is invoked if any of the condition mentioned
        in step 12 is true.
    14: Invoke FrnNm_Init in Normal Operation State.
    15: Call FrNm_Mainfunction once.
    16: Check that FrNm_GetState function returns E_OK.
    17: VP (FrNm.SWS_FrNm_00104):
         - Check that the current state is NM_STATE_BUS_SLEEP and current
        mode is NM_MODE_BUS_SLEEP.
    18: If Voting Cycle is greater than DataCycle then invoke
        FrNm_MainFunction in a loop till time equivalent of voting cycle
        expires, else proceed with step 19.
    19: If Data Cycle is greater than voting Cycle then invoke
        FrNm_MainFunction in a loop till time equivalent of data cycle
        expires.
    20: VP (FrNm.SWS_FrNm_00137):
         - Check that FrIf_Transmit is not invoked for every configured TxPdu.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PduTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - When Repeat Message State is entered, the transmission of NM-Data and
      NM-Vote PDUs is activated. [FRNM116]
    - When Bus Sleep State is entered, the transmission of NM-Data and
      NM-Vote PDUs is deactivated. [FrNm.SWS_FrNm_00137]
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
      - For "FrNmChannel_0":
        - "FrNmRepeatMessageTime" is greater than the time equivalent of
           FrNmDataCycle.
        - "FrNmRepeatMessageTime" is greater than the time equivalent of
          FrNmVotingCycle.
        - "FrNmDataCycle" is twice as longer as "FrNmVotingCycle"
        - Two Tx Pdus are configured of which "FrNmTxPduContainsVote" is set
          to 'true' for one and 'FrNmTxPduContainsData' is set to 'true' for
          the other.
    * Module state:
      - FrNm module is initialized.
    * Misc.:
      - The stub of FrIf_Transmit() is enabled and is configured to store
      the history of at least 2 invocations (EBSTUBS_MAX_CALLS_FRIF_TRANSMIT).
  
Test Execution: 
    Note: All references to "the channel" refers to "FrNmChannel_0".
    01: Prepare test case preconditions.
    02: Trigger a transition to Repeat Message State.
    03: Calculate the remaining number of Flexray cycles for the Voting cycle
        to elapse.
    04: Invoke the channel's main function in a loop so that the
        time equivalent of "FrNmVotingCycle" is just about to elapse.
    05: VP (FrNm.EB_Ref.SWS_FrNm_00116.VotePDU):
         - FrIf_Transmit is not invoked for the Tx PDU configured with
        "FrNmTxPduContainsVote = true".
    06: Invoke the channel's main function in a loop until the time equivalent
        of FrNmVotingCycle elapses.
    07: VP (FrNm.EB_Ref.SWS_FrNm_00116.VotePDU):
         - FrIf_Transmit is invoked for the Tx PDU configured with
        "FrNmTxPduContainsVote = true".
    08: VP (FrNm.EB_Ref.SWS_FrNm_00116.DataPDU):
         - FrIf_Transmit is not invoked for the Tx PDU configured with
        "FrNmTxPduContainsData = true".
    09: Calculate the remaining number of Flexray cycles for the Data cycle
        to elapse.
    10: Invoke the channel's main function in a loop so that the
        time equivalent of "FrNmDataCycle" is just about to elapse.
    11: VP (FrNm.EB_Ref.SWS_FrNm_00116.DataPDU):
         - FrIf_Transmit is not invoked for the Tx PDU configured with
        "FrNmTxPduContainsData = true".
    12: Invoke the channel's main function in a loop until the time equivalent
        of "FrNmDataCycle" elapses.
    13: VP (FrNm.EB_Ref.SWS_FrNm_00116.DataPDU):
         - FrIf_Transmit is invoked for the two Tx PDUs.
        (Note: A NM-Vote PDU also will be transmitted at this time because
        FrNmDataCycle= 2 * FrNmVotingCycle).
    14: Check that one of the Tx-PDUs corresponds to the NM-Vote PDU and
        the other Tx-PDU corresponds to the NM-Data PDU.
    15: Call FrNm_Init() again to reach Bus Sleep Mode.
    16: Call FrNm_Mainfunction.
    17: Verify that Bus Sleep State is entered.
    18: Calculate the remaining number of Flexray cycles for the Data cycle
        to elapse.
    19: Invoke the channel's main function in a loop until the time equivalent.
    20: VP (FrNm.SWS_FrNm_00137):
         - FrIf_Transmit() is not invoked for the both Tx PDUs.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00116.DataPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00116.VotePDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0126</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FlexRay NM module transmits NM Data and NM Vote separately by
    the invocation of FrIf_Transmit.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
    FrNmRepeatMessageBitEnabled == true.
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmDataCycle
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmVotingCycle
    FrNmControlBitVectorActive == true
    FrNmRepeatMessageBitActive == true
    FrNmPduScheduleVariant == FRNM_PDU_SCHEDULE_VARIANT_4) ||
                              FRNM_PDU_SCHEDULE_VARIANT_6
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 12.
    03: Check whether FrNmRepeatMessageTime is greater than Time equivalent of
        FrNmDataCycle and FrNmRepeatMessageTime is greater than Time equivalent
        of FrNmVotingCycle and FrNmControlBitVectorActive is true and
        FrNmRepeatMessageBitActive is true and FrNmPduScheduleVariant is equal
        to FRNM_PDU_SCHEDULE_VARIANT_4 or FRNM_PDU_SCHEDULE_VARIANT_6
        then proceed.
    04: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    05: Set the MessageCycleTime variable as Voting Cycle if time equivalent
        of FrNmVotingCycle is greater than time equivalent of FrNmDataCycle.
    06: Set the MessageCycleTime variable as Data Cycle if time equivalent
        of FrNmDataCycle is greater than time equivalent of FrNmVotingCycle.
    07: Get the current FlexRay time to decide next repetition cycle interval.
        Do not bother the return type here as this is a stub function which
        always returns E_OK.
    08: Invoke FrNM_MainFunction in a loop till the time equivalent of
        MessageCycleTime is expired.
    09: Get the number of TxPdu configured for respective channel.
    10: Loop through the configured TxPdu.
    11: Check whether 'FrNmTxPduContainsVote and FrNmTxPduContainsData' or
        'FrNmTxPduContainsVote' or 'FrNmTxPduContainsData'is set to true.
    12: VP (FrNm.SWS_FrNm_00147):
         - FrIf_Transmit is invoked if any of the condition mentioned
        in step 11 is true.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0127</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>866</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FlexRay NM module sets Bit 7 of the Control Bit Vector to 0b.
    [FrNm.ASR403.FRNM214: The Control Bit Vector byte is verified in the FrIf_Transmit
    invoked by FrNm]

    Verify that FlexRay NM module sets Bit 1 to 6 of the Control Bit Vector
    to 0b.
    [FrNm.SWS_FrNm_00161: The Control Bit Vector byte is verified in the FrIf_Transmit
    invoked by FrNm]

    Verify that FlexRay NM module sets Bit 0 to 6 of the NM-Vote PDU to 0b.
    [FrNm.ASR403.FRNM219: The NM-Vote PDU is verified in the FrIf_Transmit invoked by FrNm]

    Verify that the NM-Vote PDU format of the FrNm module contains a Voting Bit.
    Bit-7 of Byte-0 shall contain the Voting bit[FrNm.SWS_FrNm_00215, FrNm.SWS_FrNm_00216]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmRepeatMessageBitEnabled == true.
    FrNmMainAcrossFrCycle == false.
    Data cycle is configured as greater than vote cycle
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmDataCycle
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmVotingCycle
    FrNmControlBitVectorActive == true
    FrNmRepeatMessageBitActive == true
    FrNmPduScheduleVariant == FRNM_PDU_SCHEDULE_VARIANT_4) ||
                              FRNM_PDU_SCHEDULE_VARIANT_6
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 15.
    03: Check whether FrNmRepetitionCycle is greater than Time
        equivalent of FrNmDataCycle and FrNmControlBitVectorActive is true and
        FrNmRepeatMessageBitActive is true and Schedule variant is configured as
        any one of 3, 4, 5 and 6 .
    04: Invoke FrNm_NetworkRequest in Bus Sleep Mode.
    05: Invoke FrNm_MainFunction in a loop till the 'time equivalent
        of FrNmRepetitionCycle + FrNmMainFunctionPeriod' expires.
    06: Invoke FrNm_GetState and check that FrNm_GetState returns E_OK.
    07: Verify that the current state is either NM_STATE_REPEAT_MESSAGE or
        NM_STATE_NORMAL_OPERATION and the current mode is NM_MODE_NETWORK.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        FrNmVotingCycle expires.
    09: For each configured FrNmTxPdu execute following:.
    10: Check that FrNmTxPduContainsVote is true.
    11: VP (FrNm.SWS_FrNm_00215, FrNm.SWS_FrNm_00216, FrNm.ASR403.FRNM219):
         - FrIf_Transmit is invoked and Byte-0 of Tx Buffer contains
        '0x80'[i.e., vote bit in Byte-0 is SET].
    12: Invoke FrNm_MainFunction in a loop till the time equivalent of
        FrNmDataCycle-FrNmVotingCycle' expires in case of Data cycle is
        configured as greater than voting cycle.
    13: For each configured FrNmTxPdu execute following:.
    14: Check that FrNmTxPduContainsData is true.
    15: VP (FrNm.ASR403.FRNM214, FrNm.SWS_FrNm_00161):
         - FrIf_Transmit is invoked for configured TxPdu and
        Byte-0 of Tx Buffer contains '0x00'[i.e., vote bit in Byte-0 is
        Cleared].
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0129</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1036</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The FrNm module transmits the NM-Vote PDU Format and Control Bit Vector
    Format of the NM-Data PDU in same PDU as the NM-Data.
    [FrNm.SWS_FrNm_00162: Combination of NM-Vote PDU and Control Bit Vector is verified in
    the FrIf_Transmit invoked by FrNm]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmRepeatMessageBitEnabled == true.
    FrNmMainAcrossFrCycle == false.
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmDataCycle
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmVotingCycle
    FrNmControlBitVectorActive == true
    FrNmRepeatMessageBitActive == true
    FrNmPduScheduleVariant == FRNM_PDU_SCHEDULE_VARIANT_1) ||
                              FRNM_PDU_SCHEDULE_VARIANT_2
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 7.
    03: Check whether 'FrNmRepeatMessageTime is greater than Time equivalent
        of FrNmDataCycle and Time equivalent of FrNmVotingCycle' and
        'FrNmRepeatMessageBitActive is true' and 'FrNmControlBitVectorActive
        is true' and 'FrNmPduScheduleVariant is FRNM_PDU_SCHEDULE_VARIANT_1
        or FRNM_PDU_SCHEDULE_VARIANT_2'.
    04: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    05: If DataCycle is greater than Voting Cycle then invoke
        FrNm_MainFunction in a loop till time equivalent of DataCycle
        expires, else proceed with step 06.
    06: If Voting Cycle is greater than DataCycle then invoke
        FrNm_MainFunction in a loop till time equivalent of voting cycle
    07: VP (FrNm.SWS_FrNm_00162):
         - FrIf_Transmit is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0171</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNm module enters the Ready Sleep State, the FrNm module
    does not invoke FrIf_Transmit.[FRNM126: After entering into the Ready Sleep
    State, FrNm deactivates the transmission of both NM-Data and NM-Vote,
    hence FrIf_Transmit is not invoked]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmMainAcrossFrCycle == false.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 03 to 07.
    03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    04: Check whether Voting Cycle is greater than DataCycle.
    05: Invoke FrNm_MainFunction in a loop till time equivalent of
        "voting cycle + 1" expires, if Voting Cycle is greater than DataCycle
        ,else proceed with step 6.
    06: Invoke FrNm_MainFunction in a loop till time equivalent of
         "data cycle + 1" expires if DataCycle is greater than Voting Cycle.
    07: VP (FrNm.EB_Ref.SWS_FrNm_00126.DataPDU, FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1):
         - After entering into Ready Sleep State, the FrNm module
        does not invoke FrIf_Transmit and FrNm deactivates the transmission
        of both NM-Data and NM-Vote, hence FrIf_Transmit is not invoked for
        every configured TxPdu.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.DataPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0172</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNmControlBitVectorEnabled is set to FALSE, FlexRay NM
    module sets Control Bit Vector to 0x00. [FrNm.ASR403.FRNM3829]

    Verify that Transmit data (provided in FrIf_Transmit by the invocation of
    FrNm_SetUserData) by FrNm contains Control Bit Vector as 0x00. [FrNm.ASR403.FRNM324]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmMainAcrossFrCycle == false.
    FrNmControlBitVectorEnabled == false.
    FrNmUserDataEnabled == true.
    FrNmRepetitionCycle &gt; Time equivalent of FrNmDataCycle
    FrNmPduScheduleVariant == FRNM_PDU_SCHEDULE_VARIANT_4 ||
                              FRNM_PDU_SCHEDULE_VARIANT_6
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 12.
    03: Check whether RepeatMessage time is greater than DataCycle
        and Schedule variant is configured as any one of 3, 4, 5 and 6.
    04: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest and check that it returns E_OK.
    05: Invoke FrNm_MainFunction in a loop till the 'time equivalent of
        FrNmRepetitionCycle + FrNmMainFunctionPeriod' expires.
    06: Invoke FrNm_GetState and check that it returns E_OK.
    07: VP (FrNm.SWS_FrNm_00104):
         - Check that FrNm_GetState function provides information about the
        current state and current mode of the NM state machine.Also check
        that the current state is NM_STATE_NORMAL_OPERATION and
        NM_STATE_REPEAT_MESSAGE and the current mode of NM state machine is
        NM_MODE_NETWORK .
    08: VP (FrNm.SWS_FrNm_00240):
         - Invoke FrNm_SetUserData and Check it returns E_OK.
    09: Invoke FrNm_MainFunction in a loop till time equivalent of Data
        Cycle expires.
    10: Loop through the configured TxPdu.
    11: Check whether 'FrNmTxPduContainsVote and FrNmTxPduContainsData'
        or 'FrNmTxPduContainsData'is set to true.
    12: VP (FrNm.ASR403.FRNM3829, FrNm.ASR403.FRNM324):
         - Check each configured TxPdu for the type FRNM_DATA and verify
        that FrIf_Transmit is invoked and the control Bit vector of
        the NM-Data PDU is set to 0x00.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM3829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0173</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1369</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, FrNm_Transmit returns E_NOT_OK in Network Mode, Synchronize
    Mode and Bus-Sleep Mode.[FrNm.ASR403.FRNM366]
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 13.
    03: VP (FrNm.SWS_FrNm_00104):
         - The current mode is NM_MODE_BUS_SLEEP.
    04: VP (FrNm.ASR403.FRNM366, FrNm.EB.API.Transmit):
         - FrNm_Transmit returns E_NOT_OK when FrNm_Transmit is
        invoked in Bus Sleep mode with Data Pdu Id of respective channel.
    05: Check whether the passive Mode is enabled or not.
    06: VP (FrNm.SWS_FrNm_00237):
         - Invoke FrNm_PassiveStartUp if passive Mode is enabled and verify that
        it returns E_OK.
    07: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest if passive Mode is not enabled and verify
        that it returns E_OK.
    08: Invoke FrNm_MainFunction once.
    09: VP (FrNm.SWS_FrNm_00104):
         - The current mode is NM_MODE_SYNCHRONIZE.
    10: VP (FrNm.ASR403.FRNM366, FrNm.EB.API.Transmit):
         - FrNm_Transmit returns E_NOT_OK when FrNm_Transmit is
        invoked in Bus Synchronize mode with Data Pdu Id of respective channel.
    11: Invoke FrNm_MainFunction in a loop till the 'time equivalent of
        FrNmRepetitionCycle + FrNmMainFunctionPeriod' expires.
    12: VP (FrNm.SWS_FrNm_00104):
         - The current mode is NM_MODE_NETWORK.
    13: VP (FrNm.ASR403.FRNM366, FrNm.EB.API.Transmit):
         - FrNm_Transmit returns E_NOT_OK when FrNm_Transmit is
        invoked in Bus network mode with Data Pdu Id of respective channel.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.API.Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0003</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1506</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   To verify that,
   FrNm module enters Bus-Sleep mode from Ready Sleep State even when
   NM-message(NM-data where vote bit set as 1) is received in the
   configurable amount of time determined by FrNmReadySleepCnt.
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled == false
     FrNmMainAcrossFrCycle == false
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 12.
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_MainFunction in a loop till (time equivalent of
        FrNmReadySleepCnt - 1) expires to check the state still remains at
        NM_STATE_READY_SLEEP.
    05: VP (FrNm.SWS_FrNm_00104):
         - The current mode is NM_MODE_NETWORK and the current state is
        NM_STATE_READY_SLEEP.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the (time equivalent of
        FrNmRepetitionCycle - 1) expires to check that the state remains in
        Ready Sleep State.
    07: VP (FrNm.SWS_FrNm_00104):
         - The current mode is NM_MODE_NETWORK and the current state is
        NM_STATE_READY_SLEEP.
    08: Invoke remote request FrNm_RxIndication with vote bit set for all
        configured data pdu.
    09: Invoke FrNm_MainFunction once to enter NM_STATE_BUS_SLEEP state.
    10: VP (FrNm.SWS_FrNm_00104,FrNm.ASR403.FRNM157):
         - The current mode is NM_MODE_BUS_SLEEP and the current state
           is NM_STATE_BUS_SLEEP.
    11: Check StateChange Notification.
    12: Check that Nm_BusSleepMode is invoked.
  
Test Input: 
  
Test Output: 
  FrNm module enters Bus-Sleep mode from Network mode,
  according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0005</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1653</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that NM-Vote and NM-data messages are sent periodically
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmUserDataEnabled == true.
    FRNM_DATA_CYCLE = 2 * FRNM_VOTING_CYCLE
  
Test Execution: 
    01: Clear FrIf_Transmit_Stub Count.
    02: Initialise FrNm and the stubs.
    03: For each configured FrNmChannels repeat the steps 4 to 20.
    04: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest and check that it returns E_OK.
    05: Invoke FrNm_MainFuction in a loop till time equivalent of
        Repetition cycle expires.
    06: VP (FrNm.SWS_FrNm_00104):
         - The current mode is NM_MODE_NETWORK and the current state
           is either NM_STATE_NORMAL_OPERATION or NM_STATE_REPEAT_MESSAGE.
    07: VP (FrNm.SWS_FrNm_00240):
         - Invoke FrNm_SetUserData and verify that it returns E_OK.
    08: Clear FrIf_Transmit_Stub Count.
    09: Repeat steps 10 to 20 in a loop for a number of times, say 5.
    10: Invoke FrNm_MainFunction in a loop till VotingCycle - 1.
    11: VP (FrNm.ECUC_FrNm_00032):
         - FrIf_Transmit is not invoked as the voting cycle is not
        expired.
    12: Invoke FrNm_MainFunction once again.
    13: Increment count for vote cycle transmission.
    14: VP (FrNm.EB_Ref.SWS_FrNm_00123.VotePDU, FrNm.SWS_FrNm_00010, FrNm.ECUC_FrNm_00032):
         - The FrIf_Transmit is invoked when the voting cycle
        expired and the data pointed by SduDataPtr contains vote(Bit-7 of
        Byte-0).
    15: Clear vote bit to check next channel.
    16: Invoke FrNm_MainFunction in a loop till DataCycle-1 expires.
    17: VP (FrNm.ECUC_FrNm_00031):
         - FrIf_Transmit is not invoked as the Data cycle is not
        expired.
    18: Invoke FrNm_MainFunction once again.
    19: Increment count twice for Vote Cycle transmission and Data Cycle
        transmission.
    20: VP (FrNm.EB_Ref.SWS_FrNm_00123.DataPDU, FrNm.SWS_FrNm_00010, FrNm.ECUC_FrNm_00031):
         - FrIf_Transmit is invoked twice(once for voting cycle and
        once for data cycle) and SduDataPtr contains data(Byte-1) pointed by
        user data.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00123.DataPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00123.VotePDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0176</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FRNM_SOURCE_NODE_IDENTIFIER_ENABLED is set to FALSE, then the
    transmit data(FrIf_Transmit and FrNm_TriggerTransmit) by FrNm contains the
    user data from the byte position 1 to FrNmPduLength.[FrNm.SWS_FrNm_00381]
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmUserDataEnabled == true.
    FrNmSourceNodeIdentifierEnabled == false.
    FrNmMainAcrossFrCycle == false.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For each configured FrNmChannels repeat the steps 03 to 09.
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: VP (FrNm.SWS_FrNm_00240):
         - Invoke FrNm_SetUserData and verify that it returns E_OK.
    05: Invoke FrNm_MainFunction_CFGIF in a loop till DataCycle expires.
    06: For each configured FrNmRxPdus repeat the step 07 to 09.
    07: Check whether FrNmTxPduContainsData is true.
    08: VP (FrNm.SWS_FrNm_00381):
         - FrIf_Transmit is invoked.
         - PduInfoPtr.SduPtr points to PDU-Data in which user data bytes from
           1(byte position) to FrNmPduLength are same as expected.
    09: VP (FrNm.SWS_FrNm_00280, FrNm.SWS_FrNm_00252):
         - Invoke FrNm_TriggerTransmit and the SduPtr must contain the same user
        data.
  
Test Input: None.
Test Output: 
    FrNm uses the data set by FrNm_SetUserData for the next
    invocation of FrIf_Transmit by FrNm or FrNm_TriggerTransmit by underlying
    module according to the verification points mentioned above.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00381</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PassiveStartUp_NwMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_5/source/application/FrNm_ConTest_5.c</sourcefile>
      <sourceline>1956</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the current state is not Bus-Sleep Mode, the function
    FrNm_PassiveStartUp has no effect on the operation mode of the FrNm module
    and returns E_NOT_OK.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
      - "FrNmRepeatMessageTime" is set to be longer than at least 2
        Repetition Cycles.
    * Module state:
      - FrNm module is initialized.
    * Channel state:
      - The channel is in Repeat Message State by means of an active wakeup.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: Trigger a transition to Synchronize State using FrNm_NetworkRequest().
    03: Invoke the channel's main function once to process the request.
    04: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    05: Invoke FrNm_GetState and verify that Repeat Message state is entered.
    06: VP (FrNm.EB_Ref.SWS_FrNm_00260.RepeatMessage):
         - Invoke FrNm_PassiveStartUp and verify that FrNm_PassiveStartUp has no
        effect on the operation mode of the FrNm module as the current state is
        Repeat Message and it returns E_NOT_OK.
    07: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    08: VP (FrNm.EB_Ref.SWS_FrNm_00260.RepeatMessage):
         - the channel remains in Repeat Message state.
    09: Invoke the channel's main function in a loop until the Repeat Message
        timer elapses (to enter Normal Operation state).
    10: Call FrNm_GetState and verify that Normal Operation state is entered.
    11: VP (FrNm.EB_Ref.SWS_FrNm_00260.NormalOperation):
         - Invoke FrNm_PassiveStartUp and verify that FrNm_PassiveStartUp has no
        effect on the operation mode of the FrNm module as the current state is
        Normal Operation and it returns E_NOT_OK.
    12: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    13: VP (FrNm.EB_Ref.SWS_FrNm_00260.NormalOperation):
         - the channel remains in Normal Operation state.
    14: Call FrNm_NetworkRelease.
    15: Invoke the channel's main function once to process the request.
    16: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    17: Call FrNm_GetState and verify that the Ready Sleep state is entered.
    18: VP (FrNm.EB_Ref.SWS_FrNm_00260.ReadySleep):
         - Invoke FrNm_PassiveStartUp and verify that FrNm_PassiveStartUp has no
        effect on the operation mode of the FrNm module as the current state is
        Ready Sleep and it returns E_NOT_OK.
    19: Invoke the channel's main function in a loop until the time equivalent
        of one "Repetition Cycle" elapses.
    20: VP (FrNm.EB_Ref.SWS_FrNm_00260.ReadySleep):
         - the channel remains in Ready Sleep state.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00260.RepeatMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00260.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00260.ReadySleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRNM_FrNmPnInfo_504PNCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_504PNCs/source/application/FrNm_ConTest_504PNCs.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify FrNm partial networking functionality when the sum
      (FrNmPnInfoLength + FrNmPnInfoOffset) is greater than 31 and
      the data provided are correct.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Partial networking is enabled (FrNmPnEnabled)
  
Test Execution: 
    01. Initialize Stubs.
    02. Initialize FrNm.
    03. Set all PN request bits in the NM-Pdu.
    04. Clear PduR_FrNmRxIndication stub count.
    05. Invoke RxIndication.
    06. Call main function once.
    07. VP(FrNm.EB.FrNmPnInfo): PduR_FrNmRxIndication is called.
    08. EIRA data provided by COM module is valid.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ECUC_FrNm_00065.Range</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
    <specobject>
      <id>TS_FRNM_FrNmPnResetTime_504PNCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_504PNCs/source/application/FrNm_ConTest_504PNCs.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify FrNm partial networking functionality when the sum
      (FrNmPnInfoLength + FrNmPnInfoOffset) is greater than 31 and
      the data provided are correct.
      When the EIRA reset timers expires, then the PN request bit shall be set to 0.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Partial networking is enabled (FrNmPnEnabled)
  
Test Execution: 
    01. Initialize Stubs.
    02. Initialize FrNm.
    03. Set all PN request bits in the NM-Pdu.
    04. Clear PduR_FrNmRxIndication stub count.
    05. Invoke FrNm_RxIndication.
    06. Call main function once.
    07. VP: PduR_FrNmRxIndication is called.
    08. EIRA data provided by COM module is valid.
    09. Invoke FrNm_RxIndication.
    10. Call main function once.
    11. VP: PduR_FrNmRxIndication is not Invoked as
        there was no change in the PN info received.
    12. Invoke Main Function continuously for one cycle time less than
        what is required for PN Reset Timer expiry.
    13. VP: PduR_FrNmRxIndication is not invoked and the respective bits in the EIRA value are not cleared.
    14. Invoke Main Function once so that PN Reset Time elapses.
    15: VP: PduR_FrNmRxIndication is
        invoked and the respective bits in the EIRA value are cleared.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.ECUC_FrNm_00065.Range</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRNM_0002</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify behaviour (whether repeat message state is entered or not) when
    FrNmRepeatMessageBitActive and FrNmControlBitVectorActive are set to true
    for one channel and false for another channel.
    Note : Behaviour is tested with 'FrNmMainAcrossFrCycle' as true
           and therefore FrNm.SWS_FrNm_00311 is traced to this test case.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled = false.
    FrNmMainAcrossFrCycle = true.
    FrNmRepeatMessageBitEnabled = true
    FrNmControlBitVectorActive = false and FrNmRepeatMessageBitActive = false
    atleast for one channel
    FrNmControlBitVectorActive = true and FrNmRepeatMessageBitActive = true
    atleast for one channel.
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 13.
    03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
    04: Check whether the RepeatMessageTime is greater than 0 and either
        FrNmControlBitVectorActive or FrNmRepeatMessageBitActive is FALSE, then
        continue with step 05 else proceed with step 09.
    05: Load NmVector = 0x01 to set CBV with RptMsgRequest.
    06: Invoke FrNm_MainFunction with RepetitionCycle.
    07: VP (FrNm.ASR403.FrNm0020_Conf, FrNm.ASR403.FrNm0019_Conf):
         - The current mode is NM_MODE_NETWORK and the current state
           is NM_STATE_NORMAL_OPERATION.
    08: Load NmVector to previous value.
    09: Check whether the RepeatMessageTime is greater than 0 and both
        FrNmControlBitVectorActive and FrNmRepeatMessageBitActive is TRUE.
    10: Load NmVector to set CBV with RptMsgRequest.
    11: Invoke FrNm_MainFunction with RepetitionCycle.
    12: VP (FrNm.ASR403.FrNm0020_Conf, FrNm.ASR403.FrNm0019_Conf, FrNm.ASR403.FrNm0059_Conf):
         - The current mode is NM_MODE_NETWORK and the current state is
           NM_STATE_REPEAT_MESSAGE.
    13: Load NmVector to previous value.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0020_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0059_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0170</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNmRepeatMessageTime is zero '0',
    FrNm transition to Normal Operation or Ready sleep State
    from Synchronize state.
    [FrNm.ECUC_FrNm_00030: FrNm transition to Normal Operation or
    Ready sleep State from Synchronize state since Repeat Message
    State is transient when FrNmRepeatMessageTime is configured as 0].

    Note : Behaviour is tested with 'FrNmMainAcrossFrCycle' as true
           and therefore FrNm.SWS_FrNm_00311 is traced to this test case.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == true.
    FrNmRepeatMessageTime == 0 (at least for one channel)
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannels repeat the steps 3 to 13.
    03: Check the value of TstRepeatMessageTime and proceed further only
        if FrNmRepeatMessageTime is 0.
    04: Check whether the FrNmPassiveModeEnabled is TRUE and continue with
        step 05 if passive mode is enabled else go to step 06.
    05: VP (FrNm.SWS_FrNm_00237):
         - Invoke FrNm_PassiveStartUp and verify that FrNm_PassiveStartUp
        returns E_OK and continue with step 07.
    06: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest and verify that FrNm_NetworkRequest
        returns E_OK.
    07: Call main function once.
    08: VP (FrNm.SWS_FrNm_00104):
         - Check that FrNm_GetState function provides information about the
        current state and current mode of the NM state machine.Also check
        that the current state is NM_STATE_SYNCHRONIZE and the current mode
        of NM state machine is NM_MODE_SYNCHRONIZE.
    09: Invoke FrNm_MainFunction_CFGIF in a loop till the 'time equivalent
        of FrNmRepetitionCycle + FrNmMainFunctionPeriod' expires.
    10: VP (FrNm.ECUC_FrNm_00030):
         - Invoke FrNm_GetState function and verify that the current state is
        either NM_STATE_NORMAL_OPERATION or NM_STATE_READY_SLEEP and the current
        mode is NM_MODE_NETWORK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00467.FrNmMainAcrossFrCycle.True</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
    <specobject>
      <id>TS_FRNM_VoteInhibition</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that the NM votes transmitted by the Single-FlexRay channel nodes
    will be identical in both the last repetition cycle and the next-to-last
    repetition cycle if the Ready Sleep Counter were to expire.
  
Test Object: None.
Test Precondition: 
    FrNmVoteInhibitionEnabled == true
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannels repeat the steps 03 to 10.
    03: Invoke Tst_GoToReadySleepState to enter Ready Message State.
    04: Invoke MainFunction in a loop till time equivalent of
        '(ReadySleepCnt - 2) * RepetitionCycle' expires in order to reach
        next to last repetition cycle time slot.
    05: Invoke FrNm_NetworkRequest.
    06: Invoke FrNm_MainFunction in a loop till the time equivalent of
        "FrNmRepetitionCycle" expires.
    07: VP (FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes,FrNm.ECUC_FrNm_00053):
         - FrIf_Transmit is not invoked.
    08: VP (FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_READY_SLEEP and the current mode is NM_MODE_NETWORK.
    09: Invoke MainFunction in a loop till time equivalent of RepetitionCycle
        expires in order to expire ReadySleepCnt.
    10: Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_BUS_SLEEP and the current mode is NM_MODE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
    Nm vote is not changed between last repetition cycle and the next-to-last
    repetition cycle.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>TS_FRNM_Bit_ControlBitVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>421</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   To verify that the FlexRay NM module does not use bit 0 (control bit vector)
   of the NM-Vote PDU.
  
Test Object: None.
Test Precondition: 
    FrNmMainAcrossFrCycle == false
    FrNmControlBitVectorEnabled == true
    FrNmControlBitVectorActive == true
    FrNmRepeatMessageBitActive == true
    FrNmRepeatMessageBitEnabled == true
    FrNmNodeDetectionEnabled == true
    FrNmPduScheduleVariant = FRNM_PDU_SCHEDULE_VARIANT_4 or
    FRNM_PDU_SCHEDULE_VARIANT_6
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannels repeat the steps 03 to 10.
    03: Invoke Tst_GoToNormalOperationState to enter Normal operation State.
    04: For each configured FrNmRxPdus repeat the step 05 to 08.
    05: Check that the FrNmTxPduContainsVote is true and proceed further.
    06: Invoke FrNm_RxIndication for every RxPdu configured for respective
        channel as vote.
    07: Invoke FrNm_MainFunction in a loop till time equivalent of
        FrNmRepetitionCycle expires.
    08: VP (FrNm.ASR403.FRNM218):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_NORMAL_OPERATION and the current mode is NM_MODE_NETWORK.
    09: For each configured FrNmRxPdus repeat the step 10 to 13.
    10: Check whether the Repeat Message Time is greater than 0 and
        FrNmTxPduContainsVote is true and FrNmRepeatMessageBitActive is TRUE,
        then proceed further.
    11: Invoke FrNm_RxIndication for every RxPdu configured for respective
        channel as data.
    12: Invoke FrNm_MainFunction in a loop till time equivalent of
        FrNmRepetitionCycle expires.
    13: VP (FrNm.ASR403.FRNM218):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_REPEAT_MESSAGE and the current mode is NM_MODE_NETWORK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0006</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that the FlexRay NM decisions is influenced by
    every received NMVote and every NM-Vote aggregated by the FlexRay
    controller.
    Note : Behaviour is tested with 'FrNmMainAcrossFrCycle' as true
           and therefore FrNm.SWS_FrNm_00311 is traced to this test case.

    Also verify that when NM vector and remote request with vote bit 0
    is invoked the transition occurs to ready sleep state.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmMainAcrossFrCycle == true.
    Schedule Variant = FRNM_PDU_SCHEDULE_VARIANT_7
    FrIf_GetNmVector returns E_OK
    RepeatMessageTime &gt; 0U
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel execute following:.
    03: Check that the RepeatMessageTime is greater than 0 and Schedule
        variant is configured as 7.
    04: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    05: Load NmVector to set CBV with RptMsgRequest as 0x01.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the 'time equivalent
        of RepetitionCycle' expires.
    07: VP (FrNm.SWS_FrNm_00058,FrNm.SWS_FrNm_00335):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_REPEAT_MESSAGE and the current mode is NM_MODE_NETWORK.
    08: Load NmVector to clear CBV as 0x00.
    09: Invoke FrNm_NetworkRelease.
    10: Invoke FrNm_MainFunction_CFGIF in a loop till the latest time by which
        the module can stay in state NM_STATE_REPEAT_MESSAGE. i.e till the time
        FrNmRepeatMessageTime + (T - FrNmMainFunctionPeriod) expires.
        (T = Time equivalent of FrNmRepetitionCycle -
        (FrNmRepeat-MessageTime % Time equivalent of FrNmRepetitionCycle)).
    11: Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_READY_SLEEP and the current mode is NM_MODE_NETWORK.
    12: Invoke FrNm_MainFunction_CFGIF in a loop till (time equivalent of
        FrNmReadySleepCnt - 1) expires to check the state still remains at
        NM_STATE_READY_SLEEP.
    13: Load NmVector to set CBV with Vote Bit as 0x80,so that Ready Sleep
        Counter is reloaded.
    14: Invoke MainFunction once.
    15: Invoke FrNm_GetState function and verify that the current state is
        still in NM_STATE_READY_SLEEP and the current mode is NM_MODE_NETWORK.
    16: Load NmVector to clear CBV with Vote Bit as 0x00.
    17: Call FrNm_RxIndication with vote bit set as 0x00.
    18: Invoke FrNm_MainFunction_CFGIF in a loop till (time equivalent of
       FrNmReadySleepCnt - 1) expires to check the state still remains at
       NM_STATE_READY_SLEEP
    19: Invoke FrNm_GetState.
    20: VP (FrNm.SWS_FrNm_00058,FrNm.SWS_FrNm_00335):
        FrNm_GetState returns E_OK.
        nmStatePtr is NM_STATE_READY_SLEEP.
        nmModePtr is NM_MODE_NETWORK.
    21: Invoke FrNm_MainFunction_CFGIF till RepetitionCycle expires
    22: VP (FrNm.SWS_FrNm_00058,FrNm.SWS_FrNm_00335):
        FrNm_GetState returns E_OK.
        nmStatePtr is NM_STATE_BUS_SLEEP.
        nmModePtr is NM_MODE_BUS_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
    <specobject>
      <id>TS_FRNM_FrIf_GetNmVector_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the behavior when FrIf_GetNmVector returns E_NOT_OK.
  
Test Object: 
  
Test Precondition: 
    - Important test configuration details:
      -- FrNmPassiveModeEnabled = false
      -- FrNmMainAcrossFrCycle = true
   - Module state:
     -- The module shall be ininialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNmChannel execute steps 03 - 08.
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke FrNm_MainFunction in a loop till time equivalent of
        (FrNmReadySleepCnt - 1) elapses.
    05: Configure the FrIf_GetNmVector stub to return E_NOT_OK and
        set the Vote Bit in the CBV of the returned NM-Vector.
    06: Verify that current state is NM_STATE_READY_SLEEP.
    07: Invoke FrNm_MainFunction once
    08: VP (FrNm.SWS_FrNm_00335, FrNm.EB.FrIf_GetNmVector.ReturnNotOk, FrNm.SWS_FrNm_00101, FrNm.SWS_FrNm_00129):
        - Current state is NM_STATE_BUS_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrIf_GetNmVector.ReturnNotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
    <specobject>
      <id>TS_FRNM_NmVector_0x00</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>886</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If NmVector is equal to 0x00 then Ready Sleep timer shall not be restarted.
  
Test Object: 
  
Test Precondition: 
    - Important test configuration details:
      -- FrNmPassiveModeEnabled = false
      -- FrNmMainAcrossFrCycle = true
   - Module state:
     -- The module shall be ininialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNmChannel execute steps 03 - 08.
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Configure the FrIf_GetNmVector stub to set the Vote Bit
        in the CBV of the returned NM-Vector.
    05: Invoke FrNm_MainFunction in a loop till the time equivalent of
        (FrNmReadySleepCnt - 1) elapses.
    06: Verify that current state is NM_STATE_READY_SLEEP.
    07: Invoke FrNm_MainFunction once.
    08: VP (FrNm.SWS_FrNm_00335, FrNm.SWS_FrNm_00101, FrNm.SWS_FrNm_00129):
         - Current state is NM_STATE_BUS_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0007</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>978</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify if FrNmRemoteSleepIndTime is configured as '0'
  then FrNm module does not invoke Nm_RemoteSleepIndication().
  
Test Object: None.
Test Precondition: 
    FrNmRemoteSleepIndTime = 0
    FrNmRemoteSleepIndicationEnabled = TRUE
    FrNmPassiveModeEnabled == false
    FrNmMainAcrossFrCycle == false
    FrNmRepeatMessageTime &gt; Time equivalent of FrNmRepetitionCycle
    FrNmReadySleepCnt &gt; 1 or 2 depending on FrNmDualChannelPduEnable.
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel execute following:.
    03: Check that the RemoteSleepIndTime is 0 and proceed further.
    04: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    05: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "RemoteSleepIndTime + FrNmRepetitionCycle" expires.
    06: VP (FrNm.ECUC_FrNm_00029):
         - Nm_RemoteSleepIndication is not invoked and notification
        is not given to Generic NM Interface module.
    07: VP (FrNm.ECUC_FrNm_00029):
         - Call FrNm_CheckRemoteSleepIndication and check that NmRemoteSleepIndPtr
        is FALSE.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0008</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1065</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if FrNmSynchronizationPointEnabled is set to false, FrNm module
    doesn't invoke Nm_SynchronizationPoint.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmMainAcrossFrCycle == false.
    FrNmBusSynchronizationEnabled == true.
    FrNmSynchronizationPointEnabled == false.
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel execute following:.
    03: VP (FrNm.SWS_FrNm_00238):
         - Invoke FrNm_NetworkRequest in Bus Sleep Mode and check that it
        returns E_OK.
    04: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle + FrNmMainFunctionPeriod" expires.
    05: Invoke FrNm_GetState and verify that it returns E_OK.
    06: Verify that the current state either NM_STATE_NORMAL_OPERATION or
        NM_STATE_REPEAT_MESSAGE and the current mode is NM_MODE_NETWORK.
    07: Reset Nm_SynchronizationPoint_Stub.Count to zero which is invoked
        previously.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        "FrNmRepetitionCycle" expires.
    09: VP (FrNm.SWS_FrNm_00322, FrNm.ECUC_FrNm_00021):
         - The Nm_SynchronizationPoint is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0004</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that, FrNm module synchronizes state changes in the
  FlexRay NM state machine with the FlexRay periodic Schedule for
  different state changes from
      Repeat Message State to Normal Operation State,
      Normal Operation State to Repeat Message State,
      Repeat Message State to Ready Sleep State
  
Test Object: None.
Test Precondition: 
     FrNmPassiveModeEnabled = false
     FrNmMainAcrossFrCycle = true
     Repeat message time must be greater than 0 for channels where repeat
     message state is checked.
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel do the following:.
    03: VP (FrNm.SWS_FrNm_00105):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_BUS_SLEEP and current mode is NM_MODE_BUS_SLEEP.
    04: Invoke FrNm_NetworkRequest.
    05: Invoke FrNm_MainFunction once for transition from bus sleep to
        synchronize.
    06: VP (FrNm.SWS_FrNm_00105, FrNm.ASR403.FRNM139):
         - Invoke FrNm_GetState function and verify that the current state of
        NM state machine is NM_STATE_SYNCHRONIZE and current mode of NM state
        machine is NM_MODE_SYNCHRONIZE.
    07: Invoke FrNm_MainFunction in sync with FlexRay periodic Schedule till
        (FrNmRepetitionCycle - 1) expires.
        Note: Here call with FrNmRepetitionCycle - 2 because FlexRay cycle is
        already elapsed once in the previous main function.
    08: Invoke FrNm_MainFunction once (without simulating FlexRay periodic
        Schedule).
    09: VP (FrNm.SWS_FrNm_00105, FrNm.ASR403.FRNM139):
         - Invoke FrNm_GetState function and verify that the current state is still
        NM_STATE_SYNCHRONIZE and current mode is still NM_MODE_SYNCHRONIZE.
    10: Check that Repeat message Time is greater than 0 and proceed further.
    11: Invoke FrNm_MainFunction in sync with FlexRay periodic Schedule once.
    12: VP (FrNm.SWS_FrNm_00168, FrNm.SWS_FrNm_00105, FrNm.SWS_FrNm_00107):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_REPEAT_MESSAGE and current mode is NM_MODE_NETWORK.
    13: Calculate the time for transition to Normal Operation state.
    14: Invoke FrNm_MainFunction in synch with FlexRay periodic Schedule until
        at transition about to happen. i.e Time equivalent of
        FrNmRepeatMessageTime + FrNmRepetitionCycle -
        (FrNmRepeatMessageTime % Time equivalent of FrNmRepetitionCycle) - 1.
    15: Invoke FrNm_MainFunction once (without simulating FlexRay periodic
        Schedule).
    16: VP (FrNm.SWS_FrNm_00168, FrNm.SWS_FrNm_00105, FrNm.SWS_FrNm_00107):
         - Invoke FrNm_GetState function and verify that the current state is still
        NM_STATE_REPEAT_MESSAGE and current mode is still NM_MODE_NETWORK.
    17: Invoke FrNm_MainFunction_CFGIF in sync with FlexRay periodic Schedule
        once.
    18: VP (FrNm.ASR403.FRNM139, FrNm.SWS_FrNm_00168, FrNm.SWS_FrNm_00107, FrNm.ASR403.FRNM167):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_NORMAL_OPERATION and current mode is NM_MODE_NETWORK.
    19: Invoke FrNm_RepeatMessageRequest.
    20: Invoke FrNm_MainFunction_CFGIF in sync with FlexRay periodic Schedule
        till (FrNmRepetitionCycle - 1) expires.
    21: Invoke FrNm_MainFunction once (without simulating FlexRay periodic
        Schedule).
    22: VP (FrNm.ASR403.FRNM139, FrNm.SWS_FrNm_00168, FrNm.SWS_FrNm_00107, FrNm.ASR403.FRNM167):
         - Invoke FrNm_GetState function and verify that the current state is still
        NM_STATE_NORMAL_OPERATION and current mode is still NM_MODE_NETWORK.
    23: Invoke FrNm_MainFunction_CFGIF in sync with FlexRay periodic Schedule
        once.
    24: VP (FrNm.SWS_FrNm_00168):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_REPEAT_MESSAGE and current mode is NM_MODE_NETWORK.
    25: Invoke FrNm_NetworkRelease.
    26: Invoke FrNm_MainFunction_CFGIF in sync with FlexRay periodic Schedule
        till (FrNmRepeatMessageTime - 1) expires. Same like step 14.
    27: Invoke FrNm_MainFunction once (without simulating FlexRay periodic
        Schedule).
    28: VP (FrNm.SWS_FrNm_00168):
         - Invoke FrNm_GetState function and verify that the current state is still
        NM_STATE_REPEAT_MESSAGE and current mode is still NM_MODE_NETWORK.
    29: Invoke FrNm_MainFunction_CFGIF in sync with FlexRay periodic Schedule
        once.
    30: VP (FrNm.SWS_FrNm_00168, FrNm.SWS_FrNm_00107):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_READY_SLEEP and current mode is NM_MODE_NETWORK.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
    <specobject>
      <id>TS_FRNM_0009</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1413</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify if repeat message bit support FrNmRepeatMessageBitEnabled
  {FRNM_REPEAT_MESSAGE_BIT_ENABLED} is disabled, Repeat message bit
  (BIT-0 in Byte-0) is not set in transmission.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmMainAcrossFrCycle == false.
    FrNmRepeatMessageBitEnabled == false
  
Test Execution: 
    01: Initialise FrNm and bus interface stubs.
    02: For each configured FrNmChannel do the following:.
    03: Check that the RepeatMessageTime is greater than 0 and the
        FrNmRepeatMessageBitActive is FALSE.
    04: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    05: Invoke FrNm_RepeatMessageRequest.
    06: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        Repetition cycle expires.
    07: VP (FrNm.ASR403.FrNm0059_Conf):
         - Invoke FrNm_GetState function and verify that the current state is
        NM_STATE_REPEAT_MESSAGE and the current mode is NM_MODE_NETWORK.
    08: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of
        Data cycle expires.
    09: VP (FrNm.ASR403.FrNm0059_Conf):
         - The Repeat message bit (BIT-0 in Byte-0) is not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FrNm0059_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PNEnabled_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1510</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that, If FrNmPnEnabled is FALSE, FrNm module sets the value of the
    CRI bit to 0 in transmitted NM PDUs.
    Verify that, If FrNmPnEnabled is FALSE, FrNm module performs the standard
    FrNm RxIndication.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == false
    Atleast one Data Pdu or Mixed Pdu is configured for each channel.
  
Test Execution: 
    01: Initialize the stub values.
    02: Initialise FrNm and bus interface stubs.
    03: For each configured FrNmChannel execute following:.
    04: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    05: Check that the schedule variant is 1 or 2 then proceed to step 06 else
        proceed to step 07.
    06: Invoke Main Function in a loop till the time equivalent of Voting
        cycle expires.
    07: Invoke Main Function in a loop till the time equivalent of Data cycle
        expires.
    08: Check if FrIf_transmit is invoked.
    09: VP (FrNm.SWS_FrNm_00452, FrNm.ECUC_FrNm_00072, FrNm.SWS_FrNm_00404, FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit):
         - Check that the CRI bit is not set.
    10: Loop through the configured FrNmRxPdus and repeat the step 11 to 13.
    11: Invoke FrNm_RxIndication.
    12: Invoke Main Function once.
    13: VP (FrNm.SWS_FrNm_00406):
         - PduR_FrNmRxIndication is not invoked.
    14: Set the status of the test.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00452</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ComUserDataSupport_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1647</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If UserDataLength is 0 for a FrNm channel, then FrNm module does not call
    PduR_FrNmRxIndication() for the respective channel.
  
Test Object: None.
Test Precondition: 
    FrNmUserDataEnabled == true
    FrNmComUserDataSupport is disable for channel 1.
  
Test Execution: 
    01: Initialise FrNm and the stubs .
    02: For Channel 1 execute the following
        (Since this channel is not supporting Com User Data):
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: For Every configured RxPdu execute the following
    05: Invoke FrNm_RxIndication with Pdu data.
    06: Invoke FrNm_MainFunction once.
    07: VP (FrNm.EB.ComUserDataSupport.PduRCallsUserData):
         - PduR_FrNmRxIndication is not invoked.
  
Test Input: None.
Test Output: 

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.PduRCallsUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ComUserDataSupport_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1730</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If UserDataLength is 0 for a FrNm channel, then FrNm module does not call
    PduR_FrNmTriggerTransmit(), and PduR_FrNmTxConfirmation() for the respective
    channel.
  
Test Object: None.
Test Precondition: 
    FrNmUserDataEnabled == true
    FrNmComUserDataSupport is disable for channel 1.
  
Test Execution: 
    01: Initialise FrNm and the stubs.
    02: For Channel 1 execute the following
        (Since this channel is not supporting Com User Data):
    03: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    04: Clear FrIf_Transmit_Stub and PduR confirmation stub counts.
    05: Invoke FrNm_MainFunction in a loop till VoteCycle expires because the
        schedule variant configured is 1 and 2.
    06: Verify that FrIf_Transmit is invoked.
    07: VP (FrNm.EB.ComUserDataSupport.PduRCallsUserData):
         - PduR_FrNmTxConfirmation is not invoked.
    08: For each configured RxPdu execute the following
    09: Reinitialise the SduDataPtr to check data with FrNm_TriggerTransmit.
    10: Invoke FrNm_TriggerTransmit.
    11: VP (FrNm.EB.ComUserDataSupport.PduRCallsUserData):
         - PduR_FrNmTriggerTransmit is not invoked.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.ComUserDataSupport.PduRCallsUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PassiveStartup_RepeatMessageTimeZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_6/source/application/FrNm_ConTest_6.c</sourcefile>
      <sourceline>1829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case passive startup is called while module
    is in BusSleepMode and Repeat Message time is zero,
    Repeat Message State is a transient state and no messages are send on the bus.
  
Test Object: None.
Test Precondition: 
    - RepeatMessageTime is zero
    - Passive mode is diabled
  
Test Execution: 
    01: Initialize FrNm
    02: Reset Stub counter
    03: Do a passive Startup
    04: Wait until state machine goes to Ready Sleep State
    05: Check the current state is Ready Sleep State
    06: VP (FrNm.EB.RepeatMessageTimeZero.NoMessages)
        - Check no messages are sent on the bus
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB.RepeatMessageTimeZero.NoMessages</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_GetUserData</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_7/source/application/FrNm_ConTest_7.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm_GetUserData behaves as expected when either
    FrNmUserDataTxPdu or FrNmUserDataRxPdu is enabled for a
    network channel and FrNmComUserDataSupport is enabled.
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmPassiveModeEnabled = false
      -- FrNmDevErrorDetect = true
      -- FrNmUserDataEnabled = true
      -- FrNmComUserDataSupport = true
      -- FrNmPduLength &gt;= 2
      -- FrNmUserDataTxPdu and FrNmUserDataRxPdu are enabled
   - Module state:
     -- The module shall be initialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNm Channel, execute steps 03 - 16.
    03: Invoke Tst_GoToNormalOperationState to enter Normal
        Operation State.
    04: For every configured RxPdu of the channel, invoke
        FrNm_RxIndication with Pdu data and invoke FrNm_MainFunction once.
    05: Call FrNm_GetUserData for channel 1.
    06: VP (FrNm.SWS_FrNm_00241):
        - FrNm_GetUserData returns E_OK.
        - FrNm_GetUserData fetches user data from the last
          successfully received NM message.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ComUserDataSupport_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_7/source/application/FrNm_ConTest_7.c</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that if FrNmUserDataEnabled is set as TRUE, FrNm_TriggerTransmit
      queries the NM User data (NM I-PDU) from PduR and populate
      the User Data part of the NM User data.
    - Verify that the FrNm module collects the NM User Data from the referenced
      NM I-PDU by calling "PduR_FrNmTriggerTransmit" and combine the user data
      with the further NM bytes each time before it requests the transmission
      of the corresponding NM message.
    - Verify that the FrNm module calls "PduR_FrNmTxConfirmation" within
      the message transmission confirmation function "FrNm_TxConfirmation"
      called by the FrIf.
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      -- FrNmUserDataEnabled = true
      -- FrNmComUserDataSupport = true
      -- Com user data is enabled
   - Module state:
     -- The module shall be ininialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNm Channel, execute steps 02 - 16.
    03: Initialise user data in PduR with known data.
    04: Go to Normal Operation State.
    05: Invoke FrNm_MainFunction in a loop till one Vote Cycle is completed.
    06: VP(FrNm.SWS_FrNm_00364, FrNm.ASR403.FRNM362):
        - FrIf_Transmit is invoked.
        - The user data part copied by PduR is passed into FrIf_Transmit() .
    07: Invoke FrNm_TxConfirmation.
        (Note: This is done from FrIf_Transmit_Callout).
    08: VP (FrNm.SWS_FrNm_00365, FrNm.EB.PduRAPIs.TxPduId, FrNm.ECUC_FrNm_00018,
            FrNm.EB.DependencyCheck.FrNmPnEnabled.ComUserDataSupport
           ):
        - PduR_FrNmTxConfirmation is invoked with correct TxPduId.
    09: Invoke FrNM_TriggerTransmit().
    10: VP (FrNm.ASR403.FRNM362, FrNm.SWS_FrNm_00364, FrNm.SWS_FrNm_00394, FrNm.EB.PduRAPIs.TxPduId,
            FrNm.EB.DependencyCheck.FrNmPnEnabled.ComUserDataSupport
           ):
        - PduR_FrNmTriggerTransmit is invoked with correct TxPduId.
        - PduR_FrNmTriggerTransmit returns the same data that is initialized
          in PduR stub.
    11: Clear PduR_FrNmTriggerTransmit buffer.
    12: Set the PduR_FrNmTriggerTransmit stub to return E_NOT_OK.
    13: Invoke FrNm_MainFunction in a loop till one Vote Cycle is completed.
    14: VP (FrNm.ASR403.FRNM362, FrNm.SWS_FrNm_00364, FrNm.EB.PduRAPIs.TxPduId):
        - PduR_FrNmTriggerTransmit is invoked with correct TxPduId.
    15: VP (FrNm.SWS_FrNm_00364):
        - FrIf_Transmit is invoked.
        - The user data part copied by PduR is not passed into FrIf_Transmit().
        - The header bytes are correctly passed into FrIf_Transmit() .
    16: Restore the stub behavior for the next iteration.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00364</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00365</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00394</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.PduRAPIs.TxPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DependencyCheck.FrNmPnEnabled.ComUserDataSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
    <specobject>
      <id>TC_FRNM_TX_EIRA_VERIFICATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_7/source/application/FrNm_ConTest_7.c</sourcefile>
      <sourceline>436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PN request bit in the EIRA is set to 1 as per PN request bits in the
    transmitted NM-PDU.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
  
Test Execution: 
    01: Initialize the stubs.
    02: Invoke FrNm_Init().
    03: Execute the following for every channel
    04: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    05: Initialize PDU data from PduR for each channel.
    06: If schedule variant is 1 or 2 then proceed to step 07 else proceed to
        step 08.
    07: Invoke Main Function in a loop till the time equivalent of Voting cycle
        expires.
    08: Invoke Main Function in a loop till the time equivalent of Data cycle
        expires
    09: VP (FrNm.SWS_FrNm_00424):
        - FrIf_Transmit is invoked.
        Verify that PduR_FrNmRxIndication is invoked.
    10: VP (FrNm.SWS_FrNm_00424):
         - PN request bit in the EIRA is set to 1 as per PN request
        bits in the transmitted NM-PDU.
    11: Clear the PDU data from PduR.
    12: Invoke Main Function in a loop until FRNM_PN_RESET_TIME expires.
    13: VP (FrNm.SWS_FrNm_00424)
        Check whether EIRA reset to Zero.
    14: Go to ready sleep state so that next channel can also be verified for
        above steps.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Tx_EIRA_ERA_Reset_Timer_Chk</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_7/source/application/FrNm_ConTest_7.c</sourcefile>
      <sourceline>579</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PN request bit in the EIRA/ERA is set to 1 as per PN request bits in the
    transmitted NM-PDU.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
    FrNmPnEiraCalcEnabled == true.
    FrNmPnEraCalcEnabled == true.
  
Test Execution: 
    01: Initialize the stubs.
    02: Initialize FrNm.
    03: Execute the following for every channel
    04: Initialize PDU data from PduR for each channel.
    05: Invoke Tst_GoToNormalOperationState to enter Normal Operation State.
    06: Check PduR_FrNmRxIndication is invoked.
    07: Check PN info in the PduR stub is same as the send data.
    08: Clear the PduR buffer data.
    09: VP (FrNm.SWS_FrNm_00436, FrNm.SWS_FrNm_00437) Invoke Main Function till FRNM_PN_RESET_TIME -1 expires.
    10: Check the data in PduR Rx buffer is not yet reset.
    11: Invoke Main Function once.
    12: VP (FrNm.SWS_FrNm_00425, FrNm.ASR403.FRNM427):
         - Pn info in PduR stub is reset to 0.
    13: Send valid Pn info through PduR stub.
    14: Call main function until FrIf_Transmit invoked.
    15: Check PN info in the PduR stub is same as the send data.
    16: Call main function until FrIf_Transmit invoked and to restart the EIRA/ERA
        timer.
    17: Clear Pn info in PduR stub.
    18: Invoke Main Function till FRNM_PN_RESET_TIME -1 expires.
    19: Check PN info in the PduR stub, it should be the same data sent at first
        step.
    20: Invoke Main Function once.
    21: VP (FrNm.SWS_FrNm_00425, FrNm.ASR403.FRNM427, FrNm.ECUC_FrNm_00068):
         - Pn info in PduR is reset to zero.
    22: Call FrNm_NetworkRelease and go to ready sleep state.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM427</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
    <specobject>
      <id>TC_FRNM_ReadySleepEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_7/source/application/FrNm_ConTest_7.c</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that when Repeat Message time is a multiple of Repetition Cycle,
    Repeat Message State is left and Ready Sleep State is entered at
    the completion of the repetition cycle in which the RepeatMessage
    time expires (Passive Startup).
  
Test Object: None.
Test Precondition: 
    Repeat Message time is a multiple of Repetition Cycle.
    FrNmPassiveModeEnabled == false.
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm
        - Initialize stubs
    02: Execute steps 03 - 10 for each channel
    03: Call FrNm_GetState and check that the current state is bus sleep state.
    04: Invoke FrNm_PassiveStartUp().
    05: Invoke FrNm_MainFunction in a loop till FrNmRepetitionCycle
        expires to trigger the transition to repeat message state from
        bus sleep state.
    06: Check whether the repeat message state is entered.
    07: Invoke FrNm_MainFunction in a loop till "TstRepeatMessageTime - 1"
        expires to check the state still remains at NM_STATE_REPEAT_MESSAGE.
    08: VP (FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle):
        - Repeat message state is not yet left.
    09: Invoke main function once so that the repeat message time expires.
    10: VP (FrNm.SWS_FrNm_00122, FrNm.ECUC_FrNm_00030):
        - Repeat Message State is left and Ready Sleep State is
        entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>TC_FRNM_NormalOperationEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_7/source/application/FrNm_ConTest_7.c</sourcefile>
      <sourceline>905</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that when Repeat Message time is a multiple of Repetition Cycle,
    Repeat Message State is left and Normal operation State is entered at
    the completion of the repetition cycle in which the RepeatMessage
    time expires (Passive Startup).
  
Test Object: None.
Test Precondition: 
    Repeat Message time is multiple of Repetition Cycle.
    FrNmPassiveModeEnabled == false.
  
Test Execution: 
    01: Prepare test preconditions
      - Initialize FrNm
      - Initialize stubs
    02: Execute steps 03 - 10 for each channel
    03: Call FrNm_GetState and check the current state is bus sleep state.
    04: Invoke FrNm_NetworkRequest().
    05: Invoke FrNm_MainFunction in a loop till FrNmRepetitionCycle
        expires to trigger the transition to repeat message state from bus
        sleep state..
    06: Check if repeat message state is entered.
    07: Invoke FrNm_MainFunction in a loop till "TstRepeatMessageTime - 1"
        expires to check the state still remains at NM_STATE_REPEAT_MESSAGE.
    08: VP (FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle):
        - The current state is still Repeat message state.
    09: Invoke main function once so that the repeat message time expires
    10: VP (FrNm.SWS_FrNm_00121, FrNm.ECUC_FrNm_00030):
        - Repeat Message State is left and Normal Operation State is
        entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00120.RepetitionCycle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_EIRACalc_ERACalc_FilterAlgo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_8/source/application/FrNm_ConTest_8.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that, If at least one bit within the PN request information Range of
    the received NM-PDU (defined by the parameters FrNmPnInfoOffset and
    FrNmPnInfoLength) matches with the corresponding bit in the PN filter mask,
    the PN request information is relevant for the ECU.

    Verify that, If FrNmPnEnabled is TRUE and the CRI bit in the NM PDU provided
    by FrNm_RxIndication() has the value 1, FrNm module processes the Partial
    Networking Information of the NM-PDU as per PN filter algorithm.

    Verify that, If FrNmPnEiraCalcEnabled/FrNmPnEraCalcEnabled is TRUE, FrNm module calculates the
    aggregation of external and internal PN requests information.

    Verify that, The FrNm considers only the PN request bits in the NM PDUs that
    are relevant for the ECU (defined by PN filter mask). All other PN request
    bits are ignored. Thus the EIRA/ERA only contains those PN requests, which are
    relevant for the ECU.

    Verify that, If a NM-PDU is received, the FrNm module sets for every
    requested and relevant PN request the corresponding EIRA/ERA bit to 1.

    Verify that, If an EIRA/ERA reset timer expires, the FrNm module sets the
    corresponding EIRA/ERA PN request bit to 0.

    Verify that, If the content of EIRA/ERA changes (any bit changes from 1 to 0 or
    from 0 to 1) because of a received or transmitted NM PDU or an EIRA/ERA reset
    timer expiration, FrNm module informs the upper layers by calling
    PduR_FrNmRxIndication().
    By means of the Rx Indication function the EIRA/ERA data is provided to the COM
    module.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel do the following:
    03: Set all PN request bits in the NM-Pdu.
    04: Clear FrIf_Transmit stub count and PduR_FrNmRxIndication stub count.
    05: For Every configured RxPdu do step 06 to step 12:
    06: If FrNmTxPduContainsData is true then proceed with step 07 else go to
        step 13.
    07: Invoke FrNm_RxIndication with all PN request bits set in PnInfo range.
    08: Invoke Main Function once.
    09: VP (FrNm.SWS_FrNm_00418, FrNm.SWS_FrNm_00420, FrNm.SWS_FrNm_00408, FrNm.ASR403.FRNM412, FrNm.ASR403.FRNM422, FrNm.SWS_FrNm_00423, FrNm.ASR403.FRNM433, FrNm.SWS_FrNm_00434):
         - PduR_FrNmRxIndication() is invoked only for the first RxPdu.
         - Only relevant bits are set in the EIRA/ERA data sent to Com.
    10: Invoke FrNm_RxIndication with valid PN bit in PnInfo range.
    11: Invoke Main Function once.
    12: VP (FrNm.SWS_FrNm_00429):
         - PduR_FrNmRxIndication() is not invoked.
    13: Clear PduR_FrNmRxIndication stub count.
    14: Invoke Main Function in a loop till FrNm Pn Reset time expires.
    15: VP (FrNm.SWS_FrNm_00429, FrNm.SWS_FrNm_00428, FrNm.SWS_FrNm_00437, FrNm.SWS_FrNm_00438):
         - PduR_FrNmRxIndication() is invoked.
         - The respective bits in the EIRA/ERA value are clear in the PduR
        buffer.
    16: For Every configured RxPdu do step 17 to step 20:
    17: If FrNmTxPduContainsData is true then proceed with step 18 else go to
        step 22.
    18: Invoke FrNm_RxIndication with all PN request bits set in PnInfo range.
    19: Invoke Main Function once.
    20: VP (FrNm.SWS_FrNm_00429, FrNm.SWS_FrNm_00418, FrNm.SWS_FrNm_00420, FrNm.SWS_FrNm_00408, FrNm.ASR403.FRNM412, FrNm.ASR403.FRNM422, FrNm.SWS_FrNm_00423, FrNm.ASR403.FRNM433, FrNm.SWS_FrNm_00434):
         - PduR_FrNmRxIndication() is invoked only for the first RxPdu.
         - Only relevant bits are set in the EIRA/ERA data sent to Com.
    21: Clear PduR_FrNmRxIndication stub count.
    22: Invoke Main Function in a loop till FrNm Pn Reset time expires.
    23: VP (FrNm.SWS_FrNm_00429, FrNm.SWS_FrNm_00428, FrNm.SWS_FrNm_00437, FrNm.SWS_FrNm_00438):
         - PduR_FrNmRxIndication() is invoked.
         - The respective bits in the EIRA/ERA value are clear in the PduR
        buffer.
    24: For Every configured RxPdu do step 25 to step 28:
    25: If FrNmTxPduContainsData is true then proceed with step 26 else set the
        result of the test.
    26: Invoke FrNm_RxIndication with invalid bit in PnInfo Range.
    27: Invoke Main Function once.
    28: VP (FrNm.ASR403.FRNM422):
         - PduR_FrNmRxIndication() is not invoked.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00418</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM433</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PNEnabled_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_8/source/application/FrNm_ConTest_8.c</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    If FrNmPnEnabled is TRUE, FrNm module sets the value of the CRI bit to 1 in
    transmitted NM PDUs.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled = false.
    FrNmPnEnabled = true.
    At least one data or mixed pdu is configured for every channel.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel do the following:
    03: Invoke Tst_GoToNormalOperationState to enter
        Normal Operation State.
    04: If schedule variant is 1 or 2 then proceed to step 05 else proceed
        to step 06.
    05: Invoke Main Function in a loop till the time equivalent of Voting cycle
        expires.
    06: Invoke Main Function in a loop till the time equivalent of Data cycle
        expires.
    07: Check if FrIf_Transmit is invoked.
    08: VP (FrNm.SWS_FrNm_00409, FrNm.ECUC_FrNm_00072, FrNm.SWS_FrNm_00404, FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit):
         - CRI bit is set in the CBV of the transmitted NM PDU.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
    <specobject>
      <id>TC_FRNM_CRIbit_0_PDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_8/source/application/FrNm_ConTest_8.c</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, If FrNmPnEnabled is TRUE and the CRI bit in the NM PDU provided
    by FrNm_RxIndication() has the value 0, FrNm module performs the standard
    FrNm RxIndication.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel do the following:
    03: Invoke Tst_GoToReadySleepState to enter Ready sleep State.
    04: Invoke Main Function in a loop till 'ready Sleep Count -1' expires.
    05: For each configured RxPdu for that channel do the following:
    06: Invoke FrNm_RxIndication.
    07: Invoke Main Function once.
    08: VP (FrNm.SWS_FrNm_00407, FrNm.SWS_FrNm_00404, FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit):
         - PduR_FrNmRxIndication() is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.PartialNetworkInformationBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PN_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_8/source/application/FrNm_ConTest_8.c</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that FrNm module sets all the user data to 0xFF after
    initialization. (FrNm.SWS_FrNm_00045)
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "FrNmPassiveModeEnabled" is set to "false.
      - "FrNmPnEnabled" is set to 'true'.
    * Module state:
      - FrNm module is initialized.
    * Misc.:
      - The stub of FrIf_Transmit() is enabled.
  
Test Execution: 
    01: Prepare test case preconditions:
        - Initialize FrNm module
        - Initialize the stubs and stub counters
    02: Execute the Steps 03 - 08 for all configured channels.
    03: Trigger a transition to Normal Operation State.
    04: If schedule variant is 1 or 2 then proceed to step 05 else proceed
        to step 06.
    05: Invoke Main Function in a loop till the time equivalent of Voting cycle
        expires.
    06: Invoke Main Function in a loop till the time equivalent of Data cycle
        expires.
    07: Verify that the PDU is transmitted.
    08: VP (FrNm.SWS_FrNm_00045):
         - All the user data bytes in the Tx-PDU are set to 0xFF.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
    <specobject>
      <id>TC_FRNM_Rx_EIRA_Reset_Timer_Chk</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_8/source/application/FrNm_ConTest_8.c</sourcefile>
      <sourceline>650</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify EIRA got reset after EIRA reset time.
    Verify FrNm module restart the EIRA reset timer for every PN request bit if
    an NM-PDU is received.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel do the following:
    03: Set all PN request bits in the NM-Pdu.
    04: Clear PduR_FrNmRxIndication stub count.
    05: For each configured FrNmTxPdu execute the following
    06: Provide valid PN info through RxIndication for each configured Rx Pdu
        for corresponding channel with all PN request bits set.
    07: Invoke Main Function once.
    08: VP (FrNm.EB.FrNmPnEiraRxNSduRef):
         - FrNmRxIndication is invoked.
    09: VP (FrNm.ASR403.FRNM422):
        - The respective bits in the EIRA value are set in the PduR
        buffer.
    10: Call main functions until one cycle less than TST_FRNM_PN_RESET_TIME
        expires.
    11: Check that EIRA info in the PduR stub has not been changed.
    12: Call main function once to reset EIRA.
    13: VP (FrNm.SWS_FrNm_00426):
         - The EIRA info in the PduR stub has been reset to 0.
    14: For each configured FrNmTxPdu execute the following
    15: Provide valid PN info through RxIndication for each configured Rx Pdu
        for corresponding channel with all PN request bits set.
    16: Invoke Main Function once.
    17: VP (FrNm.ASR403.FRNM422):
        - The respective bits in the EIRA value are set in the PduR
        buffer.
    18: Call main functions until one cycle less than TST_FRNM_PN_RESET_TIME
        expires.
    19: Check that EIRA info in the PduR stub has not been changed.
    20: For each configured FrNmTxPdu execute the following
    21: Provide valid PN info through RxIndication for each configured Rx Pdu
        for corresponding channel with all PN request bits set.
    22: Invoke Main Function once, this must restart the EIRA timer.
    23: Call main functions again until one cycle less than
        TST_FRNM_PN_RESET_TIME expires.
    24: Verify that EIRA is not reset as the RxIndication was invoked before
        expiry of EIRA timer.
    25: Invoke main function once.
    26: VP (FrNm.SWS_FrNm_00426, FrNm.ECUC_FrNm_00068):
         - That EIRA info in the PduR stub has been reset to 0
  
Test Input: None.
Test Output: 

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00426</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.FrNmPnEiraRxNSduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>TC_FRNM_PN_RequestInfo_Chk</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_8/source/application/FrNm_ConTest_8.c</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify length of the PN request information in the NM message.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true.
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel do the following:
    03: Copy the Filter Mask value in respective NM-Pdu byte.
    04: Clear FrIf_Transmit stub count and PduR_FrNmRxIndication stub count
    05: For each configured FrNmTxPdu execute the following
    06: Invoke FrNm_RxIndication with valid PN bit in PnInfo range.
    07: Invoke Main Function once.
    08: verify that PduR_RxIndication is not invoked.
    09: Set one of the valid bit at the mask corresponds to last valid byte.
    10: For each configured FrNmTxPdu execute the following:
    11: Invoke RxIndication for each configured Rx Pdu for that channel.
    12: Invoke Main Function once.
    13: VP (FrNm.SWS_FrNm_00453):
         - PduR_RxIndication is invoked only once(only for first Rx
        Pdu).
    14: Clear PduR_FrNmRxIndication stub count
    15: Call Main function until FrNm PN Reset Time expires.
    16: Set Pn info with one of the valid bit at the mask corresponds to first
        valid byte.
    17: For each configured FrNmTxPdu execute the following:
    18: Provide Pn info with one of the valid bit at the mask corresponds to
        first valid byte and invoke RxIndication for each  configured Rx Pdu for
        that channel.
    19: Invoke Main Function once.
    20: VP (FrNm.SWS_FrNm_00453):
         - PduR_RxIndication is invoked only once(only for first
        Rx Pdu).
  
Test Input: None.
Test Output: 

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00453</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_EIRACalc_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_9/source/application/FrNm_ConTest_9.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, If FrNmPnEiraCalcEnabled is FALSE, FrNm module skips the
    aggregation of external and internal PN requests information.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == false.
    FrNmPnEnabled == true
    FrNmEiraCalcEnabled == false
  
Test Execution: 
    01: Initialize FrNm.
    02: For each configured FrNmChannel do the following:
    03: Fill Data in PduRRx_Buffer.
    04: Clear FrIf_Transmit stub count and PduR_FrNmRxIndication stub count.
    05: For each configured RxPdu do following:
    06: Invoke FrNm_RxIndication.
    07: Invoke Main Function once.
    08: VP (FrNm.ASR403.FRNM413):
         - PduR_FrNmRxIndication is not invoked and data is not changed
        in PduRRx_Buffer(that mean EIRA value is not initialized).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ASR403.FRNM413</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>TC_FRNM_DualChannelEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_9/source/application/FrNm_ConTest_9.c</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, if FrNmDualChannelPduEnable is set to 'true' then
    FrIf_Transmit is invoked for each Vote TxPdu.
  
Test Object: 
  
Test Precondition: 
   - Important test configuration details:
     -- FrNmDualChannelPduEnable = true.
     -- FrNmPassiveModeEnabled = false.
     -- Two TX-PDUs are configured to transmit vote.
   - Module state:
     -- The module shall be ininialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNmChannel execute steps 03 - 05:
    03: Go to Repeat Message State.
    04: Invoke Main Function until time equivalent of 'VotingCycle -1' expires.
    05: VP (FrNm.ECUC_FrNm_00049, FrNm.EB.DualChannelProperty):
        - FrIf_Transmit is invoked twice.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DualChannelProperty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>TC_FRNM_VoteInhibition_DualChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_9/source/application/FrNm_ConTest_9.c</sourcefile>
      <sourceline>212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the behavior of FrNmVoteInhibitionEnabled when
    FrNmDualChannelPduEnable is set to true.
  
Test Object: 
  
Test Precondition: 
   - Important test configuration details:
     -- FrNmDualChannelPduEnable == true.
     -- FrNmPassiveModeEnabled == false.
     -- FrNmVoteInhibitionEnabled is true for one channel and false
        for another one.
   - Module state:
     -- The module shall be ininialized
  
Test Execution: 
    01: Prepare test preconditions
        - Initialize FrNm and reset stub counters.
    02: For each configured FrNmChannel execute following:
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke Main Function in a loop till time equivalent of
        'ReadySleepCnt - 2' expires.
    05: Invoke FrNm_NetworkRequest.
    06: Invoke Main function in a loop till repetition cycle expires.
    07: If VoteInhibition is true then execute step 08 to step 10.
    08: VP (FrNm.ECUC_FrNm_00053, FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes):
        - FrIf_Transmit is not invoked.
        - Current state is NM_STATE_READY_SLEEP.
    09: Invoke Main Function in a loop till repetition cycle expires.
    10: VP (FrNm.ECUC_FrNm_00053, FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes):
        - Current state is NM_STATE_BUS_SLEEP.
    11: If VoteInhibition is false then execute step 12.
    12: VP (FrNm.ECUC_FrNm_00049, FrNm.ECUC_FrNm_00053, FrNm.EB.DualChannelProperty,
            FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes
           ):
        - FrIf_Transmit is invoked twice.
        - Current state is NM_STATE_NORMAL_OPERATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.DualChannelProperty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00357.VoteChangesAllNodes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_VoteRx_Indication_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_MultiChannel_PassiveModeOff/source/application/FrNm_ConTest_MultiFeatureEnabled_MultiChannel_PassiveModeOff.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case Channel is in normal operation state
    and rx indication comes for a vote pdu with repeat message request bit set in the CBV
    then state machine enters repeat message state.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled is set to false.
    At least two channels are configured
  
Test Execution: 
    01: Initialize stubs and module
    02: Request the network
    03: Enter Repeat Message State
    04: Enter Normal operation State
    05: Perform Rx indication
    06: Check Repeat Message state is entered
  
Test Input: 
    Rx indication for vote PDU with repeat message bit set in CBV
  
Test Output: 
   Stet machine enters repeat message state
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>TC_FRNM_DataRx_Indication_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_MultiChannel_PassiveModeOff/source/application/FrNm_ConTest_MultiFeatureEnabled_MultiChannel_PassiveModeOff.c</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case Channel is in normal operation state
    and rx indication comes for a Data PDU with CarWakeup bit set then
    upper layer is notified
  
Test Object: None.
Test Precondition: 
    FrNmCarWakeUpRxEnabled is set to true
  
Test Execution: 
    01: Initialize test and module
    02: Call Network Request
    03: Check Repeat Message State is entered
    04: Perform Rx indication with Car Wakup Bit set
    05: Check upper layer is informed
  
Test Input: 
    Perform Rx indication with Carwakeup bit set
  
Test Output: 
    Check if Nm_CarWakeUpIndication is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_PassiveMode_TwoChannels_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_MultiChannel_PassiveModeOn/source/application/FrNm_ConTest_MultiFeatureEnabled_MultiChannel_PassiveModeOn.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case Passive startup is called Bus wakes up and then shuts down
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == true.
    At least two channels are configured
  
Test Execution: 
    01: Initialize test
    02: Do a passive startup
    03: Check repeat message state is reached
    04: Check Ready Sleep state is reached
    05: Check Bus Sleep state is reached
  
Test Input: 
    Call passive startup
  
Test Output: 
    Bus wakes up then shuts down
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_BusOff_SingleChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff/source/application/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that In case channel is Normal operation state and global time cannot be retrieved
    then Synchronize state is entered
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize Test and module
    02: Request full communication
    03: Enter normal operation state
    04: Set FrIf_GetGlobalTime to return E_NOT_OK
   05: Check Synchronize state is entered
  
Test Input: 
    Simulate Bus Off
  
Test Output: 
    Synchronized state is entered
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
    <specobject>
      <id>TC_FRNM_FunctionCallsInBusSleepState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff/source/application/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff.c</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test checks that in case channel is in Bus Sleep State
    when FrNm_RequestBusSynchronization is called function returns E_OK
    while functions FrNm_EnableCommunication and FrNm_DisableCommunication return E_NOT_OK
  
Test Object: None.
Test Precondition: 
    A single channel is configured
  
Test Execution: 
   01: Initialize module and test
   02: Call FrNm_RequestBusSynchronization and check that it returns E_OK
   03: Call FrNm_EnableCommunication and check that it returns E_NOT_OK since channel is in bus sleep mode
   04: Call FrNm_DisableCommunication and check that it returns E_NOT_OK since channel is in bus sleep mode
  
Test Input: 
    Call FrNm_RequestBusSynchronization
    Call FrNm_EnableCommunication
    Call FrNm_DisableCommunication
  
Test Output: 
    FrNm_RequestBusSynchronization returns E_NOT_OK
    FrNm_EnableCommunication returns E_NOT_OK
    Call FrNm_DisableCommunication returns E_NOT_OK
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00387</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>TC_FRNM_VoteRx_Indication_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff/source/application/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff.c</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case Channel is in normal operation state
    and rx indication comes for a vote pdu with repeat message request bit set in the CBV then
    state machine enters repeat message state.
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled is set to false.
    A single channel is configured
  
Test Execution: 
    01: Initialize stubs and module
    02: Request the network
    03: Enter Repeat Message State
    04: Enter Normal operation State
    05: Perform Rx indication
    06: Check Repeat Message state is entered
  
Test Input: 
    Rx indication for vote PDU with repeat message bit set in CBV
  
Test Output: 
   Stet machine enters repeat message state
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
    <specobject>
      <id>TC_FRNM_DataRx_Indication_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff/source/application/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOff.c</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case Channel is in normal operation state
    and rx indication comes for a Data PDU with CarWakeup bit set then
    upper layer is notified
  
Test Object: None.
Test Precondition: 
    FrNmCarWakeUpRxEnabled is set to true
  
Test Execution: 
    01: Initialize test and module
    02: Call Network Request
    03: Check Repeat Message State is entered
    04: Perform Rx indication with Car Wakup Bit set
    05: Check upper layer is informed
  
Test Input: 
    Perform Rx indication with Carwakeup bit set
  
Test Output: 
    Check if Nm_CarWakeUpIndication is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_PassiveMode_SingleChannel_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Conformance/IN/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOn/source/application/FrNm_ConTest_MultiFeatureEnabled_SingeChannel_PassiveModeOn.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case Passive startup is called Bus wakes up and then shuts down
  
Test Object: None.
Test Precondition: 
    FrNmPassiveModeEnabled == true.
    A single channels is configured
  
Test Execution: 
    01: Initialize test
    02: Do a passive startup
    03: Check repeat message state is reached
    04: Check Ready Sleep state is reached
    05: Check Bus Sleep state is reached
  
Test Input: 
    Call passive startup
  
Test Output: 
    Bus wakes up then shuts down
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_General</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Common_ConImpl/source/application/FrNm_TestCommon.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Vote bit transmitted through FrNm_TriggerTransmit is 0
    when FrNm is in ReadySleepState.
    Verify that a received RxPdu with Vote bit set as 0 is ignored.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke FrNm_Init.
    02: For each configured FrNm Channel execute following steps:.
    03: Invoke Tst_GoToReadySleepState to enter Ready Sleep State.
    04: Invoke PduR_FrNmTriggerTransmit for each configured TxPduId.
    05: VP (FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2):
         - The vote bit set in PduInfo is 0.
    06: Invoke FrNm_MainFunction in a loop till (time equivalent of
        FrNmReadySleepCnt - 1) expires to reach the boundary to transition
        to bus sleep state.
    07: Invoke FrNm_GetState and verify that the current state is
        NM_STATE_READY_SLEEP and the current mode is NM_MODE_NETWORK.
    08: Clear the Nm stub count.
    09: Check whether the schedule variant is configured as 2 and
        Rx Indication is invoked without Vote bit set then also it is treated a
        valid vote.
    10: VP (FrNm.SWS_FrNm_00129):
         - The current state is NM_STATE_BUS_SLEEP and current
        mode is NM_MODE_BUS_SLEEP.
    11: VP (FrNm.SWS_FrNm_00129):
         - FrNm_RxIndication must be ignored thereby BusSleepState must be entered.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00126.VotePDU.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_0142</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_3_Common/source/application/FrNm_NodeRemoteSleepTests.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
To verify that FrNm_GetNodeIdentifier returns E_OK
when there is no error and FrNm_GetNodeIdentifier updates
the nmNodeIdPtr with the value of Node Id that is received
in the latest FrNm_RxIndication call

Test Object: None.
Test Precondition: 
  FrNmSourceNodeIdentifierEnabled = TRUE
  FrNmMainAcrossFrCycle == false

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNm Channel do the following:
  03: Invoke Tst_GoToNormalOperationState to enter
      Normal Operation State.
  04: Invoke FrNm_RxIndication(FrNmRxPduId, FrNmRxSduPtr) for
      successful reception of data Pdu with FrNmRxSduPtr pointing to NM-PDU
  05: Invoke FrNm_GetNodeIdentifier(FrNmComMNetworkHandleRef, nmNodeIdPtr)
      (Deviation from CTSP)
  06: VP (FrNm.SWS_FrNm_00244, FrNm.SWS_FrNm_00047, FrNm.SWS_FrNm_00251):
     FrNm_GetNodeIdentifier returns E_OK
     NodeIdPtr points to the Node Id value in latest received data
  07: Invoke FrNm_RxIndication(FrNmRxPduId, FrNmRxSduPtr) for
      successful reception of data Pdu with FrNmRxSduPtr pointing to NM-PDU
      with each data byte value is incremented by 1.
      This is to ensure different data is received at second reception
      with different Node ID
  08: Invoke FrNm_GetNodeIdentifier(FrNmComMNetworkHandleRef, nmNodeIdPtr)
  09: VP (FrNm.SWS_FrNm_00244, FrNm.SWS_FrNm_00047, FrNm.SWS_FrNm_00251):
      FrNm_GetNodeIdentifier returns E_OK
      NodeIdPtr points to the Node Id value in latest received data

Test Input: None.
Test Output: 
     FrNm_GetNodeIdentifier returned E_OK and
     nmNodeIdPtr pointed to the Node Id value in latest received data
     according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0143</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_3_Common/source/application/FrNm_NodeRemoteSleepTests.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
To verify that FrNm_GetLocalNodeIdentifier returns E_OK
when there is no error and FrNm_GetLocalNodeIdentifier updates
the nmNodeIdPtr with the value configured for the
configuration parameter "FrNmNodeId"

Test Object: None.
Test Precondition: 
  FrNmSourceNodeIdentifierEnabled = TRUE

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNm Channel do the following:
  03: Invoke FrNm_GetLocalNodeIdentifier(FrNmComMNetworkHandleRef, nmNodeIdPtr)
  04: VP (FrNm.SWS_FrNm_00245, FrNm.SWS_FrNm_00046, FrNm.SWS_FrNm_00037, FrNm.ECUC_FrNm_00017):
      FrNm_GetLocalNodeIdentifier returns E_OK
      nmNodeIdPtr is updated with the value FrNmNodeId

Test Input: None.
Test Output: 
   FrNm_GetLocalNodeIdentifier returned E_OK and
   nmNodeIdPtr is updated with the value FrNmNodeId
   according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>FrNm.ECUC_FrNm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0150</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_3_Common/source/application/FrNm_NodeRemoteSleepTests.c</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
To verify that FrNm_CheckRemoteSleepIndication returns
E_NOT_OK if FrNm is not in the Network Mode.

Test Object: None.
Test Precondition: 
  FrNmRemoteSleepIndicationEnabled = true
  FrNmPassiveModeEnabled == false

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNm Channel do the following:
  03: Invoke FrNm_GetState.
  04: VP :
       FrNm_GetState returns E_OK.
       nmStatePtr is NM_STATE_BUS_SLEEP.
       and nmModePtr is NM_MODE_BUS_SLEEP.
  05: Invoke FrNm_CheckRemoteSleepIndication API
  06: VP (FrNm.SWS_FrNm_00186):
       The function FrNm_CheckRemoteSleepIndication shall
       return the value E_NOT_OK
  07: Invoke FrNm_NetworkRequest.
  08: VP :
       FrNm_NetworkRequest returns E_OK.
  09: Invoke FrNm_MainFunction_CFGIF once (Deviation from CTSP)
  10: Invoke FrNm_GetState.
  11: VP :
       FrNm_GetState returns E_OK.
       nmStatePtr is NM_STATE_SYNCHRONIZE.
       nmModePtr is NM_MODE_SYNCHRONIZE.
  12: Invoke FrNm_CheckRemoteSleepIndication API
  13: VP (FrNm.SWS_FrNm_00186):
       The function FrNm_CheckRemoteSleepIndication shall
       return the value E_NOT_OK

Test Input: None.
Test Output: 
  The API FrNm_CheckRemoteSleepIndication() returns E_NOT_OK
  according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0132</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_3_Common/source/application/FrNm_NodeRemoteSleepTests.c</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that in Synchronize state if FrNm_NetworkRelease and FrNm_StartupError are invoked
  successively, then FlexRay NM channel changes to Bus Sleep State.
  To verify that FrNm_NetworkRequest API returns E_OK when there is no error.
  To verify that FrNm_NetworkRelease API returns E_OK if the call is successful.
  To verify that In Synchronize state if FrNm_StartupError is invoked after calling
  FrNm_NetworkRelease,
  then FlexRay NM channel immediately changes to Bus Sleep State without waiting
  for execution of Main Function.

Test Object: None.
Test Precondition: 
   FrNmPassiveModeEnabled == false

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNmChannel do the following:
  03: Invoke FrNm_NetworkRequest.
  04: VP (FRNM238c):
       FrNm_NetworkRequest returns E_OK.
  05: Invoke FrNm_MainFunction_CFGIF once
  06: Invoke FrNm_GetState.
  07: VP :
       FrNm_GetState returns E_OK.
       nmStatePtr is NM_STATE_SYNCHRONIZE.
       nmModePtr is NM_MODE_SYNCHRONIZE.
  08: Invoke FrNm_NetworkRelease.
  09: VP (xFrNm.SWS_FrNm_00239):
       FrNm_NetworkRelease returns E_OK.
  10: Invoke FrNm_StartupError.
  11: Invoke FrNm_MainFunction_CFGIF once (Deviation from CTSP)
  12: Invoke FrNm_GetState.
  13: VP (SWS_FrNm_00376, FrNm.EB.StartupError.Asynchronously, FrNm.ASR403.FRNM142):
       FrNm_GetState returns E_OK.
       nmStatePtr is NM_STATE_BUS_SLEEP.
       nmModePtr is NM_MODE_BUS_SLEEP.

Test Input: 

Test Output: 
FlexRay NM channel immediately changes to Bus Sleep State without waiting
for execution of Main Function according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00376</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.StartupError.Asynchronously</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00393</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>TC_FRNM_SetSleepReadyBit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_3_Common/source/application/FrNm_NodeRemoteSleepTests.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  Verify that, the NMcoordinatorSleepReady bit in the Control Bit Vector is set/clear when
  FrNm_SetSleepReadyBit() is called.

Test Object: None.
Test Precondition: 
  FrNmCoordinatorSyncSupport == true.

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNmChannel execute following.
  03: Invoke Tst_GoToRepeatMessageState to enter Repeat Message State.
  04: Invoke FrNm_SetSleepReadyBit to clear the Sleep ready bit in CBV.
  05: Invoke Main Function in a loop till time equivalent of Voting cycle expires.
  06: Check FrIf_Transmit is invoked.
  07: VP (FrNm.SWS_FrNm_00398, FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit, FrNm.SWS_FrNm_91001):
        NMcoordinatorSleepReady is not set in CBV.
  08: Invoke FrNm_SetSleepReadyBit to set the Sleep ready bit in CBV.
  09: Invoke Main Function in a loop till time equivalent of Voting cycle expires.
  10: Check FrIf_Transmit is invoked.
  11: VP (FrNm.EB.NMcoordinatorSleepReadyBitAvailability, FrNm.SWS_FrNm_00398, FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit, FrNm.SWS_FrNm_91001):
        NMcoordinatorSleepReady is set in CBV.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00398</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB_Ref.SWS_FrNm_00055.SleepReadyBit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
        <provcov>
          <linksto>FrNm.EB.NMcoordinatorSleepReadyBitAvailability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_FRNM_0139</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_5_Common/source/application/FrNm_SetGetDataTests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that FrNm_SetUserData returns E_OK when there is no error.
  To verify that after invoking FrNm_SetUserData, FrNm uses the data
  set by FrNm_SetUserData for the next invocation of FrIf_Transmit by FrNm and
  FrNm_TriggerTransmit by underlying module.

Test Object: None.
Test Precondition: 
  FrNmPassiveModeEnabled == false.
  FrNmUserDataEnabled == true.
  FrNmMainAcrossFrCycle == false.
  FrNmPduLength &gt;= 2

Test Execution: 
  01: Invoke FrNm_Init.
  02: Check whether (CTFrNmPduLength - n) is greater than 0 or not.
      (n equal to 1 if FrNmSourceNodeIdentifierEnabled is set to false otherwise n equal to 2)
  03: For each configured FrNmChannel execute following:
  04: Invoke Tst_GoToNormalOperationState to enter
       Normal Operation State.
  05: Invoke FrNm_SetUserData
  06: VP (FrNm.SWS_FrNm_00240,FrNm.SWS_FrNm_00043):
        FrNm_SetUserData returns E_OK.
  07: Invoke FrNm_MainFunction_CFGIF in a loop till the time equivalent of FrNmDataCycle expires.
  08: For each configured FrNmTxPdu execute following:
  09: If FrNmTxPduContainsData is true then proceed.
  10: VP (FrNm.SWS_FrNm_00240, FrNm.SWS_FrNm_00043):
       FrIf_Transmit is invoked. PduInfoPtr.SduPtr points to PDU-Data,
       in which user data bytes are same as CTFrNmTxPduData
  11.  VP (FrNm.SWS_FrNm_00252, FrNm.SWS_FrNm_00280):
       Invoke FrNm_TriggerTransmit and the SduPtr must contain the same user data.

Test Input: None.
Test Output: 
FrNm uses the data set by FrNm_SetUserData for the next
invocation of FrIf_Transmit by FrNm
according to the verification points mentioned above.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0140</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_5_Common/source/application/FrNm_SetGetDataTests.c</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that FrNm_GetUserData returns E_OK when there is no error.
  To verify that FrNm_GetUserData updates the nmUserDataPtr with the user data bytes which are
  received in the latest FrNm_RxIndication call.
  To verify if FrNm_GetUserData gets the Data from an NM message which is
  received by FrNm_RxIndication.

Test Object: None.
Test Precondition: 
  FrNmPassiveModeEnabled == false.
  FrNmUserDataEnabled == true.
  FrNmMainAcrossFrCycle == false.

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNmChannel execute following:
  03: Invoke Tst_GoToNormalOperationState to enter
      Normal Operation State.
  04: For each configured FrNmRxPdu execute step 09 and 10:
  05: If FrNmRxPduContainsData is true then proceed.
  06: Invoke FrNm_RxIndication(FrNmRxPduId, FrNmRxSduPtr) for
       successful reception of data Pdu with FrNmRxSduPtr pointing to NM-PDU
  07: Invoke FrNm_GetUserData (Deviation from CTSP)
  08: VP (FrNm.SWS_FrNm_00241, FrNm.SWS_FrNm_00044, FrNm.SWS_FrNm_00013, FrNm.SWS_FrNm_00251):
      FrNm_GetUserData returns E_OK.
      nmUserDataPtr points to the same user data bytes that is received recently by the
      invocation of FrNm_RxIndication.
  09: Invoke FrNm_RxIndication for
      successful reception of data Pdu with FrNmRxSduPtr pointing to NM-PDU
      with each data byte value is incremented by 1.
      This is to ensure different data is received at second reception
  10: Invoke FrNm_GetUserData.
  11: VP (FrNm.SWS_FrNm_00241, FrNm.SWS_FrNm_00044, FrNm.SWS_FrNm_00013, FrNm.SWS_FrNm_00251):
      FrNm_GetUserData returns E_OK.
      nmUserDataPtr points to the same user data bytes that is received recently by the
      invocation of FrNm_RxIndication.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>TC_FRNM_0141</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrNm/test/ts5/Include/FrNm_Con_2_5_Common/source/application/FrNm_SetGetDataTests.c</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that FrNm_GetPduData returns E_OK when there is no error.
  To verify that FrNm_GetPduData updates the nmPduData with the user data
  bytes which are received in the latest FrNm_RxIndication call.

Test Object: None.
Test Precondition: 
  FrNmPassiveModeEnabled == false.
  FrNmUserDataEnabled == true.
  FrNmSourceNodeIdentifierEnabled == true.
  FrNmMainAcrossFrCycle == false.

Test Execution: 
  01: Invoke FrNm_Init.
  02: For each configured FrNmChannel execute following:
  03: Invoke Tst_GoToNormalOperationState to enter
      Normal Operation State.
  04: Invoke FrNm_RxIndication(FrNmRxPduId, FrNmRxSduPtr) for
      successful reception of data Pdu with FrNmRxSduPtr pointing to NM-PDU
  05: Invoke FrNm_GetPduData (Deviation from CTSP)
  06: VP (FRNM242, FrNm.ASR403.FRNM265, FrNm.SWS_FrNm_00251):
      FrNm_GetPduData returns E_OK.
      nmPduData points to the same data which is received in
      latest FrNm_RxIndication call.
  07: Invoke FrNm_RxIndication for
      successful reception of data Pdu with FrNmRxSduPtr pointing to NM-PDU
      with each data byte value is incremented by 1.
      This is to ensure different data is received at second reception
  08: Invoke FrNm_GetPduData.
  09: VP (FRNM242, FrNm.ASR403.FRNM265, FrNm.SWS_FrNm_00251):
      FrNm_GetPduData returns E_OK.
      nmPduData points to the same data which is received in
      latest FrNm_RxIndication call.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>FrNm.ASR403.FRNM265</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrNm.SWS_FrNm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
