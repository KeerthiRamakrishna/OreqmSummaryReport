<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_FrIf_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_Native/asc_FrIf_Autosar_requirements_AUTOSAR_SWS_FlexRayInterface.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_Native/asc_FrIf_Autosar_requirements_FrIf_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_Native/asc_FrIf_Autosar_requirements_FrIf_EB_Refinments.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PbcfgM_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PduLengthType_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:26:01 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_FrIf_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_Native/asc_FrIf_Autosar_requirements_AUTOSAR_SWS_FlexRayInterface.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_Native/asc_FrIf_Autosar_requirements_FrIf_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_Native/asc_FrIf_Autosar_requirements_FrIf_EB_Refinments.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PbcfgM_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PduLengthType_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrIf.ASR40.FrIf05001</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The following types shall be imported from the listed files:
      Module          Imported Type
      ComStack_Types  PduIdType
                      PduInfoType
      Dem             Dem_EventIdType
                      Dem_EventStatusType
      Fr              Fr_ChannelType
                      Fr_POCStatusType
                      Fr_RxLPduStatusType
                      Fr_SyncStateType
                      Fr_TxLPduStatusType
      FrTrcv          FrTrcv_TrcvModeType
                      FrTrcv_TrcvWUReasonType
      Std_Types       Std_ReturnType
                      Std_VersionInfoType
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05074</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
       List dependencies to other modules.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05099</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      There is one dedicated FlexRay Job List Execution Function for each
      FlexRay Cluster.
      </description>
      <comment>
      Covered by FrIf.ASR40.FrIf05270
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05270</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05271</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05100</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface module shall execute the Flexray Job List Execution
      Function.
      </description>
      <comment>
      This requirement is not applicable:
      The FleyRay Job List Execution Function is called by the BSW scheduler, therefore
      not the FlexRay Interface module itself.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      For each FlexRay Cluster, one dedicated FlexRay Interface Main Function
      shall be provided to the BSW Scheduler.
      Note: Each of these FlexRay Interface Main Functions must be called
      cyclically from a task body provided by the BSW Scheduler. The calling
      period must be configurable. (Refer to parameter FrIfMainFunctionPeriod)
      </description>
      <comment>
      Covered by FrIf.ASR40.FrIf05278
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05278</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05050</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The calling of the FlexRay Job List Execution Function by the FlexRay
      Interface module synchronously to the FlexRay Global Time shall ensure
      that both the indication (to an upper layer BSW module) of received data
      and the request (to an upper layer BSW module) for data to be sent occur
      synchronously to the FlexRay Global Time.
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation. This must be ensured by the
      integrator.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05148</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface module shall ensure data consistency in its
      buffers.
      </description>
      <comment>
      This requirement is not applicable:
      The will be no data inconsistency because the FleyRay Module does not preempt itself.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In order to be able to report development errors, the FrIf module has to
      have access to the error hook of the Development Error Tracer.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_Init</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ControllerInit</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StartCommunication</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AbortCommunication</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetState</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetState</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendWUP</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_Transmit</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllowColdstart</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetNmVector</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_JobListExec_0</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllSlots</srcid><srcstatus/><internalId>841</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableLPdu</srcid><srcstatus/><internalId>842</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>852</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetCycleLength</srcid><srcstatus/><internalId>853</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_GetVersionInfo</srcid><srcstatus/><internalId>854</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_GetState</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_PTR_TXPDUID_FrIf_Transmit</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_ControllerInit</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_StartCommunication</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_HaltCommunication</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AbortCommunication</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CLST_FrIf_SetState</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CLST_FrIf_GetState</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SendWUP</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>872</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>873</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AllowColdstart</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetNmVector</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>879</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>881</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AllSlots</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableLPdu</srcid><srcstatus/><internalId>883</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>884</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>890</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>892</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetCycleLength</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting_SingleCluster</srcid><srcstatus/><internalId>1016</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendMTS</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StopMTS</srcid><srcstatus/><internalId>1037</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckMTS</srcid><srcstatus/><internalId>1038</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckIRQ</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1040</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1042</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SendMTS</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_StopMTS</srcid><srcstatus/><internalId>1046</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_CheckMTS</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AckIRQ</srcid><srcstatus/><internalId>1048</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1049</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1051</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1052</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CLST_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_JOB_CYCLE_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1054</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncState</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetSyncState</srcid><srcstatus/><internalId>1060</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetExtSync</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetExtSync</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1313</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays_DemToDet</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection_DemToDet</srcid><srcstatus/><internalId>1315</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_A</srcid><srcstatus/><internalId>1317</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_B</srcid><srcstatus/><internalId>1318</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_A</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_B</srcid><srcstatus/><internalId>1320</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_A</srcid><srcstatus/><internalId>1321</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_B</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_E_NOT_OK</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In order to be able to report production errors, the FrIf module has to
      have access to the Diagnostic Event Manager.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05149</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The code file structure shall not be defined within this specification
      completely. At this point it shall be pointed out that the code-file
      structure shall include the following files named FrIf_Lcfg.c for link
      time configurable parameters and FrIf_PBcfg.c for post build time
      configurable parameters
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05150</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Additionally, the code-file structure shall include the following files:
      FrIf.c general source code file of the FlexRay Interface FrIf_Cfg.c
      contains pre-compile time configurable parameters
      </description>
      <comment>
      This requirement is not applicable:
      There shall be a dedicated source file for each API function, hence this code-file
      structure does not apply.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076b</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      FrIf_Cfg.h contains the FrIf pre-compile-time configurable parameters
      (pre processor constants)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076d</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Fr.h contains the declarations of the API services of the FlexRay Driver
      used by the FlexRay Interface
      </description>
      <comment>
      This requirement is not applicable:
      This is no requirement for FrIf.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076e</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      FrTrcv.h contains the declarations of the API services of the FlexRay
      Transceiver Driver used by the FlexRay Interface.
      </description>
      <comment>
      This requirement is not applicable:
      This is no requirement for FrIf.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076f</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Fr_GeneralTypes.h contains declarations shared by all AUTOSAR FlexRay BSW
      modules
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076g</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      ComStack_Types.h contains the communication module abstracted datatypes
      shared by AUTOSAR communication BSW.
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076h</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      PduR_FrIf.h contains the declarations of API services the PDU router
      offers to the FlexRay Interface
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076i</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      FrNm_Cbk.h contains the declarations of API services the FrNm offers to
      the FlexRay Interface
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076j</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      FrTp_Cbk.h contains the declarations of API services the FrTp offers to
      the FlexRay Interface
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076l</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Det.h contains the declarations of the API services of the Det optionally
      used by the FlexRay Interface
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076m</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      SchM_FrIf.h contains the declaration of the API services the SchM offers
      to the FlexRay Interface
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076q</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      MemMap.h contains the declaration of the API services to apply
      the memory mapping abstraction mechanisms as specified by Specification
      of Memory Mapping
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05076r</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      FrIf_Types.h contains the declaration of FrIf specific types.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05081</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      All files related to the FrIf module shall follow the naming convention
      FrIf[_&amp;lt;description&amp;gt;].&amp;lt;extension&amp;gt;
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05091a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall include the Dem.h file.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05091a_1</srcid><srcstatus/><internalId>25</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05091a_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall include the Dem.h file only if reporting to DEM is enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05091a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05091b</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      By this inclusion the APIs to report errors as well as the required Event
      Id symbols are included.
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05091c</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      This specification defines the name of the Event Id symbols, which are
      provided by XML to the DEM configuration tool.
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05091d</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The DEM configuration tool assigns ECU dependent values to the Event Id
      symbols and publishes the symbols in Dem_IntErrId.h.
      </description>
      <comment>
        This requirement is not applicable:
        No requirement on FlexRay Interface module implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05140a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The implementation of the FrIf module shall provide the header file
      FrIf.h, which is the main module interface file.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05140b</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      FrIf.h: It shall contain all types and function prototypes required by the
      FrIf module's environment.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The implementation of the FrIf module shall provide the header file
      FrIf_Cfg.h that shall contain the pre-compile-time configuration
      parameters.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module source code file(s) shall include SchM_FrIf.h if data
      consistency mechanisms of the BSW scheduler are required as described in
      [13].
      </description>
      <comment>
      Covered by standard review.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module header file FrIf.h shall include MemMap.h and apply the
      memory mapping abstraction mechanisms as specified by [15].
      </description>
      <furtherinfo>
        WRN.impl.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FrIf_Api.h.m4_462</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Api.h.m4_1758</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_952</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_970</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_974</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_981</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_985</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_989</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_992</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_999</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_1005</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/FrIf_Extension.h_1563</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AbortCommunication.c_23</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AbortCommunication.c_94</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AckAbsoluteTimerIRQ.c_23</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AckAbsoluteTimerIRQ.c_95</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AckIRQ.c_24</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AckIRQ.c_88</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AckRelativeTimerIRQ.c_25</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AckRelativeTimerIRQ.c_98</srcid><srcstatus/><internalId>650</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AllSlots.c_24</srcid><srcstatus/><internalId>651</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AllSlots.c_95</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AllowColdstart.c_24</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_AllowColdstart.c_95</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CancelAbsoluteTimer.c_23</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CancelAbsoluteTimer.c_96</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CancelRelativeTimer.c_25</srcid><srcstatus/><internalId>657</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CancelRelativeTimer.c_99</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CheckMTS.c_25</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CheckMTS.c_98</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CheckWakeupByTransceiver.c_22</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_CheckWakeupByTransceiver.c_118</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ClearTransceiverWakeup.c_22</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ClearTransceiverWakeup.c_124</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ControllerInit.c_20</srcid><srcstatus/><internalId>665</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ControllerInit.c_90</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableAbsoluteTimerIRQ.c_24</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableAbsoluteTimerIRQ.c_96</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableIRQ.c_24</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableIRQ.c_88</srcid><srcstatus/><internalId>670</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableLPdu.c_24</srcid><srcstatus/><internalId>671</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableLPdu.c_96</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableRelativeTimerIRQ.c_27</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableRelativeTimerIRQ.c_99</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableTransceiverBranch.c_22</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_DisableTransceiverBranch.c_124</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableAbsoluteTimerIRQ.c_23</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableAbsoluteTimerIRQ.c_94</srcid><srcstatus/><internalId>678</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableBusMirroring.c_26</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableBusMirroring.c_101</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableIRQ.c_24</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableIRQ.c_87</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableRelativeTimerIRQ.c_25</srcid><srcstatus/><internalId>685</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableRelativeTimerIRQ.c_96</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableTransceiverBranch.c_22</srcid><srcstatus/><internalId>687</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_EnableTransceiverBranch.c_124</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetAbsoluteTimerIRQStatus.c_25</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetAbsoluteTimerIRQStatus.c_98</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetChannelStatus.c_24</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetChannelStatus.c_96</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetClockCorrection.c_24</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetClockCorrection.c_110</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetControllerErrorStatus.c_24</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetControllerErrorStatus.c_95</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetCycleLength.c_20</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetCycleLength.c_92</srcid><srcstatus/><internalId>698</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetGlobalTime.c_23</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetGlobalTime.c_96</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetIRQStatus.c_24</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetIRQStatus.c_88</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetNmVector.c_23</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetNmVector.c_94</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetNumOfStartupFrames.c_24</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetNumOfStartupFrames.c_99</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetPOCStatus.c_23</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetPOCStatus.c_94</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetRelativeTimerIRQStatus.c_27</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetRelativeTimerIRQStatus.c_100</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetSyncFrameList.c_24</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetSyncFrameList.c_123</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetSyncState.c_24</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetSyncState.c_93</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetTransceiverError.c_22</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetTransceiverError.c_145</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetTransceiverMode.c_22</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetTransceiverMode.c_127</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetTransceiverWUReason.c_22</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetTransceiverWUReason.c_127</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetVersionInfo.c_25</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetVersionInfo.c_69</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetWakeupRxStatus.c_24</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_GetWakeupRxStatus.c_95</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_HaltCommunication.c_23</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_HaltCommunication.c_92</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Init.c_20</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Init.c_26</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Init.c_32</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Init.c_39</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Init.c_45</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Init.c_207</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_40</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_2249</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Priv.h_114</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Priv.h_121</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Priv.h_188</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Priv.h_197</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ReadCCConfig.c_25</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ReadCCConfig.c_104</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ReconfigLPdu.c_24</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_ReconfigLPdu.c_109</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SendMTS.c_25</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SendMTS.c_166</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SendWUP.c_25</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SendWUP.c_95</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetAbsoluteTimer.c_23</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetAbsoluteTimer.c_99</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetExtSync.c_25</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetExtSync.c_100</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetRelativeTimer.c_25</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetRelativeTimer.c_100</srcid><srcstatus/><internalId>765</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetTransceiverMode.c_20</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetTransceiverMode.c_124</srcid><srcstatus/><internalId>767</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetWakeupChannel.c_25</srcid><srcstatus/><internalId>768</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_SetWakeupChannel.c_97</srcid><srcstatus/><internalId>769</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_StartCommunication.c_23</srcid><srcstatus/><internalId>770</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_StartCommunication.c_96</srcid><srcstatus/><internalId>771</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_StateMachine.c_32</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_StateMachine.c_1148</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_TimeConversion.c_20</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_TimeConversion.c_87</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Transmit.c_26</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_Transmit.c_236</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The header file FrIf.h shall contain a software and specification version
      number.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05052</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall achieve the abstraction (of the CCs and Drivers) by
      providing to the upper layer BSW modules an abstract, unique, zero-based
      consecutive index for each sort of resource, independent of their type,
      location, and access method.
      </description>
      <comment>
      This requirement is informational only.
      This is merely a boundary condition for the implementation. The abstract,
      unique, zero-based consecutive index must be ensured by the configuration.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05060</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In order to abstract for upper layer BSW modules the various CCs, which
      the FrIf module controls via the FlexRay Driver modules, the FrIf module
      offers an abstract, unique, zero-based consecutive index FrIfCtrlIdx as
      configuration parameter, which maps to a tuple of FlexRay Driver API
      Service function pointer and CC index Fr_CtrlIdx.
      </description>
      <comment>
      This requirement is informational only.
      This is merely a boundary condition for the implementation. The abstract,
      unique, zero-based consecutive index must be ensured by the configuration.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05107</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Besides hardware and software resources, the FrIf module also numbers the
      logical structure elements presented by FlexRay with an abstract, unique,
      zerobased consecutive index.
      </description>
      <comment>
      This requirement is informational only.
      This is merely a boundary condition for the implementation. The abstract,
      unique, zero-based consecutive index must be ensured by the configuration.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall number all PDUs to be transmitted with an abstract,
      unique, zero-based consecutive index FrIf_TxPduId.
      </description>
      <comment>
      This is merely a boundary condition for the implementation. The abstract,
      unique, zero-based consecutive index must be ensured by the configuration.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30036</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      It shall be possible that the FrIf module can be configured to support at
      least four (possibly different) FlexRay Drivers to access the FlexRay
      Communication Controllers.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      It shall be possible that the FrIf module can be configured using the
      parameter FRIF_CTRL_IDX to support at least four (possibly different)
      FlexRay CCs.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      It shall be possible that the FrIf module can be configured to support
      one of both or both FlexRay Channels as specified in [16].
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>928</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_TransceiverMode</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>955</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SendMTS</srcid><srcstatus/><internalId>1020</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_StopMTS</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CheckMTS</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      It shall be possible that the FrIf module can be configured using the
      parameter FRIF_CLST_IDX to support at least four FlexRay Clusters.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05113</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      It shall be possible that the FrIf module can be configured using the
      parameter FRIF_ABS_TIMER_IDX to support at least one absolute timer per
      FlexRay CCs.
      </description>
      <comment>
      This requirement is not applicable:
      The maximum number of supported absolute timers is limited by the hardware.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In order to allow to control the communication operations of the FlexRay
      system, the FrIf module shall implement a behavior, which is defined
      using a simple state machine (one per FlexRay cluster), called FlexRay
      Interface State Machine
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05115_1</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05115_2</srcid><srcstatus/><internalId>46</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05115_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FleyRay Interface State Machine shall have a state FRIF_STATE_OFFLINE
      in which no communication services shall be executed.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30004</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05115_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FleyRay Interface State Machine shall have a state FRIF_STATE_ONLINE
      in which all communication services (reception, transmission, transmission confirmation)
      shall be executed.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30004</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      During initialization of the FrIf by executing FrIf_Init() the FrIf_State
      for each cluster shall be initialized with state 'FRIF_STATE_OFFLINE'.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30004</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the FrIf module's environment calls the function FrIf_SetState with
      parameter FrIf_StateTransition = FRIF_GOTO_ONLINE and if the current
      state for the requested cluster is FRIF_STATE_OFFLINE, the FrIf module
      shall take the current state of the requested cluster to
      FRIF_STATE_ONLINE." (refer to figure 7-4 transsition (2)). If the FrIf
      module's environment calls the function FrIf_SetState with parameter
      FrIf_StateTransition = FRIF_GOTO_ OFFLINE and if the current state for
      the requested cluster is FRIF_STATE_ONLINE, the FrIf module shall take
      the current state of the requested cluster to FRIF_STATE_OFFLINE." (refer
      to figure 7-4 transition (3)). Otherwise, do not perform a state
      transition.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30004</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall provide one dedicated FlexRay Interface Main
      Function for each FlexRay Cluster that is controlled by that FrIf module.
      </description>
      <comment>
      Covered by standard review
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05283</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The API names of the FlexRay Interface Main Functions shall obey the
      following pattern:
      FrIf_MainFunction_0() for Cluster # 0 (FrIf_ClstIdx = 0)
      FrIf_MainFunction_1() for Cluster # 1 (FrIf_ClstIdx = 1)
      FrIf_MainFunction_2() for Cluster # 2 (FrIf_ClstIdx = 2)
      FrIf_MainFunction_3() for Cluster # 3 (FrIf_ClstIdx = 3)
      ... and so on, if more than 4 FlexRay Clusters are supported.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobList_IndependentCluster</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringDisabled</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The Main Function monitors and controls the continuous execution of the
      FlexRay Job List Execution Function including the (re)synchronization if
      the current FlexRay Interface State Machine is FRIF_STATE_ONLINE.
      </description>
      <comment>
      The implementation starts and synchronizes the JobList as soon as the JobList
      assigned FlexRay controller is synchronized to the FlexRay global time
      (even in FrIfState FRIF_STATE_OFFLINE).
      Rationale:
      Early synchronization of the JobList, speeds up FlexRay startup time when
      switching FrIfState to FRIF_STATE_ONLINE.
      &lt;!--
      Linked to deviation dev.FrIf.JobListSynch
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.JobListSynch</srcid><srcstatus/><internalId>616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120b</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If one of the optional cluster-specific configuration parameters
      FRIF_E_NIT_CH_A, FRIF_E_NIT_CH_B, FRIF_E_SW_CH_A, FRIF_E_SW_CH_B or
      FRIF_E_ACS_CH_A, FRIF_E_ACS_CH_B exists, then call FrIf_GetChannelStatus
      for each FlexRay controller of the cluster and report the status to DEM
      as described below.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_A</srcid><srcstatus/><internalId>1317</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_B</srcid><srcstatus/><internalId>1318</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_A</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_B</srcid><srcstatus/><internalId>1320</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_A</srcid><srcstatus/><internalId>1321</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_B</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_E_NOT_OK</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120c</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the optional configuration parameter FRIF_E_NIT_CH_A exists, then the
      channel status information shall be reported to DEM as
      Dem_ReportErrorStatus (FRIF_E_NIT_CH_A, DEM_EVENT_STATUS_FAILED) when any
      of the error bits of a single controller (Channel A NIT status data
      vSS!SyntaxError, vSS!Bviolation) is set or as Dem_ReportErrorStatus
      (FRIF_E_NIT_CH_A, DEM_EVENT_STATUS_PASSED) when none of these error bits
      is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120d</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the optional configuration parameter FRIF_E_NIT_CH_B exists, then the
      channel status information shall be reported to DEM as
      Dem_ReportErrorStatus (FRIF_E_NIT_CH_B, DEM_EVENT_STATUS_FAILED) when any
      of the error bits of a single controller (Channel B NIT status data
      vSS!SyntaxError, vSS!Bviolation) is set or as Dem_ReportErrorStatus
      (FRIF_E_NIT_CH_B, DEM_EVENT_STATUS_PASSED) when none of these error bits
      is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120e</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the optional configuration parameter FRIF_E_SW_CH_A exists, then the
      channel status information shall be reported to DEM as
      Dem_ReportErrorStatus (FRIF_E_SW_CH_A, DEM_EVENT_STATUS_FAILED) when any
      of the error bits of a single controller (Channel A symbol window status
      data vSS!SyntaxError, vSS!Bviolation, vSS!TxConflict) is set or as
      Dem_ReportErrorStatus (FRIF_E_SW_CH_A, DEM_EVENT_STATUS_PASSED) when none
      of these error bits is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120f</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the optional configuration parameter FRIF_E_SW_CH_B exists, then the
      channel status information shall be reported to DEM as
      Dem_ReportErrorStatus (FRIF_E_SW_CH_B, DEM_EVENT_STATUS_FAILED) when any
      of the error bits of a single controller (Channel B symbol window status
      data vSS!SyntaxError, vSS!Bviolation vSS!TxConflict) is set or as
      Dem_ReportErrorStatus (FRIF_E_SW_CH_B, DEM_EVENT_STATUS_PASSED) when none
      of these error bits is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120g</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the optional configuration parameter FRIF_E_ACS_CH_A exists, then the
      channel status information shall be reported to DEM as
      Dem_ReportErrorStatus (FRIF_E_ACS_CH_A , DEM_EVENT_STATUS_FAILED) when
      any of the error bits of a single controller (Channel A aggregated
      channel status vSS!SyntaxError, vSS!ContentError, vSS!Bviolation,
      vSS!TxConflict) is set or as Dem_ReportErrorStatus (FRIF_E_ACS_CH_A,
      DEM_EVENT_STATUS_PASSED) when none of these error bits is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120h</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the optional configuration parameter FRIF_E_ACS_CH_B exists, then the
      channel status information shall be reported to DEM as
      Dem_ReportErrorStatus (FRIF_E_ACS_CH_B, DEM_EVENT_STATUS_FAILED) when any
      of the error bits of a single controller (Channel B symbol window status
      data vSS!SyntaxError, Dem_ReportErrorStatus (FRIF_E_ACS_CH_B,
      DEM_EVENT_STATUS_PASSED) when none of these error bits is set.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05120i</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If a loss of the JobList’s synchronization (see JobListAsyncFlag) or a miss of execution
      was detected, the following steps shall be performed:
      1.  Get the global time (FrIf_GetGlobalTime())
      -  If FrIf_GetGlobalTime() returns E_NOT_OK, stop here
      -  If FrIf_GetGlobalTime() returns E_OK, continue with step 2
      2.  add some ‘time buffer’ (i.e. some timespan which takes jitter into account)
      3.  search the FlexRay Job List for the next  job, i.e. that job with an invocation
          time greater than the current global time + ‘time buffer’.
      4.  set the JobListPointer to that job and program the absolute timer with this job's
          invocation time (now the FlexRay Job List is synchronized again)
      5.  clear the JobListAsyncFlag
      6.  Enable the absolute timer interrupt
      </description>
      <comment>
      EB Extension (see EB requirement FrIf.EB.FrIfJoblistSyncReportToDem): According to the value
      of the pre-compile-time parameter (FrIfJoblistSyncReportToDem|FRIF_PROD_ERR_HANDLING_JLE_SYNC) 
      the error status FRIF_E_JLE_SYNC is either reported to DEM or DET, or not reported at all.      
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobListExecutionLegalISRDelays</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetectionNoDem</srcid><srcstatus/><internalId>906</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SafetyMargin</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays_DemToDet</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection_DemToDet</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05096</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface executable code (however, not the configuration
      used during runtime) shall be completely independent of the FlexRay
      Communication Controller(s) and the FlexRay Transceiver(s).
      </description>
      <comment>
      This requirement is informational only.
      Independence from FlexRay Communication Controller(s) and the 
      FlexRay Transceiver(s) is assured by using the AUTOSAR SWS FlexRayDriver
      and AUTOSAR SWS FlexRayTransceiverDriver module as sole method to access
      FlexRay Communication Controller(s) / FlexRay Transceiver(s).
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall support pre-compile time, link-time and
      post-buildtime configuration.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.PostBuildOnly</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05284</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall implement link-time and post-build-time
      configuration data as read-only data structures.
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05285</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall immediately reference link-time configuration data
      by the implementation,
      </description>
      <comment>
      This requirement is informational only:
      This is merely an explanation not a requirement.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall implement the API functions specified by the FrIf
      SWS as real C code functions and shall not implement the API functions as
      macros.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module's implementation shall conform to the HIS subset of the
      MISRA C Standard, according to BSW007.
      </description>
      <comment>
    
      The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check): 
      http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx, Checks='MISRA'
    
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05092</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall support dynamic payload length for LPdus whose
      associated parameter FrIfAllowDynamicLSduLength (see FrIf06049) is set to
      true.
      </description>
      <comment>
      This requirement is not applicable:
      It was replaced by FrIf.ASR20-11.SWS_FrIf_05244.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05143</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      None of the FrIf module's header files shall define global variables.
      </description>
      <comment>
      This requirement is informational only.
      Coding Guideline - t.b.d.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05400</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Each variable that shall be accessible by AUTOSAR Debugging, shall be
      defined as global variable.
      </description>
      <comment>
      EB Debug and Trace will be supported instead.
      &lt;!--
      Linked to deviation dev.FrIf.DebugAndTrace
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.DebugAndTrace</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05401</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      All type definitions of variables which shall be debugged, shall be
      accessible by the header file ModuleName.h.
      </description>
      <comment>
      EB Debug and Trace will be supported instead.
      &lt;!--
      Linked to deviation dev.FrIf.DebugAndTrace
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.DebugAndTrace</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05402</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The declaration of variables in the header file shall be such, that it is
      possible to calculate the size of the variables by C-"sizeof".
      </description>
      <comment>
      EB Debug and Trace will be supported instead.
      &lt;!--
      Linked to deviation dev.FrIf.DebugAndTrace
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.DebugAndTrace</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05403</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Variables available for debugging shall be described in the respective
      Basic Software Module Description
      </description>
      <comment>
      EB Debug and Trace will be supported instead.
      &lt;!--
      Linked to deviation dev.FrIf.DebugAndTrace
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.DebugAndTrace</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05089</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall provide an XML file that contains the data which is
      required for the SW identification (it shall contain the vendor
      identification, module ID and software version information),
      configuration and integration process. This file should describe vendor
      specific configuration parameters as well as it should contain
      recommended configuration parameter values.
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05079</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The generated configuration data for the FrIf module shall be
      "humanreadable".
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05054</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall define the resources (e.g. a buffer in the FlexRay
      Communication Controller or FlexRay Driver) needed for data transmission
      (or reception, respectively) at system configuration time specifically
      for data transmission (or reception, respectively).
      </description>
      <comment>
      This requirement is not applicable:
      Requirement for configuration not implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall be capable of packing multiple PDUs into one
      FlexRay Frame.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05122</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall take the information on how to pack PDUs into
      FlexRay Frames from the so-called Frame Construction Plans. The rules
      defining how to pack PDUs into FlexRay Frames are defined at system
      configuration time
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05123</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The Frame Construction Plan shall be stored in the static configuration
      of the FrIf module (configuration parameter FrIfFrameStructure, see
      FrIf05370).
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If multiple PDUs are packed into a single FlexRay Frame and if the FrIf
      module recognizes the update of at least one of the contained PDUs, then
      the FrIf module shall transmit this FlexRay Frame.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05723</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In case the parameter 'FrIfUnusedBitValue' exists, all the unused bits
      within the Frame Construction Plan shall be set to the configured value
      'FrIfUnusedBitValue' while assembling the frame on sender side.
      </description>
      <comment>
      Actually all unused bits are filled.
      &lt;!--
      Linked to deviation dev.FrIf.TxPayloadPadding
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionAlwaysTransmit</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.TxPayloadPadding</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05725</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Unused bits of the Frame Construction Plan are the
      -) spaces within the Frame Construction Plan that are reserved for PDUs
      -) spaces within the Frame Construction Plan that are reserved for the
          Update bits
      </description>
      <comment>
      This requirement is not applicable:
      This is no requirement for FrIf.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      It shall be possible to configure (configuration parameter
      FrIfPduUpdateBitOffset, see FrIf06071) for each PDU a dedicated PDU
      update bits in the FlexRay Frame. The FrIf module shall identify the
      position of the PDU update bits for each PDU using the information stored
      in configuration parameter FrIfPduUpdateBitOffset
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf06071_Conf</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The receiving FrIf module shall evaluate the PDU Update-bit (if
      configured) to recognize the update of the PDU associated with this PDU
      update bits.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      This PDU update bits shall be located at an arbitrary bit position in the
      Frame Construction Plan that is not occupied by any PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05127</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The configuration of update bits for the PDUs and the definition of the
      location of the update bits within the FlexRay Frame are performed at
      system configuration time [Configuration Parameter
      FrIfPduUpdateBitOffset, see FrIf06071]
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If no update bit is configured for a specific PDU, the FrIf module shall
      assume this PDU to be always valid and the FrIf module shall always
      indicate its reception to the upper layer BSW module on the receiver
      side.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_DynSimple</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05724</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      On reception side, if the parameter 'FrIfUnusedBitValue' exists, after
      the FlexRay Driver has copied the L-SDU into the temporary buffer and
      before disassembling the L-SDU, the remaining bits in the temporary
      buffer according to the Frame Construction Plan shall be set to the value
      given by 'FrIfUnusedBitValue'. In case the parameter
      `FrIfAllowDynamicLSduLength' exists and is set to TRUE for the associated
      frame triggering for reception, PDUs in non-received areas (PDU offset
      &amp;gt; actual L-SDU length) shall not be indicated to upper layer(s).
      </description>
      <comment>
      Split requirement
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05724_1</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05724_2</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05724_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      On reception side, if the parameter 'FrIfUnusedBitValue' exists, after
      the FlexRay Driver has copied the L-SDU into the temporary buffer and
      before disassembling the L-SDU, the remaining bits in the temporary
      buffer according to the Frame Construction Plan shall be set to the value
      given by 'FrIfUnusedBitValue'.
      </description>
      <comment>
      On reception side, payload padding makes no sense, as only actually received payload is indicated.
      &lt;!--
      Linked to deviation dev.FrIf.NoRxPayloadPadding
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.NoRxPayloadPadding</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05724</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05724_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In case the parameter 'FrIfAllowDynamicLSduLength' exists and is set to
      TRUE for the associated frame triggering for reception, PDUs in
      non-received areas (PDU offset &amp;gt; actual L-SDU length) shall not be
      indicated to upper layer(s).
      </description>
      <comment>
      Only Pdus contained in actually received payload shall be indicated, no matter 
      what value FrIfAllowDynamicLSduLength is set to.
      See Eb requirement FrIf.EB.NotReceivedPdus
      &lt;!--
      Not linked to deviation!
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.EB.NotReceivedPdus</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05724</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If Transmission with Immediate Buffer Access is used, only one PDU is
      allowed per FlexRay Frame (L-SDU).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_Transmit</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In case the parameter 'FrIfAllowDynamicLSduLength' (see FrIf06049) is set
      to true for the associated frame triggering, the FrIf module passes the
      actual used L-PDU length to the driver (Fr_TransmitTxLPdu()), taking into
      account the following parameters for each PDU:
      -) the position of the PDU within the L-PDU
      -) the position of the update-bit information (if configured) If
          FrIfImmediate equals TRUE, the actual length of the respective PDU
          shall be as passed via FrIf_Transmit(). If FrIfImmediate equals
          FALSE, the actual length of the respective PDU shall be as passed via
          &amp;lt;UL_TriggerTransmit&amp;gt;()
      </description>
      <comment>
      Current implementation only supports a single L-PDU in a dynamic L-SDU.
      &lt;!--
      Linked to deviation dev.FrIf.AllowDynamicLSduLength
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.AllowDynamicLSduLength</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_AlwaysTransmitEmpty_DynSimple</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf shall only indicate PDUs in received areas (PDU offset &amp;lt;=
      actual L-PDU length) to upper layer(s).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_LastTwoPdusNotUpdated</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_LastPduNotUpdated</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_UpdatBitLast</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLengthNoTransmit</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05130</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall call all functions accessing the transmit and
      receive buffers (i.e. performing data transmission or reception,
      respectively) synchronously (i.e. synchronized to the FlexRay Global
      Time)
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation. This must be ensured by the
      integrator.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05131</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Definition: A FlexRay Job List is a list of (maybe different)
      Communication Jobs sorted according to their respective execution start
      time. Each Communication Job [Configuration Parameter FrIfJob, see
      FrIf05368] contains the following properties:
      -) Job start time by means of
          +) FlexRay Communication Cycle [Configuration Parameter FrIfCycle,
              see FrIf06064]
          +) Macrotick Offset within the Communication Cycle [Configuration
              Parameter FrIfMacrotick, see FrIf06065].
      -) A list of Communication Operations [Configuration Parameter
          FrIfCommunicationOperation, see FrIf05369] sorted according to a
          configurable Communication operation index [Configuration Parameter
          FrIfCommunicationOperationIdx, see FrIf06068]. The sorting order
          defines the order of execution of the Communication Operations within
          a FlexRay Communication Job.
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation. This must be ensured by the
      configuration.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05133</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall call the respective Cluster's FlexRay Job List
      Execution Function to execute each FlexRay Communication Job at the
      execution start time assigned to that Communication Job.
      </description>
      <comment>
      This requirement is informational only.
      The FlexRay Job List Execution Function is called out of the interrupt context
      of the associated Fr_AbsoluteTimer.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall process the actions determined by the Communication
      Operations assigned to each FlexRay Communication Job Each Communication
      Operation (see FrIf05369) contains the following properties:
      -) Communication Operation Index [Configuration Parameter
          FrIfCommunicationOperationIdx, see FrIf06068_Conf], which determines
          the execution order of the Communication Operations.
      -) Communication Action [Configuration Parameter
          FrIfCommunicationAction, see FrIf06067], which specifies the actual
          action to perform (see 7.6.3):
          +) DECOUPLED_TRANSMISSION
          +) TX_CONFIRMATION
          +) RECEIVE_AND_STORE
          +) RX_INDICATION
          +) RECEIVE_AND_INDICATE
          +) PREPARE_LPDU
      -) A reference to a frame triggering (L-PDU) which is associated with
          the Communication Action to perform [Configuration parameter
          FrIfLPduIdx, see FrIf06058].
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo1</srcid><srcstatus/><internalId>899</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo2</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30011</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_DynSimple</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo1_DynSimple</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitImmediate_NoTXConfirm</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The API names of the FlexRay Job List Execution Functions shall obey the
      following pattern:
      FrIf_JobListExec_0() for Cluster # 0 (FrIf_ClstIdx = 0)
      FrIf_JobListExec_1() for Cluster # 1 (FrIf_ClstIdx = 1)
      FrIf_JobListExec_2() for Cluster # 2 (FrIf_ClstIdx = 2)
      FrIf_JobListExec_3() for Cluster # 3 (FrIf_ClstIdx = 3)
      ... and so on, if more than 4 FlexRay Clusters are supported.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05137</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Job List Execution Function shall execute the Cluster's
      FlexRay Job List Jobs synchronously to the Cluster's global time (i.e. at
      well-defined points in time).
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation. This must be ensured by the
      integrator.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Upon invocation, the FlexRay Job List Execution Function shall perform
      the following steps:
      1.  Retrieve the FlexRay Global Time from the FlexRay CC  providing the Cluster’s
          absolute timer interrupt.
      2.  If the FlexRay Global Time cannot be retrieved or the global time delay compared
          to the jobs start time is larger than a maximum delay [Configuration Parameter
          FrIfMaxIsrDelay, see  FrIf06004], the execution of the  FlexRay Job List  is
          considered to be asynchronous to the FlexRay Global Time and thus the following
          actions are performed:
       •  Either set a flag (JobListAsyncFlag) indicating that the execution of the
          FlexRay Job List of this Cluster is asynchronous or directly resynchronize
          the Joblist as described in FrIf05120i
       •  If the JobListAsyncFlag was set, call the DET error FRIF_E_JLE_SYNC
       •  Disable absolute Timer Interrupt
       •  Terminate the execution of this FlexRay Job.
          Otherwise, the FlexRay Job List Execution Function continues with step 3.
      3.  Retrieve the ordered list of Communication Operations of the current Job pointed
          to by the current job-pointer.
      4.  Forward the current job-pointer to the next job-list entry. If the job-pointer was
          pointed at the end of the job-list, wrap around and set it to the first job-list entry.
      5.  Retrieve the execution start time of the job marked by the job-pointer and set the
          absolute timer to this job’s start time in order to invoke the FlexRay Job List
          Execution Function again.
      6.  Execute the retrieved Communication Operations.
      </description>
      <comment>
      FrIf joblist monitoring is done in FrIf_MainFunction instead of FrIf_JobListExec.
      &lt;!--
      Linked to deviation dev.FrIf.MonitorJobList
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.MonitorJobList</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FrIf module shall be capable of Transmit Request queuing by using the
      TrigTxCounter.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TransmitRequestQueuing_TxConf</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the related CC is in FrIf_State FRIF_STATE_ONLINE for a Communication
      Operation DECOUPLED_TRANSMISSION, then the Job List Execution Function
      shall execute this Communication Operation. Otherwise, the Job List
      Execution Function shall ignore this Communication Operation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05287</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      For a Communication Operation DECOUPLED_TRANSMISSION the Job List
      Execution Function shall perform the following steps:
      1.) Iterate over all PDUs contained in the FrIfFrameStructure (see
          FrIf05370) of the associated frame triggering of this Communication
          Operation and
          a.) Check whether TrigTxCounter is &amp;gt; 0 or FrIfNoneMode == true for
              the PDU. If not, clear the update-bit for this PDU [Configuration
              Parameter FrIfPduUpdateBitOffset, see FrIf06071] and proceed with
              the next PDU, otherwise continue with the following steps:
              i. Call the upper layer's function &amp;lt;UL&amp;gt;_TriggerTransmit()
                 with the associated PDUId (FrIf_TxPduId) and pass a pointer to
                 a temporary buffer within the FrIf that assembles the L-SDU.
                 The pointer shall consider the byte offset [Configuration
                 Parameter FrIfPduOffset, see FrIf06070]] of the PDU within the
                 frame.
              ii. Decrement TrigTxCounter only if TrigTxCounter &gt; 0. If the
                 value of TrigTxCounter = 0, do not decrement.
              iii. Remember that a transmission for this PDU is pending if a
                 transmission confirmation is needed for this PDU [Configuration
                 Parameter FrIfConfirm, see FrIf06075] increment TxConfCounter,
                 where the maximum value is limited by static configuration
                 [Configuration Parameter FrIfCounterLimit, see FrIf06076].
                 If the FrIfCounterLimit has been reached, the FrIfCounterLimit
                 value is kept and not incremented any more.
              iv. Set the update-bit if configured for this PDU [Configuration
                 Parameter FrIfPduUpdateBitOffset, see FrIf06071]. In case the
                 API &amp;lt;UL&amp;gt;_TriggerTransmit() does not return E_OK, or the
                 API FrIf_CancelTransmit() for the corresponding PDU has been
                 called, reset the update-bit to "not updated".
      2.) If at least one PDU was requested for transmission, or the FlexRay
          Driver's API service Fr_TransmitTxLPdu() shall always be called for
          this L-PDU [Configuration Parameter FrIfAlwaysTransmit, see
          FrIf06050_Conf] or FrIfNoneMode == true, the FlexRay Driver's API
          service Fr_TransmitTxLPdu() is called:
          a.) Fr_CtrlIdx is derived according to the indexing scheme descibed
              in 7.2
          b.) Fr_LPduIdx is set to the configured L-PDU index [Configuration
              Parameter FrIfLPduIdx, see FrIf06058] associated with the
              Communication Operation
          c.) Fr_LSduPtr is set to the temporary FrIf L-SDU assembling buffer.
          d.) Fr_LSduLength is set to the L-SDU length [Configuration Parameter
              FrIfLSduLength, see FrIf06054]
      3.) In case the Driver's API Fr_TransmitTxLPdu() returned E_NOT_OK
          (indicating that the transmission failed) changes on TrigTxCounter
          and TxConfCounter must be rolled back (see 4. and 5.) for each PDU
          contained in the FlexRay LSDU.
      </description>
      <comment>
      Note: requirement does not specify if TrigTxCounter and TxConfCounter
      should be rolled back if &amp;lt;UL&amp;gt;_TriggerTransmit() does not return E_OK.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05287_1a3_EB</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_AlwaysTransmitEmpty_DynSimple</srcid><srcstatus/><internalId>922</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitFailures</srcid><srcstatus/><internalId>1001</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitNoneMode</srcid><srcstatus/><internalId>1004</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitAlways</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the related CC is in FrIf_State FRIF_STATE_ONLINE for a Communication
      Operation TX_CONFIRMATION, then the Job List Execution Function shall
      execute this Communication Operation. Otherwise, the Job List Execution
      Function shall ignore this Communication Operation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitImmediate_NoTXConfirm</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05288</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      "For a Communication Operation TX_CONFIRMATION the Job List Execution
      Function shall perform the following steps:
      1.) Call the FlexRay Driver's API function Fr_CheckTxLPduStatus():
          a.) Fr_CtrlIdx is derived according to the indexing scheme descibed
              in 7.2
          b.) Fr_LPduIdx is set to the configured L-PDU buffer index
              [Configuration Parameter FrIfLPduIdx, see FrIf06058] associated
              with the Communication Operation.
      2.) If the transmission was performed (Output parameter
          *Fr_TxLPduStatusPtr is successfully set to FR_TRANSMITTED) then
          iterate over all PDUs contained in the FrIfFrameStructure (see
          FrIf05370) of the associated frame triggering. If TxConfCounter for a
          PDU is 0 proceed with the next PDU, otherwise
          a.) If FrIfConfirm == true, call the upper layer's function
              &lt;UL_TxConfirmation()&gt; with the asociated PDUId (FrIf_TxPduId).
          b.) If FrIfConfirm == true ,decrement TxConfCounter.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitImmediate_NoTXConfirm</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05289</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the related CC is in FrIf_State FRIF_STATE_ONLINE for a Communication
      Operation RECEIVE_AND_STORE, then the Job List Execution Function shall
      execute this Communication Operation. Otherwise, the Job List Execution
      Function shall ignore this Communication Operation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05290</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      For a Communication Operation RECEIVE_AND_STORE the Job List Execution
      Function shall perform the following steps:
      1.) Call the FlexRay Driver's API function Fr_ReceiveRxLPdu():
          a.) Fr_CtrlIdx is derived according to the indexing scheme descibed
              in 7.2
          b.) Fr_LPduIdx is set to the configured L-PDU index [Configuration
              Parameter FrIfLPduIdx, see FrIf06058] associated with the
              Communication Operation.
          c.) Fr_LSduPtr is set to a temporary buffer.
      2.) If a L-PDU was received (Output parameter *Fr_LPduStatusPtr is set
          to FR_RECEIVED) iterate over all PDUs contained in the
          FrIfFrameStructure (see FrIf05370) of the associated frame triggering
          and:
          a.) If an update bit was configured for the PDU [Configuration
              Parameter FrIfPduUpdateBitOffset, see FrIf06071] and the update
              bit for the PDU is not set, continue with the next PDU.
              Otherwise,
          b.) Copy the PDU Payload from the temporary buffer considering the
              PDU offset within the L-SDU [Configuration Parameter
              FrIfPduOffset, see FrIf06070] into a FrIf PDU-related static
              buffer.
          c.) Store the actual received PDU length
          d.) Mark the PDU-related static buffer as up-to-date.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the related CC is in FrIf_State FRIF_STATE_ONLINE for a Communication
      Operation RX_INDICATION, then the Job List Execution Function shall
      execute this Communication Operation. Otherwise, the Job List Execution
      Function shall ignore this Communication Operation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05291</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      For a Communication Operation RX_INDICATION the Job List Execution
      Function shall perform the following steps:
      1.) Iterate over all PDU-related static buffers of PDUs contained in
          the FrIfFrameStructure (see FrIf05370) of the associated frame
          triggering
      2.) If the PDU-related static buffer is marked as outdated, continue
          with the next PDU. Otherwise if the buffer is marked up-to-date,
          a.) Call the upper layer's function &amp;lt;UL&amp;gt;_RxIndication() with
              the PDU Id the receiving module expects and FrIf_PduInfoPtr which
              contains the received data address and received data length.
          b.) Mark the PDU-related static buffer as outdated.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05292</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the related CC is in FrIf_State FRIF_STATE_ONLINE for a
      Communication Operation RECEIVE_AND_INDICATE, then the Job List Execution
      Function shall execute this Communication Operation. Otherwise, the Job List
      Execution Function shall ignore this Communication Operation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05293</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      For a Communication Operation RECEIVE_AND_INDICATE the Job List Execution
      Function shall perform the following steps:
      1.) Calculate values for input parameters:
          a.) Fr_CtrlIdx is derived according to the indexing scheme descibed
              in 7.2
          b.) Fr_LPduIdx is set to the configured L-PDU index [Configuration
              Parameter FrIfLPduIdx, see FrIf06058] associated with the
              Communication Operation.
          c.) Fr_LSduPtr is set to a temporary buffer.
      2.) Initialize ComOpLoopCounter to 0.
      3.) As long as ComOpLoopCounter &amp;lt; FrIfRxComOpMaxLoop do
          a.) Call Fr_ReceiveRxLPdu with the parameters calculated in 1)
          b.) If *Fr_LPduStatusPtr != FR_NOT_RECEIVED then continue at 3)c),
              otherwise the communication operation has finished.
          c.) For each Pdu contained in the FrIfFrameStructure (see FrIf05370)
              of the associated frame triggering do
              -) If an update bit was configured for the PDU [Configuration
                  Parameter  FrIfPduUpdateBitOffset, see FrIf06071] and the
                  update bit for the PDU is not set, continue with the next PDU.
                  Otherwise
              -) Call the upper layer's function &amp;lt;UL&amp;gt;_RxIndication() with
                  the PDU Id the receiving module expects and a pointer to the
                  Pdu-Info structure containing the Pdu length and a reference
                  to the temporary buffer considering the PDU offset within the
                  L-SDU [Configuration Parameter FrIfPduOffset, see FrIf06070]]
                  as parameters.
          d.) if *Fr_LPduStatusPtr == FR_RECEIVED_MORE_DATA_AVAILABLE then
              increment ComOpLoopCounter and restart at 3.)a.), otherwise the
              communication operation has finished.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo1</srcid><srcstatus/><internalId>899</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo2</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_DynSimple</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo1_DynSimple</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05294</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The Communication Operation PREPARE_LPDU performs the following steps:
      1.) Call the FlexRay Driver's API function Fr_PrepareLPdu():
          a.) Fr_CtrlIdx is derived according to the indexing scheme descibed
              in 7.2
          b.) Fr_LPduIdx is set to the configured L-PDU index [Configuration
              Parameter FrIfLPduIdx, see FrIf06058] associated with the
              Communication Operation.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30011</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05061</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The Communication Operation PREPARE_LPDU enables hardware optimization
      purposes. Its purpose is to enable certain FlexRay CC hardware resources
      (e.g. a CC's message buffer) to be prepared (configured) for the
      transmission/reception of a certain L-PDU.
      </description>
      <comment>
      This requirement is informational only.
      Not relevant for implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05295</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface shall perform a PDU transmission with immediate
      buffer access (see 9.1), only if the following restriction regarding
      static configuration apply:
      -) The PDU must be the only PDU in a FlexRay Frame (L-SDU). It is not
          packed into a FlexRay Frame together with other PDUs (i.e., the
          mapping between this PDU and the respective L-SDU is a 1:1
          association).
      -) The PDU must be located at the beginning of the L-SDU.
      -) There is no update-bit for immediate PDUs configured.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05295_1</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05295_2</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05295_3</srcid><srcstatus/><internalId>115</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05295_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface shall only perform a PDU transmission with immediate
      buffer access (see 9.1), if the PDU is the only PDU in the
      FlexRay Frame (L-SDU). It is not packed into the FlexRay Frame together
      with other PDUs (i.e., the mapping between this PDU and the respective
      L-SDU is a 1:1 association).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05295_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface shall perform a PDU transmission with immediate
      buffer access (see 9.1), only if the PDU is located at the beginning of the L-SDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05295_3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Interface shall perform a PDU transmission with immediate
      buffer access (see 9.1), only if there is no update-bit for immediate PDUs configured.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05295a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The FlexRay Job List Execution Function does not initiate transmission
      with immediate buffer access. Instead, the actions described here are
      carried out in the context of the FrIf_Transmit() API service, which in
      turn is called by an upper layer BSW module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TransmitImmediateFailure</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitImmediateSuccess</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05296</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If an upper layer module calls  FrIf_Transmit() with FrIf_TxPduId being
      configured for an immediate PDU, the AUTOSAR module FlexRay Interface shall
      perform the following steps for an immediate PDU transmission within the context of
      the FrIf_Transmit() API service Driver’s API function Fr_TransmitTxLPdu():
      1.  Fr_CtrlIdx is derived according to the indexing scheme descibed in 7.2
      2.  Fr_LPduIdx is set to the configured L-PDU index [Configuration
          Parameter  FrIfLPduIdx,  see  FrIf06058]  associated with the
          FrIf_TxPduId.
      3.  Fr_LSduPtr is set to the Pdu Payload pointer contained in the
          PduInfoPtr passed as parameter to FrIf_Transmit.
      4.  If the parameter FrIfAllowDynamicLSduLength=FALSE, Fr_LSduLength
          is  set to the L-SDU length [Configuration Parameter  FrIfLSduLength,
          see FrIf06054]
      5.  If the parameter FrIfAllowDynamicLSduLength=TRUE, the actual length
          of the respective PDU shall be as passed via FrIf_Transmit().
          In case the Driver’s API Fr_TransmitTxLPdu() returned E_OK (indicating that the
          transmission request succeeded) the  TxConfCounter  is incremented for the
          respective PDU.  The maximum value of  TxConfCounter  is limited by static
          configuration [Configuration Parameter FrIfCounterLimit, see FrIf06076]).
          In case the Driver’s API Fr_TransmitTxLPdu() returned E_NOT_OK do not modify
          the current counter value  of TxConfCounter.
      </description>
      <comment>
      Current implementation only supports a dynamic LSdu length for immediate PDUs.
      &lt;!--
      Linked to deviation dev.FrIf.ImmediatePdusDynamicLSduLengthFalse
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TransmitImmediateFailure</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitImmediateSuccess</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.ImmediatePdusDynamicLSduLengthFalse</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05139</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Values for production code Event Ids are assigned externally by the
      configuration of the DEM. They are published in the file Dem_IntErrId.h
      and included via Dem.h.
      </description>
      <comment>
      This requirement is not applicable:
      This is no requirement for FrIf.
      FrIf is responsible for the generation of production code event ids.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The error values and EventIds of the FrIf module shall be named in
      capital letters according to the scheme FRIF_E_&amp;lt;NAME&amp;gt;, where NAME
      describes the error/EventId and may consist of several words separated by
      underscores.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05145</srcid><srcstatus/><internalId>120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Development error values are of type uint8.
      Invalid pointer            Development  FRIF_E_INV_POINTER      0x01
      Invalid Controller index   Development  FRIF_E_INV_CTRL_IDX     0x02
      Invalid Cluster index      Development  FRIF_E_INV_CLST_IDX     0x03
      Invalid Channel index      Development  FRIF_E_INV_CHNL_IDX     0x04
      Invalid timer index        Development  FRIF_E_INV_TIMER_IDX    0x05
      Invalid FrIf_TxPdu Index   Development  FRIF_E_INV_TXPDUID      0x06
      Invalid LPdu Index         Development  FRIF_E_INV_LPDU_IDX     0x07
      FrIf not initialized       Development  FRIF_E_NOT_INITIALIZED  0x08
      Job List Execution lost
      synchronization to the
      FlexRay Global Time        Development  FRIF_E_JLE_SYNC         0x09
      error detection in NIT on
      channel A                  Production   FRIF_E_NIT_CH_A    Assigned by DEM
      error detection in NIT on
      channel B                  Production   FRIF_E_NIT_CH_B    Assigned by DEM
      error detection in SW on
      channel A                  Production   FRIF_E_SW_CH_A     Assigned by DEM
      error detection in SW on
      channel B                  Production   FRIF_E_SW_CH_B     Assigned by DEM
      error detection in ACS
      on channel A               Production   FRIF_E_ACS_CH_A    Assigned by DEM
      error detection in ACS
      on channel B               Production   FRIF_E_ACS_CH_B    Assigned by DEM
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05120c</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05120d</srcid><srcstatus/><internalId>54</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05120e</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05120f</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05120g</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05120h</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05120i</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05138</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05298</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05155</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05158</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05234</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05246</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05258</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05161</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05164</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05167</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05171</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05172</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05175</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05500</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05180</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05190</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05194</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05200</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05203</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05191</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05205</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05206</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05207a</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05210</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05211</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05214</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05215</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05218</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05219</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05230</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05231</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05240</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05252</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05264</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05237</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05706</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05707</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05708</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05709</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05711</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05712</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05715</srcid><srcstatus/><internalId>252</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05716</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05721</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05722</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05700</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05701</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05717</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05714</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05718</srcid><srcstatus/><internalId>273</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05719</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05720</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05302</srcid><srcstatus/><internalId>279</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05304</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05307</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05303</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05243</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05309</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05197</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05151</srcid><srcstatus/><internalId>303</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05315</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05274</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05275</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The detection of development errors is configurable (ON / OFF) at
      precompile time. The switch FRIF_DEV_ERROR_DETECT (see chapter 10) shall
      activate or deactivate the detection of all development errors.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ControllerInit</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StartCommunication</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AbortCommunication</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetState</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendWUP</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_Transmit</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllowColdstart</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_JobListExec_0</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncState</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetExtSync</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the FRIF_DEV_ERROR_DETECT switch is enabled, API parameter checking is
      enabled. The detailed description of the detected errors can be found in
      chapter 7.7 and chapter 8.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ControllerInit</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StartCommunication</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AbortCommunication</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetState</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendWUP</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_Transmit</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllowColdstart</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_JobListExec_0</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncState</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetExtSync</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05297</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The detection of production code errors cannot be switched off.
      </description>
      <comment>
      This requirement is not applicable:
      Conflicts with EB requirement [BSWM_EB_002].
      See:
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/
             Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05298</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If the FRIF_DEV_ERROR_DETECT switch is set to ON, all FrIf module API
      services other than FrIf_Init() and FrIf_GetVersionInfo() shall:
      -) not execute their normal operation,
      -) report to the DET module (using FRIF_E_NOT_INITIALIZED),
      -) and return E_NOT_OK, unless the FrIf module has been initialized
          with a preceding call of FrIf_Init().
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ControllerInit</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StartCommunication</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AbortCommunication</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetState</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendWUP</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_Transmit</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllowColdstart</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_JobListExec_0</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncState</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetExtSync</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05299</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Detected development errors shall be reported to the Det_ReportError()
      service of the Development Error Tracer (DET) if the pre-processor switch
      FRIF_DEV_ERROR_DETECT is set to ON (see chapter 10).
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05300</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Production errors shall be reported to the Diagnostic Event Manager.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05066</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05145</srcid><srcstatus/><internalId>120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05301_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
       The FlexRay Interface SWS module shall perform Inter Module Checks to avoid integration
       of incompatible files. The imported included files shall be checked by preprocessing
       directives.
       The following version numbers shall be verified:
       - &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MAJOR_VERSION
       - &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MINOR_VERSION,
       Where &amp;lt;MODULENAME&amp;gt; is the module short name of the other (external) modules
       which provide header files included by the FlexRay Interface SWS module
      </description>
      <comment>
      The coding guideline BSWM_CHK_401 explicitly rejects inter module checks.
      &lt;!--
      Linked to deviation dev.FrIf.ConsChck
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.ConsChck</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05083</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      All API functions or global variables, whether they are specified or not
      shall follow the naming scheme FrIf_&amp;lt;name&amp;gt;, where the first letter
      of each word in &amp;lt;name&amp;gt; is written uppercase and the remainder of
      the word lowercase.
      </description>
      <comment>
      This requirement is informational only.
      Coding Guideline - t.b.d.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05082</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      All types whether they are specified or implementation dependant shall
      follow the naming scheme FrIf_&amp;lt;name&amp;gt;Type, where the first letter of
      each word in &amp;lt;name&amp;gt; is written uppercase and the remainder of the
      word is written lowercase.
      </description>
      <comment>
      This requirement is informational only.
      Coding Guideline - t.b.d.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_Init
      Syntax: void FrIf_Init( const FrIf_ConfigType* FrIf_ConfigPtr )
      Service ID[hex]: 0x02
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): FrIf_ConfigPtr Base pointer to the configuration
        structure of the FlexRay Interface.
      Parameters (inout): None
      Parameters (out): None
      Return value: void
      Description: Initializes the FlexRay Interface.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_Init</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting_SingleCluster</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ConfigPtr of FrIf_Init equals NULL_PTR and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_Init shall report development error code
      FRIF_E_INV_POINTER to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_Init</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting_SingleCluster</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_Init shall carry out the following actions:
      1.) Configure the FlexRay Interface module: initialize the local memory
          space used to store the PDU data and the PDU properties and state
          variables and the FlexRay Interface State Machine.
      2.) The initialization of the memory space has to make sure that the
          PDU-related static buffer status is set to "outdated"
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_InitReset</srcid><srcstatus/><internalId>1000</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_ControllerInit
      Syntax: Std_ReturnType FrIf_ControllerInit( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x03
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Initialized a FlexRay CC.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ControllerInit</srcid><srcstatus/><internalId>924</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_ControllerInit</srcid><srcstatus/><internalId>958</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1089</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1204</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ControllerInit</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_ControllerInit has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_ControllerInit shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_ControllerInit</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_ControllerInit shall wrap the FlexRay Driver API
      function Fr_ControllerInit() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Calling Fr_ControllerInit() of the determined FlexRay Driver module
          with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ControllerInit</srcid><srcstatus/><internalId>924</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_ControllerInit: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ControllerInit</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_SetAbsoluteTimer
      Syntax: Std_ReturnType FrIf_SetAbsoluteTimer( uint8 FrIf_CtrlIdx, uint8
        FrIf_AbsTimerIdx, uint8 FrIf_Cycle, uint16 FrIf_Offset )
      Service ID[hex]: 0x19
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_AbsTimerIdx Index of the absolute timer to address. FrIf_Cycle
        FlexRay Cycle number to be set. FrIf_Offset Number of Macroticks to be
        set.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_SetAbsoluteTimer().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>932</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_SetAbsoluteTimer has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_SetAbsoluteTimer shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05235</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_SetAbsoluteTimer shall wrap This API service of the
      FlexRay Interface wraps the FlexRay Driver API function
      Fr_SetAbsoluteTimer() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Setting parameters
      3.) Fr_AbsTimerIdx to FrIf_AbsTimerIdx
      4.) Fr_Cycle to FrIf_Cycle
      5.) Fr_Offset to FrIf_Offset
      6.) Calling Fr_SetAbsoluteTimer() of the determined FlexRay Driver
          module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>932</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_SetAbsoluteTimer: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_EnableAbsoluteTimerIRQ
      Syntax: Std_ReturnType FrIf_EnableAbsoluteTimerIRQ( uint8 FrIf_CtrlIdx,
        uint8 FrIf_AbsTimerIdx )
      Service ID[hex]: 0x1d
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_AbsTimerIdx Index of the absolute timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_EnableAbsoluteTimerIRQ().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1236</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_EnableAbsoluteTimerIRQ has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_EnableAbsoluteTimerIRQ shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05247</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_EnableAbsoluteTimerIRQ shall wrap the FlexRay Driver
      API function Fr_EnableAbsoluteTimerIRQ() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver-specific
          CC index Fr_CtrlIdx).
      2.) Setting parameters
          -) Fr_AbsTimerIdx to FrIf_AbsTimerIdx
      3.) Calling Fr_EnableAbsoluteTimerIRQ() of the determined FlexRay
          Driver module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05248</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_EnableAbsoluteTimerIRQ: The FlexRay Interface module has
      to be initialized with a call of FrIf_Init() before this API service may
      be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_AckAbsoluteTimerIRQ
      Syntax: Std_ReturnType FrIf_AckAbsoluteTimerIRQ( uint8 FrIf_CtrlIdx, uint8
        FrIf_AbsTimerIdx )
      Service ID[hex]: 0x21
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_AbsTimerIdx Index of the absolute timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_AckAbsoluteTimerIRQ()
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_AckAbsoluteTimerIRQ has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_AckAbsoluteTimerIRQ
      shall report development error code FRIF_E_INV_CTRL_IDX to the
      Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>873</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05259</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_AckAbsoluteTimerIRQ shall wrap the FlexRay Driver API
      function Fr_AckAbsoluteTimerIRQ() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver-specific
          CC index Fr_CtrlIdx).
      2.) Setting parameters - Fr_AbsTimerIdx to FrIf_AbsTimerIdx
      3.) Calling Fr_AckAbsoluteTimerIRQ() of the determined FlexRay Driver
          module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05260</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_AckAbsoluteTimerIRQ: The FlexRay Interface module has to
      be initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_StartCommunication
      Syntax: Std_ReturnType FrIf_StartCommunication( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x04
      Sync/Async: Asynchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_StartCommunication().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_StartCommunication</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_StartCommunication</srcid><srcstatus/><internalId>959</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1206</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StartCommunication</srcid><srcstatus/><internalId>1207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_StartCommunication has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_StartCommunication shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_StartCommunication</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_StartCommunication shall wrap the FlexRay Driver API
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Calling Fr_StartCommunication() of the determined FlexRay Driver
          module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_StartCommunication</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_StartCommunication: The FlexRay Interface module has to
      be initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StartCommunication</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_HaltCommunication
      Syntax: Std_ReturnType FrIf_HaltCommunication( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x05
      Sync/Async: Asynchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_HaltCommunication().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_HaltCommunication</srcid><srcstatus/><internalId>926</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_HaltCommunication</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1092</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1093</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_HaltCommunication has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_HaltCommunication shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_HaltCommunication</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_HaltCommunication shall wrap the FlexRay Driver API
      function Fr_HaltCommunication() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Calling Fr_HaltCommunication() of the determined FlexRay Driver
          module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_HaltCommunication</srcid><srcstatus/><internalId>926</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_HaltCommunication: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_AbortCommunication
      Syntax: Std_ReturnType FrIf_AbortCommunication( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x06
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_AbortCommunication().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AbortCommunication</srcid><srcstatus/><internalId>927</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_AbortCommunication</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1094</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1095</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1210</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_AbortCommunication has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_AbortCommunication shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AbortCommunication</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_AbortCommunication shall wrap the FlexRay Driver API
      function Fr_AbortCommunication() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Calling Fr_AbortCommunication() of the determined FlexRay Driver
          module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AbortCommunication</srcid><srcstatus/><internalId>927</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_AbortCommunication: The FlexRay Interface module has to
      be initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AbortCommunication</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetState
      Syntax: Std_ReturnType FrIf_GetState( uint8 FrIf_ClstIdx, FrIf_StateType*
        FrIf_StatePtr )
      Service ID[hex]: 0x07
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_ClstIdx Index of the cluster addressed.
      Parameters (inout): None FrIf_StatePtr Pointer to a memory location where
        the retrieved FrIfState will be
      Parameters (out): stored
      Return value: Std_ReturnType E_OK: Function was successfully executed.
        State transition request was accepted. E_NOT_OK: Function execution
        failed due to detected errors. State transition request was not
        accepted.
      Description: Get current FrIf state.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_GetState</srcid><srcstatus/><internalId>1190</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_GetState</srcid><srcstatus/><internalId>1191</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_GetState</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_GetState</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ClstIdx of FrIf_GetState has an invalid value and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_GetState shall report development error code
      FRIF_E_INV_CLST_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CLST_FrIf_GetState</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_GetState</srcid><srcstatus/><internalId>1191</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_GetState</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_StatePtr of FrIf_GetState equals NULL_PTR and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_GetState shall report development error code
      FRIF_E_INV_POINTER to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_GetState</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetState: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetState</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_SetState
      Syntax: Std_ReturnType FrIf_SetState( uint8 FrIf_ClstIdx,
        FrIf_StateTransitionType FrIf_StateTransition )
      Service ID[hex]: 0x08
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in):FrIf_ClstIdx Index of the cluster addressed.
        FrIf_StateTransition Requested FrIf state transition.
      Parameters None (inout):
      Parameters (out): None
      Return value: Std_ReturnType E_OK: Function was successfully executed.
        State transition request was accepted. E_NOT_OK: Function execution
        failed due to detected errors. State transition request was not
        accepted.
      Description: Requests FrIf state machine transition.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_SetState</srcid><srcstatus/><internalId>1188</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_SetState</srcid><srcstatus/><internalId>1189</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_SetState</srcid><srcstatus/><internalId>1298</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_SetState</srcid><srcstatus/><internalId>1299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ClstIdx of FrIf_SetState has an invalid value and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_SetState shall report development error code
      FRIF_E_INV_CLST_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CLST_FrIf_SetState</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_SetState</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_SetState: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetState</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_SetWakeupChannel
      Syntax: Std_ReturnType FrIf_SetWakeupChannel( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx )
      Service ID[hex]: 0x09
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ChnlIdx Index of the FlexRay Channel to address in scope of the
        FlexRay controller FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_SetWakeupChannel().
        The enum value "FR_CHANNEL_AB" shall not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>928</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1096</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1097</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1212</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05500</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_SetWakeupChannel has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_SetWakeupChannel shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1097</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05177</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_SetWakeupChannel has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_SetWakeupChannel shall report development
      error code FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <comment>
      This requirement is not applicable:
      FrIf_ChnlIdx shall be checked in Fr_SetWakeupChannel.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_SetWakeupChannel shall wrap the FlexRay Driver API
      function Fr_SetWakeupChannel() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Setting parameters Fr_ChnlIdx to FrIf_ChnlIdx
      3.) Calling Fr_SetWakeupChannel() of the determined FlexRay Driver
          module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>928</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1096</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_SetWakeupChannel: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_SendWUP
      Syntax: Std_ReturnType FrIf_SendWUP( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x0a
      Sync/Async: Asynchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_SendWUP().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SendWUP</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SendWUP</srcid><srcstatus/><internalId>963</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1098</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1099</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1214</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendWUP</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_SendWUP has an invalid value and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_SendWUP shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SendWUP</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_SendWUP shall wrap the FlexRay Driver API function
      Fr_SendWUP() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver-specific
          CC index Fr_CtrlIdx).
      2.) Calling Fr_SendWUP() of the determined FlexRay Driver module with
          the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SendWUP</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_SendWUP: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendWUP</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetPOCStatus
      Syntax: Std_ReturnType FrIf_GetPOCStatus( uint8 FrIf_CtrlIdx,
        Fr_POCStatusType* FrIf_POCStatusPtr )
      Service ID[hex]: 0x0d
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): FrIf_POCStatusPtr Pointer to a memory location where
        output value will be stored.
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_GetPOCStatus().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>930</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>964</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetPOCStatus has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_GetPOCStatus shall report development error
      code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetPOCStatus shall wrap the FlexRay Driver API function
      Fr_GetPOCStatus() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Setting parameters Fr_POCStatusPtr to FrIf_POCStatusPtr
      3.) Calling Fr_GetPOCStatus() of the determined FlexRay Driver module
          with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>930</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1104</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05193</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetPOCStatus: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetGlobalTime
      Syntax: Std_ReturnType FrIf_GetGlobalTime( uint8 FrIf_CtrlIdx, uint8*
        FrIf_CyclePtr, uint16* FrIf_MacroTickPtr )
      Service ID[hex]: 0x0e
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None FrIf_CyclePtr Pointer to a memory location where
        output value will be stored.
      Parameters (out): FrIf_MacroTickPtr Pointer to a memory location where
        output value will be stored.
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_GetGlobalTime().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>931</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1107</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05194</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetGlobalTime has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_GetGlobalTime shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetGlobalTime shall wrap the FlexRay Driver API
      function Fr_GetGlobalTime() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Setting parameters
      3.) Fr_CylcePtr to FrIf_CyclePtr
          -) Fr_MacroTickPtr to FrIf_MacroTickPtr
      4.) Calling Fr_GetGlobalTime() of the determined FlexRay Driver module
          with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>931</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1106</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetGlobalTime: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_AllowColdstart
      Syntax: Std_ReturnType FrIf_AllowColdstart( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x10
      Sync/Async: Asynchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_AllowColdstart().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AllowColdstart</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_AllowColdstart</srcid><srcstatus/><internalId>974</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_AllowColdstart has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_AllowColdstart shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AllowColdstart</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_AllowColdstart shall wrap the FlexRay Driver API
      function Fr_AllowColdstart() by:
      1.) Translating (based on static FrIf module configuration) the FlexRay
          CC index FrIf_CtrlIdx into a tuple (FlexRay Driver | Driver specific
          CC index Fr_CtrlIdx).
      2.) Calling Fr_AllowColdstart() of the determined FlexRay Driver module
          with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AllowColdstart</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats: The FlexRay Interface module has to be initialized with a call
      of FrIf_Init() before this API service may be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllowColdstart</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetMacroticksPerCycle
      Syntax: uint16 FrIf_GetMacroticksPerCycle( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x11
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: uint16 Number of Macroticks per Cycle
      Description: Retrieves the amount of Macroticks per Cycle
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetMacroticksPerCycle has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_GetMacroticksPerCycle
      shall report development error code FRIF_E_INV_CTRL_IDX to the
      Det_ReportError service of the DET module. This API service of the
      FlexRay Interface retrieves the number of Macroticks per FlexRay Cycle of
      the FlexRay Cluster with index FrIf_CtrlIdx out of the static
      configuration.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1109</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetMacroticksPerCycle: The FlexRay Interface module has
      to be initialized with a call of FrIf_Init() before this API service may
      be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetMacrotickDuration
      Syntax: uint16 FrIf_GetMacrotickDuration( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x31
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: uint16 Duration of one Macrotick in ns
      Description: Retrieves the Duration of a Macrotick in ns
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30003</srcid><srcstatus/><internalId>957</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1111</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetMacrotickDuration: has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_GetMacrotickDuration:
      shall report development error code FRIF_E_INV_CTRL_IDX to the
      Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05301</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetMacrotickDuration: The FlexRay Interface module has to
      be initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_Transmit
      Syntax: Std_ReturnType FrIf_Transmit( PduIdType FrIf_TxPduId, const PduInfoType * FrIf_PduInfoPtr )
      Service ID[hex]: 0x12
      Sync/Async: Synchronous
      Reentrancy:
        non reentrant for identical values of FrIf_TxPduId
        reentrant for different values of FrIf_TxPduId
      Parameters (in): FrIf_TxPduId ID of FlexRay PDU to be transmitted. FrIf_PduInfoPtr Pointer to a
                        structure with FlexRay PDU related data.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: No error has occurred during the execution of this API service.
        E_NOT_OK: An error occurred during execution of this API service:
          - FlexRay Driver reported an error in case of immediate transmission
          - An error has been detected in development mode
      Description: Requests the sending of a PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_LastTwoPdusNotUpdated</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_LastPduNotUpdated</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_UpdatBitLast</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionNoneMode</srcid><srcstatus/><internalId>913</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_Transmit</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_TxPduId of FrIf_Transmit has an invalid value and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_Transmit shall report development error code
      FRIF_E_INV_TXPDUID to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_TXPDUID_FrIf_Transmit</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_PduInfoPtr of FrIf_Transmit equals NULL_PTR and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_Transmit shall report development error code
      FRIF_E_INV_POINTER to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_TXPDUID_FrIf_Transmit</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If SduDataPtr in parameter FrIf_PduInfoPtr of FrIf_Transmit equals
      NULL_PTR and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_Transmit shall report
      development error code FRIF_E_INV_POINTER to the Det_ReportError service of
      the DET module.
      </description>
      <comment>
      This requirement is not applicable:
      There is no need for a valid SduDataPtr for decoupled transmissions.
      The SduDataPtr is only checked for immediate transmissions.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05207a</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR40.FrIf05207b</srcid><srcstatus/><internalId>200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05207a</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If SduDataPtr in parameter FrIf_PduInfoPtr of FrIf_Transmit 
      (in case of an immediate transmit) equals
      NULL_PTR and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_Transmit shall report
      development error code FRIF_E_INV_POINTER to the Det_ReportError service of
      the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_TXPDUID_FrIf_Transmit</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05207b</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If SduDataPtr in parameter FrIf_PduInfoPtr of FrIf_Transmit 
      (in case of a decoupled transmit) equals
      NULL_PTR and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_Transmit shall report
      development error code FRIF_E_INV_POINTER to the Det_ReportError service of
      the DET module.
      </description>
      <comment>
      This requirement is not applicable:
      There is no need for a valid SduDataPtr for decoupled transmissions.
      The SduDataPtr is only checked for immediate transmissions.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      In case of immediate transmission the function FrIf_Transmit shall pass
      the PDU (single PDU, no Update bit) to the underlying FlexRay Driver module
      immediately for transmission.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_Transmit</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_Transmit: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be called,
      see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_Transmit</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_SetTransceiverMode
      Syntax: Std_ReturnType FrIf_SetTransceiverMode(uint8 FrIf_CtrlIdx, Fr_ChannelType
        FrIf_ChnlIdx, FrTrcv_TrcvModeType FrIf_TrcvMode)
      Service ID[hex]: 0x13
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in):
        FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ChnlIdx Index of the FlexRay Channel to address in scope of the FlexRay controller
          FrIf_CtrlIdx.
        FrIf_TrcvMode Transceiver mode to be set.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Transceiver Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Transceiver Driver's API service has returned E_NOT_OK.
      Description:
        Wraps the FlexRay Transceiver Driver API function FrTrcv_SetTransceiverMode().
        The enum value "FR_CHANNEL_AB" shall not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_TransceiverMode</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>975</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_SetTransceiverMode has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_SetTransceiverMode shall report development error
      code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1141</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05211</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_SetTransceiverMode has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_SetTransceiverMode
      shall report development error code FRIF_E_INV_CHNL_IDX to the Det_ReportError
      service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1142</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_SetTransceiverMode shall wrap the FlexRay
      Transceiver Driver API function FrTrcv_SetTransceiverMode() by:
      1. Translating (based on static FrIf module configuration) the tuple (FlexRay CC
        index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx) into a tuple (FlexRay
        Transceiver Driver | Driver-specific Transceiver index FrTrcv_TrcvIdx).
      2. Setting parameters
        - FrTrcv_TrcvMode to FrIf_TrcvMode
      3. Calling FrTrcv_SetTransceiverMode() of the determined FlexRay Driver module
        with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_TransceiverMode</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05213</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_SetTransceiverMode: The FlexRay Interface module has
      to be initialized with a call of FrIf_Init() before this API service may be called, see
      FrIf05002.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetTransceiverMode
      Syntax: Std_ReturnType FrIf_GetTransceiverMode(uint8 FrIf_CtrlIdx, Fr_ChannelType
        FrIf_ChnlIdx, FrTrcv_TrcvModeType* FrIf_TrcvModePtr)
      Service ID[hex]: 0x14
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in):
        FrIf_ChnlIdx  Index of the FlexRay Channel to address in scope of the FlexRay controller
                      FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out): FrIf_TrcvModePtr Pointer to a memory location where output value will be
        stored.
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Transceiver Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Transceiver Driver's API service has returned E_NOT_OK.
      Description: Wraps the FlexRay Transceiver Driver API function FrTrcv_GetTransceiverMode().
      The enum value "FR_CHANNEL_AB" shall not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_TransceiverMode</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>976</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1144</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetTransceiverMode has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_GetTransceiverMode shall report development error
      code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_GetTransceiverMode has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_GetTransceiverMode
      shall report development error code FRIF_E_INV_CHNL_IDX to the Det_ReportError
      service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetTransceiverMode shall wrap the FlexRay
      Transceiver Driver API function FrTrcv_GetTransceiverMode() by:
      1. Translating (based on static FrIf module configuration) the tuple (FlexRay CC
        index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx) into a tuple (FlexRay
        Transceiver Driver | Driver-specific Transceiver index FrTrcv_TrcvIdx).
      2. Setting parameters
        - FrTrcv_TrcvModePtr to FrIf_TrcvModePtr
      3. Calling FrTrcv_GetTransceiverMode() of the determined FlexRay Driver module
        with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_TransceiverMode</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetTransceiverMode: The FlexRay Interface module has
      to be initialized with a call of FrIf_Init() before this API service may be called, see
      FrIf05002.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetTransceiverWUReason
      Syntax: Std_ReturnType FrIf_GetTransceiverWUReason(uint8 FrIf_CtrlIdx, Fr_ChannelType
        FrIf_ChnlIdx, FrTrcv_TrcvWUReasonType* FrIf_TrcvWUReasonPtr)
      Service ID[hex]: 0x15
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in):
        FrIf_CtrlIdx  Index of the FlexRay CC to address.
        FrIf_ChnlIdx  Index of the FlexRay Channel to address in scope of the FlexRay controller
                      FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out):
        FrIf_TrcvWUReasonPtr  Pointer to a memory location where output value will be stored.
      Return value: Std_ReturnType
        E_OK:     The call of the FlexRay Transceiver Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Transceiver Driver's API service has returned E_NOT_OK.
      Description: Wraps the FlexRay Transceiver Driver API function
      FrTrcv_GetTransceiverWUReason().
      The enum value "FR_CHANNEL_AB" shall not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>977</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1260</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetTransceiverWUReason has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_GetTransceiverWUReason shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>879</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_GetTransceiverWUReason has an
      invalid value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_GetTransceiverWUReason shall report development error code
      FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>879</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetTransceiverWUReason shall wrap the FlexRay
      Transceiver Driver API function FrTrcv_GetTransceiverWUReason() by:
      1. Translating (based on static FrIf module configuration) the tuple (FlexRay CC
        index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx) into a tuple (FlexRay
        Transceiver Driver | Driver-specific Transceiver index FrTrcv_TrcvIdx).
      2. Setting parameters
        - FrTrcv_TrcvWUReasonPtr to FrIf_WUReasonPtr
      3. Calling FrTrcv_GetTransceiverWUReason() of the determined FlexRay Driver
        module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1146</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetTransceiverWUReason: The FlexRay Interface module has to be initialized
      with a call of FrIf_Init() before this API service may be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_ClearTransceiverWakeup
      Syntax: Std_ReturnType FrIf_ClearTransceiverWakeup(uint8 FrIf_CtrlIdx, Fr_ChannelType
        FrIf_ChnlIdx)
      Service ID[hex]: 0x18
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in):
        FrIf_CtrlIdx  Index of the FlexRay CC to address.
        FrIf_ChnlIdx  Index of the FlexRay Channel to address in scope of the FlexRay
                      controller FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK:     The call of the FlexRay Transceiver Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Transceiver Driver's API service has returned E_NOT_OK.
      Description:
        Wraps the FlexRay Transceiver Driver API function FrTrcv_ClearTransceiverWakeup().
        The enum value "FR_CHANNEL_AB" shall not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1263</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_ClearTransceiverWakeup has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_ClearTransceiverWakeup shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_ClearTransceiverWakeup has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_ClearTransceiverWakeup shall report development error code
      FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_ClearTransceiverWakeup shall wrap the FlexRay
      Transceiver Driver API function FrTrcv_ClearTransceiverWakeup() by:
      -1) Translating (based on static FrIf module configuration) the tuple (FlexRay CC index
          FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx) into a tuple (FlexRay Transceiver
          Driver | Driverspecific Transceiver index FrTrcv_TrcvIdx).
      -2) Calling FrTrcv_ClearTransceiverWakeup() of the determined FlexRay Driver module with the
          parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_ClearTransceiverWakeup: The FlexRay Interface module
      has to be initialized with a call of FrIf_Init() before this API service may be called, see
      FrIf05002.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_CancelAbsoluteTimer
      Syntax: Std_ReturnType FrIf_CancelAbsoluteTimer(uint8 FrIf_CtrlIdx, uint8 FrIf_AbsTimerIdx)
      Service ID[hex]: 0x1b
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different FlexRay CCs
      Parameters (in):
        FrIf_CtrlIdx      Index of the FlexRay CC to address.
        FrIf_AbsTimerIdx  Index of the absolute timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK:     The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned E_NOT_OK,
                  or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_CancelAbsoluteTimer() .
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>933</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05240</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_CancelAbsoluteTimer has an invalid value
      and if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_CancelAbsoluteTimer shall report development error
      code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1117</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_CancelAbsoluteTimer shall wrap the FlexRay Driver API
      function Fr_CancelAbsoluteTimer() by:
      -1) Translating (based on static FrIf module configuration) the FlexRay CC index FrIf_CtrlIdx
          into a tuple (FlexRay Driver | Driverspecific CC index Fr_CtrlIdx).
      -2) Setting parameters Fr_AbsTimerIdx to FrIf_AbsTimerIdx
      -3) Calling Fr_CancleAbsoluteTimer() of the determined FlexRay Driver module with the
          parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_CancelAbsoluteTimer: The FlexRay Interface module has
      to be initialized with a call of FrIf_Init() before this API service may be called, see
      FrIf05002.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetAbsoluteTimerIRQStatus
      Syntax: Std_ReturnType FrIf_GetAbsoluteTimerIRQStatus(uint8 FrIf_CtrlIdx,
        uint8 FrIf_AbsTimerIdx,boolean* FrIf_IRQStatusPtr)
      Service ID[hex]: 0x1f
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different FlexRay CCs
      Parameters (in):
        FrIf_CtrlIdx      Index of the FlexRay CC to address.
        FrIf_AbsTimerIdx  Index of the absolute timer to address.
      Parameters (inout): None
      Parameters (out): FrIf_IRQStatusPtr Pointer to a memory location where output value will be stored.
      Return value: Std_ReturnType
        E_OK:     The call of the FlexRay Driver's API service has returnedE_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned E_NOT_OK,
                  or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_GetAbsoluteTimerIRQStatus()
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05252</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetAbsoluteTimerIRQStatus has an
      invalid value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_GetAbsoluteTimerIRQStatus shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>872</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05253</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetAbsoluteTimerIRQStatus shall wrap the FlexRay
      Driver API function Fr_GetAbsoluteTimerIRQStatus() by:
      1. Translating (based on static FrIf module configuration) the FlexRay CC index FrIf_CtrlIdx
        into a tuple (FlexRay Driver | Driver-specific CC index Fr_CtrlIdx).
      2. Setting parameters
        - Fr_AbsTimerIdx to FrIf_AbsTimerIdx
        - Fr_IRQStatusPtr to FrIf_IRQStatusPtr
      3. Calling Fr_GetAbsoluteTimerIRQStatus() of the determined FlexRay Driver module with the
        parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05254</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetAbsoluteTimerIRQStatus: The FlexRay Interface
      module has to be initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_DisableAbsoluteTimerIRQ
      Syntax: Std_ReturnType FrIf_DisableAbsoluteTimerIRQ(uint8 FrIf_CtrlIdx,
        uint8 FrIf_AbsTimerIdx)
      Service ID[hex]: 0x23
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different FlexRay CCs
      Parameters (in):
        FrIf_CtrlIdx      Index of the FlexRay CC to address.
        FrIf_AbsTimerIdx  Index of the absolute timer to address.
      Parameters (inout):  None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK:     The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned E_NOT_OK,
                  or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_DisableAbsoluteTimerIRQ().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05264</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_DisableAbsoluteTimerIRQ has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_DisableAbsoluteTimerIRQ shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05266</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_DisableAbsoluteTimerIRQ: The FlexRay Interface module
      has to be initialized with a call of FrIf_Init() before this API service may be called, see
      FrIf05002.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05239</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetCycleLength
      Syntax: uint32 FrIf_GetCycleLength( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x3a
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: uint32 Time in unit of nanoseconds
      Description: This API returns the configured time of the configuration
        parameter "GdCycle" in nanoseconds for the FlexRay controller with index
        FrIf_CtrlIdx.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetCycleLength</srcid><srcstatus/><internalId>956</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetCycleLength has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_GetCycleLength shall report development
      error code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetCycleLength</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05238</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetCycleLength: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetCycleLength</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_AllSlots
      Syntax: Std_ReturnType FrIf_AllSlots( uint8 FrIf_CtrlIdx )
      Service ID[hex]: 0x33
      Sync/Async: Synchronous
      Reentrancy: non reentrant
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_AllSlots
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AllSlots</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_AllSlots</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1164</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllSlots</srcid><srcstatus/><internalId>1275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05412</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_AllSlots shall be pre compile time configurable ON/OFF
      by the configuration parameter FrIfAllSlotsSupport (derived from
      configuration parameter FrIfAllSlotsSupport, see FrIf06108_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05706</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_AllSlots is called before the FrIf was initialized
      successfully, the function FrIf_AllSlots shall raise the development
      error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AllSlots</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05707</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the Fr module is enabled: the function
      FrIf_AllSlots shall check the parameter FrIf_CtrlIdx for being valid. If
      FrIf_CtrlIdx is invalid, the function FrIf_AllSlots shall raise the
      development error FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AllSlots</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetChannelStatus
      Syntax: Std_ReturnType FrIf_GetChannelStatus( uint8 FrIf_CtrlIdx, uint16*
        FrIf_ChannelAStatusPtr, uint16* FrIf_ChannelBStatusPtr )
      Service ID[hex]: 0x26
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in): FrIf_CtrlIdx Index of FlexRay CC within the context of
        the FlexRay Interface.
      Parameters (inout): None
      Parameters (out): FrIf_ChannelAStatusPtr Address where the bitcoded
        channel A status information shall be stored. FrIf_ChannelBStatusPtr
        Address where the bitcoded channel B status information shall be stored.
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Wraps the FlexRay Driver API function Fr_GetChannelStatus()
        and gets the channel status information.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>946</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05413</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetChannelStatus shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfGetGetChannelStatusSupport
      (derived from configuration parameter FrIfGetGetChannelStatusSupport, see
      FrIf06105_Conf)
      </description>
      <comment>
      Replaced by FrIf.ASR40.FrIf05413_1.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05413_1</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05413_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetChannelStatus shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfGetChannelStatusSupport
      (derived from configuration parameter FrIfGetChannelStatusSupport, see
      FrIf06105_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05413</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05708</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_GetChannelStatus is called before the FrIf module was
      initialized successfully, the function FrIf_GetChannelStatus shall raise
      the development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05709</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_GetChannelStatus shall check the parameter FrIf_CtrlIdx for
      being valid. If FrIf_CtrlIdx is invalid, the function
      FrIf_GetChannelStatus shall raise the development error
      FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>884</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetClockCorrection
      Syntax: Std_ReturnType FrIf_GetClockCorrection( uint8 FrIf_CtrlIdx,
        sint16* FrIf_RateCorrectionPtr, sint32* FrIf_OffsetCorrectionPtr )
      Service ID[hex]: 0x29
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in): FrIf_CtrlIdx Index of FlexRay CC within the context of
        the FlexRay Interface.
      Parameters (inout): None
      Parameters (out): FrIf_RateCorrectionPtr Address where the current rate
        correction value shall be stored. FrIf_OffsetCorrectionPtr Address where
        the current offset correction value shall be stored.
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Wraps the FlexRay Driver API function Fr_GetClockCorrection()
        and gets the current clock correction values.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>947</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05414</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetClockCorrection shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfGetClockCorrectionSupport (derived from configuration parameter
      FrIfGetClockCorrectionSupport, see FrIf06106_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05711</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_GetClockCorrection is called before the FrIf was
      initialized successfully, the function FrIf_GetClockCorrection shall
      raise the development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05712</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_GetClockCorrection shall check the parameter FrIf_CtrlIdx
      for being valid. If FrIf_CtrlIdx is invalid, the function
      FrIf_GetClockCorrection shall raise the development error
      FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetSyncFrameList
      Syntax: Std_ReturnType FrIf_GetSyncFrameList( uint8 FrIf_CtrlIdx, uint8
        FrIf_ListSize, uint16* FrIf_ChannelAEvenListPtr, uint16*
        FrIf_ChannelBEvenListPtr, uint16* FrIf_ChannelAOddListPtr, uint16*
        FrIf_ChannelBOddListPtr )
      Service ID[hex]: 0x2a
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        FrIf_CtrlIdx Index of FlexRay CC within the context of the FlexRay
          Interface.
        FrIf_ListSize Size of the arrays passed via parameter:
          FrIf_ChannelAEvenListPtr FrIf_ChannelBEvenListPtr
          FrIf_ChannelAOddListPtr FrIf_ChannelBOddListPtr. The service must
          ensure to not write more entries into those arrays than granted by
          this parameter.
      Parameters (inout): None
      Parameters (out):
        FrIf_ChannelAEvenListPtr Address the list of syncframes on channel A
          within the even communication cycle is written to. The exact number of
          elements written to the list is limited by parameter FrIf_ListSize.
          Unused list elements are filled with the value '0' to indicate that no
          more syncframe has been seen.
        FrIf_ChannelBEvenListPtr Address the list of syncframes on channel B
          within the even communication cycle is written to. The exact number of
          elements written to the list is limited by parameter FrIf_ListSize.
          Unused list elements are filled with the value '0' to indicate that no
          more syncframe has been seen.
        FrIf_ChannelAOddListPtr Address the list of syncframes on channel A
          within the odd communication cycle is written to. The exact number of
          elements written to the list is limited by parameter FrIf_ListSize.
          Unused list elements are filled with the value '0' to indicate that no
          more syncframe has been seen.
        FrIf_ChannelBOddListPtr Address the list of syncframes on channel B
          within the odd communication cycle is written to. The exact number of
          elements written to the list is limited by parameter FrIf_ListSize.
          Unused list elements are filled with the value '0' to indicate that no
          more syncframe has been seen.
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Wraps the FlexRay Driver API function Fr_GetSyncFrameList and
        gets a list of syncframes received or transmitted on channel A and
        channel B via the even and odd communication cycle.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>948</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05415</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetSyncFrameList shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfGetSyncFrameListSupport
      (derived from configuration parameter FrIfGetSyncFrameListSupport, see
      FrIf06107_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05715</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_GetSyncFrameList is called before the Fr was initialized
      successfully, the function FrIf_GetSyncFrameList shall raise the
      development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05716</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_GetSyncFrameList shall check the parameter FrIf_CtrlIdx for
      being valid. If FrIf_CtrlIdx is invalid, the function
      FrIf_GetSyncFrameList shall raise the development error
      FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetNumOfStartupFrames
      Syntax: Std_ReturnType FrIf_GetNumOfStartupFrames( uint8 FrIf_CtrlIdx,
        uint8* FrIf_NumOfStartupFramesPtr )
      Service ID[hex]: 0x34
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in): FrIf_CtrlIdx Index of FlexRay CC within the context of
        the FlexRay Interface. FrIf_NumOfStartupFramesPtr Address where the
        number of startup frames seen within the last even/odd cycle pair shall
        be stored.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Wraps the FlexRay Driver API function
        Fr_GetNumOfStartupFrames and gets a list of the the current number of
        startup frames seen on the cluster. See variable vStartupPairs of [12]
        for details.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>952</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>988</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1302</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05416</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetNumOfStartupFrames shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfGetNumOfStartupFramesSupport (derived from configuration parameter
      FrIfGetNumOfStartupFramesSupport, see FrIf06104_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05721</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_GetNumOfStartupFrames is called before the FrIf was
      initialized successfully, the function FrIf_GetNumOfStartupFrames shall
      raise the development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05722</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_GetNumOfStartupFrames shall check the parameter
      FrIf_CtrlIdx for being valid. If FrIf_CtrlIdx is invalid, the function
      FrIf_GetNumOfStartupFrames shall raise the development error
      FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>890</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetWakeupRxStatus
      Syntax: Std_ReturnType FrIf_GetWakeupRxStatus( uint8 FrIf_CtrlIdx, uint8*
        FrIf_WakeupRxStatusPtr )
      Service ID[hex]: 0x2b
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device FrIf_CtrlIdx Index of
        FlexRay CC within the context of the FlexRay
      Parameters (in): Driver.
      Parameters (inout): None
      Parameters (out): FrIf_WakeupRxStatusPtr Address where bitcoded wakeup
        reception status shall be stored. Bit 0: Wakeup received on channel A
        indicator Bit 1: Wakeup received on channel B indicator Bit 2-7: Unused
        Std_ReturnType E_OK: API call finished successfully. E_NOT_OK: API
      Return value: call aborted due to errors.
      Description: Wraps the FlexRay Driver API function Fr_GetWakeupRxStatus
        and gets the wakeup received information from the FlexRay controller.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1184</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05417</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetWakeupRxStatus shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfGetWakeupRxStatusSupport (derived from configuration parameter
      FrIfGetWakeupRxStatusSupport, see FrIf06111_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05700</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_GetWakeupRxStatus is called before the Fr was initialized
      successfully, the function FrIf_GetWakeupRxStatus shall raise the
      development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05701</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_GetWakeupRxStatus shall check the parameter FrIf_CtrlIdx
      for being valid. If FrIf_CtrlIdx is invalid, the function
      FrIf_GetWakeupRxStatus shall raise the development error
      FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_CancelTransmit
      Syntax: Std_ReturnType FrIf_CancelTransmit( PduIdType FrIf_TxPduId )
      Service ID[hex]: 0x30
      Sync/Async: Synchronous
      Reentrancy: Non reentrant for identical values of FrIf_TxPduId, reentrant
        for different values of FrIf_TxPduId
      Parameters (in): FrIf_TxPduId ID of FlexRay PDU to be cancelled.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: No error has occurred during the
        execution of this API service. E_NOT_OK: An error occurred during
        execution of this API service: FlexRay Driver reported an error. An
        error has been detected in development mode
      Description: Wraps the FlexRay Driver API function Fr_CancelTxLPdu
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.CancelTransmit
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.CancelTransmit</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05713</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIfCancelTransmitSupport shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfCancelTransmitSupport (derived from configuration parameter
      FrIfCancelTransmitSupport, see FrIf00002_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05703</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_CancelTransmit is called before the FrIf was initialized
      successfully, the function FrIf_CancelTransmit shall raise the
      development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <comment>
    &lt;!--
      Linked to deviation dev.FrIf.CancelTransmit
    --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.CancelTransmit</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05704</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_CancelTransmit shall check the parameter FrIf_TxPduId for
      being valid. If FrIf_TxPduId is invalid, the function FrIf_CancelTransmit
      shall raise the development error FRIF_E_INV_TXPDUID and return E_NOT_OK.
      </description>
      <comment>
    &lt;!--
      Linked to deviation dev.FrIf.CancelTransmit
    --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.CancelTransmit</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05705</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      For Transmit Cancellation, the following steps are performed:
      1.) Decrement TrigTxCounter for the IPDU that shall be canceled.
      2.) If TxConfCounter &gt; 0 for this PDU, contine with step 3). Else, stop
          here.
      3.) Call FlexRay Driver's API function Fr_CancelTxLPdu():
          a.) Fr_CtrlIdx is derived according to the indexing scheme descibed
              in 7.2
          b.) Fr_LPduIdx is set to the configured L-PDU buffer index
              [Configuration Parameter FrIfLPduIdx, see FrIf06058] associated
              with the Communication Operation.
      4.) Increment TrigTxCounter (limited by TxConterLimit) for all other
          I-PDUs within that L-PDU that have a TxConfCounter &amp;gt; 0.
      5.) Decrement TxConfCounter for all other I-PDUs within that L-PDU that
          have a TxConfCounter &amp;gt; 0.
      6.) Decrement the TxConfCounter for the IPDU that has been initiated by
          the CancelTransmit API call.
      </description>
      <comment>
    &lt;!--
      Linked to deviation dev.FrIf.CancelTransmit
    --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.CancelTransmit</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05710</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_DisableLPdu
      Syntax: Std_ReturnType FrIf_DisableLPdu( uint8 FrIf_CtrlIdx, uint16
        FrIf_LPduIdx )
      Service ID[hex]: 0x28
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device FrIf_CtrlIdx Index of
        FlexRay CC within the context of the FlexRay
      Parameters (in): Interface. FrIf_LPduIdx This index is used to uniquely
        identify a FlexRay frame
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Wraps the FlexRay Driver Function Fr_DisableLPdu. It disables
        the hardware resource of an LPdu for transmission/reception.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableLPdu</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_DisableLPdu</srcid><srcstatus/><internalId>981</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05418</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_DisableLPdu shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfDisableLPduSupport (derived
      from configuration parameter FrIfDisableLPduSupport, see FrIf06110_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05717</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_DisableLPdu is called before the FrIf was initialized
      successfully, the function FrIf_DisableLPdu shall raise the development
      error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableLPdu</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05714</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_DisableLPdu shall check the parameter FrIf_CtrlIdx for
      being valid. If FrIf_CtrlIdx is invalid, the function FrIf_DisableLPdu
      shall raise the development error FRIF_E_INV_CTRL_IDX and return
      E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableLPdu</srcid><srcstatus/><internalId>883</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetTransceiverError
      Syntax: Std_ReturnType FrIf_GetTransceiverError( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx, uint8 FrIf_BranchIdx, uint32*
        FrIf_BusErrorState )
      Service ID[hex]: 0x35
      Sync/Async: Synchronous
      Reentrancy: Function is non reentrant for the same channel of the same
        controller. FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ChnlIdx Index of the FlexRay Channel to address in scope of the
      Parameters (in): FlexRay controller FrIf_CtrlIdx. FrIf_BranchIdx This zero
        based index identifies the branch of the (active star) transceiver to
        which the API call has to be applied.
      Parameters (inout): None
      Parameters (out): FrIf_BusErrorState Address where the transceiver error
        state is stored.
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors
      Description: Wraps the FlexRay Transceiver Driver API function
        FrTrcv_GetTransceiverError. The enum value "FR_CHANNEL_AB" shall not be
        used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1187</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05419</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetTransceiverError shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfGetTransceiverErrorSupport (derived from configuration parameter
      FrIfGetTransceiverErrorSupport, see FrIf06101_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05718</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_GetTransceiverError is called before the FrIf was
      initialized successfully, the function FrIf_GetTransceiverError shall
      raise the development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05719</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: the
      function FrIf_GetTransceiverError shall check the parameter FrIf_CtrlIdx
      for being valid. If FrIf_CtrlIdx is invalid, the function
      FrIf_GetTransceiverError shall raise the development error
      FRIF_E_INV_CTRL_IDX and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05720</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_GetTransceiverError has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_GetTransceiverError
      shall report development error code FRIF_E_INV_CHNL_IDX to the
      Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05728</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetTransceiverError shall wrap the FlexRay Transceiver
      Driver API function FrTrcv_GetTransceiverError by:
      1.) Translating (based on static FrIf module configuration) the tuple
          (FlexRay CC index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx)
          into a tuple (FlexRay Transceiver Driver | Driver-specific
          Transceiver index FrTrcv_TrcvIdx).
      2.) Setting parameters
          -) FrTrcv_BranchIdx to FrIf_BranchIdx - FrTrcv_BusErrorState to
             FrIf_BusErrorState
      3.) Calling FrTrcv_GetTransceiverError of the determined FlexRay
          Transceiver module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_EnableTransceiverBranch
      Syntax: Std_ReturnType FrIf_EnableTransceiverBranch( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx, uint8 FrIf_BranchIdx )
      Service ID[hex]: 0x36
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ChnlIdx Index of the FlexRay Channel to address in scope of the
        FlexRay controller FrIf_CtrlIdx. FrIf_BranchIdx Index of the FlexRay
        Channel to address in scope of the FlexRay controller FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Transceiver
        Driver's API service has returned E_OK. E_NOT_OK: The call of the
        FlexRay Transceiver Driver's API service has returned E_NOT_OK.
      Description: Wraps the FlexRay Transceiver Driver API function
        FrTrcv_EnableTransceiverBranch. The enum value "FR_CHANNEL_AB" shall not
        be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>852</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>955</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1308</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05420</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_EnableTransceiverBranch shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfEnableTransceiverBranchSupport (derived from configuration parameter
      FrIfEnableTransceiverBranchSupport, see FrIf06103_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05302</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_EnableTransceiverBranch has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_EnableTransceiverBranch shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05304</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_EnableTransceiverBranch has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_EnableTransceiverBranch shall report development error code
      FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05306</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_EnableTransceiverBranch shall wrap the FlexRay
      Transceiver Driver API function FrIf_EnableTransceiverBranch by:
      1.) Translating (based on static FrIf module configuration) the tuple
          (FlexRay CC index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx)
          into a tuple (FlexRay Transceiver Driver | Driverspecific Transceiver
          index FrTrcv_TrcvIdx).
      2.) Setting parameter: FrTrcv_BranchIdx to FrIf_BranchIdx
      3.) Calling FrTrcv_EnableTransceiverBranch of the determined FlexRay
          Driver module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>955</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>991</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05307</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If development error detection for the FrIf module is enabled: if the
      function FrIf_EnableTransceiverBranch is called before the Fr was
      initialized successfully, the function FrIf_EnableTransceiverBranch shall
      raise the development error FRIF_E_NOT_INITIALIZED and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_DisableTransceiverBranch
      Syntax: Std_ReturnType FrIf_DisableTransceiverBranch( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx, uint8 FrIf_BranchIdx )
      Service ID[hex]: 0x37
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ChnlIdx Index of the FlexRay Channel to address in scope of the
        FlexRay controller FrIf_CtrlIdx. FrIf_BranchIdx Index of the FlexRay
        Channel to address in scope of the FlexRay controller FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: The call of the FlexRay Transceiver
        Driver's API service has returned E_OK. E_NOT_OK: The call of the
        FlexRay Transceiver Driver's API service has returned E_NOT_OK.
      Description: Wraps the FlexRay Transceiver Driver API function
        FrTrcv_DisableTransceiverBranch. The enum value "FR_CHANNEL_AB" shall
        not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1306</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05421</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_DisableTransceiverBranch shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfDisableTransceiverBranchSupport (derived from configuration parameter
      FrIfDisableTransceiverBranchSupport, see FrIf06102_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05425</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_DisableTransceiverBranch shall be pre compile time
      configurable ON/OFF by the configuration parameter
      FrIfDisableTransceiverBranchSupport (derived from configuration parameter
      FrIfDisableTransceiverBranchSupport, see FrIf06102_Conf)
      </description>
      <comment>
      This requirement is not applicable.
      Rationale:
      This requirement is a duplicate of FrIf.ASR40.FrIf05421.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05303</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_DisableTransceiverBranch has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_DisableTransceiverBranch shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>892</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05243</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_DisableTransceiverBranch has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_DisableTransceiverBranch shall report development error code
      FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05305</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_DisableTransceiverBranch shall wrap the FlexRay
      Transceiver Driver API function FrIf_DisableTransceiverBranch by:
      1.) Translating (based on static FrIf module configuration) the tuple
          (FlexRay CC index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx)
          into a tuple (FlexRay Transceiver Driver | Driver specific
          Transceiver index FrTrcv_TrcvIdx)
      2.) Setting parameter: FrTrcv_BranchIdx to FrIf_BranchIdx
      3.) Calling FrTrcv_DisableTransceiverBranch() of the determined FlexRay
          Driver module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05308</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_DisableTransceiverBranch: The FlexRay Interface module
      has to be initialized with a call of FrIf_Init() before this API service
      may be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_ReconfigLPdu
      Syntax: Std_ReturnType FrIf_ReconfigLPdu( uint8 FrIf_CtrlIdx, uint16
        FrIf_LPduIdx, uint16 FrIf_FrameId, Fr_ChannelType FrIf_ChnlIdx, uint8
        FrIf_CycleRepetition, uint8 FrIf_CycleOffset, uint8 FrIf_PayloadLength,
        uint16 FrIf_HeaderCRC )
      Service ID[hex]: 0x00
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): FrIf_CtrlIdx Index of FlexRay CC within the context of
        the FlexRay Driver. FrIf_LPduIdx This index is used to uniquely identify
        a FlexRay frame. FrIf_FrameId FlexRay Frame ID the FrIf_LPdu shall be
        configured to. FrIf_ChnlIdx FlexRay Channel the FrIf_LPdu shall be
        configured to. FrIf_CycleRepetition Cycle Repetition part of the cycle
        filter mechanism FrIf_LPdu shall be configured to. FrIf_CycleOffset
        Cycle Offset part of the cycle filter mechanism FrIf_LPdu shall be
        configured to. FrIf_PayloadLength Payloadlength in units of bytes the
        FrIf_LPduIdx shall be configured to. FrIf_HeaderCRC Header CRC the
        FrIf_LPdu shall be configured to.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Calls the FlexRay Driver's API Fr_ReconfigLPdu. The enum
        value "FR_CHANNEL_AB" shall not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>986</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05422</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_ReconfigLPdu shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfReconfigLPduSupport (derived
      from configuration parameter FrIfReconfigLPduSupport, see FrIf06109_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05309</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_ReconfigLPdu has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_ReconfigLPdu shall report development error
      code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1166</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05310</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_ReconfigLPdu has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_ReconfigLPdu shall report development error
      code FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <comment>
      This requirement is not applicable:
      The parameter FrIf_ChnlIdx is only passed through to the underlaying FlexRay
      Controller where the validity is checked and development errors are reported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05311</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_LPduIdx of FrIf_ReconfigLPdu has an invalid value (i.e.
      outside of LPdu range or if FrIfReconfigurable of this LPdu is not set to
      TRUE) and development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the FrIf_ReconfigLPdu shall report
      development error code FRIF_E_INV_LPDU_IDX to the Det_ReportError service
      of the DET module.
      </description>
      <comment>
      This requirement is not applicable:
      The parameter FrIf_LPduIdx is only passed through to the underlaying FlexRay
      Controller where the validity is checked and development errors are reported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05312</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_FrameId of FrIf_ReconfigLPdu has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the FrIf_ReconfigLPdu shall report development error code
      FRIF_E_INV_FRAME_ID to the Det_ReportError service of the DET module.
      </description>
      <comment>
      This requirement is not applicable:
      The parameter FrIf_FrameId is only passed through to the underlaying FlexRay
      Controller where the validity is checked and development errors are reported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetNmVector
      Syntax: Std_ReturnType FrIf_GetNmVector( uint8 FrIf_CtrlIdx, uint8*
        FrIf_NmVectorPtr )
      Service ID[hex]: 0x0f
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant
        for different values of FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (inout): None
      Parameters (out): FrIf_NmVectorPtr Pointer to a memory location where
        output value will be stored.
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Derives the FlexRay NM Vector.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetNmVector</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetNmVector</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNmVector</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05423</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetNmVector shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfGetNmVectorSupport (derived
      from configuration parameter FrIfGetNmVectorSupport, see FrIf06100_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_GetNmVector has an invalid value and if
      development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT equals
      ON), the function FrIf_GetNmVector shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetNmVector</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetNmVector wraps the FlexRay Driver API Fr_GetNmVector
      function.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetNmVector</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetNmVector</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNmVector</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_GetNmVector: The FlexRay Interface module has to be
      initialized with a call of FrIf_Init() before this API service may be
      called, see FrIf05003
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetNmVector</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetVersionInfo
      Syntax: void FrIf_GetVersionInfo( Std_VersionInfoType* FrIf_VersionInfoPtr
        )
      Service ID[hex]: 0x01
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): FrIf_VersionInfoPtr Pointer to a memory location where
        the FlexRay Interface version information shall be stored.
      Return value: void
      Description: Returns the version information of this module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30003</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05424</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetVersionInfo shall be pre compile time configurable
      ON/OFF by the configuration parameter FrIfVersionInfoApi (derived from
      configuration parameter FrIfVersionInfoApi, see FrIf06083_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_VersionInfoPtr of FrIf_GetVersionInfo equals
      FRIF_DEV_ERROR_DETECT equals ON), the function FrIf_GetVersionInfo shall
      report development error code FRIF_E_INV_POINTER to the Det_ReportError
      service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_PTR_FrIf_GetVersionInfo</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetVersionInfo shall return the version information of
      this module. The version information includes:
      -) Module ID
      -) Vendor ID
      -) Vendor specific version numbers (BSW00407)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30003</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05153</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_GetVersionInfo shall be pre compile time configurable
      ON/OFF by the configuration parameter FRIF_VERSION_INFO_API (derived from
      configuration parameter FrIfVersionInfoApi, see FrIf06083).
      </description>
      <comment>
      This requirement is not applicable:
      This requirement duplicates FrIf05424.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Configuration of function FrIf_GetVersionInfo: If pre-compile-time
      configuration parameter 'FRIF_VERSION_INFO_API' is 'ON' this API function
      is included in the compilation process. If pre-compile-time configuration
      parameter 'FRIF_VERSION_INFO_API' is 'OFF' this API function is excluded
      from the compilation process.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_ReadCCConfig
      Syntax: Std_ReturnType FrIf_ReadCCConfig( uint8 FrIf_CtrlIdx, uint8
        FrIf_ConfigParamIdx, uint32* FrIf_ConfigParamValuePtr )
      Service ID[hex]: 0x3b
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ConfigParamIdx Index of the configuration parameter to read.
      Parameters (inout): None
      Parameters (out): FrIf_ConfigParamValuePtr Pointer to a memory location
        where output value will be stored.
      Return value: Std_ReturnType E_OK: The call of the FlexRay Driver's API
        service has returned E_OK. E_NOT_OK: The call of the FlexRay Driver's
        API service has returned E_NOT_OK, or an error has been detected in
        development mode.
      Description: Wraps the FlexRay Driver API function Fr_ReadCCConfig().
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>953</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>989</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05314</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_ReadCCConfig wraps the FlexRay Driver API
      Fr_ReadCCConfig function.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>953</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>989</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05315</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_ReadCCConfig has an invalid value and
      if development error detection is enabled (i.e. FRIF_DEV_ERROR_DETECT
      equals ON), the function FrIf_ReadCCConfig shall report development error
      code FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET
      module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt;
      Syntax: void FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt;( void )
      Service ID[hex]: 0x32
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: Processes the FlexRay Job List of the FlexRay Cluster with
        index ClstIdx.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobList_IndependentCluster</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringDisabled</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05270</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt; shall exist once per
      FlexRay Cluster of a FlexRay Interface module.
      </description>
      <comment>
      Covered by standard review
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobList_IndependentCluster</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringDisabled</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05271</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function name of each instance of FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt;
      shall contain the index of the respective FlexRay Cluster (ClstIdx).
      </description>
      <comment>
      Covered by FrIf.ASR40.FrIf05270
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobList_IndependentCluster</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringDisabled</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05272</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt;: The FlexRay Interface module
      has to be initialized with a call of FrIf_Init() before this API service
      may be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_JobListExec_0</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_CheckWakeupByTransceiver
      Syntax: void FrIf_CheckWakeupByTransceiver( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx )
      Service ID[hex]: 0x39
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
        FrIf_ChnlIdx Index of the FlexRay Channel to address in scope of the
        FlexRay controller FrIf_CtrlIdx.
      Parameters (inout): None
      Parameters (out): None
      Return value: void
      Description: Wraps the FlexRay Transceiver Driver API function
        FrTrcv_CheckWakeupByTransceiver(). The enum value "FR_CHANNEL_AB" shall
        not be used.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05274</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_CtrlIdx of FrIf_CheckWakeupByTransceiver has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_CheckWakeupByTransceiver shall report development error code
      FRIF_E_INV_CTRL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>881</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05275</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      If parameter FrIf_ChnlIdx of FrIf_CheckWakeupByTransceiver has an invalid
      value and if development error detection is enabled (i.e.
      FRIF_DEV_ERROR_DETECT equals ON), the function
      FrIf_CheckWakeupByTransceiver shall report development error code
      FRIF_E_INV_CHNL_IDX to the Det_ReportError service of the DET module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_INV_CTRL_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>881</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1154</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05276</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_CheckWakeupByTransceiver shall wrap the FlexRay
      Transceiver Driver API function FrTrcv_CheckWakeupByTransceiver() by:
      1.) Translating (based on static FrIf module configuration) the tuple
          (FlexRay CC index FrIf_CtrlIdx | FlexRay Channel index FrIf_ChnlIdx)
          into a tuple (FlexRay Transceiver Driver | Driver specific
          Transceiver index FrTrcv_TrcvIdx).
      2.) Calling FrTrcv_CheckWakeupByTransceiver() of the determined FlexRay
          Driver module with the parameters determined as described above.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05277</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_CheckWakeupByTransceiver: The FlexRay Interface module
      has to be initialized with a call of FrIf_Init() before this API service
      may called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_MainFunction_&amp;lt;ClstIdx&amp;gt;
      Syntax: void FrIf_MainFunction_&amp;lt;ClstIdx&amp;gt;( void )
      Service ID[hex]: 0x27 Timing: VARIABLE_CYCLIC
      Description: This function will be called cyclically by a task body
        provided by the BSW Scheduler.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobList_IndependentCluster</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringDisabled</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function FrIf_MainFunction_&amp;lt;ClstIdx&amp;gt; shall exist once per
      FlexRay Cluster of a FlexRay Interface module.
      </description>
      <comment>
      Covered by standard review
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobList_IndependentCluster</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringDisabled</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05279</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05279</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The function name of each instance of FrIf_MainFunction_&amp;lt;ClstIdx&amp;gt;
      shall contain the index of the respective FlexRay Cluster (ClstIdx).
      </description>
      <comment>
      Covered by FrIf.ASR40.FrIf05278
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf05278</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05280</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Caveats of FrIf_MainFunction_&amp;lt;ClstIdx&amp;gt;: The FlexRay Interface has
      to be initialized with a call of FrIf_Init() before this API service may
      be called, see FrIf05003.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      API function Description
      Dem_ReportErrorStatus
        Queues the reported events from the BSW modules (API is only used by BSW
        modules). The interface has an asynchronous behavior, because the
        processing of the event is done within the Dem main function.
      FrTrcv_CheckWakeupByTransceiver -
      FrTrcv_ClearTransceiverWakeup
        This function clears a pending wake up event.
      FrTrcv_GetTransceiverMode
        This function returns the actual state of the transceiver.
      FrTrcv_GetTransceiverWUReason
        This function returns the wakeup reason.
      FrTrcv_SetTransceiverMode
        This service sets the transceiver mode.
      Fr_AbortCommunication
        Invokes the CC CHI command 'FREEZE'.
      Fr_AckAbsoluteTimerIRQ
        Resets the interrupt condition of an absolute timer.
      Fr_AllowColdstart
        Invokes the CC CHI command 'ALLOW_COLDSTART'.
      Fr_CancelAbsoluteTimer
        Stops an absolute timer.
      Fr_CheckTxLPduStatus
        Checks the transmit status of the LSdu.
      Fr_ControllerInit
        Initialzes a FlexRay CC.
      Fr_DisableAbsoluteTimerIRQ
        Disables the interrupt line of an absolute timer.
      Fr_EnableAbsoluteTimerIRQ
        Enables the interrupt line of an absolute timer.
      Fr_GetAbsoluteTimerIRQStatus
        Gets IRQ status of an absolute timer.
      Fr_GetGlobalTime
        Gets the current global FlexRay time.
      Fr_GetPOCStatus
        Gets the POC status.
      Fr_GetSyncState 
        Gets the sync state.
      Fr_HaltCommunication
        Invokes the CC CHI command 'DEFERRED_HALT'.
      Fr_ReceiveRxLPdu
        Receives data from the FlexRay network.
      Fr_SendWUP
        Invokes the CC CHI command 'WAKEUP'.
      Fr_SetAbsoluteTimer
        Sets the absolute FlexRay timer.
      Fr_SetWakeupChannel
        Sets a wakeup channel.
      Fr_StartCommunication
        Starts communication.
      Fr_TransmitTxLPdu
        Transmits data on the FlexRay network.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1092</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1094</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1096</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1098</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1100</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1112</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      API function Description
      Dem_ReportErrorStatus
        Queues the reported events from the BSW modules (API is only
        used by BSW modules). The interface has an asynchronous
        behavior, because the processing of the event is done within the
        Dem main function.
      Det_ReportError
        Service to report development errors.
      FrTrcv_DisableTransceiverBranch
        This function disables the specified branch on the addressed (active
        star) transceiver.
      FrTrcv_EnableTransceiverBranch
        This function enables the specified branch on the addressed (active
        star) transceiver.
      FrTrcv_GetTransceiverError All mandatory errors defined by the FlexRay
        EPL [5] which are supported by the FlexRay transceiver hardware can be
        accessed via this API:In addition to errors on the physical layer and
        local to the ECU hardware, a global error flag is provided.
      Fr_AllSlots
        Invokes the CC CHI command 'ALL_SLOTS'.
      Fr_CancelTxLPdu
        Cancels the already pending transmission of a LPdu contained in a
        controllers physical transmit resource (e.g. message buffer).
      Fr_DisableLPdu Disables the hardware resource of a LPdu for
        transmission/reception.
      Fr_GetChannelStatus
        Gets the channel status information.
      Fr_GetClockCorrection
        Gets the current clock correction values. See variables
        vInterimRateCorrection and vInterimOffsetCorrection of [12] for details.
      Fr_GetNmVector
        Gets the network management vector of the last communication cycle.
      Fr_GetNumOfStartupFrames
        Gets the current number of startup frames seen on the cluster.
        See variable vStartupPairs of [12] for details.
      Fr_GetSyncFrameList
        Gets a list of syncframes received or transmitted on channel A and
        channel B via the even and odd communication cycle.
        See variables vsSyncIdListA and vsSyncIdListB of [12] for details.
      Fr_GetWakeupRxStatus
        Gets the wakeup received information from the FlexRay controller.
      Fr_PrepareLPdu
        Prepares a LPdu.
      Fr_ReadCCConfig
        Reads a FlexRay protocol configuration parameter for a particular
        FlexRay controller out of the module's configuration.
      Fr_ReconfigLPdu
        Reconfigures a given LPdu according to the parameters
        (FrameId, Channel, CycleRepetition, CycleOffset, PayloadLength,
        HeaderCRC) at runtime.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: &amp;lt;User_RxIndication&amp;gt;
      Syntax: void &amp;lt;User_RxIndication&amp;gt;( PduIdType RxPduId, PduInfoType*
        PduInfoPtr )
      Sync/Async: Synchronous
      Reentrancy: Reentrant for different PduIds. Non reentrant for the same
        PduId. RxPduId ID of the received I-PDU.
      Parameters (in): PduInfoPtr Contains the length (SduLength) of the
        received I-PDU and a pointer to a buffer (SduDataPtr) containing the
        I-PDU.
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: Indication of a received I-PDU from a lower layer
        communication module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndStore</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_DynSimple</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: &amp;lt;User_TxConfirmation&amp;gt;
      Syntax: void &amp;lt;User_TxConfirmation&amp;gt;( PduIdType TxPduId )
      Sync/Async: Synchronous
      Reentrancy: Reentrant for different PduIds. Non reentrant for the same
        PduId.
      Parameters (in): TxPduId ID of the I-PDU that has been transmitted.
      Parameters None (inout):
      Parameters (out): None
      Return value: None
      Description: The lower layer communication module confirms the
        transmission of an I-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05046_1</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling FrNm_TxConfirmation(), the TxPduId passed shall be read from configuration 
      parameter FrNmTxConfirmationPduId if the related FrIfPduRef and FrNmTxPduRef reference the 
      same EcuC Pdu-container.     
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05046_2</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling FrNm_TxConfirmation(), the TxPduId passed shall be read from configuration 
      parameter FrNmTxUserDataPduId if the related FrIfPduRef and FrNmTxUserDataPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <comment>
      As the FrNm doesn't specifiy a specific confirmation Id for user data Pdus, the normal TxPduId
      will be passed for FrNm_TxConfirmation().
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05046_3</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling PduR_TxConfirmation(), the TxPduId passed shall be read from configuration 
      parameter PduRDestPduHandleId if the related FrIfPduRef and PduRDestPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05046_4</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling FrTp_TxConfirmation(), the TxPduId passed shall be read from configuration 
      parameter FrTpTxConfirmationPduId if the related FrIfPduRef and FrTpTxPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Service name: &amp;lt;User_TriggerTransmit&amp;gt;
      Syntax: Std_ReturnType &amp;lt;User_TriggerTransmit&amp;gt;( PduIdType TxPduId,
        PduInfoType* PduInfoPtr )
      Sync/Async: Synchronous
      Reentrancy: Reentrant for different PduIds. Non reentrant for the same
        PduId.
      Parameters (in): TxPduId ID of the SDU that is requested to be
        transmitted. PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to
        where the SDU shall be copied to. On return, the service will indicate
        the length of the copied SDU data in SduLength.
      Parameters (inout): None
      Parameters (out): None Std_ReturnType E_OK: SDU has been copied and
        SduLength indicates the number of copied bytes.
      Return value: E_NOT_OK: No SDU has been copied. PduInfoPtr must not be
        used since it may contain a NULL pointer or point to invalid data.
      Description: The lower layer communication module requests the buffer of
        the SDU for transmission from the upper layer module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05047_1</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling FrNm_TriggerTransmit(), the TxPduId passed shall be read from configuration 
      parameter FrNmTxConfirmationPduId if the related FrIfPduRef and FrNmTxPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05047_2</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling FrNm_TriggerTransmit(), the TxPduId passed shall be read from configuration 
      parameter FrNmTxUserDataPduId if the related FrIfPduRef and FrNmTxUserDataPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <comment>
      As the FrNm doesn't specifiy a specific confirmation Id for user data Pdus, the normal TxPduId
      will be passed for FrNm_TriggerTransmit().
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05047_3</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling PduR_TriggerTransmit(), the TxPduId passed shall be read from configuration 
      parameter PduRDestPduHandleId if the related FrIfPduRef and PduRDestPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05047_4</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_ECUConfiguration.pdf, V3.2.0</source>
      <version>1</version>
      <description>
      When calling FrTp_TriggerTransmit(), the TxPduId passed shall be read from configuration 
      parameter FrTpTxConfirmationPduId if the related FrIfPduRef and FrTpTxPduRef reference the 
      same EcuC Pdu-container.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05077</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Containers structure the set of configuration parameters. This means:
       • all configuration parameters are kept in containers.
       • (sub-) containers can reference (sub-) containers. It is possible to assign a multiplicity
         to these references. The multiplicity then defines the possible number of instances of
         the contained parameters.
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05281</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      VARIANT-POST-BUILD: All configuration parameters in container
      'FrIfGeneral' shall be configurable at pre-compile time. All other
      configuration parameters shall be configurable at post-build-time.
      </description>
      <comment>
      This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05282</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      VARIANT-PRE-COMPILE: All configuration parameters shall be
      configurable at pre-compile time.
      </description>
      <comment>
    &lt;!--
      Linked to deviation dev.FrIf.PostBuildOnly
    --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.PostBuildOnly</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05286</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      VARIANT-LINK-TIME: Includes all configuration options of the variant
      VARIANT-PRE-COMPILE. Additionally all parameters that are marked as
      link-time configurable with "VARIANT-LINK-TIME" shall be configurable at
      link time, for example by linking a special configured parameter object
      file.
      </description>
      <comment>
    &lt;!--
      Linked to deviation dev.FrIf.PostBuildOnly
    --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.PostBuildOnly</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06087_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Module Name FrIf Module
      Description Configuration of the FrIf (FlexRay Interface) module.
      Included Containers
        FrIfConfig
          1
          Configuration of the FlexRay Interface. This container is a
          MultipleConfigurationContainer, i.e. this container and its
          sub-containers exist once per configuration set.
        FrIfGeneral
          1
          This container contains the general configuration parameters of the
          FlexRay Interface.
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05360_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfGeneral
      Description This container contains the general configuration parameters
        of the FlexRay Interface.
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06112_Conf</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfAbsTimerIdx
      Description Maximum number of supported absolut timers.
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This requirement is not applicable:
      The maximum number of supported absolute timers is limited by the hardware.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06108_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfAllSlotsSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable of switching from key-slot / single-slot mode to all slot
        mode.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05412.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00002_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCancelTransmitSupport
      Description Configuration parameter to enable/disable FrIf support to
        request the cancellation of the I-PDU transmission to FrDrv.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
    &lt;!--
      Linked to deviation dev.FrIf.CancelTransmit
    --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.CancelTransmit</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06080_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfDevErrorDetect
      Description Switches the Development Error Detection and Notification on
        or off true: Development Error Detection and Notification on false:
        Development Error Detection and Notification off
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05299.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06110_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfDisableLPduSupport
      Description Configuration parameter to enable/disable FrIf support to
        disable the hardware resource of a LPdu for transmission/reception.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05418.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06102_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfDisableTransceiverBranchSupport
      Description Configuration parameter to enable/disable FrIf support to
        disable branches of an active star.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05421.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06103_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfEnableTransceiverBranchSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable branches of an active star.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05420.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06106_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetClockCorrectionSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable of polling the FlexRay Driver to getting CC clock
        correction values.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05414.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06105_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetGetChannelStatusSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable of polling the FlexRay Driver to getting error
        information about the FlexRay communications bus.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf06105_1_Conf</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06105_1_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetChannelStatusSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable of polling the FlexRay Driver to getting error
        information about the FlexRay communications bus.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05413.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06105_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06114_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetNmVectorSupport
      Description Configuration parameter to enable/disable FrIf support to
        request the FlexRay hardware NMVector.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05423.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06104_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetNumOfStartupFramesSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable of polling the FlexRay Driver for the actual number of
        received startup frames on the bus.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05416.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06107_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetSyncFrameListSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable of polling the FlexRay Driver to getting a list of actual
        received sync frames.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05415.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06101_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetTransceiverErrorSupport
      Description Configuration parameter to enable/disable FrIf support to get
        the FlexRay Transceiver errors by calling the FlexRay Transceiver
        module.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05419.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06111_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGetWakeupRxStatusSupport
      Description Configuration parameter to enable/disable FrIf support to get
        the wakeup received information from the FlexRay controller.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05417.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06081_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfNumClstSupported
      Description Maximum number of FlexRay Clusters that the FlexRay Interface
        supports.
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -
        Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06082_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfNumCtrlSupported
      Description Maximum number of FlexRay CCs that the FlexRay Interface
        supports
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06116_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfPublicCddHeaderFile
      Description Defines header files for callback functions which shall be included in case 
                  of CDDs. Range of characters is 1.. 32. 
      Multiplicity 0..* 
      Type EcucStringParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.UserIndication
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserIndication</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06117_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfReadCCConfigApi
      Description Configuration parameter to enable/disable the optional FrIf_ReadCCConfig API. 
      Multiplicity 1
      Type EcucBooleanParamDef 
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06109_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfReconfigLPduSupport
      Description Configuration parameter to enable/disable FrIf support to
        enable/disable the reconfiguration of a given LPdu according to the
        parameters (FrameId, Channel, CycleRepetition, CycleOffset,
        PayloadLength, HeaderCRC) at runtime.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05422.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00001_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfUnusedBitValue
      Description Set unused bits to a defined value.
      Multiplicity 0..1
      Type EcucIntegerParamDef Range 0 .. 1
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05423.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06083_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfVersionInfoApi
      Description Enables/disables the existence of the FrIf_GetVersionInfo()
        API service true: FrIf_GetVersionInfo() API service exists false:
        FrIf_GetVersionInfo() API service does not exist
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X All Variants
        Link time -
        Post-build time -Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05366_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfCluster
      Description This container specifies a FrIf Cluster and all
        related data which is required to enable communication of the Cluster.
        A Cluster may  consist of more than one Controller.
      Configuration Parameters
      Included Containers
        FrIfClusterDemEventParameterRefs
          0..1
          Container for the references to DemEventParameter elements which shall
          be invoked using the API Dem_ReportErrorStatus API in case the
          corresponding error occurs. The EventId is taken from the referenced
          DemEventParameter's DemEventId value. The standardized errors are
          provided in the container and can be extended by vendor specific error
          references.
        FrIfController
          1..*
          This container contains the configuration of FlexRay CC.
        FrIfJobList
          1
          This container specifies a list of all FlexRay Jobs of the Cluster to
          be performed by FrIf_JobListExec_&lt;ClstIdx&gt;().
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06002_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfClstIdx
      Description This parameter provides a zero-based consecutive index of the
        FlexRay Clusters. Upper layer BSW modules and the FrIf itself use this
        index to identify a FlexRay Cluster.
      Multiplicity 1
      Type EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range 0 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NonLegSymbolicNames</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SymbolicNames</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00003_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfDetectNITError
      Description Indicates whether NIT error status of each cluster shall be
        detected or not.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.FrIfDetectNITError</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06006_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGChannels
      Description The channels that are used by the cluster.
      Implementation Type: Fr_ChannelType
      Multiplicity 1
      Type EcucEnumerationParamDef
      Range
        FR_CHANNEL_A Cluster uses channel A
        FR_CHANNEL_AB Cluster uses channel A and B
        FR_CHANNEL_B Cluster uses channel B
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06008_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGColdStartAttempts
      Description Maximum number of times a node in the cluster is permitted to
        attempt to start the cluster by initiating schedule synchronization
      Multiplicity 1
      Type EcucIntegerParamDef Range 2 .. 31
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06086_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGCycleCountMax
      Description Maximum cycle counter value in a given cluster.
      Remark: Set to 63 for FlexRay Protocol 2.1 Rev. A compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 7 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06009_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGListenNoise
      Description Upper limit for the start up listen timeout and wake up listen
        timeout in the presence of noise. It is used as a multiplier of the node
        parameter pdListenTimeout.
      Multiplicity 1
      Type EcucIntegerParamDef Range 2 .. 16
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06010_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGMacroPerCycle
      Description Number of macroticks in a communication cycle. Note: Lower
        limit 10 for FlexRay Protocol 2.1 Rev. A compliance
      Multiplicity 1
      Type EcucIntegerParamDef Range 8 .. 16000
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module/Fr
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06011_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGMaxWithoutClockCorrectFatal
      Description Threshold used for testing the vClockCorrectionFailed counter.
        Defines the number of consecutive even/odd Cycle pairs with missing
        clock correction terms that will cause the protocol to transition from
        the POC:normal active or POC:normal passive state into the POC:halt
        state. [Even/odd cycle pairs].
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06012_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGMaxWithoutClockCorrectPassive
      Description Threshold used for testing the vClockCorrectionFailed counter.
        Defines the number of consecutive even/odd Cycle pairs with missing
        clock correction terms that will cause the protocol to transition from
        the POC:normal active state to the POC:normal passive state. [Even/Odd
        cycle pairs]
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06013_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGNetworkManagementVectorLength
      Description Length of the Network Management vector in a cluster [bytes]
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 12
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06014_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGNumberOfMinislots
      Description Number of minislots in the dynamic segment
      Remark: Upper limit 7986 for FlexRay Protocol 2.1 Rev. A compliance
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 7988
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06015_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGNumberOfStaticSlots
      Description Number of static slots in the static segment
      Multiplicity 1
      Type EcucIntegerParamDef Range 2 .. 1023
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06018_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGPayloadLengthStatic
      Description Payload length of a static frame [16 bit words]
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 127
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06019_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGSyncFrameIDCountMax
      Description Maximum number of distinct syncframe identifiers present in a
        given cluster. This parameter maps to FlexRay Protocol 2.1 Rev. A
        parameter gSyncNodeMax.
      Multiplicity 1
      Type EcucIntegerParamDef Range 2 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06020_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdActionPointOffset
      Description Number of macroticks the action point is offset from the
        beginning of a static slot.
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module/Fr
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06021_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdBit
      Description Nominal bit time in seconds
      Multiplicity 1
      Type EcucEnumerationParamDef Range T100NS - T200NS - T400NS
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06024_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdCasRxLowMax
      Description Upper limit of the CAS acceptance windows [gdBit]
      Remark: Range 67 to 99 for FlexRay Protocol 2.1 Rev. A compliance
      Multiplicity 1
      Type EcucIntegerParamDef Range 28 .. 254
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module/Fr
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06025_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdCycle
      Description Length of the cycle, expressed in [s]
      Remark: Lower limit 0.000024 for FlexRay Protocol 3.0 compliance.
      Multiplicity 1
      Type EcucFloatParamDef Range 2.4E-5 .. 0.016
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06026_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdDynamicSlotIdlePhase
      Description Duration of the idle phase within a dynamic slot [Minislots].
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 2
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00012_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdIgnoreAfterTx
      Description Duration for which the bitstrobing is paused after
        transmission [gdBit].
      Remark: Set to 0 for FlexRay Protocol 2.1 Rev. A compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06027_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdMacrotick
      Description Duration of the cluster wide nominal macrotick, expressed in s
      Multiplicity 1
      Type EcucFloatParamDef Range 1E-6 .. 6E-6
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06032_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdMiniSlotActionPointOffset
      Description Number of Macroticks the Minislot action point is offset from
        the beginning of a Minislot [Macroticks].
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 31
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06033_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdMinislot
      Description Duration of a minislot [Macroticks]
      Multiplicity 1
      Type EcucIntegerParamDef Range 2 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module/Fr
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06034_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdNit
      Description Duration of the Network Idle Time [Macroticks]
      Remark: Upper limit 805 for FlexRay Protocol 2.1 Rev. A compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 2 .. 15978
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06035_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdSampleClockPeriod
      Description Sample clock period
      Multiplicity 1
      Type EcucEnumerationParamDef Range T12_5NS - T25NS - T50NS
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06036_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdStaticSlot
      Description Duration of a static slot [Macroticks].
      Remark: Range 4-661 for FlexRay Protocol 2.1 Rev. A compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 3 .. 664
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06037_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdSymbolWindow
      Description Duration of the symbol window [Macroticks].
      Remark: Range 0-142 for FlexRay Protocol 2.1 Rev. A compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 162
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00011_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdSymbolWindowActionPointOffset
      Description Number of macroticks the action point offset is from the
        beginning of the symbol window [Macroticks].
      Remark: Set to GdActionPointOffset for FlexRay Protocol 2.1 Rev. A
        compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06038_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdTSSTransmitter
      Description Number of bits in the Transmission Start Sequence [gdBits].
      Remark: Lower limit 3 for FlexRay Protocol 2.1 Rev. A compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 15
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06039_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdWakeupRxIdle
      Description Number of bits used by the node to test the duration of the
        'idle' or HIGH phase of a received wakeup [gdBit].
      Remarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter
        gdWakeupSymbolRxIdle. Lower limit 14 for FlexRay Protocol 2.1 Rev. A
        compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 8 .. 59
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06040_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdWakeupRxLow
      Description Number of bits used by the node to test the duration of the
        LOW phase of a received wakeup [gdBit].
      Remarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter
        gdWakeupSymbolRxLow. Lower limit 11 for FlexRay Protocol 2.1 Rev. A
        compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 8 .. 59
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06041_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdWakeupRxWindow
      Description The size of the window used to detect wakeups [gdBit].
      Remarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter
        gdWakeupSymbolRxWindow. Upper limit 301 for FlexRay Protocol 2.1 Rev. A
        compliance.
      Multiplicity 1
      Type EcucIntegerParamDef Range 76 .. 485
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06043_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdWakeupTxActive
      Description Number of bits used by the node to transmit the LOW phase of
        awakeup symbol and the HIGH and LOW phases of a WUDOP [gdBit].
      Remarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter
        gdWakeupSymbolTxLow.
      Multiplicity 1
      Type EcucIntegerParamDef Range 15 .. 60
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06042_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfGdWakeupTxIdle
      Description Number of bits used by the node to transmit the 'idle' part of
        a wakeup symbol [gdBit].
      Remarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter
        gdWakeupSymbolTxIdle.
      Multiplicity 1
      Type EcucIntegerParamDef Range 45 .. 180
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06003_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfMainFunctionPeriod
      Description The execution cycle of the FrIf_MainFunction_&amp;lt;cluster&amp;gt;()
        in seconds. The FrIf does not require this information but the BSW
        scheduler, which invokes the cluster main functions, needs it in order
        to plan its tasks.
      Multiplicity 1
      Type EcucFloatParamDef Range 0 .. Inf
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06004_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfMaxIsrDelay
      Description The maximum delay in macroticks the
        FrIf_JoblistExec_&amp;lt;cluster&amp;gt;() function is processed after the
        absolute timer interrupt was triggered.
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 10240000
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00004_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfSafetyMargin
      Description Additional timespan in macroticks which takes jitter into
        account to be able to set the JobListPointer to the next possible job
        which can be executed in case the FlexRay Job List Execution Function
        has be resynchronized.
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 10240000
      Default value -
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SafetyMargin</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05363_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfController
      Description This container contains the configuration of FlexRay CC.
      Configuration Parameters
      Included Contrainers
        FrIfFrameTriggering
          1..*
          A Frame triggering contains the communication parameters of the
          FlexRay Frame as well as a reference to the Frame Construction Plan.
        FrIfLPdu
          1..*
          Reference to a L-PDU index
        FrIfTransceiver
          0..2
          Up to two FlexRay Transceivers may connect a Controller to a Cluster.
          This container realizes a Controller-Transceiver assignment.
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06045_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCtrlIdx
      Description This parameter provides a zero-based consecutive index of the
        FlexRay Communication Controllers. Upper layer BSW modules and the FrIf
        itself use this index to identify a FlexRay CC.
      Multiplicity 1
      Type EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range 0 .. 31
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06044_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfFrCtrlRef
      Description Reference to a Controller, which is handled by a specific
        Driver. This reference is unique for the ECU.
      Multiplicity 1
      Type Reference to [ FrController ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05391_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Description
      Container Name FrIfTransceiver Up to two FlexRay Transceivers may connect
        a Controller to a Cluster. This container realizes a
        Controller-Transceiver assignment.
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06062_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfClusterChannel
      Description This parameter identifies to which one of the two Channels (A,
        B, A and B) of the Cluster the Transceiver is connected.
        FrIfClusterChannel shall map to Fr_ChannelType: FRIF_CHANNEL_A ==
        FR_CHANNEL_A FRIF_CHANNEL_B == FR_CHANNEL_B FR_CHANNEL_AB shall not be
        used.
      Multiplicity 1
      Type EcucEnumerationParamDef Range FRIF_CHANNEL_A Channel A FRIF_CHANNEL_B
        Channel B
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06061_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfFrTrcvChannelRef
      Description Reference to a Transceiver Driver Channel. This reference is
        unique for the ECU.
      Multiplicity 1
      Type Reference to [ FrTrcvChannel ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05364_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfLPdu
      Description Reference to a L-PDU index
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06058_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfLPduIdx
      Description This parameter identifies the L-PDU in the interaction between
        FlexRay Interface and FlexRay Driver.
      Multiplicity 1
      Type EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range 0 .. 4095
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NonLegSymbolicNames</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SymbolicNames</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00008_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfReconfigurable
      Description This parameter specifies that this LPdu is
        reconfigurable using FrIf_ReconfigLPdu. This means that this LPdu can be
        assigned to a different FrameTriggering at runtime. However, this
        reconfiguration is limited by hardware constraints. The direction of the
        LPdu cannot be reconfigured.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05311.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06057_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfVBTriggeringRef
      Description Reference to the assigned Frame triggering.
      Multiplicity 1
      Type Reference to [ FrIfFrameTriggering ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TriggerTransmit_TxPduId</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringDisabled</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06090_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfFrameTriggering
      Description A Frame triggering contains the communication parameters of
        the FlexRay Frame as well as a reference to the Frame Construction
        Plan.
      Configuration Parameters
      Included Containers
        FrIfFrameTriggeringDemEventParameterRefs
          0..1
          Container for the references to DemEventParameter elements which shall
          be invoked using the API Dem_ReportErrorStatus API in case the
          corresponding error occurs. The EventId is taken from the referenced
          DemEventParameter's DemEventId value. The standardized errors are
          provided in the container and can be extended by vendor specific error
          references.
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR20-11.SWS_FrIf_05244.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06049_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfAllowDynamicLSduLength
      Description Allows L-PDU length reduction ('FrIfLSduLength' defines max.
        length) and indicates that the related CC buffer has to be reconfigured
        for the actual length and Header-CRC before transmission of the L-PDU.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00013_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfAlwaysTransmit
      Description Defines wether the driver's API function Fr_TransmitTxLPdu()
        shall always be called for this L-PDU.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value -
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionAlwaysTransmit</srcid><srcstatus/><internalId>914</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06051_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfBaseCycle
      Description This parameter contains the FlexRay Base Cycle used to
        transmit this FlexRay Frame.
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06052_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfChannel
      Description This parameter contains the FlexRay Channel used to transmit
        this FlexRay Frame.
      Multiplicity 1
      Type EcucEnumerationParamDef
      Range
        FRIF_CHANNEL_A Channel A
        FRIF_CHANNEL_AB Channel A and B
        FRIF_CHANNEL_B Channel B
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_A</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_B</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_AB</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_WrongChannel</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06053_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCycleRepetition
      Description This parameter contains the FlexRay Cycle Repetition used to
        transmit this FlexRay Frame.. possible Values: 1,2,4,8,16,32,64
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 64
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06054_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfLSduLength
      Description The payload length of the Frame is given here. This parameter
        is required for validation if configured PDUs and update information
        fits into the Frame at configuration time [bytes].
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 254
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
      Scope / Dependency
        scope: Module
        dependency: The parameter depends on the low level parameters of
        the FlexRay CC.
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00010_Conf</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfMessageId
      Description The first two bytes of the payload segment of the FlexRay
        frame format for frames transmitted in the dynamic segment can be used
        as receiver filterable data called the message ID.
      Multiplicity 0..1
      Type EcucIntegerParamDef Range 0 .. 65535
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This requirement is not applicable.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06055_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfPayloadPreamble
      Description Switching the Payload Preamble bit.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06056_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfSlotId
      Description This parameter contains the FlexRay Slot ID used to transmit
        this FlexRay Frame.
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 2047
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_A</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_B</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_AB</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_PartialReception</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_Sequence</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_FrameIdNotConfigured</srcid><srcstatus/><internalId>1346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06048_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfFrameStructureRef
      Description Reference to the Construction Plan of the FlexRay Frame.
      Multiplicity 1
      Type Reference to [ FrIfFrameStructure ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIfFrameStructure_NotReferenced</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05367_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfJobList
      Description This container specifies a list of all FlexRay Jobs of the
        Cluster to be performed by FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt;().
      Configuration Parameters
      Included Containers
        FrIfJob
          1..*
          A job may contain more than one operation that are executed at a
          specific point in time.
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06063_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfAbsTimerRef
      Description Reference to the absolute timer to be used to trigger the
        interrupt whose ISR contains the FrIf_JobListExec_&amp;lt;ClstIdx&amp;gt;()
        function.
      Multiplicity 1
      Type Reference to [ FrAbsoluteTimer ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05368_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfJob
      Description A job may contain more than one operation that are executed at
        a specific point in time.
      Configuration Parameters
      Included Containers
        FrIfCommunicationOperation
          1..*
          A separate operation which is part of a FlexRay Job and defines what
          type of action is executed.
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06064_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCycle
      Description The FlexRay Cycle in which the communication operation will
        execute this job
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 63
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06065_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfMacrotick
      Description Macrotick offset in the Cycle [Macrotick]
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 10240000
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05369_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfCommunicationOperation
      Description A separate operation which is part of a FlexRay Job and
        defines what type of action is executed.
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06067_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCommunicationAction
      Description The action to be performed in the FlexRay Operation
      Multiplicity 1
      Type EcucEnumerationParamDef
      Range
        DECOUPLED_TRANSMISSION Decoupled transmission
        FREE_OP_A User defined communication operation.
        FREE_OP_B User defined communication operation.
        PREPARE_LPDU Prepare message buffer of CC
        RECEIVE_AND_INDICATE Immediate reception
        RECEIVE_AND_STORE Decoupled reception
        RX_INDICATION Reception indication
        TX_CONFIRMATION Transmission confirmation
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      Deviation: The Communication operations FREE_OP_A and
      FREE_OP_B have not been implemented in this release.
      &lt;!--
      Linked to deviation dev.FrIf.UserCommOp
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserCommOp</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR40.FrIf06067_Conf_EB</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06067_Conf_EB</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCommunicationAction
      Description The action to be performed in the FlexRay Operation
      Multiplicity 1
      Type EcucEnumerationParamDef
      Range
        DECOUPLED_TRANSMISSION Decoupled transmission
        PREPARE_LPDU Prepare message buffer of CC
        RECEIVE_AND_INDICATE Immediate reception
        RECEIVE_AND_STORE Decoupled reception
        RX_INDICATION Reception indication
        TX_CONFIRMATION Transmission confirmation
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06067_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06068_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCommunicationOperationIdx
      Description For each FlexRay Communication Job, this index spans a range
        of zero based consecutive values and thus defines the order of the
        FlexRay Communication Operation in the respective FlexRay Communication
        Job.
      Multiplicity 1
      Type EcucIntegerParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00007_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfRxComOpMaxLoop
      Description Defines the maximum number of loops for the receive
        RECEIVE_AND_INDICATE (Use case: emptying a FIFO).
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 512
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      Parameter FrIfGlobalRxMaxLoop is used instead.
      &lt;!--
      Linked to deviation dev.FrIf.RxComOpMaxLoop
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.RxComOpMaxLoop</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06066_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfLPduIdxRef
      Description Reference to a L-PDu index
      Multiplicity 1
      Type Reference to [ FrIfLPdu ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05370_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfFrameStructure
      Description The Frame structure specifies a Construction Plan how a Frame
        is assembled with PDUs and their respective Update-Bits.
      Configuration Parameters
      Included Containers
        FrIfPdusInFrame
          1..*
          This container holds all the information about a PDU in a FlexRay
          Frame.
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06113_Conf</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfByteOrder
      Description This parameter defines the ByteOrder of all Pdus that are
        mapped into the Frame. The absolute position of a Pdu in the Frame is
        determined by the definition of the ByteOrder parameter: If BIG_ENDIAN
        is specified, the FrIfPduOffset indicates the position of the most
        significant bit in the Frame. If LITTLE_ENDIAN is specified, the
        FrIfPduOffset indicates the position of the least significant bit in the
        Frame.
      Multiplicity 1
      Type EcucEnumerationParamDef
      Range BIG_ENDIAN - LITTLE_ENDIAN -
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency
      </description>
      <comment>
      This requirement is not applicable:
      Not relevant for implementation. 
      The FrIf layer handles Frames as Byte-arrays and transperently passes through
      Pdus without changing the ByteOrder.
      Therefore the ByteOrder of the Pdus has no meaning for the FrIf. 
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05371_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfPdusInFrame
      Description This container holds all the information about a PDU in a
        FlexRay Frame.
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06070_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfPduOffset
      Description The value specifies the offset of the PDU within the Frame
        [bytes].
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 253
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency
        scope: Module
        dependency: This parameter depends on the number of PDUs contained
        in the Frame, PDU length, and Update-Bits of other PDUs in the Frame. In
        addition, if the Frame will is sent in static segment, this parameter
        depends on GPayloadLengthStatic.
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06071_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfPduUpdateBitOffset
      Description This value specifies where the PDU's Update-Bit is stored in
        the Frame (bit location of PDU's Update-Bit in the FlexRay Frame).
      Multiplicity 0..1
      Type EcucIntegerParamDef Range 0 .. 2031
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency
        scope: Module
        dependency: This parameter depends on the number of PDUs contained
        in the Frame, PDU length, and Update-Bits of other PDUs in the Frame. In
        addition, if the Frame will is sent in static segment, this parameter
        depends on GPayloadLengthStatic.
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30005</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06069_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfPduRef
      Description This is the reference to the local definition of a PDU.
      Multiplicity 1
      Type Reference to [ FrIfPdu ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIfPdu_NotReferenced</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05372_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfPdu{FRIF_PDU} Contains PDU information. A PDU may be
        either a transmission PDU or a
      Description reception PDU.
      Configuration Parameters
      Included Containers
        FrIfPduDirection
          1
          A PDU is either transmit or receive
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05374_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfTxPdu
      Description This container specifies transmission PDUs.
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06075_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfConfirm
      Description Defines whether the transmission of a PDU should be checked
        and confirmed to the PDU owning BSW module.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06076_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfCounterLimit
      Description This value states the maximum number of indication of ready
        PDU data to the FrIf (i.e. maximum number of invocations of
        FrIf_Transmit) without an intermediate transmission of the PDU.
      Multiplicity 1
      Type EcucIntegerParamDef Range 0 .. 255
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.FrIfCounterLimit</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06077_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfImmediate
      Description Defines whether the PDU is transmitted immediate or decoupled.
      Multiplicity 1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06050_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfNoneMode
      Description Using the "None-Mode" which means that there is no API
        FrIf_Transmit call of the upper layer for this PDU.
      Multiplicity 0..1
      Type EcucBooleanParamDef
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency
        scope: Module
        dependency: FrIfImmediate
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.NoneMode
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.NoneMode</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00014_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfTxConfirmationName
      Description This parameter defines the name of the
        &amp;lt;User_TxConfirmation&amp;gt;. This parameter depends on the parameter
        FrIfUserTxUL. If FrIfUserTxUL equals FR_TP, FR_NM, PDUR or XCP, the name
        of the &amp;lt;User_TxConfirmation&amp;gt; is fixed. If FrIfUserTxUL equals CDD,
        the name of the &amp;lt;User_TxConfirmation&amp;gt; is selectable.
      Multiplicity 0..1
      Type EcucFunctionNameDef
      Default value -maxLength -minLength -regularExpression
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.UserIndication
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserIndication</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06078_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfTxPduId
      Description The global PDU identifier, which has to be used by the upper
        layer BSW module. The identifier has to be zero based and consecutive.
      Multiplicity 1
      Type EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range 0 .. 65535
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: FrIf and PduR/FrNm/FrTp
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NonLegSymbolicNames</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SymbolicNames</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06084_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfUserTriggerTransmitName
      Description This parameter defines the name of the
        &amp;lt;User_TriggerTransmit&amp;gt;. This parameter depends on the parameter
        FrIfUserTxUL. If FrIfUserTxUL equals FR_TP, FR_NM, PDUR or XCP, the name
        of the &amp;lt;User_TriggerTransmit&amp;gt; is fixed. If FrIfUserTxUL equals
        CDD, the name of the &amp;lt;User_TriggerTransmit&amp;gt; is selectable.
      Multiplicity 0..1
      Type EcucFunctionNameDef
      Default value -
      maxLength -
      minLength -
      regularExpression -
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency
        scope: ECU
        dependency: FrIfImmediate
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.UserIndication
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserIndication</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00015_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfUserTxUL
      Description This parameter defines the upper layer (UL) module to which
        the trigger of the to be transmitted FRIFTXPDUID (via the
        &amp;lt;User_TriggerTransmit&amp;gt;) or the confirmation of the successfully
        transmitted FRIFTXPDUID has to be routed (via the
        &amp;lt;User_TxConfirmation&amp;gt;).
      Multiplicity 1
      Type EcucEnumerationParamDef Range CDD Complex Device Driver FR_NM FR NM
        FR_TP FR TP PDUR PDU Router XCP Extended Calibration Protocol
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.UserIndication
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserIndication</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06074_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfTxPduRef
      Description Reference to the external PDU definition.
      Multiplicity 1
      Type Reference to [ Pdu ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05373_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfRxPdu
      Description Receive PDU
      Configuration Parameters
      No Included Containers
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00016_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfRxIndicationName
      Description This parameter defines the name of the
        &amp;lt;User_RxIndication&amp;gt;. This parameter depends on the parameter
        FRIF_USERRXINDICATION_UL. If FRIF_USERRXINDICATION_UL equals FR_TP,
        FR_NM, PDUR or XCP, the name of the &amp;lt;User_RxIndication&amp;gt; is fixed.
        If FRIF_USERRXINDICATION_UL equals CDD, the name of the
        &amp;lt;User_RxIndication&amp;gt; is selectable.
      Multiplicity 0..1
      Type EcucFunctionNameDef
      Default value -maxLength -minLength -regularExpression
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.UserIndication
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserIndication</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00017_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfUserRxIndicationUL
      Description This parameter defines the upper layer (UL) module to which
        the indication of the successfully received FRIFRXPDU has to be routed
        via &amp;lt;User_RxIndication&amp;gt;. This &amp;lt;User_RxIndication&amp;gt; has to be
        invoked when the indication of the configured FRIFRXPDU will be received
        by a Rx indication event from the FR Driver module. If no upper layer
        (UL) module is configured, no &amp;lt;User_RxIndication&amp;gt; has to be called
        in case of a Rx indication event of the FRIFRXPDU from the FR Driver
        module.
      Multiplicity 1
      Type EcucEnumerationParamDef Range CDD Complex Device Driver FR_NM FR NM
        FR_TP FR TP PDUR PDU Router XCP Extended Calibration Protocol
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
      &lt;!--
      Linked to deviation dev.FrIf.UserIndication
      --&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.FrIf.UserIndication</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06073_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfRxPduRef
      Description Reference to the external PDU definition.
      Multiplicity 1
      Type Reference to [ Pdu ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: ECU
      </description>
      <comment>
        Checked by VSMD checker
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06072_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Choice container Name FrIfPduDirection
      Description A PDU is either transmit or receive
      Container Choices
        FrIfRxPdu
          0..1
          Receive PDU
        FrIfTxPdu
          0..1
          This container specifies transmission PDUs.
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06001_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfConfig [Multi Config Container]
      Description Configuration of the FlexRay Interface. This container is a
        MultipleConfigurationContainer, i.e. this container and its
        sub-containers exist once per configuration set.
      Configuration Parameters
      Included Containers
        FrIfCluster
          1..*
          This container specifies a FrIf Cluster and all related data which is
          required to enable communication of the Cluster. A Cluster may consist
          of more than one Controller.
        FrIfFrameStructure
          0..*
          The Frame structure specifies a Construction Plan how a Frame is
          assembled with PDUs and their respective Update-Bits.
        FrIfPdu
          1..*
          Contains PDU information. A PDU may be either a transmission PDU or a
          reception PDU.
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06091_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfClusterDemEventParameterRefs
      Description Container for the references to DemEventParameter elements
        which shall be invoked using the API Dem_ReportErrorStatus API in case
        the corresponding error occurs. The EventId is taken from the referenced
        DemEventParameter's DemEventId value. The standardized errors are
        provided in the container and can be extended by vendor specific error
        references. Configuration Parameters No Included Containers
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06097_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FRIF_E_ACS_CH_A
      Description Reference to the DemEventParameter which shall be issued when
        an error in ACS on channel A was detected.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05120g.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06098_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FRIF_E_ACS_CH_B
      Description Reference to the DemEventParameter which shall be issued when
        an error in ACS on channel B was detected.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05120h.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06093_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FRIF_E_NIT_CH_A
      Description Reference to the DemEventParameter which shall be issued when
        an error in NIT on channel A was detected.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05120c.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06094_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FRIF_E_NIT_CH_B
      Description Reference to the DemEventParameter which shall be issued when
        an error in NIT on channel B was detected.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05120d.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06095_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FRIF_E_SW_CH_A
      Description Reference to the DemEventParameter which shall be issued when
        an error in SW on channel A was detected.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05120e.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06096_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FRIF_E_SW_CH_B
      Description Reference to the DemEventParameter which shall be issued when
        an error in SW on channel B was detected.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR40.FrIf05120f.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06099_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Container Name FrIfFrameTriggeringDemEventParameterRefs
      Description Container for the references to DemEventParameter elements
        which shall be invoked using the API Dem_ReportErrorStatus API in case
        the corresponding error occurs. The EventId is taken from the referenced
        DemEventParameter's DemEventId value. The standardized errors are
        provided in the container and can be extended by vendor specific error
        references. Configuration Parameters No Included Containers
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf00009_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      Name FrIfDemFTSlotStatusRef
      Description Reference to DEM event Id that is reported when FlexRay driver
        module detects slot errors. If this parameter is not configured, no
        event reporting happens.
      Multiplicity 0..1
      Type Reference to [ DemEventParameter ]
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
        Link time X VARIANT-LINK-TIME
        Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      This is a feature of the Fr module - thus not related to FrIf.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      The standardized common published parameters as required by BSW00402 in the
      General Requirements on Basic Software Modules [3] shall be published
      within the header file of this module and need to be provided in the BSW
      Module Description. The according module abbreviation can be found in the
      List of Basic Software Modules [1].
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30003</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf06118</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V3.3.0</source>
      <version>1</version>
      <description>
      These requirements are not applicable to this specification. (BSW159,
      BSW167, BSW00387, BSW00416, BSW168, BSW00423, BSW00424, BSW00425, BSW00426,
      BSW00427, BSW00428, BSW00429, BSW00431, BSW00432, BSW00434, BSW00417, BSW00386,
      BSW161, BSW162, BSW005, BSW00415, BSW164, BSW00325, BSW00326, BSW00413,
      BSW00347, BSW00373, BSW00335, BSW00410, BSW00314, BSW00370, BSW00328, BSW00312,
      BSW006, BSW00377, BSW00306, BSW00371, BSW00376, BSW00329, BSW00330, , BSW00331,
      BSW009, BSW172, BSW010, BSW00333, BSW00341, BSW05078, BSW05101, BSW05163,
      BSW05164, BSW05165, BSW05067, BSW05068, BSW05069, BSW05153, BSW05035, BSW05038,
      BSW05162, BSW05113, BSW05102, BSW05009)
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

    <specobject>
      <id>FrIf.ASR20-11.SWS_FrIf_05244</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, R20-11</source>
      <version>1</version>
      <description>
      The FrIf module shall pad transmitted PDUs that are located on a FrIf L-Sdu where
      FrIfAllowDynamicLSduLength is set to false, if the size is smaller than the configured size of
      the PDU. Padding shall be done with the configured FrIfUnusedBitValue.
      </description>
      <comment>
      This requirement is in relation with constr_5104 and constr_5105 in
      AUTOSAR_TPS_SystemTemplate.pdf, R20-11.
      See also AR-87698 for further information.
      This requirement replaced FrIf.ASR40.FrIf05092.
      </comment>
      <releases>
        <release>AUTOSAR 20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_LastTwoPdusNotUpdated</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_LastPduNotUpdated</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLength_UpdatBitLast</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_DecoupledTransmissionDynamicLengthNoTransmit</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>FrIf.ASR44.SWS_FrIf_05095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V4.4.0</source>
      <version>1</version>
      <description>
      Mirror.h contains the declaration of the API service the Bus Mirroring module offers to the
      FlexRay Interface. This header is only included if Bus Mirroring is enabled
      (see FrIfBusMirroringSupport)
      </description>
      <releases>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_Priv.h_23</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>FrIf.ASR44.SWS_FrIf_01124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V4.4.0</source>
      <version>1</version>
      <description>
      If Bus Mirroring is enabled globally (see FrIfBusMirroringSupport), then call
      Fr_GetChannelStatus for all controllers of each FlexRay cluster for which mirroring has been
      activated with a call to FrIf_EnableBusMirroring(), merge the states reported for the
      controllers of one cluster with a binary OR, and then call Mirror_ReportFlexRayChannelStatus()
      with the cluster, Fr_ChannelAStatusPtr, and Fr_ChannelBStatusPtr to report the aggregated
      channel states to the Bus Mirroring module.
      </description>
      <releases>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_StateMachine.c_909</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>FrIf.ASR44.SWS_FrIf_05726</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V4.4.0</source>
      <version>1</version>
      <description>
      Service name: FrIf_EnableBusMirroring
      Syntax: Std_ReturnType FrIf_EnableBusMirroring( uint8 FrIf_ClstIdx,
        boolean FrIf_MirroringActive )
      Service ID[hex]: 0x4b
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): FrIf_ClstIdx Index of the FlexRay cluster to address.
        FrIf_MirroringActive
          TRUE: Mirror_ReportFlexRayFrame will be called for each frame received or transmitted on
            the addressed FlexRay CC.
          FALSE: Mirror_ReportFlexRayFrame will not be called for the addressed FlexRay CC.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: Mirroring mode was changed.
        E_NOT_OK: Wrong FrIf_CtrlIdx, or mirroring is globally disabled
          (see FrIfBusMirroringSupport).
      Description: Enables or disables mirroring for all FlexRay controllers connected to the
        addressed FlexRay cluster.
      </description>
      <releases>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>FrIf.ASR44.SWS_FrIf_05727</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V4.4.0</source>
      <version>1</version>
      <description>
      The function FrIf_EnableBusMirroring shall be pre compile time configurable ON/OFF by the
      configuration parameter FrIfBusMirroringSupport (see ECUC_FrIf_06124).
      </description>
      <releases>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_EnableBusMirroring.c_22</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>FrIf.ASR44.ECUC_FrIf_06124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayInterface.pdf, V4.4.0</source>
      <version>1</version>
      <description>
      Name: FrIfBusMirroringSupport
      Description: Configuration parameter to enable/disable FrIf support to enable/disable reporting
        received/transmitted frames to the Bus Mirroring module.
      Multiplicity: 1
      Type: EcucBooleanParamDef
      Default value: false
      Post-Build Variant Value: false
      ConfigurationClass:
        Pre-compile time X All Variants
        Link time -
        Post-build time -
        Scope / Dependency: scope: local
      </description>
      <comment>
      This is a configuration parameter requirement without functional specification.
      For functional specification refer to FrIf.ASR44.SWS_FrIf_05727.
      </comment>
      <releases>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrIf.EB.FrIfTransmitOffline</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If FrIf_Transmit() is called while states of all clusters are FRIF_STATE_OFFLINE, then
        FrIf_Transmit() shall not perform any action (beside Det checks) and immediately return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30020</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_Transmit_Offline</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DispatchComOps</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be an API function that dispatches the communication operations
      within a communication job.
      Service name: FrIf_DispatchComOps
      Syntax: Std_ReturnType FrIf_DispatchComOps
      (
          uint8 FrIf_ClstIdx,
          uint16 FrIf_JobIdx,
          uint8 FrIf_Cycle
      )
      Service ID[hex]: 0x32
      Sync/Async: Synchronous
      Reentrancy:
        non reentrant for the same FlexRay cluster
        reentrant for different FlexRay cluster
      Parameters (in):
        FrIf_ClstIdx            FlexRay cluster index.
        FrIf_JobIdx             FlexRay job index.
        FrIf_Cycle              FlexRay cycle number.
      Parameters (inout): None
      Parameters (out): None
      Return value:
           E_OK: Service execution was successful.
           E_NOT_OK: Service execution failed.
      Description:
      Dispatches the communication operations within a communication job.
      If DET is enabled and FrIf_Init() was not called before this service
      FRIF_E_NOT_INITIALIZED is reported to DET and E_NOT_OK returned.
      If DET is enabled and FrIf_JobIdx contains an invalid value
      FRIF_E_INV_JOB_IDX is reported to DET and E_NOT_OK returned.
      If DET is enabled and FrIf_ClstIdx contains an invalid value
      FRIF_E_INV_CLST_IDX is reported to DET and E_NOT_OK returned.
      If DET is enabled and FrIf_Cycle contains an invalid value
      FRIF_E_INV_CYCLE is reported to DET and E_NOT_OK returned.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CLST_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_JOB_CYCLE_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1054</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SendMTS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be an API function that wraps the Fr_SendMTS of the FlexRay driver.
      Service name: FrIf_SendMTS
      Syntax: Std_ReturnType FrIf_SendMTS( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx )
      Service ID[hex]: 0x90
      Sync/Async: Asynchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in):
        FrIf_CtrlIdx: Index of the FlexRay CC to address.
        FrIf_ChnlIdx: Index of the FlexRay channel within the context of the
          FlexRay CC FrIfCtrlIdx. Valid values are FRIF_CHANNEL_A and
          FRIF_CHANNEL_B
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned
          E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_SendMTS().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SendMTS</srcid><srcstatus/><internalId>1020</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SendMTS</srcid><srcstatus/><internalId>1028</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SendMTS</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SendMTS</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendMTS</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>FrIf.EB.StopMTS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be an API function that wraps the Fr_StopMTS of the FlexRay driver.
      Service name: FrIf_StopMTS
      Syntax: Std_ReturnType FrIf_StopMTS( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx )
      Service ID[hex]: 0x91
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in):
        FrIf_CtrlIdx: Index of the FlexRay CC to address.
        FrIf_ChnlIdx: Index of the FlexRay channel within the context of the
          FlexRay CC FrIfCtrlIdx. Valid values are FRIF_CHANNEL_A and
          FRIF_CHANNEL_B
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned
          E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_StopMTS().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_StopMTS</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_StopMTS</srcid><srcstatus/><internalId>1029</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_StopMTS</srcid><srcstatus/><internalId>1037</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_StopMTS</srcid><srcstatus/><internalId>1046</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StopMTS</srcid><srcstatus/><internalId>1269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>FrIf.EB.CheckMTS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be an API function that wraps the Fr_CheckMTS of the FlexRay driver.
      Service name: FrIf_CheckMTS
      Syntax: Std_ReturnType FrIf_CheckMTS( uint8 FrIf_CtrlIdx,
        Fr_ChannelType FrIf_ChnlIdx, Fr_MTSStatusType* FrIf_MTSStatusPtr )
      Service ID[hex]: 0x92
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs
      Parameters (in):
        FrIf_CtrlIdx: Index of the FlexRay CC to address.
        FrIf_ChnlIdx: Index of the FlexRay channel within the context of the
          FlexRay CC FrIfCtrlIdx. Valid values are FRIF_CHANNEL_A and
          FRIF_CHANNEL_B
      Parameters (inout): None
      Parameters (out): FrIf_MTSStatusPtr Address the output value is stored to.
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned
          E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_CheckMTS().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CheckMTS</srcid><srcstatus/><internalId>1022</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_CheckMTS</srcid><srcstatus/><internalId>1030</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CheckMTS</srcid><srcstatus/><internalId>1038</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_CheckMTS</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1159</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckMTS</srcid><srcstatus/><internalId>1271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetSyncState
      Syntax: Std_ReturnType FrIf_GetSyncState
      (
        uint8 FrIf_CtrlIdx,
        Fr_SyncStateType* FrIf_SyncStatePtr
      )
      Service ID[hex]: 0x99
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant for different values of
      FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters
      (inout):
      None
      Parameters (out): FrIf_SyncStatePtr Pointer to a memory location where output value will be stored.
      Return value:
      Std_ReturnType E_OK: The call of the FlexRay Driver's API service has returned
      E_OK.
      E_NOT_OK: The call of the FlexRay Driver's API service has
      returned E_NOT_OK, or an error has been detected in
      development mode.
      Description: Wraps the FlexRay Driver API function Fr_GetSyncState()
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetSyncState</srcid><srcstatus/><internalId>1057</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetSyncState</srcid><srcstatus/><internalId>1058</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetSyncState</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetSyncState</srcid><srcstatus/><internalId>1060</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1100</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1101</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1216</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncState</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an API function that wraps the FlexRay Driver API function
        Fr_GetControllerErrorStatus().
        Service name: FrIf_GetControllerErrorStatus
        Syntax: Std_ReturnType FrIf_GetControllerErrorStatus
        (
        uint8 FrIf_CtrlIdx,
        uint16 *FrIf_ControllerErrorStatusPtr
        )
        Service ID: 0x83
        Sync/Async: Synchronous
        Re-entrancy:
          non reentrant for identical values of FrIf_CtrlIdx
          reentrant for different values of FrIf_CtrlIdx
        Parameters (in):
          FrIf_CtrlIdx Index of the FlexRay CC within the context of the FlexRay
            interface.
        Parameters (out): FrIf_ControllerErrorStatusPtr Pointer to a memory location
            where output value will be stored.
        Return value:
          E_OK API call finished successfully.
          E_NOT_OK API call aborted due to errors.
        Description: Development error checking and reporting (executed only if
        FRIF_DEV_ERROR_DETECT is STD_ON):
        - If FrIf was not initialized successfully prior to this API call,
          FRIF_E_NOT_INITIALIZED is reported to the DET and the API function
          returns E_NOT_OK.
        - If FrIf_CtrlIdx has an invalid value, FRIF_E_INV_CTRL_IDX is reported to
          DET and the API function returns E_NOT_OK.
        This API service of the FlexRay Interface wraps the FlexRay Driver API function
        Fr_GetControllerErrorStatus().
        Caveats: --
        Configuration: --
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1052</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an API function that wraps the FlexRay Driver API function
        Fr_DisableIRQ(). Parameter FrIf_IRQIdx is passed to the Fr service as parameter
        Fr_IRQIdx.
        Service name: FrIf_DisableIRQ
        Syntax: Std_ReturnType FrIf_DisableIRQ
        (
        uint8 FrIf_CtrlIdx,
        uint8 FrIf_IRQIdx
        )
        Service ID: 0x88
        Sync/Async: Synchronous
        Re-entrancy:
          non re-entrant for identical values of FrIf_CtrlIdx
          re-entrant for different values of FrIf_CtrlIdx
        Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC within the context of the FlexRay
        interface.
        Parameters (in): FrIf_IRQIdx Index of the interrupt source.
        Parameters (out): None
        Return value:
          E_OK API call finished successfully.
          E_NOT_OK API call aborted due to errors.
        Description:
        Development error checking and reporting (executed only if
        FRIF_DEV_ERROR_DETECT is STD_ON):
        - If FrIf was not initialized successfully prior to this API call,
          FRIF_E_NOT_INITIALIZED is reported to the DET and the API function
          returns E_NOT_OK.
        - If FrIf_CtrlIdx has an invalid value, FRIF_E_INV_CTRL_IDX is reported to
          DET and the API function returns E_NOT_OK.
        This API service of the FlexRay Interface wraps the FlexRay Driver API function
        Fr_DisableIRQ(). Parameter FrIf_IRQIdx is passed to the Fr service as parameter
        Fr_IRQIdx.
        Caveats: --
        Configuration: --
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1025</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1174</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an API function that wraps the FlexRay Driver API function
        Fr_EnableIRQ(). Parameter FrIf_IRQIdx is passed to the Fr service as parameter
        Fr_IRQIdx.
        Service name: FrIf_EnableIRQ
        Syntax: Std_ReturnType FrIf_EnableIRQ
        (
        uint8 FrIf_CtrlIdx,
        uint8 FrIf_IRQIdx
        )
        Service ID: 0x87
        Sync/Async: Synchronous
        Re-entrancy:
          non re-entrant for identical values of FrIf_CtrlIdx
          re-entrant for different values of FrIf_CtrlIdx
        Parameters (in):
          FrIf_CtrlIdx Index of the FlexRay CC within the context of the FlexRay
            interface.
          FrIf_IRQIdx Index of the interrupt source.
        Parameters (out): None
        Return value:
          E_OK API call finished successfully.
          E_NOT_OK API call aborted due to errors.
        Description: Development error checking and reporting (executed only if
        FRIF_DEV_ERROR_DETECT is STD_ON):
        - If FrIf was not initialized successfully prior to this API call,
          FRIF_E_NOT_INITIALIZED is reported to the DET and the API function
          returns E_NOT_OK.
        - If FrIf_CtrlIdx has an invalid value, FRIF_E_INV_CTRL_IDX is reported to
          DET and the API function returns E_NOT_OK.
        This API service of the FlexRay Interface wraps the FlexRay Driver API function
        Fr_EnableIRQ(). Parameter FrIf_IRQIdx is passed to the Fr service as parameter
        Fr_IRQIdx.
        Caveats: --
        Configuration: --
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1024</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1040</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1049</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an API function that wraps the FlexRay Driver API function Fr_GetIRQStatus().
        Service name: FrIf_GetIRQStatus
        Syntax: Std_ReturnType FrIf_GetIRQStatus
        (
        uint8 FrIf_CtrlIdx,
        uint8 FrIf_IRQIdx,
        boolean *FrIf_IRQStatusPtr
        )
        Service ID: 0x89
        Sync/Async: Synchronous
        Re-entrancy:
          non re-entrant for identical values of FrIf_CtrlIdx
          re-entrant for different values of FrIf_CtrlIdx
        Parameters (in):
          FrIf_CtrlIdx Index of the FlexRay CC within the context of the FlexRay
            interface.
          FrIf_IRQIdx Index of the interrupt source.
        Parameters (out): None
        Return value:
          E_OK API call finished successfully.
          E_NOT_OK API call aborted due to errors.
        Description: Development error checking and reporting (executed only if
        FRIF_DEV_ERROR_DETECT is STD_ON):
        - If FrIf was not initialized successfully prior to this API call,
          FRIF_E_NOT_INITIALIZED is reported to the DET and the API function
          returns E_NOT_OK.
        - If FrIf_CtrlIdx has an invalid value, FRIF_E_INV_CTRL_IDX is reported to
          DET and the API function returns E_NOT_OK.
        This API service of the FlexRay Interface wraps the FlexRay Driver API function
        Fr_GetIRQStatus().
        Parameter FrIf_IRQIdx is passed to the Fr service as parameter Fr_IRQIdx.
        Parameter FrIf_IRQStatusPtr is passed to the Fr service as parameter
        Fr_StatusPtr.
        Caveats: --
        Configuration: --
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1042</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1051</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an API function that wraps the FlexRay Driver API function Fr_AckIRQ().
        Parameter FrIf_IRQIdx is passed to the Fr service as parameter Fr_IRQIdx.
        Service name: FrIf_AckIRQ
        Syntax: Std_ReturnType FrIf_AckIRQ
        (
        uint8 FrIf_CtrlIdx,
        uint8 FrIf_IRQIdx
        )
        Service ID: 0x86
        Sync/Async: Synchronous
        Re-entrancy:
          non re-entrant for identical values of FrIf_CtrlIdx
          re-entrant for different values of FrIf_CtrlIdx
        Parameters (in):
          FrIf_CtrlIdx Index of the FlexRay CC within the context of the FlexRay
            interface.
          FrIf_IRQIdx Index of the interrupt source.
        Parameters (out): None
        Return value:
          E_OK API call finished successfully.
          E_NOT_OK API call aborted due to errors.
        Description:
        Development error checking and reporting (executed only if
        FRIF_DEV_ERROR_DETECT is STD_ON):
        - If FrIf was not initialized successfully prior to this API call,
          FRIF_E_NOT_INITIALIZED is reported to the DET and the API function
          returns E_NOT_OK.
        - If FrIf_CtrlIdx has an invalid value, FRIF_E_INV_CTRL_IDX is reported to
          DET and the API function returns E_NOT_OK.
        This API service of the FlexRay Interface wraps the FlexRay Driver API function
        Fr_AckIRQ(). Parameter FrIf_IRQIdx is passed to the Fr service as parameter
        Fr_IRQIdx.
        Caveats: --
        Configuration: --
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AckIRQ</srcid><srcstatus/><internalId>1023</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_AckIRQ</srcid><srcstatus/><internalId>1031</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckIRQ</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AckIRQ</srcid><srcstatus/><internalId>1048</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1280</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckIRQ</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_SetRelativeTimer
      Syntax: Std_ReturnType FrIf_SetRelativeTimer( uint8 FrIf_CtrlIdx, uint8
        FrIf_RelTimerIdx, uint16 FrIf_Offset )
      Service ID[hex]: 0x93
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_RelTimerIdx Index of the relative timer to address.
        FrIf_Offset Number of Macroticks the relative timer shall be set to.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has
          returned E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_SetRelativeTimer().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1061</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_CancelRelativeTimer
      Syntax: Std_ReturnType FrIf_CancelRelativeTimer( uint8 FrIf_CtrlIdx, uint8
        FrIf_RelTimerIdx )
      Service ID[hex]: 0x94
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_RelTimerIdx Index of the relative timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned
        E_OK. returned E_NOT_OK, or an error has been detected in
          development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_CancelAbsoluteTimer().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1062</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1068</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1119</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_EnableRelativeTimerIRQ
      Syntax: Std_ReturnType FrIf_EnableRelativeTimerIRQ( uint8 FrIf_CtrlIdx,
        uint8 FrIf_RelTimerIdx )
      Service ID[hex]: 0x95
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_RelTimerIdx Index of the relative timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has
          returned E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_EnableRelativeTimerIRQ() .
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1063</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1069</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1123</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_GetRelativeTimerIRQStatus
      Syntax: Std_ReturnType FrIf_GetRelativeTimerIRQStatus( uint8 FrIf_CtrlIdx,
        uint8 FrIf_RelTimerIdx, boolean* FrIf_IRQStatusPtr )
      Service ID[hex]: 0x96
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_RelTimerIdx Index of the relative timer to address.
      Parameters (inout): None
      Parameters (out): FrIf_IRQStatusPtr Pointer to a memory location where
        output value will be stored.
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has
          returned E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_GetRelativeTimerIRQStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1070</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1127</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_AckRelativeTimerIRQ
      Syntax: Std_ReturnType FrIf_AckRelativeTimerIRQ( uint8 FrIf_CtrlIdx, uint8
        FrIf_RelTimerIdx )
      Service ID[hex]: 0x97
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_RelTimerIdx Index of the relative timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has
          returned E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_AckRelativeTimerIRQ().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1065</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1071</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: FrIf_DisableRelativeTimerIRQ
      Syntax: Std_ReturnType FrIf_DisableRelativeTimerIRQ( uint8 FrIf_CtrlIdx,
        uint8 FrIf_RelTimerIdx )
      Service ID[hex]: 0x98
      Sync/Async: Synchronous
      Reentrancy: non reentrant for the same FlexRay CC, reentrant for different
        FlexRay CCs FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_RelTimerIdx Index of the relative timer to address.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned
          E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function
        Fr_DisableRelativeTimerIRQ().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1072</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1135</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

      Service name: FrIf_SetExtSync
      Syntax: Std_ReturnType FrIf_SetExtSync( uint8 FrIf_CtrlIdx, Fr_OffsetCorrectionType FrIf_Offset, Fr_RateCorrectionType FrIf_Rate )
      Service ID[hex]: 0x9A
      Sync/Async: Synchronous
      Reentrancy: non reentrant for identical values of FrIf_CtrlIdx, reentrant for different values of
      FrIf_CtrlIdx
      Parameters (in): FrIf_CtrlIdx Index of the FlexRay CC to address.
      Parameters (in): FrIf_Offset Offset correction that shall be applied
      Parameters (in): FrIf_Rate Rate correction that shall be applied
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: The call of the FlexRay Driver's API service has returned E_OK.
        E_NOT_OK: The call of the FlexRay Driver's API service has returned E_NOT_OK, or an error has been detected in development mode.
      Description: Wraps the FlexRay Driver API function Fr_SetExtSync().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ParameterTest_FrIf_SetExtSync</srcid><srcstatus/><internalId>1055</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReturnErrorTest_FrIf_SetExtSync</srcid><srcstatus/><internalId>1056</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_SetExtSync</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_INV_CTRL_FrIf_SetExtSync</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1102</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1103</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetExtSync</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ASCCCB1403</id>
      <status>approved</status>
      <source>EB: ASCCCB-1403</source>
      <version>1</version>
      <description>
      If a Main function of a un-initialized module is called from the
      BSW Scheduler, then it shall return immediately without
      performing any functionality and without raising any errors.
      </description>
      <comment>
      EB requirement is in line with the AUTOSAR 4.0 General SRS
      requirement BSW00450.

      https://issue.ebgroup.elektrobit.com/browse/ASCCCB-1403
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>FrIf.EB.HandleIdGenerator</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a handle-ID generator that automatically configures
      configuration indices in a correct way:
      Affected handle-IDs are:
        - FrIfTxPduId
        - FrIfCtrlIdx
        - FrIfClstIdx
        - FrIfAbsTimerIdx
        - FrIfRelTimerIdx
        - FrIfLPduIdx
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30036</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>FrIf.EB.UpperLayerIncludeFile</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FrIfUpperLayerIncludeFile
      Type: STRING-PARAM-DEF
      Class: LINK
      Multiplicity: 1
      Contained in: FrIf.FrIfUpperLayerConfig
      Description: Name of upper layer include file that contains the callback
      functions to be called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>FrIf.EB.UpperLayerFunctionPrefix</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FrIfUpperLayerFunctionPrefix
      Type: STRING-PARAM-DEF
      Class: LINK
      Multiplicity: 1
      Contained in: FrIf.FrIfUpperLayerConfig
      Description: Prefix-string of upper layer supported by FrIf(e.g. PduR_FrIf, FrNm_, ...).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>FrIf.EB.UpperLayerHandleId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FrIfUpperLayerHandleId
      Type: INTEGER-PARAM-DEF
      Range: 0..*
      Class: PB
      Multiplicity: 0/1
      Contained in: FrIf.FrIfPdu.VendorSpecific
      Description: Id of Pdu passed to upper layer (for reception). Ignored in case of Tx-Pdus.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>FrIf.EB.UpperLayerRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FrIfUpperLayerRef
      Type: SYMBOLIC-NAME-REFERENCE-PARAM-DEF
      Range: FrIf.FrIfUpperLayerConfig
      Class: PB
      Multiplicity: 0/1
      Contained in: FrIf.FrIfPdu.VendorSpecific
      Description: Reference to upper layer that transmits/receives this FrIfPdu.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>FrIf.EB.UpperLayerFunctionality</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If user defined upper layers are used (there exists a container of type
      FrIf.FrIfUserUpperLayerConfig), the pointer function table equals exactly the size of upper layer
      containers and the function pointers are named
      - &amp;lt;FrIfUpperLayerPrefix&amp;gt;TriggerTransmit
      - &amp;lt;FrIfUpperLayerPrefix&amp;gt;TxConfirmation
      - &amp;lt;FrIfUpperLayerPrefix&amp;gt;RxIndication
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfIsVirtualPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Short Description:  Virtual Pdus
      Date:  2007-08-07
      Importance:  High
      Description:  The generator performs no overlap check for virtual PDUs.
        A virtual PDU is specified via the vendor specific parameter
        'FrIfIsVirtualPdu'.
      Rationale:  By using virtual PDUs the performance of a gateway can be
        improved.
      Use Case:  A virtual PDU is used to aggregate the notification of PDUs to
        the upper layer by specifing an additional PDU covering the PDUs which
        shall be aggregated.
      Constraints:  -
      Verification criteria:  -
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30021</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIfGlobalRxMaxLoop</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name FrIfGlobalRxMaxLoop
      Description Defines the maximum number of loops for for all communication operations with
        communication action RECEIVE_AND_INDICATE (Use case: emptying a FIFO).
      Multiplicity 1
      Type EcucIntegerParamDef Range 1 .. 512
      Default value
      ConfigurationClass
        Pre-compile time X VARIANT-PRE-COMPILE
      Scope / Dependency scope: Module
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo1</srcid><srcstatus/><internalId>899</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate_RxFifo1_DynSimple</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SingleClstOptEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (SingleClstOptEnable|FRIF_SINGLE_CLST_OPT_ENABLE) which
      optimizes code for usage of the module with a single FlexRay cluster only.
      Runtime indexing can be removed when accessing data structures designed for multiple
      FlexRay cluster.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_SetState</srcid><srcstatus/><internalId>1188</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_SetState</srcid><srcstatus/><internalId>1189</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_GetState</srcid><srcstatus/><internalId>1190</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_GetState</srcid><srcstatus/><internalId>1191</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_SetState</srcid><srcstatus/><internalId>1298</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_SetState</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_GetState</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_GetState</srcid><srcstatus/><internalId>1301</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_DispatchComOps</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SingleCtrlOptEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (SingleCtrlOptEnable|FRIF_SINGLE_CTRL_OPT_ENABLE) which
        optimizes code for usage of the module with a single FlexRay controller only.
        Runtime indexing can be removed when accessing data structures designed for multiple
        FlexRay controllers.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1089</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1092</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1093</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1094</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1095</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1096</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1097</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1098</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1099</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1100</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1101</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1102</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1103</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1107</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1111</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1112</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1119</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1123</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1127</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1135</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1144</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1159</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1164</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1174</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1184</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1187</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1204</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ControllerInit</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1206</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StartCommunication</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1209</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1210</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1212</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1213</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1214</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendWUP</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1216</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncState</srcid><srcstatus/><internalId>1217</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetExtSync</srcid><srcstatus/><internalId>1219</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1236</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1253</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNmVector</srcid><srcstatus/><internalId>1255</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1260</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1263</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendMTS</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StopMTS</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckMTS</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllSlots</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1280</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckIRQ</srcid><srcstatus/><internalId>1281</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1283</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1302</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1303</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1305</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1306</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1308</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SingleFrPrefix</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Single controller optimization is enabled there shall be a precompile-time
        parameter FRIF_SINGLE_PREFIX to set the Fr API Prefix (e.g. Fr, Fr_1_ERAY, ... ).
        The switch definition is followed by the inclusion of the appropriate Fr-API
        header file. (e.g. #include "Fr.h", #include "Fr_1_ERAY.h", ...)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SingleFrOptEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (SingleFrOptEnable|FRIF_SINGLE_FR_OPT_ENABLE)
        which optimizes code for usage of the module with a single FlexRay driver only.
        No polymorphism (Fr access via function pointer tables) is
        required when accessing the Fr. Instead the Fr is directly linked to the
        FrIf core code.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1089</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1091</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1092</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1093</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1094</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1095</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1096</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1097</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1098</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1099</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1100</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1101</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1102</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1103</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1107</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1111</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1112</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1119</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1123</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1127</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1135</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1144</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1159</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1164</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1174</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1184</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1187</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ControllerInit</srcid><srcstatus/><internalId>1204</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ControllerInit</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StartCommunication</srcid><srcstatus/><internalId>1206</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StartCommunication</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_HaltCommunication</srcid><srcstatus/><internalId>1209</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1210</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AbortCommunication</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1212</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetWakeupChannel</srcid><srcstatus/><internalId>1213</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendWUP</srcid><srcstatus/><internalId>1214</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendWUP</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncState</srcid><srcstatus/><internalId>1216</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncState</srcid><srcstatus/><internalId>1217</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetExtSync</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetExtSync</srcid><srcstatus/><internalId>1219</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetPOCStatus</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetGlobalTime</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacroticksPerCycle</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacrotickDuration</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetAbsoluteTimer</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetRelativeTimer</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelAbsoluteTimer</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelRelativeTimer</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1236</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableRelativeTimerIRQ</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckRelativeTimerIRQ</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableRelativeTimerIRQ</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllowColdstart</srcid><srcstatus/><internalId>1253</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNmVector</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNmVector</srcid><srcstatus/><internalId>1255</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1260</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1263</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendMTS</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendMTS</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StopMTS</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StopMTS</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckMTS</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckMTS</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetChannelStatus</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllSlots</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllSlots</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReconfigLPdu</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableLPdu</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckIRQ</srcid><srcstatus/><internalId>1280</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckIRQ</srcid><srcstatus/><internalId>1281</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableIRQ</srcid><srcstatus/><internalId>1283</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableIRQ</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetIRQStatus</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetClockCorrection</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncFrameList</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetControllerErrorStatus</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetWakeupRxStatus</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1302</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNumOfStartupFrames</srcid><srcstatus/><internalId>1303</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReadCCConfig</srcid><srcstatus/><internalId>1305</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1306</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1308</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetCycleLength</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIntegrationEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIntegrationEnable|FRIF_FRINTEGRATION_ENABLE)
        which renames all API functions from FrIf_* to Fr_* which have the same signature as their
        releated Fr function. Thus if only a single Fr is used, those functions can be removed
        from FrIf eliminating the FrIf wrapper functions.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SingleFrTrcvOptEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (SingleFrTrcvOptEnable|FRIF_SINGLE_FRTRCV_OPT_ENABLE)
        which optimizes code for usage of the module with a single FlexRay transceiver only.
        No polymorphism (FrTrcv access via function pointer tables) is
        required when accessing the FrTrcv. Instead the FrTrcv is directly linked to the
        FrIf core code.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_CheckWakeupByTransceiver</srcid><srcstatus/><internalId>1324</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_ClearTransceiverWakeup</srcid><srcstatus/><internalId>1325</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_GetTransceiverError</srcid><srcstatus/><internalId>1326</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_GetTransceiverMode</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_GetTransceiverWUReason</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_SetTransceiverMode</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_EnableTransceiverBranch</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoTrcvr_FrIf_DisableTransceiverBranch</srcid><srcstatus/><internalId>1331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SingleFrTrcvPrefix</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Single FrTrcv optimization is enabled there shall be a precompile-time
        parameter FRIF_SINGLE_PREFIX to set the Fr API Prefix
        (e.g. Fr, Fr_1_ERAY, ... ). The switch definition is followed by the
        inclusion of the appropriate Fr-API header file. (e.g. #include "Fr.h",
        #include "Fr_1_ERAY.h", ...)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PduIdxSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (PduIdxSize|FrIf_PduIdxType) which defines
      the size to store the PduIdx of Tx- and Rx Pdus to be either 8 or 16 bit.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30037</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30038</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30039</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>FrIf.EB.LPduIdxSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (LPduIdxSize|FrIf_LPduIdxType) which defines
      the size to store the LPduIdx to be either 8 or 16 bit.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ComOpIdxSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (ComOpIdxSize|FrIf_ComOpIdxType) which defines
      the size to store the ComOpIdx to be either 8 or 16 bit.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <specobject>
      <id>FrIf.EB.JoblistIRQMuxEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (JoblistIRQMuxEnable|FRIF_JOBLIST_IRQMUX_ENABLE)
      which enables/disables the demultiplexing of the IRQ within the joblist execution function
      (check for pending interrupt).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_IRQMUX</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>FrIf.EB.JoblistIRQDelayCheckEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (JoblistIRQDelayCheckEnable|FRIF_JOBLIST_IRQDELAYCHECK_ENABLE)
      which enables/disables the IRQ delay check at the start of the joblist execution.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>FrIf.EB.JoblistPrepareLPduEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (JoblistPrepareLPduEnable|FRIF_JOBLIST_PREPARE_LPDU_ENABLE)
      which enables/disables the communication operation PREPARE_LPDU.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ImmediateTxEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (ImmediateTxEnable|FRIF_IMMEDIATE_TX_ENABLE)
      which enables/disables immediate transmission.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DynamicPayloadLengthEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (DynamicPayloadLengthEnable|FRIF_DYNAMIC_PAYLOAD_LENGTH_ENABLE)
      which enables/disables dynamic payload length.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>FrIf.EB.TransmitQueueEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (TransmitQueueEnable|FRIF_TRANSMIT_QUEUE_ENABLE)
      which enables/disables transmit request queuing. This means that configuration parameter
      FrIfCounterLimit is fixed to 1.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DecoupledRxEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a pre-compile-time parameter (DecoupledRxEnable|FRIF_DECOUPLED_RX_ENABLE)
      which enables/disables decoupled reception.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>FrIf.EB.RelativeTimerApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (RelativeTimerApiEnable|FRIF_RELATIVETIMER_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_SetRelativeTimer(), FrIf_CancelRelativeTimer(),
        FrIf_EnableRelativeTimerIRQ(), FrIf_DisableRelativeTimerIRQ(), FrIf_GetRelativeTimerIRQStatus()
        and FrIf_AckRelativeTimerIRQStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>FrIf.EB.SetExtSyncApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (SetExtSyncApiEnable|FRIF_SETEXTSYNC_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_SetExtSync().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>FrIf.EB.MtsApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (MtsApiEnable|FRIF_MTS_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_SendMTS(), FrIf_CheckMTS() and FrIf_StopMTS().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>FrIf.EB.WakeupEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (WakeupApiEnable|FRIF_WAKEUP_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_SendWUP() and FrIf_SetWakeupChannel().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>FrIf.EB.GetIrqStatusApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetIrqStatusApiEnable|FRIF_GETIRQSTATUS_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_GetAbsoluteTimerIRQStatus() and FrIf_GetRelativeTimerIRQStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DisableIrqApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (DisableIrqApiEnable|FRIF_DISABLEIRQ_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_DisableAbsoluteTimerIRQ() and FrIf_DisableRelativeTimerIRQ().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>FrIf.EB.WakeupControlApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (WakeupControlApiEnable|FRIF_WAKEUPCONTROL_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_ClearTransceiverWakeup().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>FrIf.EB.GetCtrlErrorStatusApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (GetCtrlErrorStatusApiEnable|FRIF_GETCONTROLLERERRORSTATUS_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_GetControllerErrorStatus().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ExtIRQServicesApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (ExtIRQServicesApiEnable|FRIF_EXT_IRQ_SERVICES_API_ENABLE) which allows
        inclusion/exclusion of the API functions FrIf_AckIRQ(), FrIf_EnableIRQ(), FrIf_DisableIRQ() and
        FrIf_GetIRQStatus().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>FrIf.EB.GetSyncStateApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetSyncStateApiEnable|FRIF_GETSYNCSTATE_API_ENABLE) which allows
        inclusion/exclusion of the API function FrIf_GetSyncState().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

    <specobject>
      <id>FrIf.EB.GetTransceiverModeApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (GetTransceiverModeApiEnable|FRIF_GETTRANSCEIVERMODE_API_ENABLE) which allows
        inclusion/exclusion of the API function FrIf_GetTransceiverMode().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>FrIf.EB.GetTransceiverWUReasonApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (GetTransceiverWUReasonApiEnable|FRIF_GETTRANSCEIVERWUREASON_API_ENABLE) which allows
        inclusion/exclusion of the API function FrIf_GetTransceiverWUReason().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>

    <specobject>
      <id>FrIf.EB.CheckWakeupByTransceiverApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (CheckWakeupByTransceiverApiEnable|FRIF_CHECKWAKEUPBYTRANSCEIVER_API_ENABLE) which allows
        inclusion/exclusion of the API function FrIf_CheckWakeupByTransceiver().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>

    <specobject>
      <id>FrIf.EB.AllowColdstartApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (AllowColdstartApiEnable|FRIF_ALLOWCOLDSTART_API_ENABLE) which allows
        inclusion/exclusion of the API function FrIf_AllowColdstart().

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfDataMemSize.Disabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be an optional pre-compile-time parameter (FrIfDataMemSize) which controls the post-build-time RAM
        memory allocation.
        If config parameter FrIfDataMemSize is disabled, the post-build-time RAM is calculated and allocated
        by the post-build-time stage of the generator. Thus this config parameter shall be enabled if post-build time config
        is used.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_3</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfDataMemSize.EnabledValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be an optional pre-compile-time parameter (FrIfDataMemSize) which controls the post-build-time RAM
        memory allocation.
        If config parameter FrIfDataMemSize is enabled, the configured amount of bytes shall be allocated at
        pre-compile-time stage for usage by the post-build time configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfDataMemSize.EnabledCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be an optional pre-compile-time parameter (FrIfDataMemSize) which controls the post-build-time RAM
        memory allocation.
        If config parameter FrIfDataMemSize is enabled, the value of RAM calculated by the post-build-time stage shall be
        compared against the configured value. If the value configured in FrIfDataMemSize is smaller than the required amount
        of post-build-time RAM, then the post-buil-time generator shall report an error message and abort code generation.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIfMemSize_CheckInconsistentSize</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfJoblistSyncReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfJoblistSyncReportToDem|FRIF_PROD_ERR_HANDLING_JLE_SYNC) which
        selects the handling of the production error FRIF_E_JLE_SYNC:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetectionNoDem</srcid><srcstatus/><internalId>906</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays_DemToDet</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection_DemToDet</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfJoblistSyncDebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfJoblistSyncDebounceMethod),
        enabled only if FrIfJoblistSyncReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_JLE_SYNC:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobListExecutionLegalISRDelays</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfJoblistSyncReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_JLE_SYNC
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_JLE_SYNC.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays_DemToDet</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListTimeoutDetection_DemToDet</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfJoblistSyncPassed</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If
        - FrIfNITStatusAReportToDem = DEM, AND
        - FrIfNITStatusADebounceMethod = DEM, AND
        - Function FrIfJobListExec_*() is executed within the correct time window [JobStart,JobStart+FrIfMaxIsrDelay]
        then call Dem_ReportErrorStatus() with status DEM_EVENT_STATUS_PREPASSED for Dem event FRIF_E_JLE_SYNC.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_JobListExecutionLegalISRDelays</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_JobListExecutionIllegalISRDelays</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfNITStatusAReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfNITStatusAReportToDem|FRIF_PROD_ERR_HANDLING_NIT_CH_A) which
        selects the handling of the production error FRIF_E_NIT_CH_A:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_A</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfNITStatusADebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfNITStatusADebounceMethod),
        enabled only if FrIfNITStatusAReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_NIT_CH_A:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfNITStatusAReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_NIT_CH_A
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_NIT_CH_A.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_A</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfNITStatusBReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfNITStatusBReportToDem|FRIF_PROD_ERR_HANDLING_NIT_CH_B) which
        selects the handling of the production error FRIF_E_NIT_CH_B:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_B</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfNITStatusBDebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfNITStatusBDebounceMethod),
        enabled only if FrIfNITStatusBReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_NIT_CH_B:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfNITStatusBReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_NIT_CH_B
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_NIT_CH_B.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_NIT_CH_B</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfSymbolWindowStatusAReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (FrIfSymbolWindowStatusAReportToDem|FRIF_PROD_ERR_HANDLING_SW_CH_A) which
        selects the handling of the production error FRIF_E_SW_CH_A:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_A</srcid><srcstatus/><internalId>1319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfSymbolWindowStatusADebounceMethod),
        enabled only if FrIfSymbolWindowStatusAReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_SW_CH_A:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfSymbolWindowStatusAReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_SW_CH_A
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_SW_CH_A.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_A</srcid><srcstatus/><internalId>1319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfSymbolWindowStatusBReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (FrIfSymbolWindowStatusBReportToDem|FRIF_PROD_ERR_HANDLING_SW_CH_B) which
        selects the handling of the production error FRIF_E_SW_CH_B:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_B</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfSymbolWindowStatusBDebounceMethod),
        enabled only if FrIfSymbolWindowStatusBReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_SW_CH_B:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfSymbolWindowStatusBReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_SW_CH_B
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_SW_CH_B.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_SW_CH_B</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfAggregatedStatusAReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (FrIfAggregatedStatusAReportToDem|FRIF_PROD_ERR_HANDLING_ACS_CH_A) which
        selects the handling of the production error FRIF_E_ACS_CH_A:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_A</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfAggregatedStatusADebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfAggregatedStatusADebounceMethod),
        enabled only if FrIfAggregatedStatusAReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_ACS_CH_A:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfAggregatedStatusAReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_ACS_CH_A
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_ACS_CH_A.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_A</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfAggregatedStatusBReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

        There shall be a pre-compile-time parameter (FrIfAggregatedStatusBReportToDem|FRIF_PROD_ERR_HANDLING_ACS_CH_B) which
        selects the handling of the production error FRIF_E_ACS_CH_B:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ALL_PASS</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_B</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfAggregatedStatusBDebounceMethod),
        enabled only if FrIfAggregatedStatusBReportToDem = DEM, which
        selects debouncing of the production error FRIF_E_ACS_CH_B:
        - DEM: Report DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED to Dem_ReportErrorStatus().
        - INTERNAL (default): Report DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED to Dem_ReportErrorStatus().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ALL_PASS</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_A</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_NIT_CH_B</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_A</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_SW_CH_B</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_A</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_ChannelReportingToDem_ACS_CH_B</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfAggregatedStatusBReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Defines the error Id which is reported towards the Det in case the production error FRIF_E_ACS_CH_B
        is reported to Det. The macro shall be named FRIF_E_DEMTODET_ACS_CH_B.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ChannelReportingToDet_ACS_CH_B</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ReportToDetEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (ReportToDetEnable|FRIF_REPORT_TO_DET_ENABLE) which
        enables development errors to be are reported to the DET.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ExtendedRxFIFOEnable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

      There shall be a precompile time configuration parameter (ExtendedRxFIFOEnable|FRIF_EXTENDED_RXFIFO_ENABLE) with the following properties:
      Name:	ExtendedRxFIFOEnable
      Type:	BOOLEAN-PARAM-DEF
      Range:	true/false
      Class:	PRE
      Multiplicity:	1
      Contained in:	FrIf.FrIfGeneral.VendorSpecific
      Description:	If set to 'True' code using the extended RxFIFO (EB extension of Fr driver) is enabled. This code allows dynamic demultiplexing of RxFIFO entries.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>FrIf_CompatibleFifo</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>

    <specobject>
      <id>FrIf.EB.FrIfGlobalRxMaxLoop</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>

      There shall be a precompile time configuration parameter (FrIfGlobalRxMaxLoop|FRIF_GLOBALRXMAXLOOP) with the following properties:
      Name:	FrIfGlobalRxMaxLoop
      Type:	INTEGER-PARAM-DEF
      Range:	1-512
      Class:	PRE
      Multiplicity:	1
      Contained in:	FrIf.FrIfGeneral
      Description:	Maximum number of times the function Fr_ReceiveRxFIFO is called within a single CONSUME_RXFIFO communication operation.

      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>FrIf.EB.ExtendedRxFIFO</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The range of configuration parameter CommunicationAction is extended by the value CONSUME_RXFIFO.
      If CONSUME_RXFIFO is configured, the joblist shall call Fr_ReceiveRxLPdu() as long as it returns FR_RECEIVED_MORE_DATA_AVAILABLE but at maximum FrIfGlobalRxMaxLoop times.
      The link to the RxFIFO is implicitly done via the referenced LPdu-&gt;FrIfFrameTriggering which matches the respective RxFIFO filter criteria.
      Each entry removed from the RxFIFO is mapped to a Frame-Structure using the configuration path
      RootCfg/FrIf_CtrlRef[CtrlIdx]/ChannelRxFIFO[Channel]/FrameIDRef[FrameID - LowerFrameID]/CycleToLPduRef[Cycle%CycleRepetition]/PduPositionRef.
      All Pdus within this Frame-Structure shall be indicated according to the usual RECEIVE_AND_INDICATE communication operation rules.
      When the FrIf statemachine for a cluster is switched to ONLINE, all FIFOs of all contained controllers must be flushed by calling Fr_FlushRxFIFO().
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_A</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_B</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_BasicReception_AB</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_PartialReception</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_PduNotUpdated</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_ParallelReception</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_WrongChannel</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_WrongCycle</srcid><srcstatus/><internalId>1339</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_WrongFrameId</srcid><srcstatus/><internalId>1340</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_Empty</srcid><srcstatus/><internalId>1341</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_Offline</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_Flush</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_Sequence</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_FRIF_GLOBALRXMAXLOOP</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>EB_FRIF_RxFIFO_FrameIdNotConfigured</srcid><srcstatus/><internalId>1346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrIf module's generator shall generate a basic software
      module description (BSWMD) based on the FrIf module's
      configuration containing information on the exclusive areas
      required by the FrIf module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRIF_SCHM</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrIf module's generator shall generate a basic software
      module description (BSWMD) based on the FrIf module's
      configuration containing information on the scheduled
      MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRIF_SCHM</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FrIf module's BSWMD shall be generated using a generator
      mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FRIF_SCHM</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
      <id>FrIf.EB.RelocatablePBCfg</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In order to support post-build-time configuration data handled by relative offsets to the
      configuration start address, the container FrIfGeneral must be extended by the configuration
      parameter FrIfRelocatablePbcfgEnable.
  &lt;/pre&gt;
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_PBcfgM_Off</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_PBcfgM_On</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30036</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>FrIf..EB.ShortNames</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If a short name exists for configuration parameter with enabled symbolic name values,
      then the naming schema shall follow ecuc_sws_2108, that is
      FrIfConf_&amp;amp;lt;short name of EcucParamConfContainerDef&amp;amp;gt;_&amp;amp;lt;short name of EcucContainerValue&amp;amp;gt;

      This naming schema is applicable for:
      FrIfClstIdx
      FrIfTxPduId
      FrIfCtrlIdx
      FrIfLPduIdx
  &lt;/pre&gt;
      </description>
      <comment>
    - The short names should be unique.
    - For container with multiplicity greater than 1, container name itself is a SHORT-NAME.
  &lt;/pre&gt;
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NonLegSymbolicNames</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SymbolicNames</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBSelectable.FileName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If asc:getVariantName() returns a non-empty string (= variantName) the module's
      post-build-time configuration file names shall be changed in the following way:
      &amp;lt;Mod&amp;gt;[_*]_PBcfg.* to &amp;lt;Mod&amp;gt;_&amp;lt;variantName&amp;gt;[_*]_PBcfg.*
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBSelectable.TypeName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If asc:getVariantName() returns a non-empty string (= variantName) the module's
      post-build-time configuration type/variable names shall be changed in the following way:
      - &amp;lt;Mod&amp;gt;_[Const]ConfigLayoutType to &amp;lt;Mod&amp;gt;_&amp;lt;variantName&amp;gt;_[Const]ConfigLayoutType
      - &amp;lt;Mod&amp;gt;_ConfigLayout to &amp;lt;Mod&amp;gt;_&amp;lt;variantName&amp;gt;_ConfigLayout
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBSelectable.ConfigName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If asc:getVariantName() returns a non-empty string (= variantName) the module's
      post-build-time configuration name shall be: &amp;lt;Mod&amp;gt;_Confif_&amp;lt;variantName&amp;gt;
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30027</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DummyTxPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      It shall be possible to configure FrIfTxPdus which are not part of any FrIfFrameStructure.
      If FrIf_Transmit() is called for a non-contained FrIfTxPdu, FrIf_Transmit shall always return E_NOT_OK;
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30037</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30039</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DummyRxPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      It shall be possible to configure FrIfRxPdus which are not part of any FrIfFrameStructure.
      They will be never indicated as received.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30038</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a message buffer assignment optimization which is able to map Tx-LPdus in an
        guaranteed dynamic FlexRay segment of different slots to the same message buffer by
        considering the availability of PREPARE_LPDU ComOps for the related Tx-LPdus.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.FrIfGLastGuaranteedDynamicSlotId</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MinValidSlotId</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MaxValidSlotId</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.FrIfGLastGuaranteedDynamicSlotId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a configuration parameter (FrIfGLastGuaranteedDynamicSlotId) which
        defines the last SlotId in dynamic segment that will be considered for Tx buffer
        reconfiguration.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrIf_EBParameters.xdm.m4_22</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MinValidSlotId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a xdm check to validate that the configuration parameter
        "FrIfGLastGuaranteedDynamicSlotId" is higher than the last static SlotId.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrIf_EBParameters.xdm.m4_40</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIfDynamicGuaranteedTxReconfigMsgBufOpt_MinInvalidSlotId</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MaxValidSlotId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There shall be a xdm check to validate that the configuration parameter
        "FrIfGLastGuaranteedDynamicSlotId" is lower than or equal to the last dynamic SlotId.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrIf_EBParameters.xdm.m4_43</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIfDynamicGuaranteedTxReconfigMsgBufOpt_MaxInvalidSlotId</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        FrIf shall support BusMirroring according to Autosar 4.4.0.
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count - Short-term solution, detailed analysis pending.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.ASR44.SWS_FrIf_05095</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR44.SWS_FrIf_01124</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR44.SWS_FrIf_05726</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR44.SWS_FrIf_05727</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>FrIf.ASR44.ECUC_FrIf_06124</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.OptionalInterface</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.FrIfEnableBusMirroring.InvalidClstIdx</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.TxConfirmation.FrCheckTxLPduStatus</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.TxConfirmation.MirrorReportFlexRayFrame</srcid><srcstatus/><internalId>581</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.ReceiveAndStore.FrReceiveRxLPdu</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.ReceiveAndStore.MirrorReportFlexRayFrame</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.FrTransmitTxLPdu</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.MirrorReportFlexRayFrame</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.Multicore</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.OptionalInterface</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      API function Description
      Mirror_ReportFlexRayFrame
        Reports a received or transmitted FlexRay frame or a Tx conflict.
      </description>
      <comment>
      see SWS_FrIf_05044 in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.FrIfEnableBusMirroring.InvalidClstIdx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If parameter FrIf_ClstIdx of FrIf_EnableBusMirroring has an invalid value and if development
      error detection is enabled (i.e. FrIfDevErrorDetect equals ON), the function
      FrIf_EnableBusMirroring shall report development error code FRIF_E_INV_CLST_IDX to the
      Det_ReportError service of the DET module.
      </description>
      <comment>
      see SWS_FrIf_05044 in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_EnableBusMirroring.c_81</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIf_EnableBusMirroring_DetTesting</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation DECOUPLED_TRANSMISSION the Job List Execution Function shall
      perform the following step:
      If at least one PDU was requested for transmission or for at least one PDU
      FrIfNoneMode == true and &amp;lt;UL&amp;gt;_TriggerTransmit returned E_OK or the frame is configured to
      be always transmitted [Configuration Parameter FrIfAlwaysTransmit == true] then the FlexRay
      Driver's API service Fr_TransmitTxLPdu() is called and Fr_SlotAssignmentPtr is set to a
      temporary slot assignment buffer if Bus Mirroring is enabled globally
      (see FrIfBusMirroringSupport), otherwise to the NULL_PTR.
      </description>
      <comment>
      see SWS_FrIf_05287.2.e in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_1125</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_1389</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation DECOUPLED_TRANSMISSION the Job List Execution Function shall
      perform the following step:
      If Bus Mirroring is enabled globally (see FrIfBusMirroringSupport) and has
      been activated with a call to FrIf_EnableBusMirroring() for the Fr_CtrlIdx and
      Fr_TransmitTxLPdu() returned E_OK (indicating that the transmission succeeded), call
      Mirror_ReportFlexRayFrame() with "controllerId" set to Fr_CtrlIdx, , "slotId", "cycle", and
      "channel" taken from Fr_SlotAssignmentPtr, "frame" constructed from Fr_LSduPtr and
      Fr_LSduLength, and "txConflict" set to false.
      </description>
      <comment>
      see SWS_FrIf_05287.3 in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_1216</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_1459</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.TxConfirmation.FrCheckTxLPduStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation TX_CONFIRMATION the Job List Execution Function shall perform
      the following step:
      Call the FlexRay Driver's API function Fr_CheckTxLPduStatus() and set Fr_SlotAssignmentPtr to
      a temporary slot assignment buffer if Bus Mirroring is enabled globally
      (see FrIfBusMirroringSupport), otherwise to the NULL_PTR.
      </description>
      <comment>
      see SWS_FrIf_05288.1.c in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_378</srcid><srcstatus/><internalId>736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.TxConfirmation.MirrorReportFlexRayFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation TX_CONFIRMATION the Job List Execution Function shall
      perform the following step:
      If Bus Mirroring is enabled globally (see FrIfBusMirroringSupport) and has been activated with
      a call to FrIf_EnableBusMirroring() for the Fr_CtrlIdx and the API Fr_CheckTxLpduStatus()
      returns "FR_TRANSMITTED_CONFLICT", call Mirror_ReportFlexRayFrame() with "controllerId" set to
      Fr_CtrlIdx, "slotId", "cycle", and "channel" taken from Fr_SlotAssignmentPtr, "frame" set to
      the NULL_PTR, and "txConflict" set to true.
      </description>
      <comment>
      see SWS_FrIf_05288.4 in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_527</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.ReceiveAndStore.FrReceiveRxLPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation RECEIVE_AND_STORE the Job List Execution Function shall perform
      the following step:
      Call the FlexRay Driver's API function Fr_ReceiveRxLPdu() and set Fr_SlotAssignmentPtr to a
      temporary slot assignment buffer if Bus Mirroring is enabled globally
      (see FrIfBusMirroringSupport), otherwise to the NULL_PTR.
      </description>
      <comment>
      see SWS_FrIf_05290.1.d in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_233</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.ReceiveAndStore.MirrorReportFlexRayFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation RECEIVE_AND_STORE the Job List Execution Function shall perform
      the following step:
      If Bus Mirroring is enabled globally (see FrIfBusMirroringSupport) and has been activated with
      a call to FrIf_EnableBusMirroring() for the Fr_CtrlIdx and an L-PDU was received
      (Output parameter *Fr_LPduStatusPtr != FR_NOT_RECEIVED), call Mirror_ReportFlexRayFrame() with
      "controllerId" set to Fr_CtrlIdx, "slotId", "cycle", and "channel" taken from
      Fr_SlotAssignmentPtr, "frame" constructed from Fr_LSduPtr and Fr_LSduLengthPtr, and
      "txConflict" set to false.
      </description>
      <comment>
      see SWS_FrIf_05290.2 in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_291</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation RECEIVE_AND_INDICATE the Job List Execution Function shall
      perform the following step:
      Calculate values for input parameters and set Fr_SlotAssignmentPtr to a temporary slot
      assignment buffer if Bus Mirroring is enabled globally (see FrIfBusMirroringSupport),
      otherwise to the NULL_PTR.
      </description>
      <comment>
      see SWS_FrIf_05293.1.d in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_608</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_802</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      For a Communication Operation RECEIVE_AND_INDICATE the Job List Execution Function shall
      perform the following step:
      As long as ComOpLoopCounter &amp;lt; FrIfRxComOpMaxLoop and the call Fr_ReceiveRxLPdu returned
      *Fr_LPduStatusPtr != FR_NOT_RECEIVED do:
      If Bus Mirroring is enabled globally (see FrIfBusMirroringSupport) and has been activated with
      a call to FrIf_EnableBusMirroring() for the Fr_CtrlIdx, call Mirror_ReportFlexRayFrame() with
      "controllerId" set to Fr_CtrlIdx, "slotId", "cycle", and "channel" taken from
      Fr_SlotAssignmentPtr, "frame" constructed from Fr_LSduPtr and Fr_LSduLengthPtr, and
      "txConflict" set to false.
      </description>
      <comment>
      see SWS_FrIf_05293.3.c in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_659</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FrIf_JobListExecution.c_853</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_SingleCluster_MirroringEnabled</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_MirroringEnabled</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NotTransmitted_MirroringEnabled</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TxConflict_DisablingMirroring</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.FrTransmitTxLPdu</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If an upper layer module calls FrIf_Transmit() with TxPduId being configured for an immediate
      PDU, the AUTOSAR module FlexRay Interface shall perform the following step for an immediate
      PDU transmission within the context of the FrIf_Transmit() API service Driver's API function
      Fr_TransmitTxLPdu():
      Fr_SlotAssignmentPtr is set to a temporary slot assignment buffer if Bus Mirroring is enabled
      globally (see FrIfBusMirroringSupport), otherwise to the NULL_PTR.
      </description>
      <comment>
      see SWS_FrIf_05296.e in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_Transmit.c_134</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.MirrorReportFlexRayFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If an upper layer module calls FrIf_Transmit() with TxPduId being configured for an immediate
      PDU, the AUTOSAR module FlexRay Interface shall perform the following step for an immediate
      PDU transmission within the context of the FrIf_Transmit() API service Driver's API function
      Fr_TransmitTxLPdu() and in case the Driver's API Fr_TransmitTxLPdu() returned E_OK
      (indicating that the transmission request succeeded):
      If Bus Mirroring is enabled globally (see FrIfBusMirroringSupport) and has
      been activated with a call to FrIf_EnableBusMirroring() for the Fr_CtrlIdx and
      Fr_TransmitTxLPdu() returned E_OK (indicating that the transmission succeeded), call
      Mirror_ReportFlexRayFrame() with "controllerId" set to Fr_CtrlIdx, , "slotId", "cycle", and
      "channel" taken from Fr_SlotAssignmentPtr, "frame" constructed from Fr_LSduPtr and
      Fr_LSduLength, and "txConflict" set to false.
      </description>
      <comment>
      see SWS_FrIf_05296 second paragraph in Autosar 4.4.0
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FrIf_Transmit.c_180</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_MultipleClusters_MirroringEnabled</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.Multicore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrIf shall provide Client-Server interfaces to the Rte for following APIs:
      FrIf_EnableBusMirroring, FrIf_GetPOCStatus, FrIf_GetState.
      </description>
      <comment>
      This requirement is tested in integration test
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.Multicore.FrIfEnableBusMirroring</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.Multicore.FrIfGetPOCStatus</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>FrIf.EB.BusmirrorSupport.Multicore.FrIfGetState</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.Multicore.FrIfEnableBusMirroring</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrIf shall provide Client-Server interfaces to the Rte for the API FrIf_EnableBusMirroring.
      </description>
      <comment>
      This requirement is tested in integration test
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4_38</srcid><srcstatus/><internalId>785</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.Multicore.FrIfGetPOCStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrIf shall provide Client-Server interfaces to the Rte for the API FrIf_GetPOCStatus.
      </description>
      <comment>
      This requirement is tested in integration test
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4_42</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <specobject>
      <id>FrIf.EB.BusmirrorSupport.Multicore.FrIfGetState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrIf shall provide Client-Server interfaces to the Rte for the API FrIf_GetState.
      </description>
      <comment>
      This requirement is tested in integration test
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4_46</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>

    <specobject>
      <id>FrIf.EB.TransmitJoblistConcurrencyDecoupledTx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      There shall be a protection to avoid a loss of decoupled Tx Pdus if FrIf_Tranmsit() interrupts
      FrIf_JoblistExec().
      </description>
      <comment>
      See bugticket for more information:
      https://issue.ebgroup.elektrobit.com/browse/ASCFRIF-1007
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_Fr_TransmitTxLPdu_Interrupted</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>

    <specobject>
      <id>FrIf.EB.UseULCDDSymbolicNameValues</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FrIf shall provide a functionality to use symbolic names for Pdu handle-IDs provided by an
      upper layer CDD.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_ComTest_6</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>FrIf.EB.NotReceivedPdus</id>
      <status>approved</status>
      <source>EB refinement</source>
      <version>1</version>
      <description>
      PDUs in non-received areas (PDU offset &amp;gt; actual L-SDU length) shall not be
      indicated to upper layer(s).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_ReceiveAndIndicate</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05724_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>FrIf.ASR40.FrIf05287_1a3_EB</id>
      <status>approved</status>
      <source>EB refinement</source>
      <version>1</version>
      <description>
      In case the &amp;lt;UL&amp;gt;_TriggerTransmit() of a DECOUPLED_TRANSMISSION 
      does not return E_OK (indicating that the corresponding PDU was not
      updated), changes on TrigTxCounter and TxConfCounter must be rolled back
      for this PDU.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK_SinglePduTx</srcid><srcstatus/><internalId>920</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_TransmitFailures</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrIf.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrIf_DBGINST_001</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrIf_DBGINST_001</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrIf_DBGINST_001</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrIf_DBGINST_001</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>FrIf.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrIf_DBGINST_001</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrIf.EB.PBCFGM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name: FrIf_IsValidConfig
        Syntax: Std_ReturnType FrIf_IsValidConfig( void* ConfigPtr )
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): ConfigPtr, post build configuration manager
        configuration.
        Parameters (inout): None
        Parameters (out): None
        Return value: Returns E_OK if the FrIf configuration is valid otherwise E_NOT_OK. A
        null pointer is interpreted as invalid configuration.
        Description: This function determines if the FrIf configuration is valid. This
        function can be called also before the FrIf is initialized. No error reporting
        is necessary within this function.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM102</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration is valid
        - if the platform signature in the post build configuration equals the value
          determined by the macro TS_PlatformSigIsValid.
        - if the link time signature in the post build configuration equals the link time
          signature in the link time configuration file.
        - if the compile time signature in the post build configuration equals the value of
          the macro FRIF_CFG_SIGNATURE.
        - if the compile time signature of Published information in the post build configuration
          equals the value of the macro FRIF_PUBLIC_INFO_SIGNATURE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM104</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          CfgSignature.
        - the FrIf_Cfg.h file shall contain the macro
          FRIF_CFG_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM104_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          PublicInfoSignature.
        - the FrIf_Cfg.h file shall contain the macro
          FRIF_PUBLIC_INFO_SIGNATURE.
        - The MCG shall generate this signature value from the list of parameters of
          configuration class 'PublishedInformation' except 'Release'. The XPath function
          asc:getConfigSignature(nodeset) shall be used to determine the signature out of the
          list of parameters. The list of parameters shall be determined with the function
          asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the link time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          LcfgSignature.
        - the link time configuration shall contain the uint32 value
          FrIf_LcfgSignature.
        - the MCG shall generate this signature value of link time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of link time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>TS_FRIF_LCFG_C</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For Platform verification:
        - the FrIf post build configuration structure shall contain the value
          uint32 PlatformSignature. This uint32 must be the first value of the post build
          configuration structure to guarantee the correct access not disturbed by any padding
          bytes.
        - the MCG shall generate this signature for the selected target. The generator shall
          use the x-path function asc:getPlatformSignature() to determine this value.
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
        https://issue.ebgroup.elektrobit.com/browse/ASCBASE-1485
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM107</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support shall be enabled or disabled via the macro
        FRIF_PBCFGM_SUPPORT_ENABLED defined in the file
        FrIf_Cfg.h.
        If the PbcfgM configuration references the FrIf configuration
        the macro is set to STD_ON otherwise, or if no PbcfgM configuration is
        available it is set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_IsValidConfig</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_PBcfgM_Off</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_30019</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_NoPBCfg</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM108</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the FrIf is referenced by the PbcfgM, the parameter regarding the
        relocatable feature, shall not be editable and the MCG shall use the configuration of
        the PbcfgM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_PBcfgM_Off</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_PBcfgM_On</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FrIf_EBParameters.xdm.m4_2293</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PBCFGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrIf_Init() function must be extended to enable the PbcgfM
        features.
        The initialization function shall obtain the FrIf configuration
        from the PbcfgM if the PbcfgM support is enabled within this FrIf
        and the initialization function is called with a null pointer.
        The validity of the configuration shall be checked by the function
        FrIf_IsValidConfig(). The validity shall be check regardless the PbcfgM
        support is enabled or not.
        If no valid configuration can be obtained the initialization function shall
        return, leaving the FrIf uninitialized.
        In the case error reporting is enabled and no valid configuration can be obtained
        an erroneous parameter shall be indicated.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PostBuild_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrIf module shall compile and build an executable even in the absence
        of a post build configuration, i.e. without any post build generated .c and .h files
        available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_NoPBCfg</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_FRIF_Gen_PBcfgM_00000_OnlyPbCfg</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PbcfgM_General_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrIf shall provide the following macros in the header file
        FrIf_Cfg.h:
        - FRIF_RELOCATABLE_CFG_ENABLE which is set to STD_ON
          if relocatable config shall be enabled, otherwise it's set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_PBcfgM_On</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>

    <specobject>
      <id>FrIf.EB.PbcfgM_General_6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PbcfgM support is enabled FrIf shall define the following macros in
        FrIf_PBCfg.c:
        - TS_PB_CFG_LAYOUT_TYPE: Shall expand to the type definition of the Postbuild
          configuration layout type (e.g. FrIf_ConstConfigLayoutType)
        - TS_PB_CFG_NAME: Shall expand to the name of the structure defining the Postbuild
          configuration layout (e.g. FrIf_ConfigLayout)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_PBcfgM_Off</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>FrIf_Test_PBcfgM_On</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrIf.EB.PDULENGTHTYPE001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The FrIf module shall support the following values of PduLengthType:
        [UINT32, UINT16]
      </description>
      <verifycrit>
        Use case 1 - Modules not capable of handling more than 64 kbytes of data:
          - use PduLengthType value 'UINT32' with conformance test
          - verify successful test run, verify absence of metric violations
            (MISRA-C:2012, static code analysis, compiler warnings)
        Use case 2 - Modules capable of handling more than 64 kbytes of data:
          - use conformance test which handles more than 64 kbytes of data
          - apply "boundary" tests using data length of:
            [&lt;&lt;65535,65535, 65536, &gt;131072][bytes]
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FrIf_Test_30034</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FrIf.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FrIf_VerifyCodeStub</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.FrIf.RxComOpMaxLoop</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00007_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>dev.FrIf.JobListSynch</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>dev.FrIf.TxPayloadPadding</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05723</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>dev.FrIf.MonitorJobList</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>dev.FrIf.NoneMode</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06050_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>dev.FrIf.UserCommOp</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06067_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>dev.FrIf.CancelTransmit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05704</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00002_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>dev.FrIf.AllowDynamicLSduLength</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>dev.FrIf.DebugAndTrace</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>dev.FrIf.UserIndication</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00014_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00015_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00016_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00017_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06084_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>dev.FrIf.NoRxPayloadPadding</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05724_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>dev.FrIf.ConsChck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05301_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>dev.FrIf.PostBuildOnly</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>dev.FrIf.FrIfDetectNITError</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00003_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>dev.FrIf.FrIfCounterLimit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06076_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>dev.FrIf.ImmediatePdusDynamicLSduLengthFalse</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>448</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrIf_Api.h.m4_462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Api.h.m4</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Api.h.m4_1758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Api.h.m4</sourcefile>
      <sourceline>1758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_952</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>952</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_974</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>974</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_989</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>989</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_992</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>992</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_999</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>999</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_1005</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>1005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FrIf_Extension.h_1563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/include/FrIf_Extension.h</sourcefile>
      <sourceline>1563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_AbortCommunication.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AbortCommunication.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_AbortCommunication.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AbortCommunication.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_AckAbsoluteTimerIRQ.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AckAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_AckAbsoluteTimerIRQ.c_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AckAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_AckIRQ.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AckIRQ.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_AckIRQ.c_88</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AckIRQ.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_AckRelativeTimerIRQ.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AckRelativeTimerIRQ.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_AckRelativeTimerIRQ.c_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AckRelativeTimerIRQ.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_AllSlots.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AllSlots.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_AllSlots.c_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AllSlots.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_AllowColdstart.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AllowColdstart.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_AllowColdstart.c_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_AllowColdstart.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_CancelAbsoluteTimer.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CancelAbsoluteTimer.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_CancelAbsoluteTimer.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CancelAbsoluteTimer.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_CancelRelativeTimer.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CancelRelativeTimer.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_CancelRelativeTimer.c_99</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CancelRelativeTimer.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_CheckMTS.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CheckMTS.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_CheckMTS.c_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CheckMTS.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_CheckWakeupByTransceiver.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CheckWakeupByTransceiver.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_CheckWakeupByTransceiver.c_118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_CheckWakeupByTransceiver.c</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_ClearTransceiverWakeup.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ClearTransceiverWakeup.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_ClearTransceiverWakeup.c_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ClearTransceiverWakeup.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_ControllerInit.c_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ControllerInit.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_ControllerInit.c_90</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ControllerInit.c</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_DisableAbsoluteTimerIRQ.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_DisableAbsoluteTimerIRQ.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_DisableIRQ.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableIRQ.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_DisableIRQ.c_88</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableIRQ.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_DisableLPdu.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableLPdu.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_DisableLPdu.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableLPdu.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_DisableRelativeTimerIRQ.c_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableRelativeTimerIRQ.c</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_DisableRelativeTimerIRQ.c_99</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableRelativeTimerIRQ.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_DisableTransceiverBranch.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableTransceiverBranch.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_DisableTransceiverBranch.c_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_DisableTransceiverBranch.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_EnableAbsoluteTimerIRQ.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableAbsoluteTimerIRQ.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_EnableBusMirroring.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableBusMirroring.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableBusMirroring.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableBusMirroring.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableBusMirroring.c_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableBusMirroring.c</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.FrIfEnableBusMirroring.InvalidClstIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableBusMirroring.c_101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableBusMirroring.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_EnableIRQ.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableIRQ.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableIRQ.c_87</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableIRQ.c</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_EnableRelativeTimerIRQ.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableRelativeTimerIRQ.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableRelativeTimerIRQ.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableRelativeTimerIRQ.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_EnableTransceiverBranch.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableTransceiverBranch.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_EnableTransceiverBranch.c_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_EnableTransceiverBranch.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetAbsoluteTimerIRQStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetAbsoluteTimerIRQStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetAbsoluteTimerIRQStatus.c_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetAbsoluteTimerIRQStatus.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetChannelStatus.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetChannelStatus.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetChannelStatus.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetChannelStatus.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetClockCorrection.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetClockCorrection.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetClockCorrection.c_110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetClockCorrection.c</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetControllerErrorStatus.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetControllerErrorStatus.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetControllerErrorStatus.c_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetControllerErrorStatus.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetCycleLength.c_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetCycleLength.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetCycleLength.c_92</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetCycleLength.c</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetGlobalTime.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetGlobalTime.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetGlobalTime.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetGlobalTime.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetIRQStatus.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetIRQStatus.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetIRQStatus.c_88</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetIRQStatus.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetNmVector.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetNmVector.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetNmVector.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetNmVector.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetNumOfStartupFrames.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetNumOfStartupFrames.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetNumOfStartupFrames.c_99</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetNumOfStartupFrames.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetPOCStatus.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetPOCStatus.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetPOCStatus.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetPOCStatus.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetRelativeTimerIRQStatus.c_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetRelativeTimerIRQStatus.c</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetRelativeTimerIRQStatus.c_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetRelativeTimerIRQStatus.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetSyncFrameList.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetSyncFrameList.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetSyncFrameList.c_123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetSyncFrameList.c</sourcefile>
      <sourceline>123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetSyncState.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetSyncState.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetSyncState.c_93</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetSyncState.c</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetTransceiverError.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetTransceiverError.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetTransceiverError.c_145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetTransceiverError.c</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetTransceiverMode.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetTransceiverMode.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetTransceiverMode.c_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetTransceiverMode.c</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetTransceiverWUReason.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetTransceiverWUReason.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetTransceiverWUReason.c_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetTransceiverWUReason.c</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetVersionInfo.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetVersionInfo.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetVersionInfo.c_69</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetVersionInfo.c</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_GetWakeupRxStatus.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetWakeupRxStatus.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_GetWakeupRxStatus.c_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_GetWakeupRxStatus.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_HaltCommunication.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_HaltCommunication.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_HaltCommunication.c_92</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_HaltCommunication.c</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_Init.c_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Init.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Init.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Init.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Init.c_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Init.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Init.c_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Init.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Init.c_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Init.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Init.c_207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Init.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndStore.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndStore.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_378</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.TxConfirmation.FrCheckTxLPduStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.TxConfirmation.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_853</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>853</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_1125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>1125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_1216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>1216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_1389</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>1389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_1459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>1459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_JobListExecution.c_2249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_JobListExecution.c</sourcefile>
      <sourceline>2249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_Priv.h_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Priv.h</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Priv.h_114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Priv.h</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Priv.h_121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Priv.h</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Priv.h_188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Priv.h</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Priv.h_197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Priv.h</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_ReadCCConfig.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ReadCCConfig.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_ReadCCConfig.c_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ReadCCConfig.c</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_ReconfigLPdu.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ReconfigLPdu.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_ReconfigLPdu.c_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_ReconfigLPdu.c</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SendMTS.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SendMTS.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SendMTS.c_166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SendMTS.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SendWUP.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SendWUP.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SendWUP.c_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SendWUP.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SetAbsoluteTimer.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetAbsoluteTimer.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SetAbsoluteTimer.c_99</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetAbsoluteTimer.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SetExtSync.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetExtSync.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SetExtSync.c_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetExtSync.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SetRelativeTimer.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetRelativeTimer.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SetRelativeTimer.c_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetRelativeTimer.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SetTransceiverMode.c_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetTransceiverMode.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SetTransceiverMode.c_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetTransceiverMode.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_SetWakeupChannel.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetWakeupChannel.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_SetWakeupChannel.c_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_SetWakeupChannel.c</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_StartCommunication.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_StartCommunication.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_StartCommunication.c_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_StartCommunication.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_StateMachine.c_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_StateMachine.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_StateMachine.c_909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_StateMachine.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_01124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_StateMachine.c_1148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_StateMachine.c</sourcefile>
      <sourceline>1148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_TimeConversion.c_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_TimeConversion.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_TimeConversion.c_87</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_TimeConversion.c</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FrIf_Transmit.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Transmit.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Transmit.c_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Transmit.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Transmit.c_180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Transmit.c</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FrIf_Transmit.c_236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/src/FrIf_Transmit.c</sourcefile>
      <sourceline>236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/FrIf_EBParameters.xdm.m4_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/config/FrIf_EBParameters.xdm.m4</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.FrIfGLastGuaranteedDynamicSlotId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrIf_EBParameters.xdm.m4_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/config/FrIf_EBParameters.xdm.m4</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MinValidSlotId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrIf_EBParameters.xdm.m4_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/config/FrIf_EBParameters.xdm.m4</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MaxValidSlotId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FrIf_EBParameters.xdm.m4_2293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/config/FrIf_EBParameters.xdm.m4</sourcefile>
      <sourceline>2293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.Multicore.FrIfEnableBusMirroring</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.Multicore.FrIfGetPOCStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/src/Autosar/generate_swcd/swcd/FrIf_Bswmd.arxml.m4</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.Multicore.FrIfGetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrIf_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function FrIf_IsValidConfig() is implemented as specified.
  
Test Object: 
    FrIf_IsValidConfig()
  
Test Precondition: 
    The FrIf module is not initialized.
  
Test Execution: 
    01: Call the function FrIf_IsValidConfig() with an NULL_PTR.
    02: VP:
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function FrIf_IsValidConfig() with this invalid configuration.
    05: VP(FrIf.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    The following 3 steps are only executed if the module has a link-time configuration:
        06: Create an invalid configuration regarding the link time configuration.
        07: Call the function FrIf_IsValidConfig() with this invalid configuration.
        08: VP(FrIf.EB.PBCFGM105):
                The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function FrIf_IsValidConfig() with this invalid configuration.
    11: VP(FrIf.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function FrIf_IsValidConfig() with this invalid configuration.
    14: VP(FrIf.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function FrIf_IsValidConfig() with a valid configuration.
    16: VP:
        The function must have returned with E_OK.
    17: VP(FrIf.EB.PBCFGM107):
        Check if FRIF_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>FrIf_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the FrIf can be initialized via the PbcfgM.
  
Test Object: 
    FrIf_IsValidConfig()
  
Test Precondition: 
    The FrIf module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function FrIf_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function FrIf_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    The following 3 steps are only executed if the module has a link-time configuration:
        07: Create an invalid configuration regarding the link time configuration.
        08: Call the function FrIf_Init() with this invalid configuration.
        09: VP:
            A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function FrIf_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function FrIf_Init() with a null pointer.
    15: VP:
        The function PbcfgM_GetConfig() must have been called once.
    16: VP:
        No Det call must have been performed.
    17: VP:
        The module internal configuration pointer FrIf_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call FrIf_Init with NULL_PTR.
    20: VP(FrIf.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_PBcfgM_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PbcfgM_Off_Compile_Test.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that if PbcfgM support is disabled then FrIf_PBCfg.c shall define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
      FRIF_PBCFGM_SUPPORT_ENABLED shall be set to STD_OFF.
      FRIF_RELOCATABLE_CFG_ENABLE shall be set to STD_OFF.
    
Test Object: None.
Test Precondition: 
      - PbcfgM configuration does not refer to module FrIf (or no config exists)
      - Include FrIf_PBcfg.c only for step 01 and 02.
      - Include FrIf_Cfg.h for step 03.
    
Test Execution: 
        01: VP(FrIf.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exists.
        02: VP(FrIf.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME has the value
            FrIf_ConfigLayoutType and FRIF_CONFIG_NAME respectively.
        03: VP (FrIf.EB.PBCFGM107):
            Verify that FRIF_PBCFGM_SUPPORT_ENABLED is set to STD_OFF.
        04: VP(FrIf.EB.PBCFGM108, FrIf.EB.RelocatablePBCfg):
            FRIF_RELOCATABLE_CFG_ENABLE shall be STD_OFF
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_PBcfgM_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_PbcfgM_On_Compile_Test.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      1.)
      Verify that FRIF_RELOCATABLE_CFG_ENABLE is defined
      in the header file FrIf_Cfg.h.
      2.)
      Verify that if PbcfgM support is enabled then FrIf_PBCfg.c shall NOT define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
    
Test Object: None.
Test Precondition: 
        - FRIF_PBCFGM_SUPPORT_ENABLED = STD_ON
    
Test Execution: 
        ------------------------ 1.) ---------------------
        01: VP (FrIf.EB.PbcfgM_General_3,
                FrIf.EB.PBCFGM108,
                FrIf.EB.RelocatablePBCfg):
            Verify that FRIF_RELOCATABLE_CFG_ENABLE is set to STD_ON.
        ------------------------ 2.) ---------------------
        02: Include FrIf_PBcfg.c.
        03: VP(FrIf.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exist.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FrIf_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/build/reqm/common_req/FrIf_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(FrIf.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_30019</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_ComTest_1/source/application/FrIf_ComTest_1.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test pre-compile-time configuration parameters.
      Test tool based configuration generation.
    
Test Object: None.
Test Precondition: 
        FRIF_RELOCATABLE_CFG_ENABLE is disabled.
    
Test Execution: None.
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05713</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIntegrationEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.JoblistIRQMuxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.JoblistIRQDelayCheckEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.JoblistPrepareLPduEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.RelativeTimerApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SetExtSyncApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetSyncStateApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.MtsApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.WakeupEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetIrqStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DisableIrqApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetTransceiverModeApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetTransceiverWUReasonApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.WakeupControlApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.CheckWakeupByTransceiverApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.AllowColdstartApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05413_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetCtrlErrorStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05418</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ExtIRQServicesApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrPrefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvPrefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ReportToDetEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ImmediateTxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.TransmitQueueEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.LPduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DecoupledRxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ComOpIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFOEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfGlobalRxMaxLoop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05140b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05091a_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_30027</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_ComTest_2/source/application/FrIf_ComTest_2.c</sourcefile>
      <sourceline>817</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test pre-compile-time configuration parameters.
      Test tool based configuration generation.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01: VP(FrIf.EB.PBSelectable.FileName):
          Verify that files &amp;lt;Mod&amp;gt;_Variant1_PBcfg.h and &amp;lt;Mod&amp;gt;_Variant1_PBcfg.h exist.
          (see files &amp;lt;Mod&amp;gt;_PBcfg.h and &amp;lt;Mod&amp;gt;_PBcfg.c for verification)
      02: VP(FrIf.EB.PBSelectable.TypeName):
          Verify that types &amp;lt;Mod&amp;gt;_Variant1_ConstConfigLayoutType and 
          &amp;lt;Mod&amp;gt;_Variant1_ConfigLayoutType exist.
      03: VP(FrIf.EB.PBSelectable.TypeName):
          Verify that configuration variable &amp;lt;Mod&amp;gt;_Variant1_ConfigLayout exists.
      04: VP(FrIf.EB.PBSelectable.ConfigName):
          Verify that symbol &amp;lt;Mod&amp;gt;_Config_Variant1 exists.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05713</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIntegrationEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.JoblistIRQMuxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.JoblistIRQDelayCheckEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.JoblistPrepareLPduEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.RelativeTimerApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SetExtSyncApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetSyncStateApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.MtsApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.WakeupEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetIrqStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DisableIrqApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetTransceiverModeApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetTransceiverWUReasonApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.WakeupControlApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.CheckWakeupByTransceiverApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.AllowColdstartApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05413_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.GetCtrlErrorStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05418</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ExtIRQServicesApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrPrefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvPrefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ReportToDetEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ImmediateTxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.TransmitQueueEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.LPduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DecoupledRxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFOEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfGlobalRxMaxLoop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05091a_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05140a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05076b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfDataMemSize.EnabledValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PBSelectable.ConfigName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_ComTest_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_ComTest_3/source/application/FrIf_ComTest_3.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the support of at least 4 FlexRay Clusters and 4 FlexRay Controllers .
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: None.
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05076r</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfDataMemSize.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_ComTest_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_ComTest_6/source/application/FrIf_ComTest_6.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test the linkage with UL CDD symbolic name values for PduHandleIds.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: None.
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.UseULCDDSymbolicNameValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_NoPBCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_ComTest_NoPBCfg/source/application/FrIf_ComTest_NoPBCfg.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test shall prove that that the FrIf also compiles without any post build information
    
Test Object: None.
Test Precondition: 
        * The merged make file holds a rule which removes all post build files after generation
    
Test Execution: 
        The test run is successful when the FrIf compiles under sticking to the precondition.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_CompatibleFifo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_CompatibleFifo/source/application/Test.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test pre-compile-time configuration parameters.
      Test tool based configuration generation if Fr has a FIFO enabled (Autosar compatible).
    
Test Object: None.
Test Precondition: 
        ExtendedRxFIFOEnable = false.
    
Test Execution: None.
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFOEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRIF_SCHM</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_Compile_SchM/source/application/FrIf_Compile_SchM.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks that the FrIf module's generator generates a
     syntactically and semantically valid basic software module
     description (BSWMD) when the generator mode "generate_swcd" is
     invoked. It further tests that the SchM exclusive area API is
     correctly generated by the RTE generator based on the CanTp module's
     generated BSWMD.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    Ts5 build environment steps:
      The module configuration generator produces the BSWMD containing
      the information on the required exclusive areas.  This information
      is then used by the RTE generator to create the required SchM API
      for these exclusive areas. This implicitly verifies that the BSWMD
      is syntactically and semantically correct.  FrIf's static code
      makes use of this API (and the respective #defines) thus causing
      compile/link errors if the BSWMD does not contain the correct
      information.
  
Test Input: 
    Usage of a common ASR configuration having all adjacent ASR modules
    configured.
  
Test Output: 
    Compile succeeds.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_FrIfMemSize_CheckInconsistentSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that if the amount of RAM required by the post-build configuration is larger than 
    the RAM allocated at pre-compile-time, an error message is reported.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Start generator with erroneous configuration.
    02: VP: The generator must have issued the following error:
            "'x' Bytes of Post-build-Ram are required, while only 'y' bytes have been reserved 
            at pre-compile-time (FrIfDataMemSize)."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIfDataMemSize.EnabledCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>FrIf_Test_FrIfPdu_NotReferenced</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that each FrIfPdu configuration container is refreenced at least by one FrIfFrameStructure.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Start generator with erroneous configuration.
    02: VP: The generator must have issued the following error:
            "This FrIfPdu is not referenced by any FrIfFrameStructure."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06069_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>FrIf_Test_FrIfFrameStructure_NotReferenced</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that each FrIfFrameStructure configuration container is refreenced at least by one FrIfFrameTriggering.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Start generator with erroneous configuration.
    02: VP: The generator must have issued the following error:
            "This FrIfFrameStructure is not referenced by any FrIfFrameTriggering."

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06048_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>FrIf_Test_FrIfDynamicGuaranteedTxReconfigMsgBufOpt_MinInvalidSlotId</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that FrIfGLastGuaranteedDynamicSlotId has to be higher than the last static
    SlotId.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Start generator with erroneous configuration.
    02: VP: The generator must have issued the following error:
            "Last guaranteed SlotId has to be greater than FrIfGNumberOfStaticSlots so it is within
            dynamic segment."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MinValidSlotId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>FrIf_Test_FrIfDynamicGuaranteedTxReconfigMsgBufOpt_MaxInvalidSlotId</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that FrIfGLastGuaranteedDynamicSlotId has to be lower than or equal to the
    last dynamic SlotId.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Start generator with erroneous configuration.
    02: VP: The generator must have issued the following error:
            "Last guaranteed SlotId has to be smaller than (FrIfGNumberOfStaticSlots +
            FrIfGNumberOfMinislots) so it is within dynamic segment."

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DynamicGuaranteedTxReconfigMsgBufOpt.MaxValidSlotId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_30036</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_HandleIdGenTest_1/source/application/Application.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test checks that running the handle id wizard creates a valid configuration (zero-based and dense indices) out of an invalid configuration.
      The handleIds observed are:
        - FrIfTxPduId
        - FrIfCtrlIdx
        - FrIfClstIdx
        - FrIfAbsTimerIdx
        - FrIfRelTimerIdx
        - FrIfLPduIdx
    
Test Object: None.
Test Precondition: 
        FRIF_RELOCATABLE_CFG_ENABLE is enabled
    
Test Execution: None.
Test Input: 
        Configuration has wrong handle IDs (non zero-based or non-dense or non-unique)
    
Test Output: 
        Binary file.
    </description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.HandleIdGenerator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_NonLegSymbolicNames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_NonLegSymbolicNamesTest_1/source/application/FrIf_NonLegSymbolicNamesTest_1.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Checking the symbolic name macros generated when FRIF_PROVIDE_LEGACY_SYMBOLIC_NAMES is not defined.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01.Check that macros are generated with the names and the values listed in output(1).
      02.Check that macros with the names listed in output (2) are not defined. 
    
Test Input: 
        None.
    
Test Output: 
     (1)All symbolic name Macros generated should be defined as per Autosar 4.0 rev3
        and the values should be :
        FrIfConf_FrIfCluster_FrIfCluster_0        0U
        FrIfConf_FrIfPdu_1                        0U
        FrIfConf_FrIfController_FrIfController_0  1U
        FrIfConf_FrIfController_FrIfController_1  0U
        FrIfConf_FrIfLPdu_FrIfLPdu_1              5U
        FrIfConf_FrIfLPdu_FrIfLPdu_2              1U
        FrIfConf_FrIfLPdu_FrIfLPdu_3              4U
        FrIfConf_FrIfLPdu_FrIfLPdu_4              3U
        FrIfConf_FrIfLPdu_FrIfLPdu_5              2U
        FrIfConf_FrIfLPdu_FrIfLPdu_6              0U
        
     (2)The Symbolic name Macros that should not be defined are :
        FrIf_FrIfCluster_0 must not be defined   
        FrIf_FrIfPdu_1 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0 must not be defined
        FrIf_FrIfCluster_0_FrIfController_1 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_1 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_2 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_3 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_4 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_5 must not be defined
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_6 must not be defined
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06002_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06078_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>FrIf..EB.ShortNames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_SymbolicNames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Compile/IN/FrIf_SymbolicNamesTest_1/source/application/FrIf_SymbolicNamesTest_1.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Check that macros are generated for configuration parameters which are specified as 
      SYMBOLICNAMEVALUES.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01: Check that macros are generated with the names and the values listed in output.
    
Test Input: 
        None.
    
Test Output: 
        FrIfConf_FrIfCluster_FrIfCluster_0                  0U
        FrIf_FrIfCluster_0                                  0U
        FrIfConf_FrIfTxPdu_MyTxPdu                          0U
        FrIf_FrIfPdu_1                                      0U
        FrIfConf_FrIfController_FrIfController_0            1U
        FrIf_FrIfCluster_0_FrIfController_0                 1U
        FrIfConf_FrIfController_FrIfController_1            0U
        FrIf_FrIfCluster_0_FrIfController_1                 0U
        FrIfConf_FrIfLPdu_FrIfLPdu_1  5U
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_1      5U
        FrIfConf_FrIfLPdu_FrIfLPdu_2  1U
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_2      1U
        FrIfConf_FrIfLPdu_FrIfLPdu_3  4U
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_3      4U
        FrIfConf_FrIfLPdu_FrIfLPdu_4  3U
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_4      3U
        FrIfConf_FrIfLPdu_FrIfLPdu_5  2U
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_5      2U
        FrIfConf_FrIfLPdu_FrIfLPdu_6  0U
        FrIf_FrIfCluster_0_FrIfController_0_FrIfLPdu_6      0U
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06002_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06078_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>FrIf..EB.ShortNames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_INV_PTR_FrIf_Init</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_1/source/application/Test.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case FrIf_Init is called
      with an invalid pointer.
  
Test Object: None.
Test Precondition: 
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_Init() with null pointer as parameters
      02:  VP:
           Det reports FRIF_E_INV_POINTER
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30037</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_1/source/application/Test.c</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test checks the transmission of more than 256 (in this case 264) Tx Pdus.
        For dummy Pdus (not contained in any FrIfFrameStructure), FrIf_Transmit() shall return E_NOT_OK.
    
Test Object: None.
Test Precondition: 
      The FrIf module shall be initialized.
      264 TxPdus are configured.
    
Test Execution: 
      Loop steps 01 to 04 for all the configured PDUs.
      01: Call FrIf_Transmit() for the TxPdu with payload equal to the PduIdx.
      02: VP(FrIf.EB.DummyTxPdu):
          Check that FrIf_Transmit() returns E_NOT_OK for TxPdu with TxPduIdx 262 (Dummy TxPdu).
          Check that FrIf_Transmit() returns E_OK for all other TxPdus.
      03: VP(FrIf.EB.PduIdxSize):
          Check if 33 LPdus are transmitted.
      04: VP(): Check if the update bits of all PDUs are set.
      05: VP(): Check if the transmitted payload is correct.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DummyTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30038</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_1/source/application/Test.c</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test checks the reception of more than 256 (in this case 264) Rx Pdus.
        A dummy RxPdu (not contained in the FrIfFrameStructure) shall not be indicated.
    
Test Object: None.
Test Precondition: 
      Execution of test FrIf_Test_30037
      264 Rx Pdus are configured.
    
Test Execution: 
      01: Execute the job list to receive all the configured Rx LPdus.
      02: VP(FrIf.EB.PduIdxSize):
          Check if Fr_ReceiveRxLPdu is called for 33 LPdus.
      03: Check if the payload received correctly.
      04: VP(FrIf.EB.DummyRxPdu): Check that no RxPdu with RxPduId 526 is indicated
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DummyRxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30039</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_1/source/application/Test.c</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test checks the Tx-Confirmation of more than 256 (in this case 264) Tx Pdus.
        Check that no Tx-Confirmation is called for a dummy Tx Pdu.
    
Test Object: None.
Test Precondition: 
      Execution of test FrIf_Test_30038
      264 Tx Pdus are configured.
    
Test Execution: 
      01: Prepare Fr_CheckTxLPduStatus() to return FR_TRANSMITTED for all LPdus.
      02: Execute the job list for TxConfirmation of the sent TxLPdus.
      03: VP(FrIf.EB.PduIdxSize, FrIf.EB.DummyTxPdu):
          Check if TxConfirmation is indicated for all the 263 Pdus, but not the dummy Pdu.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PduIdxSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DummyTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ControllerInit()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_ControllerInit() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_ControllerInit() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_Startcommunication()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_StartCommunication() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_StartCommunication() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_HaltCommunication()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_HaltCommunication() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_HaltCommunication() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AbortCommunication()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_AbortCommunication() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_AbortCommunication() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetState()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SetState() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05176):
          FrIf_SetState() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05176):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetState()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetState() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_GetState() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetWakeupChannel()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SetWakeupChannel() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_SetWakeupChannel() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SendWUP()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SendWUP() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_SendWUP() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>476</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetPOCStatus()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetPOCStatus() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_GetPOCStatus() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>530</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetGlobalTime()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetGlobalTime() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_GetGlobalTime() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetMacroticksPerCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>585</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetMacroticksPerCycle()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetMacroticksPerCycle() with valid parameters
     02:  VP (FrIf.ASR40.FrIf05204):
          FrIf_GetMacroticksPerCycle() returns 0
     03:  VP (FrIf.ASR40.FrIf05204):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetMacrotickDuration</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>637</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetMacrotickDuration()
      in case the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetMacrotickDuration() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05301):
          FrIf_GetMacrotickDuration() returns 0
     03:  VP(FrIf.ASR40.FrIf05301):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>686</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetAbsoluteTimer()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SetAbsoluteTimer() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_SetAbsoluteTimer() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>738</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CancelAbsoluteTimer()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelAbsoluteTimer() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_CancelAbsoluteTimer() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>790</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableAbsoluteTimerIRQ()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableAbsoluteTimerIRQ() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_EnableAbsoluteTimerIRQ() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>842</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetAbsoluteTimerIRQStatus()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetAbsoluteTimerIRQStatus() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_GetAbsoluteTimerIRQStatus() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AckAbsoluteTimerIRQ()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_AckAbsoluteTimerIRQ() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_AckAbsoluteTimerIRQ() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>948</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableAbsoluteTimerIRQ()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableAbsoluteTimerIRQ() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_DisableAbsoluteTimerIRQ() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05266</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1000</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_Transmit()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_Transmit() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_Transmit() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1058</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AllowColdstart()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_AllowColdstart() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_AllowColdstart() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetNmVector()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetNmVector() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05199):
          FrIf_GetNmVector() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05199):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetTransceiverMode()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_SetTransceiverMode() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetTransceiverMode()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverMode() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_GetTransceiverMode() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1267</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetTransceiverWUReason()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_GetTransceiverWUReason() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1322</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ClearTransceiverWakeup()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup() with valid parameters
     02:  VP(FrIf.ASR40.FrIf05298):
          FrIf_ClearTransceiverWakeup() returns E_NOT_OK
     03:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CheckWakeupByTransceiver()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver() with valid parameters
     02:  VP(FrIf.ASR40.FrIf052980:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_JobListExec_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1422</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_JobListExec_0()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_JobListExec_0()
     02:  VP(FrIf.ASR40.FrIf05298):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05272</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_MainFunction_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1470</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_MainFunction_0()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_MainFunction_0()
     02:  VP(FrIf.EB.ASCCCB1403):
          No Det error is reported
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.ASCCCB1403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1512</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AllSlots in case the FrIf
      is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AllSlots() with valid parameters
      02:  VP (FrIf.ASR40.FrIf05706):
           FrIf_AllSlots() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05706):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableLPdu in case the
      FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableLPdu() with valid parameters
      02:  VP (FrIf.ASR40.FrIf05717):
           FrIf_DisableLPdu() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05717):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05717</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetChannelStatus in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetChannelStatus() with valid parameters
      02:  VP:
           FrIf_GetChannelStatus() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05708):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05708</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetClockCorrection in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetClockCorrection() with valid parameters
      02:  VP (FrIf.ASR40.FrIf05711):
           FrIf_GetClockCorrection() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05711):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05711</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1719</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetSyncFrameList in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetSyncFrameList() with valid parameters
      02:  VP (FrIf.ASR40.FrIf05715):
           FrIf_GetSyncFrameList() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05715):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05715</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1774</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetWakeupRxStatus in case
      the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetWakeupRxStatus() with valid parameters
      02:  VP (FrIf.ASR40.FrIf05700):
           FrIf_GetWakeupRxStatus() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05700):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ReconfigLPdu in case the
      FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_ReconfigLPdu() with valid parameters
      02:  VP:
           FrIf_ReconfigLPdu() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05065):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1876</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetTransceiverError in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetTransceiverError() with valid parameters
      02:  VP(FrIf.ASR40.FrIf05718):
           FrIf_GetTransceiverError() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05718):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05718</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1928</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetNumOfStartupFrames in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetNumOfStartupFrames() with valid parameters
      02:  VP(FrIf.ASR40.FrIf05721):
           FrIf_GetNumOfStartupFrames() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05721):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05721</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>1981</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ReadCCConfig in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_ReadCCConfig() with valid parameters
      02:  VP:
           FrIf_ReadCCConfig() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05065):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2032</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableTransceiverBranch in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableTransceiverBranch() with valid parameters
      02:  VP(FrIf.ASR40.FrIf05308):
           FrIf_DisableTransceiverBranch() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05308):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2083</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableTransceiverBranch in case
      the FrIf is not initialized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_EnableTransceiverBranch() with valid parameters
      02:  VP(FrIf.ASR40.FrIf05307):
           FrIf_EnableTransceiverBranch() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05307):
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetCycleLength()
      in case the FrIf is not initialized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetCycleLength() with valid parameters
     02:  VP:
          FrIf_GetCycleLength() returns 0
     03:  VP(FrIf.ASR40.FrIf05238):
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_PTR_FrIf_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case FrIf_GetVersionInfo is called
      with an invalid pointer.
  
Test Object: None.
Test Precondition: 
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetVersionInfo()with null pointer as parameters
      02:  VP(FrIf.ASR40.FrIf05151):
           Det reports FRIF_E_INV_POINTER
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_PTR_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case FrIf_GetState is called
      with an invalid pointer.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetState() with null pointer as parameters
      02:  VP:
           FrIf_GetState() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05172):
           Det reports FRIF_E_INV_POINTER
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_PTR_TXPDUID_FrIf_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case FrIf_Transmit is called
      with an invalid parameters.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized and FRIF_STATE_ONLINE.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_Transmit() with null pointer as parameters
      02:  VP:
           FrIf_Transmit() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05207a):
           Det reports FRIF_E_INV_POINTER
      04:  Call FrIf_Transmit() with PduInfo.SduDataPtr = NULL_PTR
      05:  VP:
           FrIf_Transmit() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05206):
           Det reports FRIF_E_INV_POINTER
      07:  Call FrIf_Transmit() invalid TxPduId
      08:  VP:
           FrIf_Transmit() returns E_NOT_OK
      09:  VP(FrIf.ASR40.FrIf05205):
           Det reports FRIF_E_INV_TXPDUID
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05207a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2394</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ControllerInit()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_ControllerInit() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_ControllerInit() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05158):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_StartCommunication()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_StartCommunication() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_StartCommunication() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05161):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_HaltCommunication()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_HaltCommunication() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_HaltCommunication() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05164):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AbortCommunication()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AbortCommunication() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_AbortCommunication() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05167):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CLST_FrIf_SetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2614</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetState()
      in case of an invalid FrIf_ClstIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SetState() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SetState() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05175):
           Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CLST_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2669</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetState()
      in case of an invalid FrIf_ClstIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetState() with invalid FrIf_ClstIdx
      02:  VP:
           FrIf_GetState() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05171):
           Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2726</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetWakeupChannel()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SetWakeupChannel() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SetWakeupChannel() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05500):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2781</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SendWUP()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 

      01:  Call FrIf_SendWUP() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SendWUP() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05180):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2837</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetPOCStatus()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetPOCStatus() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetPOCStatus() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05190):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2894</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetGlobalTimer()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetGlobalTime() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetGlobalTime() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05194):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetMacroticksPerCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>2952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_getMacroticksPerCycle()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetMacroticksPerCycle() with invalid FrIf_CtrlIdx
      02:  VP (FrIf.ASR40.FrIf05203):
           FrIf_GetMacroticksPerCycle() returns 0
      03:  VP (FrIf.ASR40.FrIf05203):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetMacrotickDuration</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3007</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetMacrotickDuration()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetMacrotickDuration() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetMacrotickDuration() returns 0
      03:  VP(FrIf.ASR40.FrIf05191) :
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetAbsoluteTimer()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SetAbsoluteTimer() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SetAbsoluteTimer() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05234):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CancelAbsoluteTimer()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_CancelAbsoluteTimer() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_CancelAbsoluteTimer() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05240):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableAbsoluteTimerIRQ()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_EnableAbsoluteTimerIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_EnableAbsoluteTimerIRQ() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05246):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetAbsoluteTimerIRQStatus() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetAbsoluteTimerIRQStatus() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05252):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3284</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AckAbsoluteTimerIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_AckAbsoluteTimerIRQ() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05258):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableAbsoluteTimerIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_DisableAbsoluteTimerIRQ() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05264):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3394</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AllowColdstart() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_AllowColdstart() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05200):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetNmVector() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetNmVector() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05197):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3506</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter and an invalid channel index. 
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SetTransceiverMode() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SetTransceiverMode() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05210):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_SetTransceiverMode() with invalid FrIf_ChnlIdx
      05:  VP:
           FrIf_SetTransceiverMode() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05211):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter and an invalid channel index. 
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetTransceiverMode() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetTransceiverMode() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05214):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_GetTransceiverMode() with invalid FrIf_ChnlIdx
      05:  VP:
           FrIf_GetTransceiverMode() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05215):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3658</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter and an invalid channel index. 
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetTransceiverWUReason() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetTransceiverWUReason() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05218):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_GetTransceiverWUReason() with invalid FrIf_ChnlIdx
      05:  VP:
           FrIf_GetTransceiverWUReason() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05219):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3733</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter and an invalid channel index. 
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_ClearTransceiverWakeup() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_ClearTransceiverWakeup() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05230):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_ClearTransceiverWakeup() with invalid FrIf_ChnlIdx
      05:  VP:
           FrIf_ClearTransceiverWakeup() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05231):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3808</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter and an invalid channel index. 
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_CheckWakeupByTransceiver() with invalid FrIf_CtrlIdx
      02:  VP(FrIf.ASR40.FrIf05274):
           Det reports FRIF_E_INV_CTRL_IDX
      03:  Call FrIf_CheckWakeupByTransceiver() with invalid FrIf_ChnlIdx
      04:  VP(FrIf.ASR40.FrIf05275):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3874</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AllSlots in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AllSlots() with invalid FrIf_CtrlIdx
      02:  VP (FrIf.ASR40.FrIf05707):
           FrIf_AllSlots() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05707):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05707</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3927</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableLPdu in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableLPdu() with invalid FrIf_CtrlIdx
      02:  VP (FrIf.ASR40.FrIf05714):
           FrIf_DisableLPdu() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05714):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05714</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>3981</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetChannelStatus in case of
      an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetChannelStatus() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetChannelStatus() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05709):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05709</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4038</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetClockCorrection in case
      of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetClockCorrection() with invalid FrIf_CtrlIdx
      02:  VP (FrIf.ASR40.FrIf05712):
           FrIf_GetClockCorrection() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05712):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05712</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetSyncFrameList in case of
      an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetSyncFrameList() with invalid FrIf_CtrlIdx
      02:  VP (FrIf.ASR40.FrIf05716):
           FrIf_GetSyncFrameList() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05716):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05716</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4152</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetWakeupRxStatus in case
      of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetWakeupRxStatus() with invalid FrIf_CtrlIdx
      02:  VP (FrIf.ASR40.FrIf05701):
           FrIf_GetWakeupRxStatus() returns E_NOT_OK
      03:  VP (FrIf.ASR40.FrIf05701):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ReconfigLPdu in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_ReconfigLPdu() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_ReconfigLPdu() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05309):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetTransceiverError in case of
      invalid FrIf_CtrlIdx and FrIf_ChnlIdx parameters.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetTransceiverError() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetTransceiverError() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05719):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_GetTransceiverError() with invalid FrIf_CtrlIdx
      05:  VP:
           FrIf_GetTransceiverError() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05720):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05719</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05720</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetNumOfStartupFrames in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetNumOfStartupFrames() with invalid FrIf_CtrlIdx
      02:  VP(FrIf.ASR40.FrIf05722):
           FrIf_GetNumOfStartupFrames() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05722):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05722</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_ReadCCConfig in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_ReadCCConfig() with invalid FrIf_CtrlIdx
      02:  VP(FrIf.ASR40.FrIf05315):
           FrIf_ReadCCConfig() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05315):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableTransceiverBranch in case of
      invalid FrIf_CtrlIdx and FrIf_ChnlIdx parameters.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableTransceiverBranch() with invalid FrIf_CtrlIdx
      02:  VP(FrIf.ASR40.FrIf05303):
           FrIf_DisableTransceiverBranch() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05303):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_DisableTransceiverBranch() with invalid FrIf_ChnlIdx
      05:  VP(FrIf.ASR40.FrIf05243):
           FrIf_DisableTransceiverBranch() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05243):
           Det reports FRIF_E_INV_CHNL_IDX
      07:  Call FrIf_DisableTransceiverBranch() with unconfigured FrIf_ChnlIdx
      08:  VP(FrIf.ASR40.FrIf05243):
           FrIf_DisableTransceiverBranch() returns E_NOT_OK
      09:  VP(FrIf.ASR40.FrIf05243):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_CHNL_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4539</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableTransceiverBranch in case of
      invalid FrIf_CtrlIdx and FrIf_ChnlIdx parameters.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_EnableTransceiverBranch() with invalid FrIf_CtrlIdx
      02:  VP(FrIf.ASR40.FrIf05302):
           FrIf_EnableTransceiverBranch() returns E_NOT_OK
      03:  VP(FrIf.ASR40.FrIf05302):
           Det reports FRIF_E_INV_CTRL_IDX
      04:  Call FrIf_EnableTransceiverBranch() with invalid FrIf_ChnlIdx
      05:  VP(FrIf.ASR40.FrIf05304):
           FrIf_EnableTransceiverBranch() returns E_NOT_OK
      06:  VP(FrIf.ASR40.FrIf05304):
           Det reports FRIF_E_INV_CHNL_IDX
      07:  Call FrIf_EnableTransceiverBranch() with unconfigured FrIf_ChnlIdx
      08:  VP(FrIf.ASR40.FrIf05304):
           FrIf_EnableTransceiverBranch() returns E_NOT_OK
      09:  VP(FrIf.ASR40.FrIf05304):
           Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Det_Tests.c</sourcefile>
      <sourceline>4631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetCycleLength()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetCycleLength() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetCycleLength() returns 0
      03:  VP(FrIf.ASR40.FrIf05237):
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_30004</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests all state transitions of the FlexRay Interface State Machine of a cluster.
  
Test Object: None.
Test Precondition: 
      None.
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Call FrIf_GetState()
      03:  VP:
           FrIf_State equals FRIF_STATE_OFFLINE
      04:  Indicate that CC is in a synchronous state
      05:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      06:  Call FrIf_GetState()
      07:  VP:
           FrIf_State equals FRIF_STATE_OFFLINE
      08:  Call FrIf_SetState(&lt;ClstIdx&gt;,FRIF_GOTO_ONLINE)
      09:  VP:
           FrIf_SetState() returns E_OK
      10:  Call FrIf_GetState()
      11:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      12:  Indicate that CC is in an asynchronous state
      13:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      14:  Call FrIf_GetState()
      15:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      16:  Repeat the next four steps for each state in input(17) and the
           associated state in output(20)
      17:    Call FrIfSetState(&lt;ClstIdx&gt;,input(17))
      18:    VP:
             FrIf_SetState() returns E_OK
      19:    Call FrIf_GetState()
      20:    VP:
             FrIf_State equals output(20)
  
Test Input: 
      17:  FRIF_GOTO_OFFLINE
           FRIF_GOTO_OFFLINE
           FRIF_GOTO_ONLINE
           FRIF_GOTO_ONLINE
  
Test Output: 
      20:  FRIF_STATE_OFFLINE
           FRIF_STATE_OFFLINE
           FRIF_STATE_ONLINE
           FRIF_STATE_ONLINE
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05115_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05115_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30005</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission and transmission confirmation
      mechanism. Tests the basic FlexRay startup and job list synchronization, and the basic
      job list execution mechanism.
  
Test Object: None.
Test Precondition: 
      The transmitted frame shall be configured statically to contain
      4 PDUs (PDU0, PDU1, PDU2, PDU3) which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          PDU0 and PDU2 shall have update bits.
          PDU0, PDU1 and PDU2 shall be configured for TxConfirmation.

      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
          TX_CONFIRMATION
          TX_CONFIRMATION
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate that CC is in POC state NormalActive and
           set the FrIf Module to FRIF_STATE_ONLINE.
      03:  Call FrIf_Transmit() for PDU0, PDU1, and PDU3
      04:  VP:
           Each FrIf_Transmit() retuns E_OK
      05:  VP:
           No Fr function is called
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      06:  Indicating the absolute timer IRQ and the respective global time on the transceiver
      07:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      08:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      09:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU0,
           PDU1, and PDU3 (for PDU2 no transmit function called).
      10:  Copy the PDUs data to the given address
      11:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload. The update bit of PDU0 shall be set and the update bit of PDU2
           shall be cleared in the transmitted frame
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      12:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      13:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      14:  No upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      15:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      16:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      17:  VP:
           Fr_TxLPduStatus equals FR_TRANSMITTED
      18:  VP:
           The upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called for PDU0
           and PDU1 (for PDU2 no transmit function called, PDU3 not configured for confirmation)
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      19:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      20:  VP:
           FrIf_Transmit() is called for none of the PDUs
      21:  VP:
           No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called
      22:  VP:
           Fr_TransmitTxLPdu() is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06071_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>FrIf_Test_Fr_TransmitTxLPdu_Interrupted</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission if FrIf_ JoblistExec is preempted by
      FrIf_Transmit for a Tx pdu in the same framestructure.
  
Test Object: None.
Test Precondition: 
      The transmitted frame shall be configured statically to contain
      4 PDUs (PDU0, PDU1, PDU2, PDU3) which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          PDU0 and PDU2 shall have update bits.
          PDU0, PDU1 and PDU2 shall be configured for TxConfirmation.

      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
          TX_CONFIRMATION
          TX_CONFIRMATION
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate that CC is in POC state NormalActive and
           set the FrIf Module to FRIF_STATE_ONLINE.
      03:  Call FrIf_Transmit() for PDU0, PDU1, and PDU3
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      04:  Indicating the absolute timer IRQ and the respective global time on the transceiver
      05:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      06:  Copy the PDUs data to the given address
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      07:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      08:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      09:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      10:  Copy the PDUs data to the given address
      11:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.TransmitJoblistConcurrencyDecoupledTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReceiveAndIndicate</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>1119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the ReceiveAndIndicate reception
      mechanism.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job
      performs the first frame reception
      (RECEIVE_AND_INDICATE).
      The received frame shall be configured statically to contain
      3 PDUs (PDU12, PDU13, PDU14) which should be configured in the
      following way:
          PDU12 and PDU13 shall have update bits.
          PDU14 shall have no update bit.
      The job list shall contain jobs performing the following actions:
          RECEIVE_AND_INDICATE
          RECEIVE_AND_INDICATE
  
Test Execution: 
      01:  Repeat the whole testcase four times for each data length
           in input vector (13)
      02:  Call FrIf_Init()
      ---- Perform frame reception (RECEIVE_AND_INDICATE) ----
      03:  Indicate the absolute timer IRQ and the respective global
           time on the CC
      04:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      05:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      06:  VP:
           FrIf_SetState() returns E_OK
      07:  Call FrIf_GetState(&lt;ClstIdx&gt;)
      08:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      09:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      10:  VP:
           Fr_ReceiveRxLPdu() is called with correct parameters.
           No frame is provided by the FlexRay Driver
           (RxLPduStatus is FR_NOT_RECEIVED)
      11:  No upper layer's function &lt;UpperLayer&gt;_RxIndication()
           is called.
      ---- Proceed with frame reception (RECEIVE_AND_INDICATE) ----
      12:  Indicate the absolute timer IRQ and the respective global
           time on the CC.
           Every repetition of the testcase receives a different amout
           of data according to the input vector (13)
      13:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      14:  VP:
           Fr_ReceiveRxLPdu() is called with correct parameters
           Frame data is provided by the FlexRay Driver
           (RxLPduStatus is FR_RECEIVED)
      15:  VP:
           The upper layer's function &lt;UpperLayer&gt;_RxIndication() is
           called for PDU12 and PDU14, only PDU12 or none according to
           the received data. The number of indications and their
           PduIds shall be according to input vector (17)
      16:  VP:
           The received payload is correct.
      17:  VP:
           The update bit of PDU12 is set if PDU12 was received and
           the update bit for PDU13 is never set
      18:  No upper layer's function &lt;UpperLayer&gt;_RxIndication() is
           called for PDUs that were not received
  
Test Input: 
     Length of received RxLPdu
     13:  { 32,
            14,
            10,
            30 }
     Number of Indications and PduIds { Number, PduId, Pduid }
     17:  { 2, 12, 14 },
          { 1, 12, NULL },
          { 0, NULL, NULL },
          { 2, 12, 14 }
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06071_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.NotReceivedPdus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReceiveAndIndicate_RxFifo1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>1506</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the ReceiveAndIndicate reception
      mechanism with Rx FIFO support. Verify that the maximum number of FIFO reads
      is FRIF_GLOBALRXMAXLOOP.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job
      performs the first frame reception
      (RECEIVE_AND_INDICATE).
      The received frame shall be configured statically to contain
      3 PDUs (PDU12, PDU13, PDU14) which should be configured in the
      following way:
          PDU12 and PDU13 shall have update bits.
          PDU14 shall have no update bit.
      The job list shall contain jobs performing the following actions:
          RECEIVE_AND_INDICATE
          RECEIVE_AND_INDICATE
  
Test Execution: 
    01: Call FrIf_Init()
    02: Indicate the absolute timer IRQ and the respective global time on the CC
    03: Call FrIf_MainFunction_&lt;ClstIdx&gt;()
    04: Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
    05: Set up Fr stub to report status FR_RECEIVED_MORE_DATA_AVAILABLE at any invocation
        of Fr_1_A_ReceiveRxLPdu.
    06: Call FrIf_JobListExec_&lt;ClstIdx&gt;().
        At any invocation of Fr_1_A_ReceiveRxLPd, the stub returns one of the
        RxLPdu length from 06.
    07: VP(FrIf05293, FrIf.ASR40.FrIfGlobalRxMaxLoop):
        Verify ReceiveAndIndication operation is executed three times and makes the
        following stub function calls:
        - Fr_ReceiveRxLPdu() is called with correct parameters.
        - &lt;UpperLayer&gt;_RxIndication() is
            * called for PDU12 and PDU14 (1st operation)
            * called for PDU12 only (2nd operation)
            * not called (3rd operation)
        - The received payload is correct.
    08: VP(FrIf05293):
        No other function is called (i.e. reading out FIFO finished).
  
Test Input: 
    06: Length of received RxLPdu
          { 32,
            14,
            10 }
    07: Number of Indications and PduIds { Number, PduId, PduId }
          { 2, 12, 14 },
          { 1, 12, NULL },
          { 0, NULL, NULL }
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIfGlobalRxMaxLoop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReceiveAndIndicate_RxFifo2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>1674</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the ReceiveAndIndicate reception
      mechanism with Rx FIFO support. Verify that reading out FIFO stops
      if reported status is not FR_RECEIVED_MORE_DATA_AVAILABLE.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job
      performs the first frame reception
      (RECEIVE_AND_INDICATE).
      The received frame shall be configured statically to contain
      3 PDUs (PDU12, PDU13, PDU14) which should be configured in the
      following way:
          PDU12 and PDU13 shall have update bits.
          PDU14 shall have no update bit.
      The job list shall contain jobs performing the following actions:
          RECEIVE_AND_INDICATE
          RECEIVE_AND_INDICATE
  
Test Execution: 
    01: Call FrIf_Init()
    02: Indicate the absolute timer IRQ and the respective global time on the CC
    03: Call FrIf_MainFunction_&lt;ClstIdx&gt;()
    04: Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
    05: Set up Fr stub to report status FR_RECEIVED_MORE_DATA_AVAILABLE on 1st invocation and
        FR_RECEIVED on 2nd invocation of Fr_1_A_ReceiveRxLPdu.
    06: Call FrIf_JobListExec_&lt;ClstIdx&gt;().
        At any invocation of Fr_1_A_ReceiveRxLPd, the stub returns one of the
        RxLPdu length from 06.
    07: VP(FrIf05293):
        Verify ReceiveAndIndication operation is executed two times and makes the
        following stub function calls:
        - Fr_ReceiveRxLPdu() is called with correct parameters.
        - &lt;UpperLayer&gt;_RxIndication() is
            * called for PDU12 and PDU14 (1st operation)
            * called for PDU12 only (2nd operation)
        - The received payload is correct.
    08: VP(FrIf05293):
        No other function is called.
  
Test Input: 
    06: Length of received RxLPdu
          { 32,
            14}
    07: Number of Indications and PduIds { Number, PduId, PduId }
          { 2, 12, 14 },
          { 1, 12, NULL },
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReceiveAndStore</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>1835</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the ReceiveAndIndicate reception
      mechanism.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs the first frame reception
      (RECEIVE_AND_STORE).
      The received frame shall be configured statically to contain 3 PDUs (PDU15, PDU16, PDU17)
      which should be configured in the following way:
          PDU15 and PDU16 shall have update bits.
          PDU17 shall have no update bit.
      The job list shall contain jobs performing the following actions:
          RECEIVE_AND_STORE
          RX_INDICATION
          RECEIVE_AND_STORE
          RX_INDICATION
  
Test Execution: 
      01:  Repeat the whole testcase four times for each data length
           in input vector (14)
      02:  Call FrIf_Init()
      ---- Perform frame reception (RECEIVE_AND_INDICATE) ----
      03:  Indicate the absolute timer IRQ and the respective global
           time on the CC
      04:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      05:  Call FrIf_SetState (FRIF_GOTO_ONLINE, &lt;ClstIdx&gt;)
      06:  VP:
           FrIf_SetState() returns E_OK
      07:  Call FrIf_GetState(&lt;ClstIdx&gt;)
      08:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      09:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      10:  VP:
           Fr_ReceiveRxLPdu() is called with correct parameters.
      11:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      12:  No upper layer's function &lt;UpperLayer&gt;_RxIndication()
           is called.
      13:  Indicate the absolute timer IRQ and the respective global
           time on the CC.
           Every repetition of the testcase receives a different amout
           of data according to the input vector (13)
      ---- Proceed with frame reception (RECEIVE_AND_STORE) ----
      14:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      15:  VP:
           Fr_ReceiveRxLPdu() is called with correct parameters
      ---- Receive indication (RX_INDICATION) ----
      16:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      17:  VP:
           The upper layer's function &lt;UpperLayer&gt;_RxIndication() is
           called for PDU15 and PDU16, only PDU17 or none according to
           the received data. The number of indications and their
           PduIds shall be according to input vector (17)
      18:  VP:
           The received payload is correct.
      19:  VP:
           The update bit of PDU15 is set if PDU15 was received and
           the update bit for PDU16 is never set
      20:  No upper layer's function &lt;UpperLayer&gt;_RxIndication() is
           called for PDUs that were not received
  
Test Input: 
     Length of received RxLPdu
     13:  { 14,
             6,
             4,
             12 }
     Number of Indications and PduIds { Number, PduId, Pduid }
     17:  { 2, 15, 17 },
          { 1, 15, NULL },
          { 0, NULL, NULL },
          { 2, 15, 17 }
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30011</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>2205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the PrepareLPdu mechanism.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job
        performs the PREPARE_LPDU operation.
      The job list shall contain a job performing the following action:
          PREPARE_LPDU
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate in stub that CC is in a synchronous state
           set the FrIf Module to FRIF_STATE_ONLINE.
      ---- PREPARE LPDU ----
      03:  Indicate the absolute timer IRQ and the respective global time on the CC
      04:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      05:  VP:
           Fr_PrepareLPdu() is called with correct parameters (according to output (04))
  
Test Input: None.
Test Output: 
      04: Fr_1_VerTestA_PrepareLPdu(0,0)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>FrIf_Test_JobListExecutionLegalISRDelays</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>2327</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the continuous job list execution monitoring mechanism
      with maximum legal ISRDelays.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      MaxISRDelay is set to 50 MT.
      The JobListTimeoutLimit is set to 3.
      The FrIfJobList shall contain jobs with the following properties:
      JobName        Cycle    MT offset    ComOperation(s)
      Job_0_20_0     0        20           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
                                           DECOUPLED_TRANSMISSION
      Job_0_200_1    0        200          TX_CONFIRMATION
      Job_1_300_2    1        300          TX_CONFIRMATION
      Job_2_400_3    2        400          DECOUPLED_TRANSMISSION
      Job_3_500_4    3        500          DECOUPLED_TRANSMISSION
                                           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
      Job_6_200_1    6        200          TX_CONFIRMATION
      Job_7_700_5    7        700          DECOUPLED_TRANSMISSION
      Job_7_800_6    7        800          DECOUPLED_TRANSMISSION
      Job_10_1000_7  10       1000         RECEIVE_AND_INDICATE
      Job_11_1100_8  11       1100         RECEIVE_AND_INDICATE
      Job_40_100_9   40       100          RECEIVE_AND_INDICATE
      Job_40_200_10  40       200          DECOUPLED_TRANSMISSION
                                           TX_CONFIRMATION
      Job_40_300_11  40       300          TX_CONFIRMATION
      Job_63_4980_12 63       4980         PREPARE_LPDU
  
Test Execution: 
      ---- Execute job in the FrIfJobList with legal ISR delay (+/- 50 MT) ---
      01:  Repeat the steps 02 - 06 for each job in the FrIfJobList.
        02:  Indicate the absolute timer IRQ and the respective global time on the CC
        03:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
        04:  VP:
             The corresponding actions are performed
        05:  VP(FrIf.EB.FrIfJoblistSyncDebounceMethod, FrIf.EB.FrIfJoblistSyncPassed):
             If FrIfJoblistSyncDebounceMethod == DEM, FrIfJobListExec_0() shall call Dem_ReportErrorStatus()
             for Dem event FRIF_E_JLE_SYNC with status DEM_EVENT_STATUS_PREPASSED.
        06:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
        07:  VP:
             The corresponding actions are performed
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncPassed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>FrIf_Test_JobListExecutionIllegalISRDelays</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>3142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the continuous job list execution monitoring mechanism
      with illegal ISRDelays that produce Dem-Errors.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      MaxISRDelay is set to 50 MT.
      The JobListTimeoutLimit is set to 3.
      The FrIfJobList shall contain jobs with the following properties:
      JobName        Cycle    MT offset    ComOperation(s)
      Job_0_20_0     0        20           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
                                           DECOUPLED_TRANSMISSION
      Job_0_200_1    0        200          TX_CONFIRMATION
      Job_1_300_2    1        300          TX_CONFIRMATION
      Job_2_400_3    2        400          DECOUPLED_TRANSMISSION
      Job_3_500_4    3        500          DECOUPLED_TRANSMISSION
                                           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
      Job_6_200_1    6        200          TX_CONFIRMATION
      Job_7_700_5    7        700          DECOUPLED_TRANSMISSION
      Job_7_800_6    7        800          DECOUPLED_TRANSMISSION
      Job_10_1000_7  10       1000         RECEIVE_AND_INDICATE
      Job_11_1100_8  11       1100         RECEIVE_AND_INDICATE
      Job_40_100_9   40       100          RECEIVE_AND_INDICATE
      Job_40_200_10  40       200          DECOUPLED_TRANSMISSION
                                           TX_CONFIRMATION
      Job_40_200_11  40       300          TX_CONFIRMATION
      Job_63_4980_12 63       4980         PREPARE_LPDU
  
Test Execution: 
      ---- Try to execute Job_0_20_0 with maximum negative ISR delay -1 ---
      01:  Indicate the absolute timer IRQ and the respective global time on the CC
      02:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      03:  VP:
           The absolute timer is disabled
           Dem_ReportErrorStatus() is not called.
      04:  Restart JobList to continue with Job_0_200_1
      05:  VP
           DEM reports FRIF_E_JLE_SYNC.
      ---- Execute Job_0_200_1 with maximum positive ISR delay +1 ---
      06:  Indicate the absolute timer IRQ and the respective global time on the CC
      07:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      08:  VP:
           The absolute timer is disabled
      09:  Restart JobList to continue with Job_63_4980_1
      10:  VP (FrIf05138):
           Dem reports FRIF_E_JLE_SYNC.
      ---- Execute Job_63_4980_10 with maximum positive ISR delay +1 ---
      11:  Indicate the absolute timer IRQ and the respective global time on the CC
      12:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      13: VP:
          The absolute timer is disabled
      14: Call FrIf_JobListExec_&lt;ClstIdx&gt;() - altough JLE error already detected
      15: VP: Check that Fr_GetAbsoluteTimerIRQStatus() and Fr_AckAbsoluteTimerIRQ() are called.
      16: VP: Check that no other function has been called.
      17: Restart JobList to continue with Job_0_20_0
      18: VP:
          Dem reports FRIF_E_JLE_SYNC.
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncPassed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>FrIf_Test_JobListTimeoutDetection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>3433</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the timeout detection for job list executions.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      The JobListTimeoutLimit is set to 3.
  
Test Execution: 
      01:  Set return value for stub function Fr_GetGlobalTime to E_NOT_OK
      02:  Try to execute Job_0_20_0
      03:  VP:
           The absolute timer is disabled
      04:  Reset return value for stub function Fr_GetGlobalTime to E_OK
      05:  Restart job list (Call Fr_MainFunction&lt;ClstIdx&gt;
      06:  Call FrIf_MainFunction_&lt;ClusterIdx&gt;() three times (JOB_LIST_TIMEOUT_LIMIT)
      07:  After timeout detection Fr_SetAbsoluteTimer() and
           Fr_EnableAbsoluteTimer() are called again and FRIF_E_JLE_SYNC
           is reported to the Dem.
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>FrIf_Test_JobListTimeoutDetectionNoDem</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>3598</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the timeout detection for job list executions.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      The JobListTimeoutLimit is set to 3.
      No DemEvent is reference in the configuration.
  
Test Execution: 
      01:  Set return value for stub function Fr_GetGlobalTime to E_NOT_OK
      02:  Try to execute Job_20_2000_0
      03:  VP:
           The absolute timer is disabled
      04:  Reset return value for stub function Fr_GetGlobalTime to E_OK
      05:  Restart job list (Call Fr_MainFunction&lt;ClstIdx&gt;
      06:  Call FrIf_MainFunction_&lt;ClusterIdx&gt;() three times (JOB_LIST_TIMEOUT_LIMIT_CLST1)
      07:  After timeout detection Fr_SetAbsoluteTimer() and
           Fr_EnableAbsoluteTimer() are called again.
      08:  FRIF_E_JLE_SYNC is NOT reported to the Dem.
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SafetyMargin</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>3758</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the resynchronization mechanism of FrIf using the FrIfSafetyMargin.
    
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      MaxISRDelay is set to 50 MT.
      The JobListTimeoutLimit is set to 3.
      FrIfSafetyMargin is set to 100
      FrIfJoblistSyncReportToDem is set to DEM
      The FrIfJobList shall contain jobs with the following properties:
      JobName        Cycle    MT offset    ComOperation(s)
      Job_0_20_0     0        20           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
                                           DECOUPLED_TRANSMISSION
      Job_0_200_1    0        200          TX_CONFIRMATION
      Job_1_300_2    1        300          TX_CONFIRMATION
      Job_2_400_3    2        400          DECOUPLED_TRANSMISSION
      Job_3_500_4    3        500          DECOUPLED_TRANSMISSION
                                           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
      Job_6_200_1    6        200          TX_CONFIRMATION
      Job_7_700_5    7        700          DECOUPLED_TRANSMISSION
      Job_7_800_6    7        800          DECOUPLED_TRANSMISSION
      Job_10_1000_7  10       1000         RECEIVE_AND_INDICATE
      Job_11_1100_8  11       1100         RECEIVE_AND_INDICATE
      Job_40_100_9   40       100          RECEIVE_AND_INDICATE
      Job_63_4980_10 63       4980         PREPARE_LPDU
    
Test Execution: 
       01:  Set the global time to 63, 4920 - 100 MT before Job_0_20_0
       02:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
       03:  VP(FrIf.ASR40.FrIf05120i, FrIf.ASR40.FrIf00004_Conf):
            Absolute timer is set to 0, 20 (Job_0_20_0).
       04:  Reinitalize FrIf module
       05:  Set the global time to 1, 201 - 99 MT before Job_1_300_2
       06:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
       07:  VP(FrIf.ASR40.FrIf05120i, FrIf.ASR40.FrIf00004_Conf):
            Absolute timer is set to 2, 400 (Job_2_400_3).
            Job_1_300_2 is skipped.
       08:  Reinitalize FrIf module
       09:  Set the global time to 2, 401 - 5099 MT before Job_3_500_4
       10:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
       11:  VP(FrIf.ASR40.FrIf05120i, FrIf.ASR40.FrIf00004_Conf):
            Absolute timer is set to 3, 500 (Job_3_500_4).
    
Test Input: 
    
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00004_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionDynamicLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>3930</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission with a frame that has a dynamic
      payload length, where the last Pdu has a length of 0, 1, 2 and 7 bytes.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs
        the frame transmission (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain 3 PDUs (PDU0, PDU1, PDU5)
        which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to TRUE.
          All Pdus shall have update bits.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Repeat the whole testcase for each element in input vector (11)
      02:  Call FrIf_Init()
      03:  Indicate in stub that CC is in a synchronous state
      04:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      05:  Call FrIf_GetState()
      06:  VP:
           FrIf_State equals FRIF_STATE_OFFLINE
      07:  Call FrIf_SetState(&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      08:  VP:
           FrIf_SetState() returns E_OK
      09:  Call FrIf_GetState()
      10:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      11:  Call FrIf_Transmit() for PDU5 with payload length of bytes specified
           in input(11)
      12:  VP:
           FrIf_Transmit() returns E_OK
      13:  VP:
           No Fr function is called
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      14:  Indicate the absolute timer IRQ and the respective global time on the CC
      15:  Calling FrIf_JobListExec_&lt;ClstIdx&gt;()
      16:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      17:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU5
      18:  Copy the PDUs data to the given address.
      19:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload.
      20:  VP:
           The update bit of PDU0 is cleared in the transmitted frame
      21:  VP:
           The update bit of PDU5 is set in the transmitted frame.
  
Test Input: 
      03:  0
           1
           2
           7
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR20-11.SWS_FrIf_05244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionDynamicLength_LastTwoPdusNotUpdated</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>4157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission with a frame that has a dynamic
      payload length and three Pdus with update bits, where the last two Pdus are not updated
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs
        the frame transmission (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain 3 PDUs (PDU0, PDU1, PDU5)
        which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to TRUE.
          All Pdus shall have update bits.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      02:  Call FrIf_GetState()
      03:  Call FrIf_SetState(&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      04:  Call FrIf_GetState()
      05:  Call FrIf_Transmit() for PDU0
      06:  VP:
           FrIf_Transmit() returns E_OK
      07:  VP:
           No Fr function is called
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      08:  Calling FrIf_JobListExec_&lt;ClstIdx&gt;()
      09:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU0
      10:  Copy the PDUs data to the given address.
      11:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload.
      12:  VP:
           The update bits of PDU1 and PDU5 are cleared in the transmitted frame
      13:  VP:
           The update bit of PDU0 is set in the transmitted frame
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR20-11.SWS_FrIf_05244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionDynamicLength_LastPduNotUpdated</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>4359</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission with a frame that has a dynamic
      payload length and three Pdus with update bits, where the last Pdu is not updated
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs
        the frame transmission (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain 3 PDUs (PDU0, PDU1, PDU5)
        which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to TRUE.
          All Pdus shall have update bits.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      02:  Call FrIf_GetState()
      03:  Call FrIf_SetState(&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      04:  Call FrIf_GetState()
      05:  Call FrIf_Transmit() for PDU0 and PDU1
      06:  VP:
           FrIf_Transmit() returns E_OK
      07:  VP:
           No Fr function is called
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      08:  Calling FrIf_JobListExec_&lt;ClstIdx&gt;()
      09:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU0
      10:  Copy the PDUs data to the given address.
      11:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload.
      12:  VP:
           The update bit of PDU5 is cleared in the transmitted frame
      13:  VP:
           The update bits of PDU0 and PDU1 are set in the transmitted frame
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR20-11.SWS_FrIf_05244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionDynamicLength_UpdatBitLast</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>4568</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission with a frame that has a dynamic
      payload length, where the update bits are stored behind the payload.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs
        the frame transmission (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain 2 PDUs (PDU6, PDU7)
        which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to TRUE.
          PDU6 and PDU7 shall have update bits which are stored at the end of the frame.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_Transmit() for PDU6
      02:  VP:
           FrIf_Transmit() returns E_OK
      03:  VP:
           No Fr function is called
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      04:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      05:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU6
      06:  Copy the PDUs data to the given address.
      07:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload.
      08:  VP:
           The update bit of PDU6 is set in the transmitted frame
      09:  VP:
           The update bit of PDU7 is cleared in the transmitted frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR20-11.SWS_FrIf_05244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionDynamicLengthNoTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>4742</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission with a frame that has a dynamic
      payload length, where no Pdu was transmitted.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs the frame transmission
      (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain 3 PDUs (PDU0, PDU1, PDU5)
      which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to TRUE.
          PDU0 and PDU5 shall have update bits.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      01:  Indicate the absolute timer IRQ and the respective global time on the CC
      02:  Calling FrIf_JobListExec_&lt;ClstIdx&gt;()
      03:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      04:  VP:
           No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for any Pdu.
      05:  VP
           FlexRay Driver function Fr_TransmitTxLPdu() is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR20-11.SWS_FrIf_05244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionNoneMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>4879</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission if configured in NoneMode.
      All Pdus are transmitted without need for an explicit FrIf_Transmit() call.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs the frame transmission
      (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain 4 PDUs
      (PDU0, PDU1, PDU2, PDU3) which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to TRUE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          PDU0 and PDU2 shall have update bits.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      01:  Indicate the absolute timer IRQ and the respective global time on the CC
      02:  Calling FrIf_JobListExec_&lt;ClstIdx&gt;()
      03:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      04:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for all
           PDUs
      05:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload. The configured update bits shall be set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>FrIf_Test_DecoupledTransmissionAlwaysTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>5059</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission if configured as AlwaysTransmit.
      A LPDu is written to the FlexRay controller although no Pdu is transmitted. The unused
      bits are correctly filled with FrIfUnusedBitValue.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job performs the frame transmission
      (DECOUPLED_TRANSMISSION).
      The transmitted frame shall be configured statically to contain
      4 PDUs (PDU0, PDU1, PDU2, PDU3) which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to TRUE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          PDU0 and PDU2 shall have update bits.
      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
      FrIfUnusedBitValue is set to TRUE and the value to 1.
  
Test Execution: 
      ---- Perform frame transmission (DECOUPLED_TRANSMISSION) ----
      01:  Indicate the absolute timer IRQ and the respective global time on the CC
      02:  Calling FrIf_JobListExec_&lt;ClstIdx&gt;()
      03:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      04:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and default payload. The configured update bits shall be cleared. The unused
           bits are correctly filled with FrIfUnusedBitValue.
      05:  VP:
           No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for any PDU
   
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00013_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05723</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30020</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>5231</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the joblist execution in offline state.
  
Test Object: None.
Test Precondition: 
      Each CC used for job list execution is synchronous.
      Each cluster is in FRIF_STATE_OFFLINE.
      Each job list is synchronized to the first job.
      At least, the following actions shall be configured:
          DECOUPLED_TRANSMISSION
          TX_CONFIRMATION
          RECEIVE_AND_INDICATE
          PREPARE_LPDU
          RECEIVE_AND_STORE
          RX_INDICATION
          RECEIVE_AND_STORE
          RX_INDICATION
  
Test Execution: 
     01:  Call FrIf_Init()
     02:  Indicate in stub that CC is in a synchronous state
     03:  Call FrIf_MainFunction_0()
     04:  Call FrIf_GetState() for ClstIdx 0
     05:  VP:
          FrIf_State_0 equals FRIF_STATE_OFFLINE
     06:  Indicate in stub that CC is in a synchronous state
     07:  Call FrIf_MainFunction_1()
     08:  Call FrIf_GetState() for ClstIdx 1
     09:  VP:
          FrIf_State_1 equals FRIF_STATE_OFFLINE
     10:  Call FrIf_Transmit() for a configured PDU
     11:  VP
          FrIf_Transmit() returns E_NOT_OK;
     ---- Execute all but the last job in JobList ClstIdx 1 ----
     12:  Repeat the steps 13 to 16 for all but the last job JobList
          of ClstIdx 1
       13:  Indicate the absolute timer IRQ and the respective global
            time on the CC
       14:  Call FrIf_JobListExec_0()
       15:  VP:
            No corresponding upper layer functions are called
       16:  VP:
            No corresponding lower layer functions are called.
     ---- Proceed with the last job in JobList ClstIdx 1 ----
     17:  Indicate the absolute timer IRQ and the respective global
          time on the CC
     18:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
     19:  VP:
          Fr_PrepareLPdu() is called with correct parameters
     20:  Indicate the absolute timer IRQ and the respective global
          time on the CC
     21:  Call FrIf_JobListExec_1()
     22:  VP:
          Fr_ReceiveRxLPdu() is not called
     ---- Proceed with the first job in JobList ClstIdx 1 ----
     23:  Indicate the absolute timer IRQ and the respective global
          time on the CC
     24:  Call FrIf_JobListExec_1()
     25:  VP:
          No upper layer's function &lt;UpperLayer&gt;_RxIndication() is
          called
     ---- Set Cluster 1 into FRIF_STATE_ONLINE ----
     26:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE) in order
          to enable frame reception
     27:  Call FrIf_GetState(&lt;ClstIdx&gt;)
     28:  VP:
          FrIf_State equals FRIF_STATE_ONLINE
     ---- Proceed with the third job in JobList ClstIdx 1 ----
     29:  Indicate the absolute timer IRQ and the respective global
          time on the CC
     30:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
     31:  VP:
          Fr_ReceiveRxLPdu() is called with correct parameters
     32:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_OFFLINE)
     33:  Call FrIf_GetState(&lt;ClstIdx&gt;)
     34:  VP:
          FrIf_State equals FRIF_STATE_OFFLINE
     ---- Proceed with reception indication ----
     35:  Indicate the absolute timer IRQ and the respective global
          time on the CC
     36:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
     37:  VP:
          No upper layer's function &lt;UpperLayer&gt;_RxIndication() is
          called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfTransmitOffline</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReceiveAndIndicate_DynSimple</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>5653</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the ReceiveAndIndicate reception
      mechanism for simple dynamic frames (dynamic payload length,
      single Pdu, no update bit).
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job
      performs the first frame reception
      (RECEIVE_AND_INDICATE).
      The received frame shall be configured to contain one PDU
      (PDU28) which should be configured in the
      following way:
          PDU28 shall have no update bit.
      The job list shall contain jobs performing the following actions:
          RECEIVE_AND_INDICATE
  
Test Execution: 
      01:  Repeat the whole testcase three times for each data length
           in input vector (08)
      01:  Call FrIf_Init()
      ---- Perform frame reception (RECEIVE_AND_INDICATE) ----
      02:  Indicate the absolute timer IRQ and the respective global
           time on the CC
      03:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      04:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      05:  VP:
           FrIf_SetState() returns E_OK
      06:  Call FrIf_GetState(&lt;ClstIdx&gt;)
      07:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      ---- Proceed with frame reception (RECEIVE_AND_INDICATE) ----
      08:  Indicate the absolute timer IRQ and the respective global
           time on the CC.
      09:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      10:  VP:
           Fr_ReceiveRxLPdu() is called with correct parameters
      11:  VP:
           The upper layer's function &lt;UpperLayer&gt;_RxIndication() is
           called for PDU28
      12:  VP:
           The received payload / SduLength is correct.
      13:  No upper layer's function &lt;UpperLayer&gt;_RxIndication() is
           called for PDUs that were not received
  
Test Input: 
     Length of received RxLPdu
     08:  { 1,
            7,
            8 }
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReceiveAndIndicate_RxFifo1_DynSimple</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>5842</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the ReceiveAndIndicate reception
      mechanism with Rx FIFO support. Verify that the maximum number of FIFO reads
      is FRIF_GLOBALRXMAXLOOP.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that the first job
      performs the first frame reception
      (RECEIVE_AND_INDICATE).
      The received frame shall be configured to contain one PDU
      (PDU28) which should be configured in the
      following way:
          PDU28 shall have no update bit.
      The job list shall contain jobs performing the following actions:
          RECEIVE_AND_INDICATE
  
Test Execution: 
    01: Call FrIf_Init()
    02: Indicate the absolute timer IRQ and the respective global time on the CC
    03: Call FrIf_MainFunction_&lt;ClstIdx&gt;()
    04: Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
    05: VP:
        FrIf_SetState() returns E_OK
    06: Call FrIf_GetState(&lt;ClstIdx&gt;)
    07: VP:
        FrIf_State equals FRIF_STATE_ONLINE
    08: Set up Fr stub to report status FR_RECEIVED_MORE_DATA_AVAILABLE at any invocation
        of Fr_ReceiveRxLPdu.
    09: Call FrIf_JobListExec_&lt;ClstIdx&gt;().
        At any invocation of Fr_ReceiveRxLPd, the stub returns one of the
        RxLPdu length from 06.
    10: VP(FrIf05293):
        Verify ReceiveAndIndication operation is executed three times and makes the
        following stub function calls:
        - Fr_ReceiveRxLPdu() is called with correct parameters.
        - &lt;UpperLayer&gt;_RxIndication() is called for PDU28
        - The received payload is correct.
    11: VP(FrIf05293):
        No other function is called (i.e. reading out FIFO finished).
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIfGlobalRxMaxLoop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>FrIf_Test_IRQMUX</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>6075</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the Joblist IRQMux functionality.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The timer IRQ is set between two normal joblist invocations
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate the absolute timer IRQ and the respective global
           time on the CC
      03:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      04:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      05:  VP:
           FrIf_SetState() returns E_OK
      06:  Call FrIf_GetState(&lt;ClstIdx&gt;)
      07:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      08:  Indicate the absolute timer IRQ and the respective global
           time on the CC for time before next JobList operation and with Fr_IRQStatus flag set to false.
      09:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      10:  VP:
           timer is not acknowleged (Fr_AckAbsoluteTimerIRQ() is not called)
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.JoblistIRQMuxEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>6188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission and transmission confirmation
      mechanism case &lt;UpperLayer&gt;_FrIfTriggerTransmit returns E_NOT_OK.
  
Test Object: None.
Test Precondition: 
      The transmitted frame shall be configured statically to contain
      4 PDUs (PDU0, PDU1, PDU2, PDU3) which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          PDU0 and PDU2 shall have update bits.
          PDU0, PDU1 and PDU2 shall be configured for TxConfirmation.

      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
          TX_CONFIRMATION
          TX_CONFIRMATION
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate that CC is in POC state NormalActive and
           set the FrIf Module to FRIF_STATE_ONLINE.
      03:  Call FrIf_Transmit() for PDU0, PDU1, and PDU3
      04:  VP:
           Each FrIf_Transmit() returns E_OK
      05:  VP:
           No Fr function is called
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      06:  Indicating the absolute timer IRQ and the respective global time on the transceiver
      07:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      08:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      09:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      10:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU0,
           PDU1, and PDU3 (for PDU2 no transmit function called).
      11:  Copy the PDUs data for PDU1, &lt;UpperLayer&gt;_TriggerTransmit() for PDU0 and PDU3 should
           return E_NOT_OK
      12:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and correct payload. The update bit of PDU0 and PDU2
           shall be cleared in the transmitted frame
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      13:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      14:  No upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      15:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      16:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      17:  VP:
           Fr_TxLPduStatus equals FR_TRANSMITTED
      18:  VP (FrIf.ASR40.FrIf05287_1a3_EB):
           The upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called for PDU1
           (for PDU0 &lt;UpperLayer&gt;_TriggerTransmit() returned E_NOT_OK,
           for PDU2 no transmit function called, PDU3 not configured for confirmation)
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      19:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      20:  VP:
           FrIf_Transmit() is called for none of the PDUs
      21:  VP:
           No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called
      22:  VP:
           Fr_TransmitTxLPdu() is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06071_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287_1a3_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>FrIf_Test_FrIfTriggerTransmit_E_NOT_OK_SinglePduTx</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>6584</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission and transmission confirmation
      mechanism case &lt;UpperLayer&gt;_FrIfTriggerTransmit returns E_NOT_OK for a single Pdu.
      Test that the TriggerTx counter for this single Pdu is reverted, even if no
      Fr_TransmitTxLPdu call has been performed.
  
Test Object: None.
Test Precondition: 
      The transmitted frame shall be configured statically to contain more than 1 Pdu (in this case
      4 PDUs (PDU0, PDU1, PDU2, PDU3)).
      The frametriggering shall be configured the following way:
          Parameter FrIfNoneMode of the frame triggering set to FALSE.

      The PduR_FrIfTriggerTransmit() shall return E_NOT_OK for PDU3.

      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
          TX_CONFIRMATION
          TX_CONFIRMATION
          DECOUPLED_TRANSMISSION
  
Test Execution: 
    01:  Call FrIf_Transmit() for PDU3
    02:  VP:
         FrIf_Transmit() retuns E_OK
    03:  VP:
         No Fr function is called
    04:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
    05:  VP:
         The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU3
    06:  VP:
          No Fr function is called
    07:  FrIf_JobListExec_&lt;ClstIdx&gt;()
    08:  VP:
         No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called
    09:  VP:
         Fr_TransmitTxLPdu() is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287_1a3_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>FrIf_Test_Fr_TransmitTxLPdu_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>6825</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission and transmission confirmation
      mechanism in case Fr_TransmitTxLPdu returns E_NOT_OK.
  
Test Object: None.
Test Precondition: 
      The transmitted frame shall be configured statically to contain
      4 PDUs (PDU0, PDU1, PDU2, PDU3) which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          PDU0 and PDU2 shall have update bits.
          PDU0, PDU1 and PDU2 shall be configured for TxConfirmation.

      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
          TX_CONFIRMATION
          TX_CONFIRMATION
          DECOUPLED_TRANSMISSION
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate that CC is in POC state NormalActive and
           set the FrIf Module to FRIF_STATE_ONLINE.
      03:  Call FrIf_Transmit() for PDU0, PDU1, and PDU3
      04:  VP:
           Each FrIf_Transmit() retuns E_OK
      05:  VP:
           No Fr function is called
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      06:  Indicating the absolute timer IRQ and the respective global time on the transceiver,
           set Fr_TransmitTxLPdu_Stub to return E_NOT_OK
      07:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      08:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      09:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU0,
           PDU1, and PDU3 (for PDU2 no transmit function called).
      10:  Copy the PDUs data to the given address
      11:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters (returns E_NOT_OK)
           and correct payload. The update bit of PDU0 shall be set and the update bit of PDU2
           shall be cleared in the transmitted frame
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      12:  Indicating the absolute timer IRQ and the respective global time on the transceiver,
           set Fr_CheckTxLPduStatus to FR_NOT_TRANSMITTED, call FrIf_JobListExec_&lt;ClstIdx&gt;()
      13:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      14:  No upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      15:  FrIf_JobListExec_&lt;ClstIdx&gt;()
      16:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      17:  VP:
           Fr_TxLPduStatus equals FR_NOT_TRANSMITTED
      18:  VP:
           No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      19:  Transmit frame again (no call of FrIf_Transmit()),
           set Fr_TransmitTxLPdu_Stub to return E_OK this time
           and execute FrIf_JobListExec_&lt;ClstIdx&gt;()
      20:  VP:
           FrIf_Transmit() is called for none of the PDUs
      21:  VP:
           The upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU0,
           PDU1, and PDU3 (for PDU2 no transmit function called)
      22:  VP:
           Fr_TransmitTxLPdu() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06071_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>FrIf_Test_AlwaysTransmitEmpty_DynSimple</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>7210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the DECOUPLED_TRANSMISSION
      mechanism for simple dynamic frames with FrIfAlwaysTransmit set true.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The received frame shall be configured to contain one PDU
      (PDU7) which should be configured in to have no update bit.
      The job list is synchronized in a way that the first job
      performs the first frame transmission (DECOUPLED_TRANSMISSION).
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate the absolute timer IRQ and the respective global time on the CC
      03:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      04:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      05:  Call FrIf_GetState()
      06:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      ---- Proceed with frame transmission (DECOUPLED_TRANSMISSION) ----
      07:  Indicating the absolute timer IRQ and the respective global time on the transceiver
      08:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      09:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      10:  VP:
           No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU7.
      11:  VP:
           FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
           and payload length 0.
      12:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      ---- Proceed with transmission confirmation (TX_CONFIRMATION) ----
      13:  Indicating the absolute timer IRQ and the respective global time on the transceiver
      14:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      15:  VP:
           Fr_SetAbsoluteTimer() is called with correct parameters (job execution time)
      16:  VP:
           Fr_CheckTxLPduStatus() is called with correct parameters
      17:  No upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TransmitImmediate_NoTXConfirm</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/JobList_Tests.c</sourcefile>
      <sourceline>7416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the functionality of the TX_CONFIRMATION for an immediate that
      was configured with the option FrIfConfirm = false.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The transmitted frame (TxFrame_003) shall be configured
      with FrIfImmediate = true and FrIfConfirm = false.
      The job list is synchronized in a way that the first job
      performs TX_CONFIRMATION for this frame.
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Indicate the absolute timer IRQ and the respective global time on the CC
      03:  Call FrIf_MainFunction_&lt;ClstIdx&gt;()
      04:  Call FrIf_SetState (&lt;ClstIdx&gt;, FRIF_GOTO_ONLINE)
      05:  Call FrIf_GetState()
      06:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      ---- Proceed with immediate frame transmission ----
      07: FrIf_Transmit() of frame Tx_Frame_003
      08: VP: FrIf_Transmit() returns E_OK
      09: VP:
          FlexRay Driver function Fr_TransmitTxLPdu() is called with
          correct parameters and correct payload.
      10: Indicate the transmission of TxFrame_003
      11: Indicating the absolute timer IRQ and the respective global time on the transceiver
      12: Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      13: VP:
          The corresponding actions are performed:
          -) No upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function is called for PDU7.
          -) FlexRay Driver function Fr_TransmitTxLPdu() is called with correct parameters
             and payload length 0.
      14: VP: Fr_CheckTxLPduStatus() is called with correct parameters
      15: VP:
          No upper layer's function &lt;UpperLayer&gt;_TxConfirmation() is called
          (no TX confirmation for immediate frame)
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ControllerInit() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_ControllerInit() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_ControllerInit() was called with the parameter(s):
           Fr_CtrlIdx                     CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_StartCommunication() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_StartCommunication() for each communication
         controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_StartCommunication() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_HaltCommunication() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_HaltCommunication() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_HaltCommunication() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AbortCommunication() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_AbortCommunication() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_AbortCommunication() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetWakeupChannel() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_SetWakeupChannel() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_SetWakeupChannel() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SendWUP() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_SendWUP() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_SendWUP() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>527</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetPOCStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetPOCStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetPOCStatus() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
           Fr_POCStatusType*               *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetGlobalTime() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetGlobalTime() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         FrIf_GetGlobalTime() provides the previously set value
    04:  VP:
         Each Fr_GetGlobalTime() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
           Fr_CyclePtr*                    *ptr,
           Fr_MacroTickPtr                 *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetAbsoluteTimer() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_SetAbsoluteTimer() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_SetAbsoluteTimer() was called with the parameter(s):
           Fr_CtrlIdx                        CtrlIdx,
           Fr_AbsTimerIdx                AbsTimerIdx
           Fr_Cycle                            Cycle
           Fr_Offset                          Offset
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CancelAbsoluteTimer() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_CancelAbsoluteTimer() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_CancelAbsoluteTimer() was called with the parameter(s):
           Fr_CtrlIdx                       CtrlIdx,
           Fr_AbsTimerIdx                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>914</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableAbsoluteTimerIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_EnableAbsoluteTimerIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_EnableAbsoluteTimerIRQ() was called with the parameter(s):
           Fr_CtrlIdx                       CtrlIdx,
           Fr_AbsTimerIdx                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>999</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetAbsoluteTimerIRQStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetAbsoluteTimerIRQStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetAbsoluteTimerIRQStatus() was called with the parameter(s):
           Fr_CtrlIdx                    CtrlIdx,
           Fr_AbsTimerIdx            AbsTimerIdx,
           Fr_IRQStatusPtr                  *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckAbsoluteTimerIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_AckAbsoluteTimerIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_AckAbsoluteTimerIRQ() was called with the parameter(s):
           Fr_CtrlIdx                        CtrlIdx,
           Fr_AbsTimerIdx                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableAbsoluteTimerIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_DisableAbsoluteTimerIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_DisableAbsoluteTimerIRQ() was called with the parameter(s):
           Fr_CtrlIdx                        CtrlIdx,
           Fr_AbsTimerIdx                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AllowColdstart() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_AllowColdstart() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_AllowColdstart() was called with the parameter(s):
           Fr_CtrlIdx                     CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetNmVector() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetNmVector() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetNmVector() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
           Fr_NmVectorPtr                  *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_TransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1441</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests if the function FrIf calls FrIf_SetTransceiverMode() and
      FrIf_GetTransceiverMode() with correct parameters.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall at least use 2 different transceiver drivers.
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Call FrIf_SetTransceiverMode() for each transceiver with parameter
             FrIf_TrcvMode           'FRTRCV_TRCVMODE_SLEEP'
      03:  VP:
           Each FrIf_SetTransceiverMode() returns E_OK
      04:  VP:
           Each FrTrcv_SetTransceiverMode() was called with the parameter(s):
             FrIf_CtrlIdx                       CtrlIdx
             FrIf_ChnlIdx                       ChnlIdx
             FrIf_TrcvMode                     TrcvMode
      05:  Call FrIf_GetTransceiverMode for each transceiver
      06:  VP:
           Each FrIf_GetTransceiverMode() returns E_OK
      07:  VP:
           Each FrTrcv_GetTransceiverMode() provides the previously set state
      08:  VP:
           Each FrTrcv_GetTransceiverMode() was called with the parameter(s):
             FrTrcv_TrcvIdx                       CtrlIdx
             FrTrcv_TrcvModePtr                      *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1627</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests if the function FrIf_GetTransceiverWUReason() routes to the
      correct transceiver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall at least use 2 different transceiver drivers.
  
Test Execution: 
      01:  Call FrIf_Init()
      02:  Set WUReason in stub module to 'FRTRCV_WU_INTERNALLY'
      03:  Call FrIf_GetTransceiverWUReason() for each transceiver
      04:  VP:
           Each FrIf_GetTransceiverWUReason() returns E_OK
      05:  VP:
           Each FrIf_GetTransceiverWUReason() provides the previously set reason
             'FRTRCV_WU_INTERNALLY'
      06:  VP:
           Each FrTrcv_GetTransceiverWUReason() was called with the parameter(s):
             FrTrcv_TrcvIdx                       CtrlIdx
             TrcvWUReasonPtr                       *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ClearTransceiverWakeup() routes to the
    correct transceiver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_ClearTransceiverWakeup() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each FrTrcv_ClearTransceiverWakeup() was called with the parameter(s):
           FrTrcv_TrcvIdx                   CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1848</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CheckWakeupByTransceiver() routes to the
    correct transceiver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_CheckWakeupByTransceiver() for each communication controller
    02:  VP:
         Each FrTrcv_CheckWakeupByTransceiver() was called with the parameter(s):
           FrTrcv_TrcvIdx                   CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AllSlots() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_AllSlots() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_AllSlots() was called with the parameter:
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>1994</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableLPdu() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_DisableLPdu() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_DisableLPdu() was called with the parametes
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2070</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetChannelStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetChannelStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetChannelStatus() was called with the parameter:
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetClockCorrection() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetClockCorrection() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetClockCorrection() was called with correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetSyncFrameList() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetSyncFrameList() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetSyncFrameList() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2359</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetWakeupRxStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetWakeupRxStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetWakeupRxStatus() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ReconfigLPdu() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_ReconfigLPdu() for each communication controller
         with the parameters specified in input (01)
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_ReconfigLPdu() is called with the correct parameters
  
Test Input: 
    01:  0, 1, 10, FR_CHANNEL_A, 1, 0, 2, 0x555
         1, 2, 20, FR_CHANNEL_B, 16, 10, 3, 0xAAA
         2, 3, 30, FR_CHANNEL_AB,64, 63, 4, 0xBBB
    
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2550</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverError() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different transceivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetTransceiverError() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetTransceiverError() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05728</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2639</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetNumOfStartupFrames() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers,
    and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetNumOfStartupFrames() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetNumOfStartupFrames() was called with the parameter(s):
           Fr_CtrlIdx                     CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2734</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ReadCCConfig() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers,
    and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_ReadCCConfig() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_ReadCCConfig() was called with the parameter(s):
           Fr_CtrlIdx                     CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2833</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableTransceiverBranch() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different transceivers,
    and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_DisableTransceiverBranch() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_DisableTransceiverBranch() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2912</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableTransceiverBranch() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different transceivers,
    and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_EnableTransceiverBranch() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_EnableTransceiverBranch() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>2991</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetCycleLength() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different transceivers,
    and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetCycleLength() for each communication controller
    02:  VP:
         Each function call returns the correct cycle length
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30003</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3056</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the correct functionality of the FrIf internal services which
      doesn't act as wrapper for Fr or FrTrcv.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FRIF_VERSION_INFO_API shall be turned on.
    GMacroPerCycle must be set to 5000 for Ctrl 0.
    GdMacrotick must be set to 1 us for Ctrl 0.
  
Test Execution: 
      01:  Call FrIf_GetVersionInfo()
      02:  VP:
           The provided version information matches the published
           version information.
      03:  Call FrIf_GetMacroticksPerCycle() with parameter
           FrIf_CtrlIdx = 0
      04:  VP:
           FrIf_GetMacroticksPerCycle() returns 5000 (GMacroPerCycle).
      05:  Call FrIf_GetMacrotickDuration() with parameter
           FrIf_CtrlIdx = 0
      06:  VP:
           FfIf_GetMacrotickDuration() returns 1000 (GdMacrotick).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3147</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_ControllerInit() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_ControllerInit()
      02:  VP
           FrIf_ControllerInit() returns E_NOT_OK;
      03:  VP
           Fr_ControllerInit() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_StartCommunication() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_StartCommunication()
      02:  VP
           FrIf_StartCommunication() returns E_NOT_OK;
      03:  VP
           Fr_StartCommunication() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_HaltCommunication() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_HaltCommunication()
      02:  VP
           FrIf_HaltCommunication() returns E_NOT_OK;
      03:  VP
           Fr_HaltCommunication() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3336</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_AbortCommunication() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_AbortCommunication()
      02:  VP
           FrIf_AbortCommunication() returns E_NOT_OK;
      03:  VP
           Fr_AbortCommunication() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3398</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SetWakeupChannel() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SetWakeupChannel()
      02:  VP
           FrIf_SetWakeupChannel() returns E_NOT_OK;
      03:  VP
           Fr_SetWakeupChannel() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_ChnlIdx                                        ChnlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SendWUP() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SendWUP()
      02:  VP
           FrIf_SendWUP() returns E_NOT_OK;
      03:  VP
           Fr_SendWUP() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3525</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetPOCStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetPOCStatus()
      02:  VP
           FrIf_GetPOCStatus() returns E_NOT_OK;
      03:  VP
           Fr_GetPOCStatus() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3589</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetGlobalTime() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetGlobalTime()
      02:  VP
           FrIf_GetGlobalTime() returns E_NOT_OK;
      03:  VP
           Fr_GetGlobalTime() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SetAbsoluteTimer() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SetAbsoluteTimer()
      02:  VP
           FrIf_SetAbsoluteTimer() returns E_NOT_OK;
      03:  VP
           Fr_SetAbsoluteTimer() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_AbsTimerIdx                                AbsTimerIdx,
           Fr_Cycle                                            Cycle,
           Fr_Offset                                          Offset
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3729</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_CancelAbsoluteTimer() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_CancelAbsoluteTimer()
      02:  VP
           FrIf_CancelAbsoluteTimer() returns E_NOT_OK;
      03:  VP
           Fr_CancelAbsoluteTimer() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_AbsTimerIdx                                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_EnableAbsoluteTimerIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_EnableAbsoluteTimerIRQ()
      02:  VP
           FrIf_EnableAbsoluteTimerIRQ() returns E_NOT_OK;
      03:  VP
           Fr_EnableAbsoluteTimerIRQ() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_AbsTimerIdx                                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3862</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetAbsoluteTimerIRQStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetAbsoluteTimerIRQStatus()
      02:  VP
           FrIf_GetAbsoluteTimerIRQStatus() returns E_NOT_OK;
      03:  VP
           Fr_GetAbsoluteTimerIRQStatus() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_AbsTimerIdx                                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>3932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_AckAbsoluteTimerIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_AckAbsoluteTimerIRQ()
      02:  VP
           FrIf_AckAbsoluteTimerIRQ() returns E_NOT_OK;
      03:  VP
           Fr_AckAbsoluteTimerIRQ() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_AbsTimerIdx                                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4000</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_DisableAbsoluteTimerIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_DisableAbsoluteTimerIRQ()
      02:  VP
           FrIf_DisableAbsoluteTimerIRQ() returns E_NOT_OK;
      03:  VP
           Fr_DisableAbsoluteTimerIRQ() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_AbsTimerIdx                                AbsTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4068</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_Transmit() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The PDU used for FrIf_Transmit() is configured for immediate
    transmission.
    The FlexRay Driver functions called by the FrIf shall return
    E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SetState(&lt;ClstIdx&gt;,FRIF_GOTO_ONLINE)
      02:  VP:
           FrIf_SetState() returns E_OK
      03:  Call FrIf_GetState(&lt;ClstIdx&gt;)
      04:  VP:
           FrIf_State equals FRIF_STATE_ONLINE
      05:  Call FrIf_Transmit()
      06:  VP
           FrIf_Transmit() returns E_NOT_OK;
      07:  VP
           Fr_TransmitTxLPdu() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_LPduIdx                                          LPduIdx,
           Fr_LSduLength                                    LSduLength
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_Transmit_Offline</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_Transmit() in when all clusters are in state FRIF_STATE_OFFLINE.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_OFFLINE.
  
Test Execution: 
      01:  Call FrIf_GetState(&lt;ClstIdx&gt;)
      02:  VP:
           FrIf_State equals FRIF_STATE_OFFLINE
      03:  Call FrIf_Transmit(&lt;PduIdx&gt;) for immediate and decoupled Pdu
      04:  VP
           FrIf_Transmit(&lt;PduIdx&gt;) returns E_NOT_OK;
  
Test Input: 
      ClstIdx = {FrIfConf_FrIfCluster_FlexRayNetwork_1, FrIfConf_FrIfCluster_FlexRayNetwork_2}
      PduIdx = {FrIfConf_Tx_PDU_004, FrIfConf_Tx_PDU_000}
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIfTransmitOffline</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4232</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_AllowColdstart() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_AllowColdstart()
      02:  VP
           FrIf_AllowColdstart() returns E_NOT_OK;
      03:  VP
           Fr_AllowColdstart() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4294</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SetTransceiverMode() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      02:  Call FrIf_SetTransceiverMode()
      03:  VP
           FrIf_SetTransceiverMode() returns E_NOT_OK;
      04:  VP
           FrTrcv_SetTransceiverMode() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                                    TrcvIdx,
           FrTrcv_TrcvMode                                  TrcvMode
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetTransceiverMode() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetTransceiverMode()
      02:  VP
           FrIf_GetTransceiverMode() returns E_NOT_OK;
      03:  VP
           FrTrcv_GetTransceiverMode() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                             TrcvIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetTransceiverWUReason() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetTransceiverWUReason()
      02:  VP
           FrIf_GetTransceiverWUReason() returns E_NOT_OK;
      03:  VP
           FrTrcv_GetTransceiverWUReason() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                             TrcvIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4490</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_ClearTransceiverWakeup() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_ClearTransceiverWakeup()
      02:  VP
           FrIf_ClearTransceiverWakeup() returns E_NOT_OK;
      03:  VP
           FrTrcv_ClearTransceiverWakeup() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                             TrcvIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4553</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetNmVector() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetNmVector()
      02:  VP
           FrIf_GetNmVector() returns E_NOT_OK;
      03:  VP:
          Each Fr_GetNmVector() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4612</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_AllSlots() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_AllSlots()
      02:  VP
           FrIf_AllSlots() returns E_NOT_OK;
      03:  VP
           Fr_AllSlots() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4670</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_DisableLPdu() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_DisableLPdu()
      02:  VP
           FrIf_DisableLPdu() returns E_NOT_OK;
      03:  VP:
          Each Fr_DisableLPdu() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetChannelStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetChannelStatus()
      02:  VP
           FrIf_GetChannelStatus() returns E_NOT_OK;
      03:  VP
           Fr_GetChannelStatus() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4789</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetClockCorrection() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetClockCorrection()
      02:  VP
           FrIf_GetClockCorrection() returns E_NOT_OK;
      03:  VP:
          Each Fr_GetClockCorrection() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4848</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetSyncFrameList() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetSyncFrameList()
      02:  VP
           FrIf_GetSyncFrameList() returns E_NOT_OK;
      03:  VP:
          Each Fr_GetSyncFrameList() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4910</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetWakeupRxStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetWakeupRxStatus()
      02:  VP
           FrIf_GetWakeupRxStatus() returns E_NOT_OK;
      03:  VP:
          Each Fr_GetWakeupRxStatus() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>4968</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_ReconfigLPdu() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_ReconfigLPdu()
      02:  VP
           FrIf_ReconfigLPdu() returns E_NOT_OK;
      03:  VP:
          Each Fr_ReconfigLPdu() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>5032</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetTransceiverError() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Set return value of FrTrcv Stub Module to E_NOT_OK
      02:  Call FrIf_GetTransceiverError()
      03:  VP
           FrIf_GetTransceiverError() returns E_NOT_OK;
      04:  VP
           FrTrcv_GetTransceiverError() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                             TrcvIdx
           FrTrcv_BranchIdx                           BranchIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05728</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>5098</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetNumOfStartupFrames() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetNumOfStartupFrames()
      02:  VP
           FrIf_GetNumOfStartupFrames() returns E_NOT_OK;
      03:  VP
           Fr_GetNumOfStartupFrames() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>5163</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_ReadCCConfig() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_ReadCCConfig()
      02:  VP
           FrIf_ReadCCConfig() returns E_NOT_OK;
      03:  VP
           Fr_ReadCCConfig() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>5229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_DisableTransceiverBranch() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      02:  Call FrIf_DisableTransceiverBranch()
      03:  VP
           FrIf_DisableTransceiverBranch() returns E_NOT_OK;
      04:  VP
           FrTrcv_DisableTransceiverBranch() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                                    TrcvIdx,
           FrTrcv_BranchIdx                                  BranchIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_2/source/application/Wrapper_Tests.c</sourcefile>
      <sourceline>5296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_EnableTransceiverBranch() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      02:  Call FrIf_EnableTransceiverBranch()
      03:  VP
           FrIf_EnableTransceiverBranch() returns E_NOT_OK;
      04:  VP
           FrTrcv_EnableTransceiverBranch() was called with the correct parameter(s)
           FrTrcv_TrcvIdx                                    TrcvIdx,
           FrTrcv_BranchIdx                                  BranchIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_ALL_PASS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case no error is reported on either channel.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
          DEM_EVENT_STATUS_PREPASSED/DEM_EVENT_STATUS_PREFAILED is reported to Dem_ReportErrorStatus().
      
Test Execution: 
          01: Set all stub channel error bits to false and the return value of 
              FrIfController_1 to E_NOT_OK
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120d</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120e</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120f</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120g</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120h</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_NIT_CH_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case of an NIT Status vss!SyntaxError
          on channel A.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
      
Test Execution: 
          01: Set stub channel A error bit NIT Status vss!SyntaxError to true for FrIfCluster_0
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120c</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_NIT_CH_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>381</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case of an NIT Status vss!SyntaxError
          on channel B.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
      
Test Execution: 
          01: Set stub channel B error bit NIT Status vss!SyntaxError to true for
              FrIfCluster_0 and FrIfCluster_1 and the return value of FrIfController_0
              to E_NOT_OK
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120d</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_SW_CH_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case of an Symbol Window Status vss!Bviolation
          on channel A.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
      
Test Execution: 
          01: Set stub channel A error bit Symbol Window Status vss!SyntaxError for
              FrIfCluster_0 and vss!Bviolation to true for FrIfCluster_1
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120e</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_SW_CH_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case of an Symbol Window Status vss!Bviolation
          on channel B.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
      
Test Execution: 
          01: Set stub channel B error bit Symbol Window Status vss!Bviolation to true for
              FrIfCluster_0
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120f</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_ACS_CH_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>647</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case of an Aggregated Channel Status vSS!SyntaxError
          on channel A.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
      
Test Execution: 
          01: Set stub channel A error bit Aggregated Channel Status vSS!SyntaxError to true for
              FrIfCluster_0 and FrIfCluster_1
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120g</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDem_ACS_CH_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_3/source/application/Test.c</sourcefile>
      <sourceline>734</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Dem, in case of an Aggregated Channel Status vSS!SyntaxError
          on channel B.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          FrIfCluster_0 is connected to FrIfController_0 and FrIfController_1.
          FrIfCluster_1 is connected to FrIfController_2.
          In FrIfCluster_0 all DemEvents except FRIF_E_JLE_SYNC are set to be reported to Dem.
          In FrIfCluster_1 all DemEvents are disabled.
          Dependent on configuration parameters FrIf*DebounceMethod either 
          DEM_EVENT_STATUS_PASSED/DEM_EVENT_STATUS_FAILED or 
      
Test Execution: 
          01: Set stub channel B error bit Aggregated Channel Status vSS!SyntaxError to true for
              FrIfCluster_0 and FrIfCluster_1
          02: Call FrIf_MainFunction_0
          03: VP: Fr_GetChannelStatus() is called 2 times (once for each Controller)
          04: VP: Dem_ReportErrorStatus is called 6 times
          05: VP: Dem_ReportErrorStatus is called with correct EventId and EventStatus
          06: Call FrIf_MainFunction_1
          07: VP: Fr_GetChannelStatus() is called 1 time
          08: VP: Dem_ReportErrorStatus or any other function is not called
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120h</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusADebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBDebounceMethod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_TransmitRequestQueuing_TxConf</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_4/source/application/Test.c</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the transmit request queuing functionality, including TxConfirmation.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      Transmit queueing is enabled.
      Tx_Pdu_003 (FrIfTxPduId = 0) is configured with TS_FRIFCOUNTERLIMIT
      Tx_Pdu_003 (FrIfTxPduId = 0) is configured with TxConfirmation
      Tx_Pdu_003 (FrIfTxPduId = 0) is configured with dynamic payload length
  
Test Execution: 
    01: Repeat the following steps (02-03) TS_FRIFCOUNTERLIMIT times
      02: Call FrIf_Transmit(0)
      03: VP: FrIf_Transmit returns E_OK
    04: Call FrIf_Transmit(0) another time
    05: VP: FrIfCounterLimit exceeded -&gt; FrIf_Transmit returns E_NOT_OK
    06: VP: No Fr function is called
    07: Repeat the following steps (08-13) TS_FRIFCOUNTERLIMIT times
      08: Invoke DECOUPLED_TRANSMISSION
      09: VP: PduR_FrIfTriggerTransmit is called with correct TxPduId 0
      10: VP: Fr_TransmitTxLPdu is called with correct Fr_LPduIdx 0
      11: Invoke TXCONFIRMATION
      12: VP: Fr_CheckTxLPduStatus is called with correct Fr_LPduIdx 0
      13: VP: PduR_FrIfTxConfirmation is called with correct TxPduId 0
    14: Invoke DECOUPLED_TRANSMISSION another time
    15: VP: PduR_FrIfTriggerTransmit and Fr_TransmitTxLPdu are NOT called
    16: Invoke TXCONFIRMATION another time
    17: VP: Fr_CheckTxLPduStatus and PduR_FrIfTxConfirmation are NOT called
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>FrIf_Test_InitReset</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_4/source/application/Test.c</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if FrIf_Init() resets all Pdu related status information.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
  
Test Execution: 
      01: Initiate decoupled transmisson of PDU0
      02: Recall FrIf_Init()
      03: Set FrIf back to state ONLINE
      04: Invoke DECOUPLED_TRANSMISSION
      05: VP: PduR_FrIfTriggerTransmit and Fr_TransmitTxLPdu are NOT called
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TransmitFailures</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_4/source/application/Test.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the transmit functionality, in case lower or upper layer functions return E_NOT_OK.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
  
Test Execution: 
    01: Call FrIf_Transmit(0)
    02: VP: FrIf_Transmit returns E_OK
    03: VP: No Fr function is called
    04: Set Fr_TransmitTxLPdu stubs return value to E_NOT_OK
    05: Invoke DECOUPLED_TRANSMISSION
    06: VP: PduR_FrIfTriggerTransmit is called with correct TxPduId 0
    07: VP: Fr_TransmitTxLPdu is called with correct Fr_LPduIdx 0
    08: Invoke TXCONFIRMATION
    09: VP: Fr_CheckTxLPduStatus is called with correct Fr_LPduIdx 0
    10: VP: PduR_FrIfTxConfirmation is NOT called due to the failed Fr_TransmitTxLPdu call
    11: Reset Fr_TransmitTxLPdu stubs return value to E_OK and
        set PduR_FrIfTriggerTransmit stubs return value to E_NOT_OK
    12: Invoke DECOUPLED_TRANSMISSION another time
    13: VP: PduR_FrIfTriggerTransmit is called
    14: Fr_TransmitTxLPdu is NOT called due to the failed PduR_FrIfTriggerTransmit call
    15: Invoke TXCONFIRMATION  another time
    16: VP: Fr_CheckTxLPduStatus and PduR_FrIfTxConfirmation are NOT called
    17: Invoke DECOUPLED_TRANSMISSION
    18: VP: Check that &lt;UL&gt;_TriggerTransmit() is not called
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287_1a3_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_TransmitImmediateFailure</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_5/source/application/Test.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the immediate transmit functionality in state FRIF_STATE_OFFLINE and
    if Fr_TransmitTxLPdu returns E_NOT_OK.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_OFFLINE.
      FrIfPdu_0 (FrIfTxPduId = 0) is configured as immediate
  
Test Execution: 
    01: Call FrIf_Transmit while FrIf is still in FRIF_STATE_OFFLINE
    02: VP: FrIf_Transmit returns E_NOT_OK
    03: VP: No Fr functions are called
    04: Set the FrIf Module to FRIF_STATE_ONLINE.
    05: Set return value of Fr_TransmitTxLPdu to E_NOT_OK
    06: Call FrIf_Transmit
    07: FrIf_Transmit returns E_NOT_OK
    08: Fr_TransmitTxLPdu is called
    09: No other functions are called
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TransmitImmediateSuccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_5/source/application/Test.c</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the immediate transmit functionality for successful transmissions
    with and without TxConfirmation.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      FrIfPdu_0 (FrIfTxPduId = 0) is configured as immediate without TxConfirm
      FrIfPdu_2 (FrIfTxPduId = 2) is configured as immediate with TxConfirm
  
Test Execution: 
    01: Call FrIf_Transmit(0)
    02: FrIf_Transmit returns E_OK
    03: Fr_TransmitTxLPdu is called with the correct Fr_LPduIdx 0
    04: Call FrIf_Transmit(2)
    05: FrIf_Transmit returns E_OK
    06: Fr_TransmitTxLPdu is called with Fr_LPduIdx 2
    07: Invoke TXCONFIRMATION
    08: VP: Fr_CheckTxLPduStatus is called with correct Fr_LPduIdx 2
    09: VP: PduR_FrIfTxConfirmation is called with correct TxPduId 2
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295a</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TransmitNoneMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_5/source/application/Test.c</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests a decoupled transmission in none mode. The Frame is always transmitted, even
    without a FrIf_Transmit call.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      FrIfPdu_1 (FrIfTxPduId = 1) is configured with NoneMode
      FrIfPdu_1 (FrIfTxPduId = 1) is configured without TxConfirm
  
Test Execution: 
    01: Invoke DECOUPLED TRANSMISSION without previous FrIf_Transmit call
    02: PduR_TriggerTransmit is called for Fr_LPduIdx 2
    03: Fr_TransmitTxLPdu is called with Fr_LPduIdx 2
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TransmitAlways</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_5/source/application/Test.c</sourcefile>
      <sourceline>365</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests a decoupled transmission in always transmit mode.
    The Frame is always transmitted, even if there's no new data.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      FrIfPdu_3 (FrIfTxPduId = 3) is configured with AlwaysTransmit
      FrIfPdu_3 (FrIfTxPduId = 3) is configured with TxConfirm
  
Test Execution: 
    01: Invoke DECOUPLED TRANSMISSION without previous FrIf_Transmit call
    02: Fr_TransmitTxLPdu is called with Fr_LPduIdx 3
    03: Invoke TXCONFIRMATION
    04: No TxConfirmation is indicated
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_JobList_IndependentCluster</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_6/source/application/Tests.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that Job List Execution Function and Main Function for different clusters work
    independently.
  
Test Object: None.
Test Precondition: 
      Each CC used for job list execution is synchronous.
      Each cluster is in FRIF_STATE_ONLINE.
      Each job list is synchronized to the first job.
      Cluster 0 execute job TX_CONFIRMATION.
      Cluster 1 execute job RECEIVE_AND_STORE.
  
Test Execution: 
      01: Initilize the module.
      02: Indicate in stub that CC for cluster 0 is in a synchronous state.
      03: Call FrIf_MainFunction_0.
      04: VP: Check the trace for Fr calls for cluster 0.
      05: Indicate in stub that CC for cluster 1 is in a synchronous state.
      06: Call FrIf_MainFunction_1.
      07: VP: Check the trace for Fr calls for cluster 1.
      08: Call FrIf_Transmit() for a configured PDU.
      09: VP : FrIf_Transmit() returns E_OK.
      10: Indicate the absolute timer IRQ and the respective global time on the CC, sync to first
          job of cluster 1.
      11: Call FrIf_JobListExec_1.
      12: VP: Check that the LPDU is received on cluster 1.
      13: Indicate the absolute timer IRQ and the respective global time on the CC, sync to first job
          of cluster 0.
      14: Call FrIf_JobListExec_0.
      15: VP: Check that the LPDU is transmitted on cluster 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TriggerTransmit_TxPduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_6/source/application/Tests.c</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the TxPduId handling in UL_TriggerTransmit and UL_TxConfirmation calls and
    check that multiple FrIfPdus linked to a FrIfLPdu.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initilize the module.
    02: Indicate in stub that CC for cluster 0 is in a synchronous state.
    03: Call FrIf_MainFunction_0.
    04: Check the trace for Fr calls for cluster 0.
    05: Start transmission on configured PDUs with different upper layers.
    06: Indicate global time on CC synchronized to the first job.
    07: Execute JobList.
    08: VP(FrIf.ASR40.FrIf05047_4):
        Check if FrTp_TriggerTransmit is called with appropriate Id for Tx_PDU_000.
    09: VP(FrIf.ASR40.FrIf05047_1):
        Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_001.
    10: VP(FrIf.ASR40.FrIf05047_2):
        Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_002.
    11: VP(FrIf.ASR40.FrIf05047_3):
        Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_PDU_003.
    12: VP(FrIf.ASR40.FrIf06057_Conf):
        Check if Fr_TransmitTxLPdu is called to transmit LPdu VB_0 with LPduIdx 0 linked with
        the FrIfPdus Tx_PDU_000, Tx_PDU_001, Tx_PDU_002 and Tx_PDU_003.
    13: Indicate global time of CC synchronized to the second job.
    14: Execute JobList.
    15: VP(FrIf.ASR40.FrIf05046_4):
        Check if FrTp_TxConfirmation is calles with appropriate Id for Tx_PDU_000.
    16: VP(FrIf.ASR40.FrIf05046_1):
        Check if FrNm_TxConfirmation is calles with appropriate Id for Tx_PDU_001.
    17: VP(FrIf.ASR40.FrIf05046_2):
        Check if FrNm_TxConfirmation is calles with appropriate Id for Tx_PDU_002.
    18: VP(FrIf.ASR40.FrIf05046_3):
        Check if PduR_FrIfTxConfirmation is calles with appropriate Id for Tx_PDU_003.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_FrIf_EnableBusMirroring_DetTesting</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>322</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case FrIf_EnableBusMirroring is called
      before the initializtion of the FrIf and if called with an invalid cluster Idx.
  
Test Object: None.
Test Precondition: 
      Development error detection is enabled.
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
      01: Call FrIf_EnableBusMirroring() before the initialization with a valid Cluster Idx.
      02: VP: Det reports FRIF_E_NOT_INITIALIZED.
      03: initialize the module.
      04: Call FrIf_EnableBusMirroring() with an invalid cluster Idx.
      05: VP: Det reports FRIF_E_INV_CLST_IDX.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05726</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.FrIfEnableBusMirroring.InvalidClstIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>FrIf_Test_MultipleClusters_MirroringDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>391</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that Job List Execution Function and Main Function for different clusters work
    independently and no Mirroring occures as long as the it is not enabled via calling FrIf_EnableBusMirroring().
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
      01: initialize the module.
      02: Indicate in stub that CC for cluster 0 is in a synchronous state.
      03: Call FrIf_MainFunction_0.
      04: VP: Check the trace for Fr calls for cluster 0, and no status is reported to the Mirror.
      05: Indicate in stub that CC for cluster 1 is in a synchronous state.
      06: Call FrIf_MainFunction_1.
      07: VP: Check the trace for Fr calls for cluster 1, and no status is reported to the Mirror.
      08: Call FrIf_Transmit() for a configured immediate PDU and the return value is E_OK.
      09: VP: check that the Fr_TransmitTxLPdu() is called with the right values, and the frame isn't reported to the Mirror.
      10: VP: Call FrIf_Transmit() for a configured PDU.
      11: VP : FrIf_Transmit() returns E_OK.
      12: Indicate the absolute timer IRQ and the respective global time on the CC, sync to first
          job of cluster 1.
      13: Call FrIf_JobListExec_1.
      14: VP: Check that the LPDU is received on cluster 1, and the frame isn't reported to the Mirror.
      15: Indicate the absolute timer IRQ and the respective global time on the CC, sync to first job
          of cluster 0.
      16: Call FrIf_JobListExec_0.
      17: No TxConfirmation is called as the LPDU is not transmitted.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCluster_MirroringDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>607</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the TxPduId handling in UL_TriggerTransmit and UL_TxConfirmation calls and
    check that multiple FrIfPdus linked to a FrIfLPdu and no Mirroring occures
    for any cluster as long as the it is not enabled via calling FrIf_EnableBusMirroring().
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
    01: initialize the module.
    02: Indicate in stub that CC for cluster 0 is in a synchronous state.
    03: Call FrIf_MainFunction_0.
    04: VP: Check the trace for Fr calls for cluster 0, and no status is reported to the Mirror.
    05: Start transmission on configured PDUs with different upper layers.
    06: Indicate global time on CC synchronized to the first job.
    07: Execute JobList.
    08: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_SimplePdu.
    09: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu Tx_SimplePdu with LPduIdx 5 linked with
        the FrIfPdu Tx_SimplePdu, and the frame isn't reported to the Mirror.
    10: VP: Check that the LPDU is received on cluster 0 and reported to the PduR, and the frame isn't reported to the Mirror.
    11: Check if FrTp_TriggerTransmit is called with appropriate Id for Tx_PDU_000.
    12: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_001.
    13: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_002.
    14: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_PDU_003.
    15: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu VB_0 with LPduIdx 0 linked with
        the FrIfPdus Tx_PDU_000, Tx_PDU_001, Tx_PDU_002 and Tx_PDU_003, and the Frame isn't reported to the Mirror.
    16: Indicate global time of CC synchronized to the second job.
    17: Execute JobList.
    18: Check if FrTp_TxConfirmation is called with appropriate Id for Tx_PDU_000.
    19: Check if FrNm_TxConfirmation is called with appropriate Id for Tx_PDU_001.
    20: Check if FrNm_TxConfirmation is called with appropriate Id for Tx_PDU_002.
    21: Check if PduR_FrIfTxConfirmation is called with appropriate Id for Tx_PDU_003.
    22: Execute JobList 6 times.
    23: Set the Fr_ReceiveRxLPdu call out function and simulate that a frame was received.
    24: Execute JobList with RECEIVE_AND_INDICATE.
    25: VP: check that the frame was received and the RxIndication was called for the upper layer, and the frame isn't reported to the Mirror.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05046_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>FrIf_Test_MultipleClusters_MirroringEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>954</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that Job List Execution Function and Main Function for different clusters work
    independently and Mirroring occures for all cluster as long as the it is enabled via calling FrIf_EnableBusMirroring().
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
      01: initialize the module.
      02: Indicate in stub that CC for cluster 0 is in a synchronous state.
      03: Enable the Bus Mirroring for all clusters.
      04: Call FrIf_MainFunction_0.
      05: VP: Check the trace for Fr calls for cluster 0, and the channel status is reported to the Mirror.
      06: Indicate in stub that CC for cluster 1 is in a synchronous state.
      07: Call FrIf_MainFunction_1.
      08: VP: Check the trace for Fr calls for cluster 1, and the channel status is reported to the Mirror.
      09: Call FrIf_Transmit() for a configured immediate PDU and the return value is E_OK.
      10: VP : check that the Fr_TransmitTxLPdu() is called with the right values, and the frame is reported to the Mirror.
      11: Call FrIf_Transmit() for a configured PDU.
      12: VP : FrIf_Transmit() returns E_OK.
      13: Indicate the absolute timer IRQ and the respective global time on the CC, sync to first
          job of cluster 1.
      14: Call FrIf_JobListExec_1.
      15: VP: Check that the LPDU is received on cluster 1, and the frame is reported to the Mirror.
      16: Indicate the absolute timer IRQ and the respective global time on the CC, sync to first job
          of cluster 0.
      17: Call FrIf_JobListExec_0.
      18: No TxConfirmation is called as the LPDU is not transmitted.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_01124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05726</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndStore.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndStore.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.FrIfTransmitImmediate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.OptionalInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCluster_MirroringEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>1252</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the TxPduId handling in UL_TriggerTransmit and UL_TxConfirmation calls and
    check that multiple FrIfPdus linked to a FrIfLPdu and Mirroring occures
    for the enabled cluster as long as the it is enabled via calling FrIf_EnableBusMirroring().
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
    01: initialize the module.
    02: Indicate in stub that CC for cluster 0 is in a synchronous state.
    03: Enabled the Mirroring for cluster 0.
    04: Set the channel status of the controllers of cluster 0.
    05: Call FrIf_MainFunction_0.
    06: VP: Check the trace for Fr calls for cluster 0, and channel status is reported to the Mirror correctly
        as a combination of the controller channel status reported via the Fr driver.
    07: Set the channel status of the controllers of cluster 0.
    08: Start transmission on configured PDUs with different upper layers.
    09: Indicate global time on CC synchronized to the first job.
    10: Execute JobList.
    11: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_SimplePdu.
    12: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu Tx_SimplePdu with LPduIdx 5 linked with
        the FrIfPdu Tx_SimplePdu, and the frame is reported to the Mirror.
    13: VP: Check that the LPDU is received on cluster 0 and reported to the PduR, and the frame is reported to the Mirror.
    14: Check if FrTp_TriggerTransmit is called with appropriate Id for Tx_PDU_000.
    15: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_001.
    16: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_002.
    17: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_PDU_003.
    18: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu VB_0 with LPduIdx 0 linked with
        the FrIfPdus Tx_PDU_000, Tx_PDU_001, Tx_PDU_002 and Tx_PDU_003, and the Frame is reported to the Mirror.
    19: Indicate global time of CC synchronized to the second job.
    20: Execute JobList.
    21: Check if FrTp_TxConfirmation is called with appropriate Id for Tx_PDU_000.
    22: Check if FrNm_TxConfirmation is called with appropriate Id for Tx_PDU_001.
    23: Check if FrNm_TxConfirmation is called with appropriate Id for Tx_PDU_002.
    24: Check if PduR_FrIfTxConfirmation is called with appropriate Id for Tx_PDU_003.
    25: Execute JobList 6 times.
    26: Set the Fr_ReceiveRxLPdu call out function and simulate that a frame was received.
    27: Execute JobList with RECEIVE_AND_INDICATE.
    28: VP: check that the frame was received and the RxIndication was called for the upper layer, and the frame is reported to the Mirror.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_01124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05726</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndStore.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.OptionalInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TxConflict_MirroringEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>1690</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that if a TxConfirmation is reported with FR_TRANSMITTED_CONFLICT status while
    the Mirroring is enabled, the FrIf will report MirrorReportFlexRayFrame() with TxConflict set to TRUE.
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
    01: initialize the module.
    02: Indicate in stub that CC for cluster 0 is in a synchronous state.
    03: Enabled the Mirroring for cluster 0.
    04: Set the channel status of the controllers of cluster 0.
    05: Call FrIf_MainFunction_0.
    06: VP: Check the trace for Fr calls for cluster 0, and channel status is reported to the Mirror correctly
        as a combination of the controller channel status reported via the Fr driver.
    07: Set the channel status of the controllers of cluster 0.
    08: Start transmission on configured PDUs with different upper layers.
    09: Indicate global time on CC synchronized to the first job.
    10: Execute JobList.
    11: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_SimplePdu.
    12: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu Tx_SimplePdu with LPduIdx 5 linked with
        the FrIfPdu Tx_SimplePdu, and the frame is reported to the Mirror.
    13: VP: Check that the LPDU is received on cluster 0 and reported to the PduR, and the frame is reported to the Mirror.
    14: Check if FrTp_TriggerTransmit is called with appropriate Id for Tx_PDU_000.
    15: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_001.
    16: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_002.
    17: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_PDU_003.
    18: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu VB_0 with LPduIdx 0 linked with
        the FrIfPdus Tx_PDU_000, Tx_PDU_001, Tx_PDU_002 and Tx_PDU_003, and the Frame is reported to the Mirror.
    19: Indicate global time of CC synchronized to the second job.
    20: Set the TxLPduStatusValue to FR_TRANSMITTED_CONFLICT.
    21: Execute JobList.
    21: Check that no TxConfirmation is called.
    22: VP: Check that the MirrorReportFlexRayFrame() is called to report TxConflict.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_01124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05726</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.TxConfirmation.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.OptionalInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NotTransmitted_MirroringEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>1974</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that if a TxConfirmation is reported with FR_NOT_TRANSMITTED status while
    the Mirroring is enabled, the FrIf will NOT call MirrorReportFlexRayFrame().
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
    01: initialize the module.
    02: Indicate in stub that CC for cluster 0 is in a synchronous state.
    03: Enabled the Mirroring for cluster 0.
    04: Set the channel status of the controllers of cluster 0.
    05: Call FrIf_MainFunction_0.
    06: VP: Check the trace for Fr calls for cluster 0, and channel status is reported to the Mirror correctly
        as a combination of the controller channel status reported via the Fr driver.
    07: Set the channel status of the controllers of cluster 0.
    08: Start transmission on configured PDUs with different upper layers.
    09: Indicate global time on CC synchronized to the first job.
    10: Execute JobList.
    11: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_SimplePdu.
    12: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu Tx_SimplePdu with LPduIdx 5 linked with
        the FrIfPdu Tx_SimplePdu, and the frame is reported to the Mirror.
    13: VP: Check that the LPDU is received on cluster 0 and reported to the PduR, and the frame is reported to the Mirror.
    14: Check if FrTp_TriggerTransmit is called with appropriate Id for Tx_PDU_000.
    15: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_001.
    16: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_002.
    17: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_PDU_003.
    18: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu VB_0 with LPduIdx 0 linked with
        the FrIfPdus Tx_PDU_000, Tx_PDU_001, Tx_PDU_002 and Tx_PDU_003, and the Frame is reported to the Mirror.
    19: Indicate global time of CC synchronized to the second job.
    20: Set the TxLPduStatusValue to FR_TRANSMITTED_CONFLICT.
    21: Execute JobList.
    21: Check that no TxConfirmation is called.
    22: VP: Check that the MirrorReportFlexRayFrame() is NOT called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_01124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05726</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.TxConfirmation.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.OptionalInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06057_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>FrIf_Test_TxConflict_DisablingMirroring</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>2253</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that if a TxConfirmation is reported with FR_TRANSMITTED_CONFLICT status
    while the Mirroring is disabled via FrIf_EnableBusMirroring() set to FALSE,
    the FrIf will report MirrorReportFlexRayFrame() with TxConflict set to TRUE.
  
Test Object: None.
Test Precondition: 
      Stubs and stubs' counters are initialized.
      The Mirroring is enabled in the configuration.
  
Test Execution: 
    01: initialize the module.
    02: Indicate in stub that CC for cluster 0 is in a synchronous state.
    03: Enabled the Mirroring for cluster 0.
    04: Set the channel status of the controllers of cluster 0.
    05: Call FrIf_MainFunction_0.
    06: VP: Check the trace for Fr calls for cluster 0, and channel status is reported to the Mirror correctly
        as a combination of the controller channel status reported via the Fr driver.
    07: Set the channel status of the controllers of cluster 0.
    08: Start transmission on configured PDUs with different upper layers.
    09: Indicate global time on CC synchronized to the first job.
    10: Execute JobList.
    11: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_SimplePdu.
    12: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu Tx_SimplePdu with LPduIdx 5 linked with
        the FrIfPdu Tx_SimplePdu, and the frame is reported to the Mirror.
    13: VP: Check that the LPDU is received on cluster 0 and reported to the PduR, and the frame is reported to the Mirror.
    14: Check if FrTp_TriggerTransmit is called with appropriate Id for Tx_PDU_000.
    15: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_001.
    16: Check if FrNm_TriggerTransmit is called with appropriate Id for Tx_PDU_002.
    17: Check if PduR_FrIfTriggerTransmit is called with appropriate Id for Tx_PDU_003.
    18: VP: Check if Fr_TransmitTxLPdu is called to transmit LPdu VB_0 with LPduIdx 0 linked with
        the FrIfPdus Tx_PDU_000, Tx_PDU_001, Tx_PDU_002 and Tx_PDU_003, and the Frame is reported to the Mirror.
    19: Indicate global time of CC synchronized to the second job.
    20: Set the TxLPduStatusValue to FR_TRANSMITTED_CONFLICT.
    21: Disable the Mirroring for cluster 0.
    22: Execute JobList.
    23:VP: Check that neither TxConfirmation is called nor MirrorReportFlexRayFrame() is called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_01124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05726</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR44.SWS_FrIf_05727</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.FrTransmitTxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.DecoupledTransmission.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.FrReceiveRxLPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.ReceiveAndIndicate.MirrorReportFlexRayFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.OptionalInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.BusmirrorSupport.TxConfirmation.FrCheckTxLPduStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_FrIf_EnableBusMirroring_DetTesting_SingleCluster</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Conformance/IN/FrIf_ConTest_9/source/application/Tests.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case FrIf_EnableBusMirroring is called
      before the initializtion of the FrIf and if called with an invalid cluster Idx.
  
Test Object: None.
Test Precondition: 
      Development error detection is enabled.
      The Mirroring is enabled in the configuration.
      Only one cluster is configured.
  
Test Execution: 
      01: Call FrIf_EnableBusMirroring() before the initialization with a valid Cluster Idx.
      02: VP: Det reports FRIF_E_NOT_INITIALIZED.
      03: initialize the module.
      04: Call FrIf_EnableBusMirroring() with an invalid cluster Idx.
      05: VP: Det reports FRIF_E_INV_CLST_IDX.
      06: VP: Check good case for FrIf_EnableBusMirroring in Single Cluster mode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRIF_Gen_PBcfgM_00000_OnlyPbCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Generic/IN/FrIf_GenTest_00_OnlyPbCfg/source/application/FrIf_GenTest_00_OnlyPBcfg.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall prove that the FRIF post build configuration also compiles stand alone.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Set TS_BUILD_POST_BUILD_BINARY to TRUE in the merged make file to prevent the compilation
      of all other FRIF C files.
    * Remove all generated FRIF C files except post build files if there are any.

Test Execution: 
    The test run is successful when the FRIF compiles under sticking to the precondition and a
    binary file is generated.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_30021</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Generic/IN/FrIf_RegressionTestMCG_1/source/application/testspec.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test module configuration generation.

        Execute unittests:
        FrIf_001 - FrIf_002,
        FrIf_004 - FrIf_010,
        FrIf_012 - FrIf_018,
        FrIf_020 - FrIf_023,
        FrIf_023,
        FrIf_026,
        FrIf_030 - FrIf_039,
        FrIf_045 - FrIf_057,
    
Test Object: None.
Test Precondition: 
        None
    
Test Execution: None.
Test Input: 
        Valid input configuration file.
    
Test Output: 
        C-Code configuration files:
            FrIf_Cfg.h
            FrIf_Lcfg.h
            FrIf_PBcfg.h
            FrIf_Lcfg.c
            FrIf_PBcfg.c
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06054_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05369_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06081_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06082_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06083_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06002_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06004_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06045_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06044_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05391_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06062_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06061_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00013_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06048_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05367_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06063_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05368_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06064_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06065_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06067_Conf_EB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06068_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06066_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05370_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06070_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06071_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06069_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05374_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06075_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06076_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06077_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06078_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06074_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05373_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06073_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.UpperLayerIncludeFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.UpperLayerFunctionPrefix</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.UpperLayerHandleId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.UpperLayerRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.UpperLayerFunctionality</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfIsVirtualPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf00004_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05295_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FRIF_LCFG_C</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/TS_FRIF_LCFG.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the module include FrIf_Lcfg.c.
  
Test Object: None.
Test Precondition: 
    Only FrIf_Lcfg.c is included
  
Test Execution: 
    Check that FrIf_LcfgSignature has the expected value.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SendMTS() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_SendMTS() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_SendMTS() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
           Fr_ChnlIdx                   ChnlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_StopMTS() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_StopMTS() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_StopMTS() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
           Fr_ChnlIdx                   ChnlIdx  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CheckMTS() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_CheckMTS() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         FrIf_CheckMTS() provides the previously set value
    04:  VP:
         Each Fr_CheckMTS() was called with the parameter(s):
           Fr_CtrlIdx                   CtrlIdx,
           Fr_ChnlIdx                   ChnlIdx,
           Fr_MTSStatusPtr                 *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_AckIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_AckIRQ() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>395</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_EnableIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_EnableIRQ() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>467</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_DisableIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_DisableIRQ() was called with the parameter:
           Fr_CtrlIdx                   CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>540</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetIRQStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetIRQStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetIRQStatus() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetControllerErrorStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetControllerErrorStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetControllerErrorStatus() was called with the parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>694</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SendMTS() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SendMTS()
      02:  VP
           FrIf_SendMTS() returns E_NOT_OK;
      03:  VP
           Fr_SendMTS() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_ChnlIdx                                        ChnlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>755</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_StopMTS() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_StopMTS()
      02:  VP
           FrIf_StopMTS() returns E_NOT_OK;
      03:  VP
           Fr_StopMTS() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_ChnlIdx                                        ChnlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>816</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_CheckMTS() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_CheckMTS()
      02:  VP
           FrIf_CheckMTS() returns E_NOT_OK;
      03:  VP
           Fr_CheckMTS() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_ChnlIdx                                        ChnlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_AckIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_AckIRQ()
      02:  VP
           FrIf_AckIRQ() returns E_NOT_OK;
      03:  VP:
          Each Fr_AckIRQ() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>937</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_EnableIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_EnableIRQ()
      02:  VP
           FrIf_EnableIRQ() returns E_NOT_OK;
      03:  VP:
          Each Fr_EnableIRQ() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>993</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_DisableIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_DisableIRQ()
      02:  VP
           FrIf_DisableIRQ() returns E_NOT_OK;
      03:  VP:
          Each Fr_DisableIRQ() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetIRQStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetIRQStatus()
      02:  VP
           FrIf_GetIRQStatus() returns E_NOT_OK;
      03:  VP:
          Each Fr_GetIRQStatus() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetControllerErrorStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetControllerErrorStatus()
      02:  VP
           FrIf_GetControllerErrorStatus() returns E_NOT_OK;
      03:  VP:
          Each Fr_GetControllerErrorStatus() is called with the correct parameters
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SendMTS in case the FrIf
      is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SendMTS() with valid parameters
      02:  VP:
           FrIf_SendMTS() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_StopMTS in case the FrIf is
      not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_StopMTS() with valid parameters
      02:  VP:
           FrIf_StopMTS() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CheckMTS in case the FrIf
      is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_CheckMTS() with valid parameters
      02:  VP:
           FrIf_CheckMTS() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1313</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AckIRQ in case the FrIf is
      not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AckIRQ() with valid parameters
      02:  VP:
           FrIf_AckIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableIRQ in case the FrIf
      is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_EnableIRQ() with valid parameters
      02:  VP:
           FrIf_EnableIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableIRQ in case the FrIf
      is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableIRQ() with valid parameters
      02:  VP:
           FrIf_DisableIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1456</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetIRQStatus in case the
      FrIf is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetIRQStatus() with valid parameters
      02:  VP:
           FrIf_GetIRQStatus() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1507</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetControllerErrorStatus in
      case the FrIf is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetControllerErrorStatus() with valid parameters
      02:  VP:
           FrIf_GetControllerErrorStatus() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1558</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DispatchComOps in case
      the FrIf is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with valid parameters
      02:  VP:
           FrIf_DispatchComOps() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1610</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SendMTS in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SendMTS() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SendMTS() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1661</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_StopMTS in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_StopMTS() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_StopMTS() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CheckMTS in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_CheckMTS() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_CheckMTS() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1765</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_AckIRQ in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AckIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_AckIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1816</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableIRQ in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_EnableIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_EnableIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1867</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableIRQ in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_DisableIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetIRQStatus in case of an
      invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetIRQStatus() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetIRQStatus() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>1971</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetControllererrorStatus in
      case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetControllerErrorStatus() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetControllerErrorStatus() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CLST_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2024</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DispatchComOps
      in case of an invalid cluster index. 
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with invalid cluster index
      02:  VP:
           FrIf_DispatchComOps() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_JOB_CYCLE_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2075</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DispatchComOps()
      in case of an invalid job index and cycle parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with invalid FrIf_JobIdx
      02:  VP:
           Det reports FRIF_E_INV_JOB_IDX
      03:  Call FrIf_DispatchComOps() with invalid FrIf_CycleIdx
      04:  VP:
           Det reports FRIF_E_INV_CYCLE_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetExtSync() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_SetExtSync() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_SetExtSync() was called with the parameter(s):
           Fr_CtrlIdx                         CtrlIdx,
           Fr_Offset                    FR_OFFSET_INC,
           Fr_Rate                            FR_RATE
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SetExtSync() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SetExtSync()
      02:  VP
           FrIf_SetExtSync() returns E_NOT_OK;
      03:  VP
           Fr_SetExtSync() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_Offset                                          Offset,
           Fr_Rate                                              Rate
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2298</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetSyncState() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetSyncState() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetSyncState() was called with the parameter(s):
           Fr_CtrlIdx                                     CtrlIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetSyncState() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetSyncState()
      02:  VP
           FrIf_GetSyncState() returns E_NOT_OK;
      03:  VP
           Fr_GetSyncState() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2451</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetSyncState()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncState() with valid parameters
     02:  VP:
          FrIf_GetSyncState() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2506</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetSyncState()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetSyncState() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetSyncState() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_SetRelativeTimer() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_SetRelativeTimer()
      02:  VP
           FrIf_SetRelativeTimer() returns E_NOT_OK;
      03:  VP
           Fr_SetRelativeTimer() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_RelTimerIdx                                RelTimerIdx,
           Fr_Offset                                          Offset
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2632</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_CancelRelativeTimer() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_CancelRelativeTimer()
      02:  VP
           FrIf_CancelRelativeTimer() returns E_NOT_OK;
      03:  VP
           Fr_CancelRelativeTimer() was called with the correct parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_RelTimerIdx                                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2698</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_EnableRelativeTimerIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_EnableRelativeTimerIRQ()
      02:  VP
           FrIf_EnableRelativeTimerIRQ() returns E_NOT_OK;
      03:  VP
           Fr_EnableRelativeTimerIRQ() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_RelTimerIdx                                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_GetRelativeTimerIRQStatus() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
      The cluster is in FRIF_STATE_ONLINE.
      The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_GetRelativeTimerIRQStatus()
      02:  VP
           FrIf_GetRelativeTimerIRQStatus() returns E_NOT_OK;
      03:  VP
           Fr_GetRelativeTimerIRQStatus() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_RelTimerIdx                                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2836</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_AckRelativeTimerIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_AckRelativeTimerIRQ()
      02:  VP
           FrIf_AckRelativeTimerIRQ() returns E_NOT_OK;
      03:  VP
           Fr_AckRelativeTimerIRQ() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_RelTimerIdx                                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ReturnErrorTest_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2903</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the return value for FrIf_DisableRelativeTimerIRQ() in case of a failed driver function
      call.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    The cluster is in FRIF_STATE_ONLINE.
    The FlexRay Driver functions called by the FrIf shall return E_NOT_OK.
  
Test Execution: 
      01:  Call FrIf_DisableRelativeTimerIRQ()
      02:  VP
           FrIf_DisableRelativeTimerIRQ() returns E_NOT_OK;
      03:  VP
           Fr_DisableRelativeTimerIRQ() was called with the correct
           parameter(s)
           Fr_CtrlIdx                                        CtrlIdx,
           Fr_RelTimerIdx                                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>2971</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetRelativeTimer() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_SetRelativeTimer() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_SetRelativeTimer() was called with the parameter(s):
           Fr_CtrlIdx                        CtrlIdx,
           Fr_RelTimerIdx                RelTimerIdx
           Fr_Offset                          Offset
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CancelRelativeTimer() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_CancelRelativeTimer() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_CancelRelativeTimer() was called with the parameter(s):
           Fr_CtrlIdx                       CtrlIdx,
           Fr_RelTimerIdx                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableRelativeTimerIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_EnableRelativeTimerIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_EnableRelativeTimerIRQ() was called with the parameter(s):
           Fr_CtrlIdx                       CtrlIdx,
           Fr_RelTimerIdx                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetRelativeTimerIRQStatus() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_GetRelativeTimerIRQStatus() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetRelativeTimerIRQStatus() was called with the parameter(s):
           Fr_CtrlIdx                    CtrlIdx,
           Fr_RelTimerIdx            RelTimerIdx,
           Fr_IRQStatusPtr                  *ptr
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3326</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckRelativeTimerIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_AckRelativeTimerIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_AckRelativeTimerIRQ() was called with the parameter(s):
           Fr_CtrlIdx                        CtrlIdx,
           Fr_RelTimerIdx                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ParameterTest_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableRelativeTimerIRQ() routes to the correct
    driver function.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    FrIf configuration shall use 2 different drivers, and at least 2 controllers for a single driver.
  
Test Execution: 
    01:  Call FrIf_DisableRelativeTimerIRQ() for each communication controller
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_DisableRelativeTimerIRQ() was called with the parameter(s):
           Fr_CtrlIdx                        CtrlIdx,
           Fr_RelTimerIdx                RelTimerIdx
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3498</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetRelativetimer()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SetRelativeTimer() with valid parameters
     02:  VP:
          FrIf_SetRelativeTimer() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3551</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CancelRelativeTimer()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelRelativeTimer() with valid parameters
     02:  VP:
          FrIf_CancelRelativeTimer() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_EnableRelativeTimerIRQ()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableRelativeTimerIRQ() with valid parameters
     02:  VP:
          FrIf_EnableRelativeTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_GetRelativeTimerIRQStatus()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_GetRelativeTimerIRQStatus() with valid parameters
     02:  VP:
          FrIf_GetRelativeTimerIRQStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3710</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection FrIf_AckRelatieTimerIRQ()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_AckRelativeTimerIRQ() with valid parameters
     02:  VP:
          FrIf_AckRelativeTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3762</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DisableRelativeTimerIRQ()
      in case the FrIf is not initalized.
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableRelativeTimerIRQ() with valid parameters
     02:  VP:
          FrIf_DisableRelativeTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3815</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetRelativeTimer()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_SetRelativeTimer() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SetRelativeTimer() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3868</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_CancelRelativeTimer()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_CancelRelativeTimer() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_CancelRelativeTimer() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_EnableRelativeTimerIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_EnableRelativeTimerIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>3974</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_GetRelativeTimerIRQStatus() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_GetRelativeTimerIRQStatus() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>4028</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_AckRelativeTimerIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_AckRelativeTimerIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>4081</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection in case of an invalid
      FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DisableRelativeTimerIRQ() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_DisableRelativeTimerIRQ() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NOT_INIT_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>4134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetExtSync()
      in case the FrIf is not initalized. 
  
Test Object: None.
Test Precondition: 
      FrIf is not initialized.
      Development error detection is enabled.
  
Test Execution: 
     01:  Call FrIf_SetExtSync() with valid parameters
     02:  VP:
          FrIf_SetExtSync() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_NOT_INITIALIZED
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>FrIf_Test_INV_CTRL_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>4187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_SetExtSync()
      in case of an invalid FrIf_CtrlIdx parameter.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 

      01:  Call FrIf_SetExtSync() with invalid FrIf_CtrlIdx
      02:  VP:
           FrIf_SetExtSync() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>FrIf_Test_30034</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_1/source/application/Test.c.m4</sourcefile>
      <sourceline>4241</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      Tests the functionality of the decoupled transmission and receive and indicate mechanism
      for simple frames (1 Pdu at offset 0U, no update bit).
  
Test Object: None.
Test Precondition: 
      The transmitted frame shall be configured statically to contain 1 PDU (PduId 6) at offset 0. 
      The received frame shall be configured statically to contain 1 PDU (PduId 27) at offset 0. 
      which should be configured in the following way:
          Parameter FrIfAlwaysTransmit of the frame triggering set to FALSE.
          Parameter FrIfNoneMode of the frame triggering set to FALSE.
          Parameter AllowDynamicPayloadLength of the frame triggering set to FALSE
          No Pdu shall have update bits.

      The job list shall contain jobs performing the following actions:
          DECOUPLED_TRANSMISSION
          RECEIVE_AND_INDICATE
  
Test Execution: 
      00:  VP(FrTp.EB.PDULENGTHTYPE001): Check that PduLengthType has the expected size (2 or 4 depending on permutation). 
           Whole test sequence is then executed with expected PduLengthType and requirement thus covered.
      01:  Call FrIf_Transmit() for PDU6.
      02:  VP:
           FrIf_Transmit() returns E_OK.
      03:  Call FrIf_DispatchComOp(0U,0U,0U,FRIF_STATE_ONLINE)
      04:  VP:
           the upper layer's &lt;UpperLayer&gt;_TriggerTransmit() function
           is called for PduId 6
      05:  FlexRay Driver function Fr_TransmitTxLPdu() is called with
           correct parameters ...and correct payload.
      06:  VP:
           FlexRay Driver function Fr_ReceiveRxLPdu() is called with
           correct parameters and returns payload 
      07:  VP:
           The upper layer's &lt;UpperLayer&gt;_RxIndication() function is called
           for PduId 27
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.PDULENGTHTYPE001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ControllerInit() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ControllerInit()
     02:  VP:
          FrIf_ControllerInit() returns E_OK
     03:  VP:
          Fr_ControllerInit() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_ControllerInit()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ControllerInit()
     02:  VP:
          FrIf_ControllerInit() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_StartCommunication() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_StartCommunication()
     02:  VP:
          FrIf_StartCommunication() returns E_OK
     03:  VP:
          Fr_StartCommunication() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_StartCommunication()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_StartCommunication()
     02:  VP:
          FrIf_StartCommunication() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_HaltCommunication() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_HaltCommunication()
     02:  VP:
          FrIf_HaltCommunication() returns E_OK
     03:  VP:
          Fr_HaltCommunication() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_HaltCommunication()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_HaltCommunication()
     02:  VP:
          FrIf_HaltCommunication() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AbortCommunication() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AbortCommunication()
     02:  VP:
          FrIf_AbortCommunication() returns E_OK
     03:  VP:
          Fr_AbortCommunication() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_AbortCommunication()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AbortCommunication()
     02:  VP:
          FrIf_AbortCommunication() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetWakeupChannel() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetWakeupChannel()
     02:  VP:
          FrIf_SetWakeupChannel() returns E_OK
     03:  VP:
          Fr_SetWakeupChannel() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>553</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetWakeupChannel()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetWakeupChannel()
     02:  VP:
          FrIf_SetWakeupChannel() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SendWUP() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SendWUP()
     02:  VP:
          FrIf_SendWUP() returns E_OK
     03:  VP:
          Fr_SendWUP() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>665</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SendWUP()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SendWUP()
     02:  VP:
          FrIf_SendWUP() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetSyncState() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncState()
     02:  VP:
          FrIf_GetSyncState() returns E_OK
     03:  VP:
          Fr_GetSyncState() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>778</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetSyncState()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncState()
     02:  VP:
          FrIf_GetSyncState() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>837</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetExtSync() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetExtSync()
     02:  VP:
          FrIf_SetExtSync() returns E_OK
     03:  VP:
          Fr_SetExtSync() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetExtSync()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetExtSync()
     02:  VP:
          FrIf_SetExtSync() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>946</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetPOCStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetPOCStatus()
     02:  VP:
          FrIf_GetPOCStatus() returns E_OK
     03:  VP:
          Fr_GetPOCStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetPOCStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetPOCStatus()
     02:  VP:
          FrIf_GetPOCStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetGlobalTime() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetGlobalTime()
     02:  VP:
          FrIf_GetGlobalTime() returns E_OK
     03:  VP:
          Fr_GetGlobalTime() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetGlobalTime()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetGlobalTime()
     02:  VP:
          FrIf_GetGlobalTime() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacroticksPerCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetMacroticksPerCycle() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    GMacroPerCycle must be set to 5000 for Ctrl 0.
  
Test Execution: 
     01:  Call FrIf_GetMacroticksPerCycle()
     02:  VP:
          FrIf_GetMacroticksPerCycle() returns 5000 (GMacroPerCycle).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacroticksPerCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetMacroticksPerCycle()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetMacroticksPerCycle()
     02:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetMacrotickDuration</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetMacrotickDuration() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    GdMacrotick must be set to 1 us for Ctrl 0.
  
Test Execution: 
     01:  Call FrIf_GetMacrotickDuration()
     02:  VP:
          FfIf_GetMacrotickDuration() returns 1000 (GdMacrotick).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetMacrotickDuration</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1328</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetMacrotickDuration()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetMacrotickDuration()
     02:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1382</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetAbsoluteTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetAbsoluteTimer()
     02:  VP:
          FrIf_SetAbsoluteTimer() returns E_OK
     03:  VP:
          Fr_SetAbsoluteTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1435</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetAbsoluteTimer()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetAbsoluteTimer()
     02:  VP:
          FrIf_SetAbsoluteTimer() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1493</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetRelativeTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetRelativeTimer()
     02:  VP:
          FrIf_SetRelativeTimer() returns E_OK
     03:  VP:
          Fr_SetRelativeTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1545</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetRelativeTimer()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetRelativeTimer()
     02:  VP:
          FrIf_SetRelativeTimer() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1602</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CancelAbsoluteTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelAbsoluteTimer()
     02:  VP:
          FrIf_CancelAbsoluteTimer() returns E_OK
     03:  VP:
          Fr_CancelAbsoluteTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_CancelAbsoluteTimer()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelAbsoluteTimer()
     02:  VP:
          FrIf_CancelAbsoluteTimer() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1714</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CancelRelativeTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelRelativeTimer()
     02:  VP:
          FrIf_CancelRelativeTimer() returns E_OK
     03:  VP:
          Fr_CancelRelativeTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_CancelRelativeTimer()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelRelativeTimer()
     02:  VP:
          FrIf_CancelRelativeTimer() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1823</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableAbsoluteTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_EnableAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_EnableAbsoluteTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1877</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_EnableAbsoluteTimerIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_EnableAbsoluteTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1935</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableRelativeTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableRelativeTimerIRQ()
     02:  VP:
          FrIf_EnableRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_EnableRelativeTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>1987</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_EnableRelativeTimerIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableRelativeTimerIRQ()
     02:  VP:
          FrIf_EnableRelativeTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2044</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetAbsoluteTimerIRQStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetAbsoluteTimerIRQStatus()
     02:  VP:
          FrIf_GetAbsoluteTimerIRQStatus() returns E_OK
     03:  VP:
          Fr_GetAbsoluteTimerIRQStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetAbsoluteTimerIRQStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetAbsoluteTimerIRQStatus()
     02:  VP:
          FrIf_GetAbsoluteTimerIRQStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetRelativeTimerIRQStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetRelativeTimerIRQStatus()
     02:  VP:
          FrIf_GetRelativeTimerIRQStatus() returns E_OK
     03:  VP:
          Fr_GetRelativeTimerIRQStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetRelativeTimerIRQStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetRelativeTimerIRQStatus()
     02:  VP:
          FrIf_GetRelativeTimerIRQStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckAbsoluteTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckAbsoluteTimerIRQ()
     02:  VP:
          FrIf_AckAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_AckAbsoluteTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2327</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_AckAbsoluteTimerIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckAbsoluteTimerIRQ()
     02:  VP:
          FrIf_AckAbsoluteTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2385</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckRelativeTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckRelativeTimerIRQ()
     02:  VP:
          FrIf_AckRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_AckRelativeTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2437</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_AckRelativeTimerIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckRelativeTimerIRQ()
     02:  VP:
          FrIf_AckRelativeTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableAbsoluteTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_DisableAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_DisableAbsoluteTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2547</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_DisableAbsoluteTimerIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_DisableAbsoluteTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2605</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableRelativeTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableRelativeTimerIRQ()
     02:  VP:
          FrIf_DisableRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_DisableRelativeTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2657</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_DisableRelativeTimerIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableRelativeTimerIRQ()
     02:  VP:
          FrIf_DisableRelativeTimerIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2714</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AllowColdstart() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AllowColdstart()
     02:  VP:
          FrIf_AllowColdstart() returns E_OK
     03:  VP:
          Fr_AllowColdstart() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2768</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_AllowColdstart()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AllowColdstart()
     02:  VP:
          FrIf_AllowColdstart() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetNmVector() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetNmVector()
     02:  VP:
          FrIf_GetNmVector() returns E_OK
     03:  VP:
          Fr_GetNmVector() is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2882</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetNmVector()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetNmVector()
     02:  VP:
          FrIf_GetNmVector() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2943</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetTransceiverMode() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode()
     02:  VP:
          FrIf_SetTransceiverMode() returns E_OK
     03:  VP:
          FrTrcv_SetTransceiverMode() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>2997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetTransceiverMode()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode()
     02:  VP:
          FrIf_SetTransceiverMode() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3055</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetTransceiverMode()
    if a correct FrIf_CtrlIdx, but invalid FrIf_ChnlIdx is passed, when
    Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode() with invalid FrIf_ChnlIdx
     02:  VP:
          FrIf_SetTransceiverMode() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverMode() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverMode()
     02:  VP:
          FrIf_GetTransceiverMode() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverMode() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetTransceiverMode()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverMode()
     02:  VP:
          FrIf_GetTransceiverMode() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetTransceiverMode()
    if a correct FrIf_CtrlIdx, but invalid FrIf_ChnlIdx is passed, when
    Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverMode() with invalid FrIf_ChnlIdx
     02:  VP:
          FrIf_GetTransceiverMode() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3286</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverWUReason() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason()
     02:  VP:
          FrIf_GetTransceiverWUReason() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverWUReason() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3341</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetTransceiverWUReason()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason()
     02:  VP:
          FrIf_GetTransceiverWUReason() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3400</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetTransceiverWUReason()
    if a correct FrIf_CtrlIdx, but invalid FrIf_ChnlIdx is passed, when
    Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason() with invalid FrIf_ChnlIdx
     02:  VP:
          FrIf_GetTransceiverWUReason() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3459</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ClearTransceiverWakeup() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup()
     02:  VP:
          FrIf_ClearTransceiverWakeup() returns E_OK
     03:  VP:
          FrTrcv_ClearTransceiverWakeup() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3513</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_ClearTransceiverWakeup()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup()
     02:  VP:
          FrIf_ClearTransceiverWakeup() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_ClearTransceiverWakeup()
    if a correct FrIf_CtrlIdx, but invalid FrIf_ChnlIdx is passed, when
    Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup() with invalid FrIf_ChnlIdx
     02:  VP:
          FrIf_ClearTransceiverWakeup() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3629</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CheckWakeupByTransceiver() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver()
     02:  VP:
          FrIf_CheckWakeupByTransceiver() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_CheckWakeupByTransceiver()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver()
     02:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3733</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_CheckWakeupByTransceiver()
    if a correct FrIf_CtrlIdx, but invalid FrIf_ChnlIdx is passed, when
    Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver() with invalid FrIf_ChnlIdx
     02:  VP:
          Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3787</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SendMTS() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SendMTS()
     02:  VP:
          FrIf_SendMTS() returns E_OK
     03:  VP:
          Fr_SendMTS() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3839</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SendMTS()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SendMTS()
     02:  VP:
          FrIf_SendMTS() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_StopMTS() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_StopMTS()
     02:  VP:
          FrIf_StopMTS() returns E_OK
     03:  VP:
          Fr_StopMTS() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>3948</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_StopMTS()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_StopMTS()
     02:  VP:
          FrIf_StopMTS() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4005</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CheckMTS() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckMTS()
     02:  VP:
          FrIf_CheckMTS() returns E_OK
     03:  VP:
          Fr_CheckMTS() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4059</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_CheckMTS()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckMTS()
     02:  VP:
          FrIf_CheckMTS() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetChannelStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetChannelStatus()
     02:  VP:
          FrIf_GetChannelStatus() returns E_OK
     03:  VP:
          Fr_GetChannelStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetChannelStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetChannelStatus()
     02:  VP:
          FrIf_GetChannelStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05709</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AllSlots() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AllSlots()
     02:  VP:
          FrIf_AllSlots() returns E_OK
     03:  VP:
          Fr_AllSlots() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4290</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_AllSlots()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AllSlots()
     02:  VP:
          FrIf_AllSlots() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05707</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ReconfigLPdu() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ReconfigLPdu()
     02:  VP:
          FrIf_ReconfigLPdu() returns E_OK
     03:  VP:
          Fr_ReconfigLPdu() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_ReconfigLPdu()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ReconfigLPdu()
     02:  VP:
          FrIf_ReconfigLPdu() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4459</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableLPdu() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableLPdu()
     02:  VP:
          FrIf_DisableLPdu() returns E_OK
     03:  VP:
          Fr_DisableLPdu() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4512</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_DisableLPdu()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableLPdu()
     02:  VP:
          FrIf_DisableLPdu() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05714</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4570</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckIRQ()
     02:  VP:
          FrIf_AckIRQ() returns E_OK
     03:  VP:
          Fr_AckIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_AckIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckIRQ()
     02:  VP:
          FrIf_AckIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableIRQ()
     02:  VP:
          FrIf_EnableIRQ() returns E_OK
     03:  VP:
          Fr_EnableIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4731</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_EnableIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableIRQ()
     02:  VP:
          FrIf_EnableIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4788</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableIRQ()
     02:  VP:
          FrIf_DisableIRQ() returns E_OK
     03:  VP:
          Fr_DisableIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4840</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_DisableIRQ()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableIRQ()
     02:  VP:
          FrIf_DisableIRQ() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4897</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetIRQStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetIRQStatus()
     02:  VP:
          FrIf_GetIRQStatus() returns E_OK
     03:  VP:
          Fr_GetIRQStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>4951</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetIRQStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetIRQStatus()
     02:  VP:
          FrIf_GetIRQStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5010</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetClockCorrection() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetClockCorrection()
     02:  VP:
          FrIf_GetClockCorrection() returns E_OK
     03:  VP:
          Fr_GetClockCorrection() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5066</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetClockCorrection()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetClockCorrection()
     02:  VP:
          FrIf_GetClockCorrection() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05712</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5127</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetSyncFrameList() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncFrameList()
     02:  VP:
          FrIf_GetSyncFrameList() returns E_OK
     03:  VP:
          Fr_GetSyncFrameList() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5185</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetSyncFrameList()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncFrameList()
     02:  VP:
          FrIf_GetSyncFrameList() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05716</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetControllerErrorStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetControllerErrorStatus()
     02:  VP:
          FrIf_GetControllerErrorStatus() returns E_OK
     03:  VP:
          Fr_GetControllerErrorStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetControllerErrorStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetControllerErrorStatus()
     02:  VP:
          FrIf_GetControllerErrorStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5361</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetWakeupRxStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetWakeupRxStatus()
     02:  VP:
          FrIf_GetWakeupRxStatus() returns E_OK
     03:  VP:
          Fr_GetWakeupRxStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetWakeupRxStatus()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetWakeupRxStatus()
     02:  VP:
          FrIf_GetWakeupRxStatus() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5476</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverError() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverError()
     02:  VP:
          FrIf_GetTransceiverError() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverError() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05728</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5532</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetTransceiverError()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverError()
     02:  VP:
          FrIf_GetTransceiverError() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05719</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_INV_CHNL_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5592</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetTransceiverError()
    if a correct FrIf_CtrlIdx, but invalid FrIf_ChnlIdx is passed, when
    Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverError() with invalid FrIf_ChnlIdx
     02:  VP:
          FrIf_GetTransceiverError() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CHNL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05720</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_E_OK_FrIf_SetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5652</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetState() returns E_OK when a valid
    FrIf_Ctrl_Idx is passed and Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetState()
     02:  VP:
          FrIf_SetState() returns E_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_SetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5697</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_SetState()
    if a FrIf_ClstIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetState()
     02:  VP:
          FrIf_SetState() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_E_OK_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5754</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetState() returns E_OK when a valid
    FrIf_Ctrl_Idx is passed and Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetState()
     02:  VP:
          FrIf_GetState() returns E_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5800</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetState()
    if a FrIf_ClstIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetState()
     02:  VP:
          FrIf_GetState() returns E_NOT_OK
     03:  VP:
          Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5859</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetNumOfStartupFrames() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_GetNumOfStartupFrames()
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetNumOfStartupFrames() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetNumOfStartupFrames()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_GetNumOfStartupFrames()
    02:  VP:
         FrIf_GetNumOfStartupFrames() returns E_NOT_OK
    03:  VP:
         Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05722</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>5972</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ReadCCConfig() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_ReadCCConfig()
    02:  VP:
         FrIf_ReadCCConfig() returns E_OK
    03:  VP:
         Fr_ReadCCConfig() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6027</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_ReadCCConfig()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_ReadCCConfig()
    02:  VP:
         FrIf_ReadCCConfig() returns E_NOT_OK
    03:  VP:
         Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6086</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableTransceiverBranch() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_DisableTransceiverBranch()
    02:  VP:
         FrIf_DisableTransceiverBranch() returns E_OK
    03:  VP:
         Fr_DisableTransceiverBranch() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_DisableTransceiverBranch()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_DisableTransceiverBranch()
    02:  VP:
         FrIf_DisableTransceiverBranch() returns E_NOT_OK
    03:  VP:
         Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableTransceiverBranch() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_EnableTransceiverBranch()
    02:  VP:
         FrIf_EnableTransceiverBranch() returns E_OK
    03:  VP:
         Fr_EnableTransceiverBranch() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6239</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_EnableTransceiverBranch()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_EnableTransceiverBranch()
    02:  VP:
         FrIf_EnableTransceiverBranch() returns E_NOT_OK
    03:  VP:
         Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_OK_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6294</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetCycleLength() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_GetCycleLength()
    02:  VP:
         FrIf_GetCycleLength() returns the correct cycle length
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_E_NOT_OK_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests the development error detection in FrIf_GetCycleLength()
    if a FrIf_CtrlIdx other than 0 is passed, when Single Controller
    optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_GetCycleLength()
    02:  VP:
         FrIf_GetCycleLength() returns 0
    03:  VP:
         Det reports FRIF_E_INV_CTRL_IDX
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_E_OK_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6400</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests FrIf_DispatchComOps when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
      FrIf_State equals FRIF_STATE_OFFLINE.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with cluster index 0
      02:  VP:
           FrIf_DispatchComOps() returns E_OK
      03:  VP:
           Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_E_NOT_OK_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3/source/application/Test.c</sourcefile>
      <sourceline>6445</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the development error detection for FrIf_DispatchComOps
      if a FrIf_ClstIdx other than 0 is passed, when Single Controller
      optimization is enabled.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is enabled.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with invalid cluster index
      02:  VP:
           FrIf_DispatchComOps() returns E_NOT_OK
      03:  VP:
           Det reports FRIF_E_INV_CLST_IDX
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ControllerInit() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ControllerInit()
     02:  VP:
          FrIf_ControllerInit() returns E_OK
     03:  VP:
          Fr_ControllerInit() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ControllerInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_ControllerInit()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_ControllerInit()
     02:  VP:
          FrIf_ControllerInit() returns E_OK
     03:  VP:
          Fr_ControllerInit() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_StartCommunication() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_StartCommunication()
     02:  VP:
          FrIf_StartCommunication() returns E_OK
     03:  VP:
          Fr_StartCommunication() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StartCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_StartCommunication()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_StartCommunication()
     02:  VP:
          FrIf_StartCommunication() returns E_OK
     03:  VP:
          Fr_StartCommunication() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_HaltCommunication() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_HaltCommunication()
     02:  VP:
          FrIf_HaltCommunication() returns E_OK
     03:  VP:
          Fr_HaltCommunication() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_HaltCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>317</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_HaltCommunication()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_HaltCommunication()
     02:  VP:
          FrIf_HaltCommunication() returns E_OK
     03:  VP:
          Fr_HaltCommunication() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AbortCommunication() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AbortCommunication()
     02:  VP:
          FrIf_AbortCommunication() returns E_OK
     03:  VP:
          Fr_AbortCommunication() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AbortCommunication</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_AbortCommunication()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_AbortCommunication()
     02:  VP:
          FrIf_AbortCommunication() returns E_OK
     03:  VP:
          Fr_AbortCommunication() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetWakeupChannel() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetWakeupChannel()
     02:  VP:
          FrIf_SetWakeupChannel() returns E_OK
     03:  VP:
          Fr_SetWakeupChannel() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetWakeupChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SetWakeupChannel()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SetWakeupChannel()
     02:  VP:
          FrIf_SetWakeupChannel() returns E_OK
     03:  VP:
          Fr_SetWakeupChannel() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>588</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SendWUP() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SendWUP()
     02:  VP:
          FrIf_SendWUP() returns E_OK
     03:  VP:
          Fr_SendWUP() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>640</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SendWUP()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SendWUP()
     02:  VP:
          FrIf_SendWUP() returns E_OK
     03:  VP:
          Fr_SendWUP() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>695</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetSyncState() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncState()
     02:  VP:
          FrIf_GetSyncState() returns E_OK
     03:  VP:
          Fr_GetSyncState() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetSyncState()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncState()
     02:  VP:
          FrIf_GetSyncState() returns E_OK
     03:  VP:
          Fr_GetSyncState() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetSyncState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>806</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetExtSync() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetExtSync()
     02:  VP:
          FrIf_SetExtSync() returns E_OK
     03:  VP:
          Fr_SetExtSync() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetExtSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>858</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SetExtSync()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SetExtSync()
     02:  VP:
          FrIf_SetExtSync() returns E_OK
     03:  VP:
          Fr_SetExtSync() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetExtSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetPOCStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetPOCStatus()
     02:  VP:
          FrIf_GetPOCStatus() returns E_OK
     03:  VP:
          Fr_GetPOCStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetPOCStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>967</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetPOCStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetPOCStatus()
     02:  VP:
          FrIf_GetPOCStatus() returns E_OK
     03:  VP:
          Fr_GetPOCStatus() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1022</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetGlobalTime() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetGlobalTime()
     02:  VP:
          FrIf_GetGlobalTime() returns E_OK
     03:  VP:
          Fr_GetGlobalTime() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1077</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetGlobalTime()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetGlobalTime()
     02:  VP:
          FrIf_GetGlobalTime() returns E_OK
     03:  VP:
          Fr_GetGlobalTime() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacroticksPerCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetMacroticksPerCycle() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    GMacroPerCycle must be set to 5000 for Ctrl 0.
  
Test Execution: 
     01:  Call FrIf_GetMacroticksPerCycle()
     02:  VP:
          FrIf_GetMacroticksPerCycle() returns 5000 (GMacroPerCycle).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacroticksPerCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetMacroticksPerCycle()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetMacroticksPerCycle()
     02:  VP:
          FrIf_GetMacroticksPerCycle() returns 5000 (GMacroPerCycle)
     03:  VP:
          Det is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetMacrotickDuration</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetMacrotickDuration() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    GdMacrotick must be set to 1 us for Ctrl 0.
  
Test Execution: 
     01:  Call FrIf_GetMacrotickDuration()
     02:  VP:
          FfIf_GetMacrotickDuration() returns 1000 (GdMacrotick).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetMacrotickDuration</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1280</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetMacrotickDuration()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetMacrotickDuration()
     02:  VP:
          FfIf_GetMacrotickDuration() returns 1000 (GdMacrotick)
     03:  VP:
          Det is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1331</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetAbsoluteTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetAbsoluteTimer()
     02:  VP:
          FrIf_SetAbsoluteTimer() returns E_OK
     03:  VP:
          Fr_SetAbsoluteTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SetAbsoluteTimer()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SetAbsoluteTimer()
     02:  VP:
          FrIf_SetAbsoluteTimer() returns E_OK
     03:  VP:
          Fr_SetAbsoluteTimer() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetRelativeTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetRelativeTimer()
     02:  VP:
          FrIf_SetRelativeTimer() returns E_OK
     03:  VP:
          Fr_SetRelativeTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1490</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SetRelativeTimer()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SetRelativeTimer()
     02:  VP:
          FrIf_SetRelativeTimer() returns E_OK
     03:  VP:
          Fr_SetRelativeTimer() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_SetRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1545</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CancelAbsoluteTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelAbsoluteTimer()
     02:  VP:
          FrIf_CancelAbsoluteTimer() returns E_OK
     03:  VP:
          Fr_CancelAbsoluteTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelAbsoluteTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_CancelAbsoluteTimer()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_CancelAbsoluteTimer()
     02:  VP:
          FrIf_CancelAbsoluteTimer() returns E_OK
     03:  VP:
          Fr_CancelAbsoluteTimer() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1652</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CancelRelativeTimer() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CancelRelativeTimer()
     02:  VP:
          FrIf_CancelRelativeTimer() returns E_OK
     03:  VP:
          Fr_CancelRelativeTimer() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CancelRelativeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1704</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_CancelRelativeTimer()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_CancelRelativeTimer()
     02:  VP:
          FrIf_CancelRelativeTimer() returns E_OK
     03:  VP:
          Fr_CancelRelativeTimer() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_CancelRelativeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableAbsoluteTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_EnableAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_EnableAbsoluteTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1811</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_EnableAbsoluteTimerIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_EnableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_EnableAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_EnableAbsoluteTimerIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1866</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableRelativeTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableRelativeTimerIRQ()
     02:  VP:
          FrIf_EnableRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_EnableRelativeTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_EnableRelativeTimerIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_EnableRelativeTimerIRQ()
     02:  VP:
          FrIf_EnableRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_EnableRelativeTimerIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>1973</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetAbsoluteTimerIRQStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetAbsoluteTimerIRQStatus()
     02:  VP:
          FrIf_GetAbsoluteTimerIRQStatus() returns E_OK
     03:  VP:
          Fr_GetAbsoluteTimerIRQStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetAbsoluteTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2027</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetAbsoluteTimerIRQStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetAbsoluteTimerIRQStatus()
     02:  VP:
          FrIf_GetAbsoluteTimerIRQStatus() returns E_OK
     03:  VP:
          Det is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2084</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetRelativeTimerIRQStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetRelativeTimerIRQStatus()
     02:  VP:
          FrIf_GetRelativeTimerIRQStatus() returns E_OK
     03:  VP:
          Fr_GetRelativeTimerIRQStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetRelativeTimerIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetRelativeTimerIRQStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetRelativeTimerIRQStatus()
     02:  VP:
          FrIf_GetRelativeTimerIRQStatus() returns E_OK
     03:  VP:
          Fr_GetRelativeTimerIRQStatus() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetRelativeTimerIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckAbsoluteTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckAbsoluteTimerIRQ()
     02:  VP:
          FrIf_AckAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_AckAbsoluteTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_AckAbsoluteTimerIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_AckAbsoluteTimerIRQ()
     02:  VP:
          FrIf_AckAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_AckAbsoluteTimerIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2304</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckRelativeTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckRelativeTimerIRQ()
     02:  VP:
          FrIf_AckRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_AckRelativeTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2356</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_AckRelativeTimerIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_AckRelativeTimerIRQ()
     02:  VP:
          FrIf_AckRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_AckRelativeTimerIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableAbsoluteTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_DisableAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_DisableAbsoluteTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableAbsoluteTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_DisableAbsoluteTimerIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_DisableAbsoluteTimerIRQ()
     02:  VP:
          FrIf_DisableAbsoluteTimerIRQ() returns E_OK
     03:  VP:
          Fr_DisableAbsoluteTimerIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2518</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableRelativeTimerIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableRelativeTimerIRQ()
     02:  VP:
          FrIf_DisableRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_DisableRelativeTimerIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableRelativeTimerIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2570</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_DisableRelativeTimerIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_DisableRelativeTimerIRQ()
     02:  VP:
          FrIf_DisableRelativeTimerIRQ() returns E_OK
     03:  VP:
          Fr_DisableRelativeTimerIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableRelativeTimerIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2625</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AllowColdstart() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AllowColdstart()
     02:  VP:
          FrIf_AllowColdstart() returns E_OK
     03:  VP:
          Fr_AllowColdstart() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2677</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_AllowColdstart()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_AllowColdstart()
     02:  VP:
          FrIf_AllowColdstart() returns E_OK
     03:  VP:
          Fr_AllowColdstart() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2732</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetNmVector() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetNmVector()
     02:  VP:
          FrIf_GetNmVector() returns E_OK
     03:  VP:
          Fr_GetNmVector() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNmVector</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2787</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetNmVector()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetNmVector()
     02:  VP:
          FrIf_GetNmVector() returns E_OK
     03:  VP:
          Fr_GetNmVector() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2845</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetTransceiverMode() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode()
     02:  VP:
          FrIf_SetTransceiverMode() returns E_OK
     03:  VP:
          FrTrcv_SetTransceiverMode() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2897</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SetTransceiverMode()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode()
     02:  VP:
          FrIf_SetTransceiverMode() returns E_OK
     03:  VP:
          FrTrcv_SetTransceiverMode() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>2952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverMode() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverMode()
     02:  VP:
          FrIf_GetTransceiverMode() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverMode() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3005</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetTransceiverMode()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverMode()
     02:  VP:
          FrIf_GetTransceiverMode() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverMode() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3061</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverWUReason() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason()
     02:  VP:
          FrIf_GetTransceiverWUReason() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverWUReason() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetTransceiverWUReason()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason()
     02:  VP:
          FrIf_GetTransceiverWUReason() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverWUReason() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3170</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ClearTransceiverWakeup() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup()
     02:  VP:
          FrIf_ClearTransceiverWakeup() returns E_OK
     03:  VP:
          FrTrcv_ClearTransceiverWakeup() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_ClearTransceiverWakeup()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup()
     02:  VP:
          FrIf_ClearTransceiverWakeup() returns E_OK
     03:  VP:
          FrTrcv_ClearTransceiverWakeup() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CheckWakeupByTransceiver() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver()
     02:  VP:
          FrIf_CheckWakeupByTransceiver() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3326</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_CheckWakeupByTransceiver()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver()
     02:  VP:
          FrTrcv_CheckWakeupByTransceiver() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3378</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SendMTS() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SendMTS()
     02:  VP:
          FrIf_SendMTS() returns E_OK
     03:  VP:
          Fr_SendMTS() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_SendMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3430</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_SendMTS()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SendMTS()
     02:  VP:
          FrIf_SendMTS() returns E_OK
     03:  VP:
          Fr_SendMTS() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SendMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_StopMTS() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_StopMTS()
     02:  VP:
          FrIf_StopMTS() returns E_OK
     03:  VP:
          Fr_StopMTS() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_StopMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3537</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_StopMTS()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_StopMTS()
     02:  VP:
          FrIf_StopMTS() returns E_OK
     03:  VP:
          Fr_StopMTS() is called with Fr_CtrlIdx = 0 
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.StopMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3592</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_CheckMTS() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_CheckMTS()
     02:  VP:
          FrIf_CheckMTS() returns E_OK
     03:  VP:
          Fr_CheckMTS() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_CheckMTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_CheckMTS()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_CheckMTS()
     02:  VP:
          FrIf_CheckMTS() returns E_OK
     03:  VP:
          Fr_CheckMTS() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.CheckMTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3703</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetChannelStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetChannelStatus()
     02:  VP:
          FrIf_GetChannelStatus() returns E_OK
     03:  VP:
          Fr_GetChannelStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetChannelStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetChannelStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetChannelStatus()
     02:  VP:
          FrIf_GetChannelStatus() returns E_OK
     03:  VP:
          Fr_GetChannelStatus() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05709</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3819</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AllSlots() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AllSlots()
     02:  VP:
          FrIf_AllSlots() returns E_OK
     03:  VP:
          Fr_AllSlots() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3871</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_AllSlots()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_AllSlots()
     02:  VP:
          FrIf_AllSlots() returns E_OK
     03:  VP:
          Fr_AllSlots() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ReconfigLPdu() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_ReconfigLPdu()
     02:  VP:
          FrIf_ReconfigLPdu() returns E_OK
     03:  VP:
          Fr_ReconfigLPdu() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReconfigLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>3978</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_ReconfigLPdu()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_ReconfigLPdu()
     02:  VP:
          FrIf_ReconfigLPdu() returns E_OK
     03:  VP:
          Fr_ReconfigLPdu() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4033</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableLPdu() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableLPdu()
     02:  VP:
          FrIf_DisableLPdu() returns E_OK
     03:  VP:
          Fr_DisableLPdu() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableLPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4085</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_DisableLPdu()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_DisableLPdu()
     02:  VP:
          FrIf_DisableLPdu() returns E_OK
     03:  VP:
          Fr_DisableLPdu() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_AckIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_AckIRQ()
     02:  VP:
          FrIf_AckIRQ() returns E_OK
     03:  VP:
          Fr_AckIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_AckIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4192</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_AckIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_AckIRQ()
     02:  VP:
          FrIf_AckIRQ() returns E_OK
     03:  VP:
          Fr_AckIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_AckIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_EnableIRQ()
     02:  VP:
          FrIf_EnableIRQ() returns E_OK
     03:  VP:
          Fr_EnableIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4299</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_EnableIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_EnableIRQ()
     02:  VP:
          FrIf_EnableIRQ() returns E_OK
     03:  VP:
          Fr_EnableIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_EnableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableIRQ() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_DisableIRQ()
     02:  VP:
          FrIf_DisableIRQ() returns E_OK
     03:  VP:
          Fr_DisableIRQ() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableIRQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_DisableIRQ()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_DisableIRQ()
     02:  VP:
          FrIf_DisableIRQ() returns E_OK
     03:  VP:
          Fr_DisableIRQ() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_DisableIRQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4461</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetIRQStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetIRQStatus()
     02:  VP:
          FrIf_GetIRQStatus() returns E_OK
     03:  VP:
          Fr_GetIRQStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetIRQStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4515</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetIRQStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetIRQStatus()
     02:  VP:
          FrIf_GetIRQStatus() returns E_OK
     03:  VP:
          Fr_GetIRQStatus() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetIRQStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4572</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetClockCorrection() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetClockCorrection()
     02:  VP:
          FrIf_GetClockCorrection() returns E_OK
     03:  VP:
          Fr_GetClockCorrection() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetClockCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4627</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetClockCorrection()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetClockCorrection()
     02:  VP:
          FrIf_GetClockCorrection() returns E_OK
     03:  VP:
          Fr_GetClockCorrection() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4685</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetSyncFrameList() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncFrameList()
     02:  VP:
          FrIf_GetSyncFrameList() returns E_OK
     03:  VP:
          Fr_GetSyncFrameList() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetSyncFrameList</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4742</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetSyncFrameList()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetSyncFrameList()
     02:  VP:
          FrIf_GetSyncFrameList() returns E_OK
     03:  VP:
          Fr_GetSyncFrameList() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4802</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetControllerErrorStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetControllerErrorStatus()
     02:  VP:
          FrIf_GetControllerErrorStatus() returns E_OK
     03:  VP:
          Fr_GetControllerErrorStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4856</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetControllerErrorStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetControllerErrorStatus()
     02:  VP:
          FrIf_GetControllerErrorStatus() returns E_OK
     03:  VP:
          Fr_GetControllerErrorStatus() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIf_GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetWakeupRxStatus() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetWakeupRxStatus()
     02:  VP:
          FrIf_GetWakeupRxStatus() returns E_OK
     03:  VP:
          Fr_GetWakeupRxStatus() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetWakeupRxStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>4967</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetWakeupRxStatus()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetWakeupRxStatus()
     02:  VP:
          FrIf_GetWakeupRxStatus() returns E_OK
     03:  VP:
          Fr_GetWakeupRxStatus() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5024</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetTransceiverError() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverError()
     02:  VP:
          FrIf_GetTransceiverError() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverError() is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetTransceiverError()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverError()
     02:  VP:
          FrIf_GetTransceiverError() returns E_OK
     03:  VP:
          FrTrcv_GetTransceiverError() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05719</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_SetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_SetState() returns E_OK when a valid
    FrIf_Ctrl_Idx is passed and Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Cluster optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_SetState()
     02:  VP:
          FrIf_SetState() returns E_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_SetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_ClstIdx other than 0 is ignored in FrIf_SetState()
    when Single Cluster optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Cluster optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_SetState()
     02:  VP:
          FrIf_SetState() returns E_OK
     03:  VP:
          Det is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5231</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetState() returns E_OK when a valid
    FrIf_Ctrl_Idx is passed and Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Cluster optimization is enabled.
  
Test Execution: 
     01:  Call FrIf_GetState()
     02:  VP:
          FrIf_GetState() returns E_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_GetState</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_ClstIdx other than 0 is ignored in FrIf_GetState()
    when Single Cluster optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Cluster optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
     01:  Call FrIf_GetState()
     02:  VP:
          FrIf_GetState() returns E_OK
     03:  VP:
          Det is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetNumOfStartupFrames() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_GetNumOfStartupFrames()
    02:  VP:
         Each function call returns E_OK
    03:  VP:
         Each Fr_GetNumOfStartupFrames() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetNumOfStartupFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetNumOfStartupFrames()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
    01:  Call FrIf_GetNumOfStartupFrames()
    02:  VP:
         FrIf_GetNumOfStartupFrames() returns E_OK
    03:  VP:
         Fr_GetNumOfStartupFrames() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05722</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_ReadCCConfig() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_ReadCCConfig()
    02:  VP:
         FrIf_ReadCCConfig() returns E_OK
    03:  VP:
         Fr_ReadCCConfig() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_ReadCCConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5493</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_ReadCCConfig()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
    01:  Call FrIf_ReadCCConfig()
    02:  VP:
         FrIf_ReadCCConfig() returns E_OK
    03:  VP:
         Fr_ReadCCConfig() is called with Fr_CtrlIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5550</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_DisableTransceiverBranch() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_DisableTransceiverBranch()
    02:  VP:
         FrIf_DisableTransceiverBranch() returns E_OK
    03:  VP:
         FrTrcv_DisableTransceiverBranch() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5598</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_DisableTransceiverBranch()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
    01:  Call FrIf_DisableTransceiverBranch()
    02:  VP:
         FrIf_DisableTransceiverBranch() returns E_OK
    03:  VP:
         FrTrcv_DisableTransceiverBranch() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5650</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_EnableTransceiverBranch() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_EnableTransceiverBranch()
    02:  VP:
         FrIf_EnableTransceiverBranch() returns E_OK
    03:  VP:
         FrTrcv_EnableTransceiverBranch() was called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5698</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_EnableTransceiverBranch()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
    01:  Call FrIf_EnableTransceiverBranch()
    02:  VP:
         FrIf_EnableTransceiverBranch() returns E_OK
    03:  VP:
         FrTrcv_EnableTransceiverBranch() is called with FrTrcv_TrcvIdx = 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_E_OK_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5751</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if the function FrIf_GetCycleLength() routes to the correct
    driver function, when Single Controller optimization is enabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
  
Test Execution: 
    01:  Call FrIf_GetCycleLength()
    02:  VP:
         FrIf_GetCycleLength() returns the correct cycle length
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleCtrlOpt_NODET_INV_CTRL_FrIf_GetCycleLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_CtrlIdx other than 0 is ignored in FrIf_GetCycleLength()
    when Single Controller optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Controller optimization is enabled.
    Development error detection is disabled.
  
Test Execution: 
    01:  Call FrIf_GetCycleLength()
    02:  VP:
         FrIf_GetCycleLength() returns the correct cycle length for FrIf_CtrlIdx = 0
    03:  VP:
         Det is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.SingleFrOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_NODET_E_OK_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5851</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests FrIf_DispatchComOps when Single Controller optimization is enabled and DET is disabled.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is disabled.
      FrIf_State equals FRIF_STATE_OFFLINE.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with cluster index 0
      02:  VP:
           FrIf_DispatchComOps() returns E_OK
      03:  VP:
           Det is not called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>FrIf_Test_SingleClstOpt_NODET_INV_CLST_FrIf_DispatchComOps</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_3_NODET/source/application/Test.c</sourcefile>
      <sourceline>5896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that a FrIf_ClstIdx other than 0 is ignored in FrIf_DispatchComOps()
    when Single Cluster optimization is enabled and development error 
    detection is disabled.
  
Test Object: None.
Test Precondition: 
      FrIf is initialized.
      Development error detection is disabled.
  
Test Execution: 
      01:  Call FrIf_DispatchComOps() with invalid cluster index
      02:  VP:
           FrIf_DispatchComOps() returns E_OK
      03:  VP:
           Det is not called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleClstOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.DispatchComOps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_JobListExecutionIllegalISRDelays_DemToDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_4/source/application/Test.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the continuous job list execution monitoring mechanism
      with illegal ISRDelays that produce Dem-Errors.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      MaxISRDelay is set to 50 MT.
      The JobListTimeoutLimit is set to 3.
      FrIfJoblistSyncReportToDem is set to DET
      The FrIfJobList shall contain jobs with the following properties:
      JobName        Cycle    MT offset    ComOperation(s)
      Job_0_20_0     0        20           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
                                           DECOUPLED_TRANSMISSION
      Job_0_200_1    0        200          TX_CONFIRMATION
      Job_1_300_2    1        300          TX_CONFIRMATION
      Job_2_400_3    2        400          DECOUPLED_TRANSMISSION
      Job_3_500_4    3        500          DECOUPLED_TRANSMISSION
                                           DECOUPLED_TRANSMISSION
                                           RECEIVE_AND_INDICATE
      Job_6_200_1    6        200          TX_CONFIRMATION
      Job_7_700_5    7        700          DECOUPLED_TRANSMISSION
      Job_7_800_6    7        800          DECOUPLED_TRANSMISSION
      Job_10_1000_7  10       1000         RECEIVE_AND_INDICATE
      Job_11_1100_8  11       1100         RECEIVE_AND_INDICATE
      Job_63_4980_9  63       4980         PREPARE_LPDU
  
Test Execution: 
      ---- Try to execute Job_0_20_0 with maximum negative ISR delay -1 ---
      01:  Indicate the absolute timer IRQ and the respective global time on the CC
      02:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      03:  VP:
           The absolute timer is disabled
      04:  Restart JobList to continue with Job_0_200_1
      05:  VP
           Det reports FRIF_E_DEMTODET_JLE_SYNC.
      ---- Execute Job_0_200_1 with maximum positive ISR delay +1 ---
      06:  Indicate the absolute timer IRQ and the respective global time on the CC
      07:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      08:  VP:
           The absolute timer is disabled
      09:  Restart JobList to continue with Job_63_4980_1
      10:  VP
           Det reports FRIF_E_DEMTODET_JLE_SYNC.
      ---- Execute Job_63_4980_9 with maximum positive ISR delay +1 ---
      11:  Indicate the absolute timer IRQ and the respective global time on the CC
      12:  Call FrIf_JobListExec_&lt;ClstIdx&gt;()
      13: VP:
          The absolute timer is disabled
      14: Restart JobList to continue with Job_0_20_0
      15: VP:
          Det reports FRIF_E_DEMTODET_JLE_SYNC.
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>FrIf_Test_JobListTimeoutDetection_DemToDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_4/source/application/Test.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Tests the timeout detection for job list executions.
  
Test Object: None.
Test Precondition: 
      The CC used for job list execution is synchronous.
      The cluster is in FRIF_STATE_ONLINE.
      The job list is synchronized in a way that execution starts with the
        first job.
      The JobListTimeoutLimit is set to 3.
      FrIfJoblistSyncReportToDem is set to DET
  
Test Execution: 
      01:  Set return value for stub function Fr_GetGlobalTime to E_NOT_OK
      02:  Try to execute Job_20_2000_0
      03:  VP:
           The absolute timer is disabled
      04:  Reset return value for stub function Fr_GetGlobalTime to E_OK
      05:  Restart job list (Call Fr_MainFunction&lt;ClstIdx&gt;
      06:  Call FrIf_MainFunction_&lt;ClusterIdx&gt;() three times (TS_JOB_LIST_TIMEOUT_LIMIT)
      07:  After timeout detection Fr_SetAbsoluteTimer() and
           Fr_EnableAbsoluteTimer() are called again and FRIF_E_DEMTODET_JLE_SYNC
           is reported to the Det.
  
Test Input: 
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120i</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfJoblistSyncReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_ALL_PASS</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case no error is reported no either channel.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set all stub channel error bits to false
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: Nothing is reported to Det
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_NIT_CH_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case of an NIT Status vss!SyntaxError
          on channel A.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub channel A error bit NIT Status vss!SyntaxError to true
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: NIT error on channel A is reported to Det with configured DetErrorId
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusAReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_NIT_CH_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case of an NIT Status vss!SyntaxError
          on channel B.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub channel B error bit NIT Status vss!SyntaxError to true
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: NIT error on channel B is reported to Det with configured DetErrorId
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfNITStatusBReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_SW_CH_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case of an Symbol Window Status vss!Bviolation
          on channel A.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub channel A error bit Symbol Window Status vss!Bviolation to true
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: Symbol Window error on channel A is reported to Det with configured DetErrorId
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusAReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_SW_CH_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>331</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case of an Symbol Window Status vss!Bviolation
          on channel B.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub channel B error bit Symbol Window Status vss!Bviolation to true
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: Symbol Window error on channel B is reported to Det with configured DetErrorId
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfSymbolWindowStatusBReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_ACS_CH_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>400</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case of an Aggregated Channel Status vSS!SyntaxError
          on channel A.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub channel A error bit Aggregated Channel Status vSS!SyntaxError to true
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: ACS error on channel A is reported to Det with configured DetErrorId
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusAReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusAReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_ACS_CH_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks the correct reporting of channel status information
          to the Det, in case of an Aggregated Channel Status vSS!SyntaxError
          on channel B.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub channel B error bit Aggregated Channel Status vSS!SyntaxError to true
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: ACS error on channel A is reported to Det with configured DetErrorId
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>FrIf.EB.FrIfAggregatedStatusBReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>FrIf_Test_ChannelReportingToDet_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_5/source/application/Test.c.m4</sourcefile>
      <sourceline>538</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
          This test checks that nothing is reported in case Fr_GetChannelStatus
          returns E_NOT_OK.
      
Test Object: None.
Test Precondition: 
          The FrIf module shall be initialized.
          Single Controller optimization is enabled.
      
Test Execution: 
          01: Set stub to return E_NOT_OK
          02: Call FrIf_MainFunction_0
          03: Fr_GetChannelStatus is called 1 time
          04: VP: Nothing is reported to Det
      
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05120b</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_CheckWakeupByTransceiver</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_CheckWakeupByTransceiver() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_CheckWakeupByTransceiver()
     02:  VP:
          No other functions are called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_ClearTransceiverWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_ClearTransceiverWakeup() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_ClearTransceiverWakeup()
     02:  VP:
          FrIf_ClearTransceiverWakeup() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_GetTransceiverError</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_GetTransceiverError() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverError()
     02:  VP:
          FrIf_GetTransceiverError() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_GetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_GetTransceiverMode() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
 
Test Execution: 
     01:  Call FrIf_GetTransceiverMode()
     02:  VP:
          FrIf_GetTransceiverMode() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_GetTransceiverWUReason</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_GetTransceiverWUReason() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_GetTransceiverWUReason()
     02:  VP:
          FrIf_GetTransceiverWUReason() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_SetTransceiverMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_SetTransceiverMode() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_SetTransceiverMode()
     02:  VP:
          FrIf_SetTransceiverMode() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_EnableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_EnableTransceiverBranch() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_EnableTransceiverBranch()
     02:  VP:
          FrIf_EnableTransceiverBranch() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>FrIf_Test_NoTrcvr_FrIf_DisableTransceiverBranch</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_6_NoTrcvr/source/application/Test.c</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests error handling of FrIf_DisableTransceiverBranch() if no transceiver is
    configured.
  
Test Object: None.
Test Precondition: 
    FrIf is initialized.
    Single Transceiver optimization is disabled.
    Development error detection is disabled.
    No Transceiver configured.
  
Test Execution: 
     01:  Call FrIf_DisableTransceiverBranch()
     02:  VP:
          FrIf_DisableTransceiverBranch() returns E_NOT_OK
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.SingleFrTrcvOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf05028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EB_FRIF_RxFIFO_BasicReception_A</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>410</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the basic reception mechanism of the FIFO with
      one frame trigger on channel A. Upon reception the contained
      PDUs trigger the PduR API function PduR_FrIfRxIndication.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 1 (FT1) as defined
          in the table at begin of this file.
      03: Set the first four bytes of the received payload to:
          0x6 0x1 0x2 0x3
          Consider that the first byte contains the two update bits
      04: Execute the FrIf joblist
      05: VP:
          FrIf call PduR_FrIfRxIndication 2 times (the frame contains 2 Pdus):
                  | 1st time  |  2nd time
           ------------------------------
          PduId   | 4         |  0
          PduLen  | 2         |  1
          Payload | 0x1 0x2   |  0x3
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06052_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06056_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_BasicReception_B</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>489</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the basic reception mechanism of the FIFO with
      one frame trigger on channel B. Upon reception the contained
      PDUs trigger the PduR API function PduR_FrIfRxIndication.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 15 (FT15) as defined
          in the table at begin of this file.
      03: Set the the received payload to:
          0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7
      04: Execute the FrIf joblist
      05: VP:
          FrIf call PduR_FrIfRxIndication 1 time (the frame contains 1 Pdu):
          PduId:    7
          PduLen:   8
          Payload:  0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06052_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06056_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_BasicReception_AB</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>565</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the basic reception mechanism of the FIFO with
      frame trigger on both channels. Upon reception the contained
      PDUs trigger the PduR API function PduR_FrIfRxIndication.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 1.
      02: Prepare the test to send frame triggering 6 (FT6) and 17 (FT17)
          as defined in the table at begin of this file.
      03: Set the first four bytes of the received payload to:
          0x11 0x23 0x33 0x44 0x55 0x66 0x77 0x88
          Consider that bit 15 contains the update bit for Pdu 0
      04: Execute the FrIf joblist
      05: VP:
          FrIf call PduR_FrIfRxIndication 2 times:
          #   | PduId | PduLen | Payload
          ----|-------|--------|----------------------------------------
          0   | 0     | 1      | 0x66
          1   | 7     | 8      | 0x11 0x23 0x33 0x44 0x55 0x66 0x77 0x88
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06052_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06056_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_PartialReception</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>644</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the reception mechanism of the FIFO for
      partially received frames. Upon reception the contained
      PDUs trigger the PduR API function PduR_FrIfRxIndication.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 5 (FT5) as defined
          in the table at begin of this file.
      03: Set the the received payload to:
          0x00 0x11 0x22 0x33 0x44 0x55
      04: Execute the FrIf joblist
      05: VP:
          FrIf call PduR_FrIfRxIndication 2 times (the frame contains 3 PDUs but only 2 are received):
          #   | PduId | PduLen | Payload
          ----|-------|--------|----------------------------------------
          0   | 5     | 2      | 0x44 0x55
          1   | 4     | 2      | 0x22 0x33
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06056_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_PduNotUpdated</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>718</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the basic reception mechanism of the FIFO with
      one frame trigger on channel A. Upon reception the contained
      PDUs trigger the PduR API function PduR_FrIfRxIndication.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 1 (FT1) as defined
          in the table at begin of this file.
      03: Set the first four bytes of the received payload to:
          0x2 0x1 0x2 0x3
          Consider that the first byte contains the two update bits
      04: Execute the FrIf joblist
      05: VP:
          FrIf call PduR_FrIfRxIndication 1 time (only update bit for Pdu 0 is set):
          PduId:    0
          PduLen:   1
          Payload:  0x3
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_ParallelReception</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>790</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the independent reception mechanism of the FIFO with
      one frame trigger. Upon reception the contained PDUs trigger the
      PduR API function PduR_FrIfRxIndication. In addition a non-FIFO
      reception parallel to the FIFO take place.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 2 (FT2) as defined
          in the table at begin of this file.
      03: Prepare the test to send frame triggering 0 (FT0) as defined
          in the table at begin of this file (non FIFO FT!).
      04: Set the first eigth bytes of the received payload to:
          0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
          There are no update bits configured!
      05: Execute the FrIf joblist
      06: VP:
          FrIf call PduR_FrIfRxIndication 8 times.
          The LPdus FT contains 7 PDUs the "FIFO" FT contains 1!
          #   | PduId | PduLen | Payload
          ----|-------|--------|----------------------------------------
          0   | 0     | 1      | 0x80
          1   | 1     | 1      | 0x90
          2   | 2     | 1      | 0xa0
          3   | 3     | 1      | 0xb0
          4   | 7     | 8      | 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
          5   | 6     | 4      | 0x80 0x90 0xa0 0xb0
          6   | 4     | 2      | 0xc0 0xd0
          7   | 5     | 2      | 0xe0 0xf0
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_WrongChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>890</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that a frame triggering received on the wrong channel
      and therefore triggered for the wrong FIFO is not forwarded by FrIf.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 1.
      02: Prepare the test to send frame triggering 6 (FT6) as defined
          in the table at begin of this file with one exception:
          Simulate a reception on Channel B instead of A!
      03: Execute the FrIf joblist
      04: VP:
          FrIf does not trigger the reception of PDUs (PduR_FrIfRxIndication)
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06052_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_WrongCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that a frame triggering received in the wrong cycle
      and therefore not forwarded by FrIf.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 1.
      02: Prepare the test to send frame triggering 6 (FT6) as defined
          in the table at begin of this file with one execption:
          Instead of cycle 10 the frame is received in cycle 0!
          Note that FT6 has a base cycle of 10 and a repetition of 65.
      03: Execute the FrIf joblist
      04: VP:
          FrIf does not trigger the reception of PDUs (PduR_FrIfRxIndication)
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_WrongFrameId</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that a frame triggering received in the wrong FrameId
      and therefore not forwarded by FrIf.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 1.
      02: Prepare the test to send frame triggering 15 (FT15) as defined
          in the table at begin of this file with one execption:
          The FrameId is 255 instead of 2!
      03: Execute the FrIf joblist
      04: VP:
          FrIf does not trigger the reception of PDUs (PduR_FrIfRxIndication)
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>1049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that a empty FIFO does not trigger any reception.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Execute the FrIf joblist
      03: VP:
          FrIf does not trigger the reception of PDUs (PduR_FrIfRxIndication)
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_Offline</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>1094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that a non-empty FIFO does not trigger any
      reception if FrIf is in state OFFLINE.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 2 (FT2) as defined
          in the table at begin of this file.
      03: Switch FrIf to state OFFLINE.
      04: Execute the FrIf joblist
      05: VP:
          FrIf does not trigger the reception of PDUs (PduR_FrIfRxIndication)
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_Flush</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>1150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that the FIFO is flushed after switching from
      OFFLINE to ONLINE.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Initialize stub of Fr_1_MFR4300_FlushRxFIFO_Stub
      02: Initialize FrIf
      03: VP:
          FrIf does not flush any FIFO
      04: Set state to ONLINE
      05: VP:
          FrIf flushes both FIFOs (Fr_1_MFR4300_FlushRxFIFO called twice)
          This checks the flush mechanism after initalization
      06: Set state to OFFLINE
      07: VP:
          FrIf does not flush any FIFO
      08: Set state to ONLINE
      09: VP:
          FrIf flushes both FIFOs (Fr_1_MFR4300_FlushRxFIFO called twice)
          This checks the flush mechanism after loss of synchronization
      10: Set state to ONLINE
      11: VP:
          FrIf does not flush any FIFO
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_Sequence</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>1233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks the correct behavior of the FIFO for a seqeunce
      of job triggers.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 9 (FT9).
          Note that FT9 has a base cycle of 0 and a repetition of 2.
      03: Set all 20 bytes of the received payload to:
          0x0 0x60 0x2 0x3 0x4 ... 0x13
          Consider that the second byte contains the two update bits
      04: Execute the FrIf joblist
      05: VP:
          FrIf call PduR_FrIfRxIndication 2 times (the frame contains 2 Pdus):
                  | 1st time       |  2nd time
           ---------------------------------------
          PduId   | 7              |  0
          PduLen  | 8              |  1
          Payload | 0xa ... 0x13   |  0x0
      06: Set joblist to next job
      07: Execute the FrIf joblist
      08: VP:
          Because this job has no CONSUME_FIFO action no new receive
          attempt was made.
      09: Set joblist to next job
      10: Prepare the test to send frame triggering 10 (FT10).
          Note that FT10 has a base cycle of 1 and a repetition of 2.
      11: Execute the FrIf joblist
      12: VP:
          FrIf call PduR_FrIfRxIndication 1 time (the frame contains 1 Pdu):
          PduId:    7
          PduLen:   8
          Payload:  0x4 0x5 0x6 0x7 0x8 0x9 0xa 0xb
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06056_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_FRIF_GLOBALRXMAXLOOP</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>1355</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the reception mechanism of the FIFO with
      Fr_ReceiveRxFIFO returning FR_RECEIVED_MORE_DATA_AVAILABLE until
      FRIF_GLOBALRXMAXLOOP is reached. Upon reception the contained
      PDUs trigger the PduR API function PduR_FrIfRxIndication.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send frame triggering 1 (FT1) FRIF_GLOBALRXMAXLOOP times
          as defined in the table at begin of this file.
      03: Set the first four bytes of the received payload to:
          0x6 0x1 0x2 0x3
          Consider that the first byte contains the two update bits
      04: Execute the FrIf joblist
      05: VP:
          For each received frame FrIf call PduR_FrIfRxIndication 2 times
          (the frame contains 2 Pdus) until FRIF_GLOBALRXMAXLOOP is reached:
                  | 1st time  |  2nd time
           ------------------------------
          PduId   | 4         |  0
          PduLen  | 2         |  1
          Payload | 0x1 0x2   |  0x3
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>EB_FRIF_RxFIFO_FrameIdNotConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_FrIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FrIf/test/ts5/Implementation/IN/FrIf_ImpTest_RxFIFO/source/application/Test.c</sourcefile>
      <sourceline>1438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test check the reception mechanism of the FIFO with
      for not configured Frame IDs.
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      01: Prepare the Fr stub and set the global time to the start of
          the job which handles the receive FIFO.
          The actual cycle shall be 0.
      02: Prepare the test to send a frame in the slot range of the RxFIFO
          without a configured frame triggering (FR_CHANNEL_A, slot 15).
      03: Set the payload to 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7
      04: Execute the FrIf joblist
      05: VP:
          No call to PduR_FrIfRxIndication.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FrIf.EB.ExtendedRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>FrIf.ASR40.FrIf06056_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
