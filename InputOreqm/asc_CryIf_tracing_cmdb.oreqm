<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_CryIf_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_AUTOSAR_SWS_CryptoInterface_R2111.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_ADD_CryptoInterface_R0000.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_ADD_CryptoInterface_R2111.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_CMN_CryptoInterface.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_SWS_CryptoInterface_R0000.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_SWS_CryptoInterface_R2111.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/common_req/CryIf_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_SWUTS.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:16:27 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_CryIf_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_AUTOSAR_SWS_CryptoInterface_R2111.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_ADD_CryptoInterface_R0000.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_ADD_CryptoInterface_R2111.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_CMN_CryptoInterface.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_SWS_CryptoInterface_R0000.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_Native/asc_CryIf_requirements_ELEKTROBIT_SWS_CryptoInterface_R2111.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/common_req/CryIf_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_GenericImporter/reqm_SWUTS.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
     <id>CryIf.Req.Integration_KeyMgmt</id>
     <status>approved</status>
     <source>EB integration requirement</source>
     <version>1</version>
     <description>
        Key management functions are only available if at least one key exists in the configuration. Otherwise, they are disabled via compiler switch and thus cannot be called. This applies to the following functions:
        <ul>
        <li>CryIf_KeyElementSet</li>
        <li>CryIf_KeySetValid</li>
        <li>CryIf_KeyElementGet</li>
        <li>CryIf_KeyElementCopy</li>
        <li>CryIf_KeyCopy</li>
        <li>CryIf_KeyGenerate</li>
        <li>CryIf_KeyDerive</li>
        <li>CryIf_KeyExchangeCalcPubVal</li>
        <li>CryIf_KeyExchangeCalcSecret</li>
        <li>CryIf_RandomSeed</li>
        </ul>
     </description>
     
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
     <id>CryIf.R2111.Lim.Integration_CryIfInitMulticore</id>
     <status>approved</status>
     <source>EB integration requirement</source>
     <version>1</version>
     <description>
	    In multi-core environment, CryIf_Init shall only be called on one core.
     </description>
     <providescoverage>
       <provcov>
         <linksto>CryIf.R2111/Sws/SWS_CryIf_00144</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
     </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <!-- CryIf.ASR21-11.SWS_CryIf_00001 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00001</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The Crypto Interface (CRYIF) shall be able to be called by the Crypto Service Manager (CSM), and forward its service requests to the underlying Crypto Drivers.</description>
      <rationale>This requirement is informational only.</rationale>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00002 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The CRYIF shall be able to access the underlying Crypto Drivers to calculate results with their cryptographic services. These results shall be returned back to the CSM by the CRYIF.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00002</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00003 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00003</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The code file structure shall not be defined within this specification completely.</description>
      <rationale>This requirement is informational only.</rationale>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00004 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The code file structure shall contain one source file CryIf.c, that contains the entire CRYIF code.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00004</srcid><srcstatus/><internalId>178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00144 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The CryIf module shall apply appropriate mechanisms to allow calls of its APIs from any partition.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00144</srcid><srcstatus/><internalId>179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00145 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The CryIf module shall forward a call in the context of the original caller.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00145</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00009 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Type of error Related error code Error value API request called before initialisation of CRYIF module. CRYIF_E_UNINIT 0x00 Initialisation of CRYIF module failed. CRYIF_E_INIT_FAILED 0x01 API request called with invalid parameter (null pointer). CRYIF_E_PARAM_POINTER 0x02 API request called with invalid parameter (out of range). CRYIF_E_PARAM_HANDLE 0x03 API request called with invalid parameter (invalid value). CRYIF_E_PARAM_VALUE 0x04 Source key element size does not match the target key elements size. CRYIF_E_KEY_SIZE_MISMATCH 0x05</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00009</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00141 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameters job- &gt;jobPrimitiveInputOutput-&gt;cryIfKeyId and, if applicable, job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId shall be checked if it is in valid range. If keys are out of range it shall report CRYPTO_E_PARAM_HANDLE to DET in development mode, otherwise return E_NOT_OK.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEParamHandleCorrected</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/NoCheckIfDETdisabled</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/CryIfEbCustomServiceApi</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEParamHandleCorrected, CryIf.R2111/Dev/NoCheckIfDETdisabled, CryIf.R2111/Dev/CryIfEbCustomServiceApi -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00141</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00143 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If a job is called and the parameter job- &gt;jobPrimitiveInfo-&gt;primitiveInfo-&gt;service is either set to CRYPTO_MACGENERATE, CRYPTO_MACVERIFY, CRYPTO_ENCRYPT, CRYPTO_DECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_AEADDECRYPT, CRYPTO_RANDOMGENERATE, CRYPTO_SIGNATUREGENERATE or CRYPTO_SIGNATUREVERIFY, the parameter job-&gt;jobPrimitiveInfo- &gt;cryIfKeyId shall be checked if it is in valid range. If keys are out of range it shall report CRYPTO_E_PARAM_HANDLE to DET in development mode, otherwise return E_NOT_OK.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEParamHandleCorrected</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/NoCheckIfDETdisabled</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/CryIfEbCustomServiceApi</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEParamHandleCorrected, CryIf.R2111/Dev/NoCheckIfDETdisabled, CryIf.R2111/Dev/CryIfEbCustomServiceApi -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00143</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00011 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Imported Types Module Header File Imported Type Csm Crypto_GeneralTypes.h Crypto_AlgorithmFamilyType Crypto_GeneralTypes.h Crypto_AlgorithmInfoType Crypto_GeneralTypes.h Crypto_AlgorithmModeType Crypto_GeneralTypes.h Crypto_JobPrimitiveInfoType Crypto_GeneralTypes.h Crypto_JobPrimitiveInputOutputType Crypto_GeneralTypes.h Crypto_JobRedirectionInfoType Crypto_GeneralTypes.h Crypto_JobStateType Crypto_GeneralTypes.h Crypto_JobType Crypto_GeneralTypes.h Crypto_PrimitiveInfoType Crypto_GeneralTypes.h Crypto_ProcessingType Crypto_GeneralTypes.h Crypto_ServiceInfoType Rte_Csm_Type.h Crypto_KeyStatusType Rte_Csm_Type.h Crypto_OperationModeType Rte_Csm_Type.h Crypto_ResultType Rte_Csm_Type.h Crypto_VerifyResultType Std Std_Types.h Std_ReturnType Std_Types.h Std_VersionInfoType</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00011</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91020 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91020</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Range CRYPTO_E_BUSY 0x02 The service request failed because the service is still busy CRYPTO_E_ENTROPY_EXHAUSTED 0x04 The service request failed because the entropy of the random number generator is exhausted CRYPTO_E_KEY_READ_FAIL 0x06 The service request failed because read access was denied CRYPTO_E_KEY_WRITE_FAIL 0x07 The service request failed because the writing access failed CRYPTO_E_KEY_NOT_AVAILABLE 0x08 The service request failed because at least one required key element is not available. CRYPTO_E_KEY_NOT_ VALID 0x09 The service request failed because the key is invalid. CRYPTO_E_KEY_SIZE_MISMATCH 0x0A The service request failed because the key size does not match. CRYPTO_E_JOB_CANCELED 0x0C The service request failed because the Job has been canceled. CRYPTO_E_KEY_EMPTY 0x0D The service request failed because of uninitialized source key element. Description -- Available via Crypto_GeneralTypes.h</description>
      <rationale>This requirement is informational only.</rationale>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91118 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIf_ConfigType Kind Structure Elements implementation specific Type -- Comment The content of the configuration data structure is implementation specific. Description Configuration data structure of CryIf module Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91118</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91000 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91000</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_Init Syntax void CryIf_Init ( const CryIf_ConfigType* configPtr ) Service ID [hex] 0x00 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) configPtr Pointer to a selected configuration structure Parameters (inout) None Parameters (out) None Return value None Description Initializes the CRYIF module. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91000</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91019 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91019</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The Configuration pointer configPtr shall always have a null pointer value.</description>
      <rationale>This requirement is not applicable: The parameter is provided by the caller.</rationale>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00014 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If the initialization of the CRYIF module fails, the CRYIF shall report CRYIF_E_INIT_FAILED to the DET.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00014</srcid><srcstatus/><internalId>187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00015 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>The service CryIf_Init() shall initialize the global variables and data structures of the CRYIF including flags and buffers.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00015</srcid><srcstatus/><internalId>188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91001 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_GetVersionInfo Syntax void CryIf_GetVersionInfo ( Std_VersionInfoType* versioninfo ) Service ID [hex] 0x01 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) versioninfo Pointer to where to store the version information of this module. Parameters (inout) None Parameters (out) None Return value void -- Description Returns the version information of this module. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/GetVersionInfoParamDirection</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/GetVersionInfoParamDirection -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91001</srcid><srcstatus/><internalId>189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00017 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_GetVersionInfo shall report CRYIF_E_PARAM_POINTER to the DET if the parameter versioninfo is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00017</srcid><srcstatus/><internalId>190</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91003 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_ProcessJob Syntax Std_ReturnType CryIf_ProcessJob ( uint32 channelId, Crypto_JobType* job ) Service ID [hex] 0x03 Sync/Async Depends on configuration Reentrancy Reentrant Parameters (in) channelId Holds the identifier of the crypto channel. Parameters (inout) job Pointer to the configuration of the job. Contains structures with user and primitive relevant information. Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy CRYPTO_E_KEY_NOT_VALID: Request failed, the key is not valid CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, a key element has the wrong size CRYPTO_E_KEY_READ_FAIL: The service request failed, because key element extraction is not allowed CRYPTO_E_KEY_WRITE_FAIL: The service request failed because the writing access failed CRYPTO_E_KEY_NOT_AVAILABLE: The service request failed because the key is not available CRYPTO_E_JOB_CANCELED: The service request failed because the synchronous Job has been canceled CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_ENTROPY_EXHAUSTED Description This interface dispatches the received jobs to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91003</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEQueueFullUndefined</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/CryIfEbCustomServiceApi</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEQueueFullUndefined, CryIf.R2111/Dev/CryIfEbCustomServiceApi -->
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00027 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_ProcessJob shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00027</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00028 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_ProcessJob shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter channelId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00028</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00029 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_ProcessJob shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter job is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00029</srcid><srcstatus/><internalId>194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00044 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_ProcessJob() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_ProcessJob() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00044</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00136 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If job processing redirection is used for a job, the crypto interface need to adapt the incoming crypto interface key references and key element references to the corresponding key references and key element references of the respective values of the crypto driver.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00136</srcid><srcstatus/><internalId>196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>


    <!-- CryIf.ASR21-11.SWS_CryIf_00133 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameters job-&gt;jobPrimitiveInputOutput- &gt;cryIfKeyId and, if applicable, job-&gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId have to be checked if it is in a valid range. If so, CryIf shall set job-&gt;cryptoKeyId with the key ID of the crypto driver that corresponds to job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId, and, if applicable, job- &gt;targetCryptoKeyId with the key ID of the crypto driver that corresponds to job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryIfEbCustomServiceApi</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryIfEbCustomServiceApi -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00133</srcid><srcstatus/><internalId>197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00134 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameter job-&gt;cryIfKeyId must be in range; else the function CryIf_ProcessJob shall report CRYPTO_E_PARAM_HANDLE to DET and return E_NOT_OK.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEParamHandleCorrected</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/KeyDispatching</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEParamHandleCorrected, CryIf.R2111/Dev/KeyDispatching -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00134</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00135 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is set to CRYPTO_KEYDERIVE, the parameter job- &gt;cryIfTargetKeyId must be in range; else the function CryIf_ProcessJob shall report CRYPTO_E_PARAM_HANDLE to DET and return E_NOT_OK.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEParamHandleCorrected</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/KeyDispatching</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEParamHandleCorrected, CryIf.R2111/Dev/KeyDispatching -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00135</srcid><srcstatus/><internalId>199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00142 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If a job is called and the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_MACGENERATE, CRYPTO_MACVERIFY, CRYPTO_ENCRYPT, CRYPTO_DECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_AEADDECRYPT, CRYPTO_RANDOMGENERATE, CRYPTO_SIGNATUREGENERATE or CRYPTO_SIGNATUREVERIFY, the parameter job-&gt;jobPrimitiveInfo-&gt;cryIfKeyId have to be checked if it is in a valid range. If so, CryIf shall set job-&gt;cryptoKeyId with the key ID of the crypto driver that corresponds to job-&gt;jobPrimitiveInfo-&gt;cryIfKeyId.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00142</srcid><srcstatus/><internalId>200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91014 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_CancelJob Syntax Std_ReturnType CryIf_CancelJob ( uint32 channelId, Crypto_JobType* job ) Service ID [hex] 0x0e Sync/Async Synchronous Reentrancy Reentrant Parameters (in) channelId Holds the identifier of the crypto channel. Parameters (inout) job Pointer to the configuration of the job. Contains structures with user and primitive relevant information. Parameters None (out) Return value Std_ReturnType E_OK: Request successful, job has been removed E_NOT_OK: Request failed, job couldn't be removed CRYPTO_E_JOB_CANCELED Description This interface dispatches the job cancellation function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91014</srcid><srcstatus/><internalId>201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00129 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CancelJob shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00129</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00130 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CancelJob shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter channelId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00130</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00131 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CancelJob shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter job is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00131</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00132 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_CancelJob() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_CancelJob() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00132</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91004 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementSet Syntax Std_ReturnType CryIf_KeyElementSet ( uint32 cryIfKeyId, uint32 keyElementId, const uint8* keyPtr, uint32 keyLength ) Service ID [hex] 0x04 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be set. keyElement Id Holds the identifier of the key element which shall be set. keyPtr Holds the pointer to the key data which shall be set as key element. keyLength Contains the length of the key element in bytes. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_WRITE_FAIL:Request failed because write access was denied CRYPTO_E_KEY_NOT_AVAILABLE: Request failed because the key is not available CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element size does not match size of provided data Description This function shall dispatch the set key element function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91004</srcid><srcstatus/><internalId>206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00049 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00049</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00050 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00050</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00052 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter keyPtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00052</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00053 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if keyLength is zero.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00053</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00055 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyElementSet() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00055</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91005 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeySetValid Syntax Std_ReturnType CryIf_KeySetValid ( uint32 cryIfKeyId ) Service ID [hex] 0x05 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key whose key elements shall be set to valid. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy Description This function shall dispatch the set key valid function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91005</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00056 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeySetValid shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00056</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00057 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeySetValid shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00057</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00058 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeySetValid() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeySetValid() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00058</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91021 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeySetInvalid Syntax Std_ReturnType CryIf_KeySetInvalid ( uint32 cryIfKeyId ) Service ID [hex] 0x14 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key for which the status shall be set to invalid. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy Description Sets invalid for the status of the key identified by cryIfKeyId. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91021</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00150 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeySetInvalid() shall report the error CRYIF_E_UNINIT if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00150</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00151 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeySetInvalid() shall report the error CRYIF_E_PARAM_HANDLE if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00151</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00152 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CryIf, the service CryIf_KeySetInvalid() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeySetInvalid() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00152</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91012 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyGetStatus Syntax Std_ReturnType CryIf_KeyGetStatus ( uint32 cryIfKeyId, Crypto_KeyStatusType* keyStatusPtr ) Service ID [hex] 0x13 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key for which the key state shall be returned. Parameters (inout) None Parameters (out) keyStatusPtr Contains the pointer to the data where the status of the key shall be stored. Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed Description Returns the key state of the key identified by cryIfKeyId. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91012</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00146 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeyGetStatus() shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00146</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00147 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeyGetStatus() shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00147</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00148 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeyGetStatus() shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter keyStatusPtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00148</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00149 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CryIf, the service CryIf_KeyGetStatus() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyGetStatus() for the driver configuration mapped to the service and pass on the return value</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00149</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91006 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementGet Syntax Std_ReturnType CryIf_KeyElementGet ( uint32 cryIfKeyId, uint32 keyElementId, uint8* resultPtr, uint32* resultLengthPtr ) Service ID [hex] 0x06 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKey Id Holds the identifier of the key whose key element shall be returned. key Element Id Holds the identifier of the key element which shall be returned. Parameters (inout) result Length Ptr Holds a pointer to a memory location in which the length information is stored. On calling this function this parameter shall contain the size of the buffer provided by resultPtr. If the key element is configured to allow partial access, this parameter contains the amount of data which should be read from the key element. The size may not be equal to the size of the provided buffer anymore. When the request has finished, the amount of data that has been stored shall be stored. Parameters (out) resultPtr Holds the pointer of the buffer for the returned key element Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed because read access was denied CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description This function shall dispatch the get key element function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91006</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00059 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00059</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00060 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00060</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00062 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter resultPtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00062</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00063 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter resultLengthPtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00063</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00064 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if the value, which is pointed by resultLengthPtr, is zero.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00064</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00065 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyElementGet() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00065</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91015 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementCopy Syntax Std_ReturnType CryIf_KeyElementCopy ( uint32 cryIfKeyId, uint32 keyElementId, uint32 targetCryIfKeyId, uint32 targetKeyElementId ) Service ID [hex] 0x0f Sync/Async Synchronous Reentrancy Reentrant, but not for the same cryIfKeyId Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be the source element. keyElementId Holds the identifier of the key element which shall be the source for the copy operation. targetCryIfKey Id Holds the identifier of the key whose key element shall be the destination element. targetKey ElementId Holds the identifier of the key element which shall be the destination for the copy operation. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed, not allowed to extract key element CRYPTO_E_KEY_WRITE_FAIL: Request failed, not allowed to write key element CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element sizes are not compatible CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description This function shall copy a key elements from one key to a target key. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91015</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00110 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementCopy shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00110</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00111 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00111</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00112 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter targetCryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00112</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00113 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in the same Crypto Driver, the service CryIf_KeyElementCopy() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementCopy() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00113</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00114 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers, the service CryIf_KeyElementCopy() shall copy the provided key element by getting the element with Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet() and setting the target key element via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet().</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00114</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00115 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: If requested key element of cryIfKeyId is available in targetCryIfKeyId, and if the source element size does not match the target key elements size, CryIf_KeyElementCopy() shall report CRYIF_E_KEY_SIZE_MISMATCH to the DET.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/AddedMissingDetReturnE_NOT_OK</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/AddedMissingDetReturnE_NOT_OK, CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00115</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91018 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementCopyPartial Syntax Std_ReturnType CryIf_KeyElementCopyPartial ( uint32 cryIfKeyId, uint32 keyElementId, uint32 keyElementSourceOffset, uint32 keyElementTargetOffset, uint32 keyElementCopyLength, uint32 targetCryIfKeyId, uint32 targetKeyElementId ) Service ID [hex] 0x12 Sync/Async Synchronous Reentrancy Reentrant but not for the same cryIfKeyId Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be the source element. keyElementId Holds the identifier of the key element which shall be the source for the copy operation. keyElementSourceOffset This is the offset of the source key element indicating the start index of the copy operation. keyElementTargetOffset This is the offset of the target key element indicating the start index of the copy operation. keyElementCopyLength Specifies the number of bytes that shall be copied. targetCryIfKeyId Holds the identifier of the key whose key element shall be the destination element. targetKeyElementId Holds the identifier of the key element which shall be the destination for the copy operation. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed, not allowed to extract key element CRYPTO_E_KEY_WRITE_FAIL: Request failed, not allowed to write key element CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element sizes are not compatible CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description Copies a key element to another key element. The keyElementOffsets and key ElementCopyLength allows to copy just parts of the source key element into the destination key element. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91018</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00137 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If the Crypto Interface is not yet initialized and if development error detection for the Crypto Interface is enabled, the function CryIf_KeyElementCopyPartial shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00137</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00138 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If cryIfKeyId, keyElementId, targetKeyElementId or targetCryIfKeyId is out of range and if development error detection for the Crypto Interface is enabled, the function CryIf_KeyElementCopyPartial shall report CRYPTO_E_PARAM_HANDLE to the DET and return E_NOT_OK.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEParamHandleCorrected</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/CryIfKeyElementCopyPartial_NoKeyElementChecks</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEParamHandleCorrected, CryIf.R2111/Dev/CryIfKeyElementCopyPartial_NoKeyElementChecks -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00138</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00139 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in the same Crypto Driver, the service CryIf_KeyElementCopyPartial() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementCopyPartial() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/KeyElementCopyPartialDifferentCryptoDrivers</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/KeyElementCopyPartialDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00139</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00140 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers, the service CryIf_KeyElementCopyPartial() shall copy the provided key element by getting the element with Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet(), copy the partial data to its destination and setting the target key element via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet().</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/KeyElementCopyPartialDifferentCryptoDrivers</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/KeyElementCopyPartialDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00140</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91016 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyCopy Syntax Std_ReturnType CryIf_KeyCopy ( uint32 cryIfKeyId, uint32 targetCryIfKeyId ) Service ID [hex] 0x10 Sync/Async Synchronous Reentrancy Reentrant but not for the same cryIfKeyId Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be the source element. targetCryIf KeyId Holds the identifier of the key whose key element shall be the destination element. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed, not allowed to extract key element CRYPTO_E_KEY_WRITE_FAIL: Request failed, not allowed to write key element CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element sizes are not compatible CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description This function shall copy all key elements from the source key to a target key. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91016</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00116 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyCopy shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00116</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00117 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00117</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00118 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter targetCryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00118</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00119 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in the same Crypto Driver, the service CryIf_KeyCopy() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyCopy() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/AddedMissingDetReturnE_NOT_OK, CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00119</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00120 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers, the service CryIf_KeyCopy() shall transfer the key elements of the source key to the target key. First, a list of key elements from cryIfKeyId and targetCryIfKeyId shall be read using the function Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementdsIdGet(). All key elements from this list that are identical to each other shall be copied by reading each key element of cryIfKeyId with Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet() and setting the target key element of targetCryIfKeyId via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet().</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00120</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00121 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: For all key elements of cryIfKeyId that are available in targetCryIfKeyId, if the source element size does not match the target key elements size, CryIf_KeyCopy() shall report CRYIF_E_KEY_SIZE_MISMATCH to the DET.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/AddedMissingDetReturnE_NOT_OK</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/AddedMissingDetReturnE_NOT_OK, CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers-->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00121</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91007 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_RandomSeed Syntax Std_ReturnType CryIf_RandomSeed ( uint32 cryIfKeyId, const uint8* seedPtr, uint32 seedLength ) Service ID [hex] 0x07 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key for which a new seed shall be generated. seedPtr Holds a pointer to the memory location which contains the data to feed the seed. seedLength Contains the length of the seed in bytes. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the random seed function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91007</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/CryptoEBusyMissingInCryIfRandomSeed</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/CryptoEBusyMissingInCryIfRandomSeed -->
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00068 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00068</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00069 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00069</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00070 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter seedPtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00070</srcid><srcstatus/><internalId>254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00071 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if seedLength is zero.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00071</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00072 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_RandomSeed() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_RandomSeed() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00072</srcid><srcstatus/><internalId>256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91008 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyGenerate Syntax Std_ReturnType CryIf_KeyGenerate ( uint32 cryIfKeyId ) Service ID [hex] 0x08 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which is to be updated with the generated value. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the key generate function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91008</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00073 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyGenerate shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00073</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00074 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyGenerate shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00074</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00075 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyGenerate() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyGenerate() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00075</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91009 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyDerive Syntax Std_ReturnType CryIf_KeyDerive ( uint32 cryIfKeyId, uint32 targetCryIfKeyId ) Service ID [hex] 0x09 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which is used for key derivation. targetCryIf KeyId Holds the identifier of the key which is used to store the derived key. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_BUSY: Crypto Driver Object has returned CRYPTO_ E_BUSY. CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the key derive function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91009</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00076 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyDerive shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00076</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00077 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyDerive shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00077</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00122 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyDerive shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter targetCryIfKeyId is out or range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00122</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00081 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyDerive() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyDerive() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00081</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91010 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyExchangeCalcPubVal Syntax Std_ReturnType CryIf_KeyExchangeCalcPubVal ( uint32 cryIfKeyId, uint8* publicValuePtr, uint32* publicValueLengthPtr ) Service ID [hex] 0x0a Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which shall be used for the key exchange protocol. Parameters (inout) public Value LengthPtr Holds a pointer to the memory location in which the public value length information is stored. On calling this function, this parameter shall contain the size of the buffer provided by publicValuePtr. When the request has finished, the actual length of the returned value shall be stored. Parameters (out) public ValuePtr Contains the pointer to the data where the public value shall be stored. Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the key exchange public value calculation function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91010</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00082 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00082</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00083 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00083</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00084 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter publicValuePtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00084</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00085 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter pubValueLengthPtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/pubValueLengthPtrCorrected</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/pubValueLengthPtrCorrected -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00085</srcid><srcstatus/><internalId>270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00086 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if the value, which is pointed by pubValueLengthPtr, is zero.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/pubValueLengthPtrCorrected</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/pubValueLengthPtrCorrected -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00086</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00087 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyExchangeCalcPubVal() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyExchangeCalcPubVal() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00087</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91011 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyExchangeCalcSecret Syntax Std_ReturnType CryIf_KeyExchangeCalcSecret ( uint32 cryIfKeyId, const uint8* partnerPublicValuePtr, uint32 partnerPublicValueLength ) Service ID [hex] 0x0b Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which shall be used for the key exchange protocol. partnerPublic ValuePtr Holds the pointer to the memory location which contains the partner's public value. partnerPublic ValueLength Contains the length of the partner's public value in bytes. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryIfKeyId is "invalid". Description This function shall dispatch the key exchange common shared secret calculation function to the configured crypto driver object. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91011</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00090 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00090</srcid><srcstatus/><internalId>274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00091 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00091</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00092 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter partnerPublicValuePtr is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00092</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00094 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if partnerPubValueLength is zero.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/partnerPubValueLengthCorrected</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/partnerPubValueLengthCorrected -->
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00094</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00095 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyExchangeCalcSecret() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyExchangeCalcSecret() for the driver configuration mapped to the service and pass on the return value.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00095</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91013 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_CallbackNotification Syntax void CryIf_CallbackNotification ( Crypto_JobType* job, Crypto_ResultType result ) Service ID [hex] 0x0d Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) job Points to the completed job's information structure. It contains a callback ID to identify which job is finished. result Contains the result of the cryptographic operation. Parameters (inout) None Parameters (out) None Return value void -- Description Notifies the CRYIF about the completion of the request with the result of the cryptographic operation. Available via CryIf.h</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91013</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00107 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CallbackNotification shall report CRYIF_E_UNINIT to the DET if the module is not yet initialized.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00107</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00108 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CallbackNotification shall report CRYIF_E_PARAM_POINTER to the DET if the parameter job is a null pointer.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00108</srcid><srcstatus/><internalId>281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00109 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_00109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_CallbackNotification() shall call Csm_CallbackNotification() and pass on the result.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00109</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91100 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>API Function Header File Description Csm_Callback- Notification Csm.h Notifies the CSM that a job has finished. This function is used by the underlying layer (CRYIF). Det_ReportRuntimeError Det.h Service to report runtime errors. If a callout has been configured then this callout shall be called.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91100</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dev/MandatoryInterfacesWrong</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov> <!-- CryIf.R2111/Dev/MandatoryInterfacesWrong -->
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91101 -->
    <specobject>
      <id>CryIf.ASR21-11.SWS_CryIf_91101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>API Function Header File Description Det_ReportError Det.h Service to report development errors.</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_91101</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00001 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Module Name CryIf Module Description Configuration of the Crypto Interface. Post-Build Variant Support false Included Containers</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00001</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00009 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Container Name CryIfGeneral Parent Container CryIf Description Container for incorporation of CryIfGeneral. Configuration Parameters</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00009</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00010 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIfDevErrorDetect Parent Container CryIfGeneral Description Switches the development error detection and notification on or off. TRUE = detection and notification is enabled. FALSE = detection and notification is disabled. Multiplicity 1 Type EcucBooleanParamDef Default value false Scope / Dependency scope: local</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00010</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00011 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIfVersionInfoApi Parent Container CryIfGeneral Description Pre-processor switch to enable and disable availability of the API CryIf_GetVersionInfo(). TRUE = API CryIf_GetVersionInfo() is available FALSE = API CryIf_GetVersionInfo() is not available. Multiplicity 1 Type EcucBooleanParamDef Default value false Scope / Dependency scope: local</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00011</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00002 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Container Name CryIfChannel Parent Container CryIf Description Container for incorporation of CryIfChannel. Configuration Parameters</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00002</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00004 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIfChannelId Parent Container CryIfChannel Description Identifier of the crypto channel. Specifies to which crypto channel the CSM queue is connected to. Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name generated for this parameter) Range 0 .. 4294967295 Default value -- Post-Build Variant Multiplicity false Post-Build Variant Value false Scope / Dependency scope: local</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00004</srcid><srcstatus/><internalId>172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00005 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIfDriverObjectRef Parent Container CryIfChannel Description This parameter refers to a Crypto Driver Object. Specifies to which Crypto Driver Object the crypto channel is connected to Multiplicity 1 Type Symbolic name reference to [ CryptoDriverObject ] Post-Build Variant Multiplicity false Post-Build Variant Value false Scope / Dependency scope: local</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00005</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00003 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Container Name CryIfKey Parent Container CryIf Description Container for incorporation of CryIfKey. Configuration Parameters</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00003</srcid><srcstatus/><internalId>174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00007 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIfKeyId Parent Container CryIfKey Description Identifier of the CryIf key. Specifies to which CryIf key the CSM key is mapped to. Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name generated for this parameter) Range 0 .. 4294967295 Default value -- Post-Build Variant Value false Scope / Dependency scope: local</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00007</srcid><srcstatus/><internalId>175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <!-- CryIf.ASR21-11.ECUC_CryIf_00008 -->
    <specobject>
      <id>CryIf.ASR21-11.ECUC_CryIf_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_CryptoInterface.pdf, R21-11</source>
      <version>1</version>
      <description>Name CryIfKeyRef Parent Container CryIfKey Description This parameter refers to the crypto driver key. Specifies to which crypto driver key the CryIf key is mapped to. Multiplicity 1 Type Symbolic name reference to [ CryptoKey ] Post-Build Variant Value false Scope / Dependency scope: local</description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R0000/Sws/ECUC_CryIf_00008</srcid><srcstatus/><internalId>176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <!-- CryIf.R0000/Add/CryIfEbGeneral/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbGeneral/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Container Name CryIfEbGeneral Description Container for EB specific common configurations. Post-Build Variant Multiplicity false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Configuration Parameters</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_278</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbMisc/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbMisc/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Container Name CryIfEbMisc Description Configuration of miscellaneous options. Post-Build Variant Multiplicity false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Configuration Parameters</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_430</srcid><srcstatus/><internalId>495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbRelease/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbRelease/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbRelease Parent Container CryIfEbMisc Description Switches the conformity of the implementation, except the configuration, of the CryIf module according to the associated specification. Multiplicity 1 Type EcucEnumerationParamDef Range CRYIF_RELEASE_R2111 Provides and expects a conformity respective to AUTOSAR R21-11. Default value CRYIF_RELEASE_R2111 Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_444</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbRelease_2111/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbRelease_2111/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbRelease_2111 Parent Container CryIfEbRelease Description Configuration options specific to AUTOSAR R21-11.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_469</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbCustomServiceApis/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbCustomServiceApis/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbCustomServiceApis Parent Container CryIfEbRelease_2111 Description Enables or disabales the availability of the Custom service introduced via AR-102387 in AUTOSAR R22-11. Multiplicity 1. Default value false Post-Build Variant Value false Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_482</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbDifferentDriversKeyCopy/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbDifferentDriversKeyCopy/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbDifferentDriversKeyCopy Parent Container CryIfEbRelease_2111 Description Enables or disables the availability of CryIf_KeyCopy for copying keys between different Crypto modules. Multiplicity 1 Type BOOLEAN  Default value false Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X VARIANT-PRE-COMPILE Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_505</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbDifferentDriversKeyElementCopy/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbDifferentDriversKeyElementCopy/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbDifferentDriversKeyElementCopy Parent Container CryIfEbRelease_2111 Description Enables or disables the availability of CryIf_KeyElementCopy for copying keys between different Crypto modules. Multiplicity 1 Type BOOLEAN  Default value false Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X VARIANT-PRE-COMPILE Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_533</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbDifferentDriversKeyElementCopyPartial/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbDifferentDriversKeyElementCopyPartial/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbDifferentDriversKeyElementCopyPartial Parent Container CryIfEbRelease_2111 Description Enables or disables the availability of CryIf_KeyElementCopyPartial for copying keys between different Crypto modules. Multiplicity 1 Type BOOLEAN  Default value false Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X VARIANT-PRE-COMPILE Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_561</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbDifferentDriversMaxCopyBufferSize/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbDifferentDriversMaxCopyBufferSize/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbDifferentDriversKeyElementCopyPartial Parent Container CryIfEbRelease_2111 Description Size of internal CryIf buffer(s) used for copying key material between different Crypto modules. The size should be set so that the largest key element to be processed via CryIf_KeyElementCopy, CryIf_KeyCopy or CryIf_KeyElementCopyPartial.. Multiplicity 1 Type EcucIntegerParamDef Range 1 .. 4294967295  Default value 16 Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X VARIANT-PRE-COMPILE Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_590</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Container Name CryIfEbGeneralBswmdImplementation Description Container for configuring multiple Crypto modules to be used by the CryIf via driver APIs using the vendorId and vendorApiInfix of a specific driver as specified in its BSWMD. Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Configuration Parameters</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_293</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOn</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdDual</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>The container CryIfEbGeneralBswmdImplementation shall include following containers / - 1..*  CryIfEbGeneralBswmdImplementationRefs</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_293</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOn</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdDual</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbGeneralBswmdImplementationRefs/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementationRefs/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Container Name CryIfEbGeneralBswmdImplementationRefs Description Container to configure a specific Crypto module whose vendorId and vendorApiInfix shall be determined from its BSWMD. Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Configuration Parameters</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_330</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOn</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbCryptoRef/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbCryptoRef/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbCryptoRef Parent Container CryIfEbGeneralBswmdImplementationRefs Description Refers to the underlying Crypto module. Multiplicity 1 Type Symbolic name reference to [ Crypto ] Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_392</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOn</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdDual</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <!-- CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001 -->
    <specobject>
      <id>CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Name CryIfEbCryptoBswImplementationRef Parent Container CryIfEbGeneralBswmdImplementationRefs Reference to the BswImplementation of the underlying driver which contains the vendorId and vendorApiInfix. Multiplicity 1 Type Foreign reference to [ BswImplementation ] Post-Build Variant Value false Multiplicity Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Value Configuration Class Pre-compile time X All Variants Link time -- Post-build time -- Scope / Dependency scope: local</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_360</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOn</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdDual</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <!--  Custom Service  -->
    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to TRUE and if the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL, CRYPTO_KEYEXCHANGECALCSECRET or CRYPTO_CUSTOM_SERVICE, the parameters job-&gt;jobPrimitiveInputOutput- &gt;cryIfKeyId and, if applicable, job-&gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId have to be checked if it is in a valid range. If so, CryIf shall set job-&gt;cryptoKeyId with the key ID of the crypto driver that corresponds to job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId, and, if applicable, job- &gt;targetCryptoKeyId with the key ID of the crypto driver that corresponds to job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId.</description>
      <!-- note: based on SWS_CryIf_00133 from AUTOSAR R22-11
           note: In case of service CRYPTO_CUSTOM the targetCryIfKeyId must not be checked
      -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to TRUE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_367</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to FALSE and if the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameters job-&gt;jobPrimitiveInputOutput- &gt;cryIfKeyId and, if applicable, job-&gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId have to be checked if it is in a valid range. If so, CryIf shall set job-&gt;cryptoKeyId with the key ID of the crypto driver that corresponds to job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId, and, if applicable, job- &gt;targetCryptoKeyId with the key ID of the crypto driver that corresponds to job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId.</description>
      <!-- note: based on SWS_CryIf_00133 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to FALSE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_305</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_True/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_True/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to TRUE and if the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL, CRYPTO_KEYEXCHANGECALCSECRET or CRYPTO_CUSTOM, the parameters job- &gt;jobPrimitiveInputOutput-&gt;cryIfKeyId and, if applicable, job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId shall be checked if it is in valid range. If keys are out of range it shall report CRYPTO_E_PARAM_HANDLE to DET in development mode, otherwise return E_NOT_OK.</description>
      <!-- note: based on SWS_CryIf_00141 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to TRUE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_367</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_False/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_False/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to FALSE and if the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameters job- &gt;jobPrimitiveInputOutput-&gt;cryIfKeyId and, if applicable, job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId shall be checked if it is in valid range. If keys are out of range it shall report CRYPTO_E_PARAM_HANDLE to DET in development mode, otherwise return E_NOT_OK.</description>
      <!-- note: based on SWS_CryIf_00141 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to FALSE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_305</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to TRUE and if a job is called and the parameter job- &gt;jobPrimitiveInfo-&gt;primitiveInfo-&gt;service is either set to CRYPTO_MACGENERATE, CRYPTO_MACVERIFY, CRYPTO_ENCRYPT, CRYPTO_DECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_AEADDECRYPT, CRYPTO_RANDOMGENERATE, CRYPTO_SIGNATUREGENERATE, CRYPTO_SIGNATUREVERIFY or CRYPTO_CUSTOM, the parameter job-&gt;jobPrimitiveInfo- &gt;cryIfKeyId shall be checked if it is in valid range. If keys are out of range it shall report CRYPTO_E_PARAM_HANDLE to DET in development mode, otherwise return E_NOT_OK.</description>
      <!-- note: based on SWS_CryIf_00143 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to TRUE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_371</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_386</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to FALSE and if a job is called and the parameter job- &gt;jobPrimitiveInfo-&gt;primitiveInfo-&gt;service is either set to CRYPTO_MACGENERATE, CRYPTO_MACVERIFY, CRYPTO_ENCRYPT, CRYPTO_DECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_AEADDECRYPT, CRYPTO_RANDOMGENERATE, CRYPTO_SIGNATUREGENERATE or CRYPTO_SIGNATUREVERIFY, the parameter job-&gt;jobPrimitiveInfo- &gt;cryIfKeyId shall be checked if it is in valid range. If keys are out of range it shall report CRYPTO_E_PARAM_HANDLE to DET in development mode, otherwise return E_NOT_OK.</description>
      <!-- note: based on SWS_CryIf_00143 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to FALSE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_282</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_324</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_354</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to TRUE. Service Name CryIf_ProcessJob Syntax Std_ReturnType CryIf_ProcessJob ( uint32 channelId, Crypto_JobType* job ) Service ID [hex] 0x03 Sync/Async Depends on configuration Reentrancy Reentrant Parameters (in) channelId Holds the identifier of the crypto channel. Parameters (inout) job Pointer to the configuration of the job. Contains structures with user and primitive relevant information. Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy CRYPTO_E_KEY_NOT_VALID: Request failed, the key is not valid CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, a key element has the wrong size CRYPTO_E_KEY_READ_FAIL: The service request failed, because key element extraction is not allowed CRYPTO_E_KEY_WRITE_FAIL: The service request failed because the writing access failed CRYPTO_E_KEY_NOT_AVAILABLE: The service request failed because the key is not available CRYPTO_E_JOB_CANCELED: The service request failed because the synchronous Job has been canceled CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_ENTROPY_EXHAUSTED CRYPTO_E_CUSTOM_ERROR: Remote processing failed Description This interface dispatches the received jobs to the configured crypto driver object. Available via CryIf.h</description>
      <!-- note: based on SWS_CryIf_91003 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to TRUE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_197</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91003</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_False/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_False/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to FALSE. Service Name CryIf_ProcessJob Syntax Std_ReturnType CryIf_ProcessJob ( uint32 channelId, Crypto_JobType* job ) Service ID [hex] 0x03 Sync/Async Depends on configuration Reentrancy Reentrant Parameters (in) channelId Holds the identifier of the crypto channel. Parameters (inout) job Pointer to the configuration of the job. Contains structures with user and primitive relevant information. Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy CRYPTO_E_KEY_NOT_VALID: Request failed, the key is not valid CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, a key element has the wrong size CRYPTO_E_KEY_READ_FAIL: The service request failed, because key element extraction is not allowed CRYPTO_E_KEY_WRITE_FAIL: The service request failed because the writing access failed CRYPTO_E_KEY_NOT_AVAILABLE: The service request failed because the key is not available CRYPTO_E_JOB_CANCELED: The service request failed because the synchronous Job has been canceled CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_ENTROPY_EXHAUSTED Description This interface dispatches the received jobs to the configured crypto driver object. Available via CryIf.h</description>
      <!-- note: based on SWS_CryIf_91003 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to FALSE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_197</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91003</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <!--  Custom Sync  -->
    <!-- CryIf.R2111/Add/CustomSync/SWS_CryIf_91022 -->
    <specobject>
      <id>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>Service Name CryIf_CustomSync Syntax Std_ReturnType CryIf_CustomSync ( uint32 dispatchId, uint32 keyId, uint32 keyElementId, uint32 targetKeyId, uint32 targetKeyElementId, const uint8* inputPtr, uint32 inputLength, uint8* outputPtr, uint32* outputLengthPtr, uint8* secondaryOutputPtr, uint32* secondaryOutputLengthPtr ) Service ID [hex] 0x15 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) dispatchId unique id to identify the request keyId key Id of the key the certificate is stored keyElementId key element id targetKeyId Holds the target key id targetKeyElementId -- inputPtr Pointer to the input data. inputLength Contains the input length in bytes. Parameters (inout) outputLengthPtr Contains the output length in bytes. secondaryOutputLengthPtr Contains the secondary output length in bytes. Parameters (out) outputPtr Pointer to the output data. secondaryOutputPtr Pointer to the secondary output data.  Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: The service request failed because  the service is still busy CRYPTO_E_CUSTOM_ERROR: Custom processing  failed Description Requests the execution of a function that is specified by the given dispatch id. Available via CryIf.h</description>
      <!-- note: based on SWS_CryIf_91022 from AUTOSAR R22-11 -->
      <!-- changed: added outputLengthPtr and secondaryOutputLengthPtr as inout paramters -->
      <furtherinfo>WRN.swuts.needscoverage.count</furtherinfo>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1502</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_CustomSync</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC_INIT</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC_PARAM_POINTER</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <!-- CryIf.R2111/Add/CustomSync/SWS_CryIf_91002 -->
    <specobject>
      <id>CryIf.R2111/Add/CustomSync/SWS_CryIf_91002</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R22-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_CustomSync) shall call Crypto_CustomSync() for the driver configuration mapped to the service and pass on the return value.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1562</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <!-- CryIf.R2111/Add/CustomSync/00000 -->
    <specobject>
      <id>CryIf.R2111/Add/CustomSync/00000</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_CustomSync() shall report the error CRYIF_E_UNINIT if the module is not yet initialized.</description>
      <!-- note: aligned with all other external APIs, missing in SWS R22-11 -->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1527</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC_INIT</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <!-- CryIf.R2111/Add/CustomSync/00001 -->
    <specobject>
      <id>CryIf.R2111/Add/CustomSync/00001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_CustomSync() shall report the error CRYIF_E_PARAM_HANDLE if the parameter keyId is out of range.</description>
      <!-- note: aligned with all other external APIs, missing in SWS R22-11 -->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1537</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <!-- CryIf.R2111/Add/CustomSync/00002 -->
    <specobject>
      <id>CryIf.R2111/Add/CustomSync/00002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_CustomSync() shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter inputPtr, outputPtr, outputLengthPtr, secondaryOutputPtr or secondaryOutputLengthPtr is a null pointer.</description>
      <!-- note: aligned with all other external APIs, missing in SWS R22-11 -->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1552</srcid><srcstatus/><internalId>472</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CUSTOMSYNC_PARAM_POINTER</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <!--  ProcessJob  -->
    <!-- CryIf.R2111/Add/CryIf_ProcessJob/00000 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_ProcessJob/00000</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo-&gt;primitiveInfo-&gt;service is set to CRYPTO_HASH, as it does not use any key, the parameters job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId shall be accepted without any further check.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_294</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_ProcessJob/00001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_ProcessJob/00001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo-&gt;primitiveInfo-&gt;service is set to CRYPTO_HASH, as it does not use any key, CryIf shall set job-&gt;cryptoKeyId to CRYIF_KEY_EMPTY.</description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</srcid><srcstatus/><internalId>165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_True/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_True/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to TRUE and if the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL, CRYPTO_KEYEXCHANGECALCSECRET or CRYPTO_CUSTOM, the parameter job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId must be in range; else the function CryIf_ProcessJob shall report CRYIF_E_PARAM_HANDLE to DET and return E_NOT_OK.</description>
      <!-- note: based on SWS_CryIf_00134 from AUTOSAR R22-11
           note: In case of service CRYPTO_CUSTOM the targetCryIfKeyId must not be checked
      -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to TRUE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_370</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_386</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00134</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the configuration parameter CryIfEbCustomServiceApis is set to FALSE and if the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameter job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId must be in range; else the function CryIf_ProcessJob shall report CRYIF_E_PARAM_HANDLE to DET and return E_NOT_OK.</description>
      <!-- note: based on SWS_CryIf_00134 from AUTOSAR R22-11 -->
      <!-- changed: Condition to check if the configuration parameter CryIfEbCustomServiceApis is set to FALSE-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_282</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_305</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_324</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_354</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_ProcessJob/0002 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_ProcessJob/0002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is set to a value that is not supported by the CryIf or Crypto driver then function CryIf_ProcessJob shall return E_NOT_OK.</description>
      <!-- note: The crypto driver at this moment supports the following services: CRYPTO_AEADDECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_DECRYPT, CRYPTO_ENCRYPT, CRYPTO_HASH, CRYPTO_MACGENERATE, CRYPTO_MACVERIFY,
      CRYPTO_SIGNATUREGENERATE, CRYPTO_SIGNATUREVERIFY, CRYPTO_RANDOMGENERATE, CRYPTO_KEYSETVALID, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL, CRYPTO_KEYEXCHANGECALCSECRET, CRYPTO_RANDOMSEED,
      CRYPTO_CUSTOM_SERVICE. The value of the unsupported primitive is defined as 0xFFU-->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_PRIMITIVE_NOT_SUPPORTED_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_PRIMITIVE_NOT_SUPPORTED_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <!-- CryIf.R2111/Add/CryIf_KeyCopy/SWS_CryIf_00120 -->
    <specobject>
      <id>CryIf.R2111/Add/CryIf_KeyCopy/SWS_CryIf_00120</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers and there is no identical key element found between source and target key, the service CryIf_KeyCopy() shall return E_OK.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1226</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_MULTI_DRIVER</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00120</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <!-- CryIf.R0000/Cmn/CRYIF_API_VERSION_R2111/0001 -->
    <specobject>
      <id>CryIf.R0000/Cmn/CRYIF_API_VERSION_R2111/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>There shall be an internal macro CRYIF_API_VERSION_R2111 with value 0x01U</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_67</srcid><srcstatus/><internalId>310</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <!-- CryIf.R0000/Cmn/DETErrorReturn/0001 -->
    <specobject>
      <id>CryIf.R0000/Cmn/DETErrorReturn/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If a DET is reported and if the particular API has a return value, then return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00141</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00143</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00115</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00121</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <!-- CryIf.R0000/Cmn/CryIfChannels/0001 -->
    <specobject>
      <id>CryIf.R0000/Cmn/CryIfChannels/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>CryIf_ProcessJob: If no CryIfChannels are configured, then CryIf_ProcessJob shall not call Crypto_ProcessJob and return E_NOT_OK.</description>
      <!-- note: based on EB_CryIf_00016 from ACG8 EB requirements-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_434</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Impl_ProcessJob_NoCryIfChannels</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <!-- CryIf.R0000/Cmn/CryIfKeyCopy/0001 -->
    <specobject>
      <id>CryIf.R0000/Cmn/CryIfKeyCopy/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If CryIf_KeyCopy() with a key element of cryIfKeyId not available in targetCryIfKeyId is called, then the element is not copied and returns CRYPTO_E_KEY_NOT_AVAILABLE.</description>
      <!-- note: based on CryIf.R2111/Sws/SWS_CryIf_00119 -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <!-- CryIf.R0000/Cmn/CryIfKeyElementCopy/0001 -->
    <specobject>
      <id>CryIf.R0000/Cmn/CryIfKeyElementCopy/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If CryIf_KeyElementCopy() with a key element of cryIfKeyId not available in targetCryIfKeyId is called, then the element is not copied and no error code is raised.</description>
      <!-- note: based on CryIf.R2111/Sws/SWS_CryIf_00112 -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <!-- CryIf.R0000/Cmn/CryIfProcessJob/0001 -->
    <specobject>
      <id>CryIf.R0000/Cmn/CryIfProcessJob/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>CryIf_ProcessJob() correctly processes the configuration without CryIfChannels or CryIfKeys and returns E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Impl_ProcessJob_NoCryIfChannels</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Impl_ProcessJob_NoCryIfKeys</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

  </specobjects>
    <specobjects doctype="swdd">

    <!-- CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0001 -->
    <specobject>
      <id>CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>CryIf_KeyElementCopyPartial: If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers and 'keyElementSourceOffset + keyElementCopyLength' is greater than the length of the source key element or 0xFFFFFFFFU, then CryIf_KeyElementCopyPartial shall return E_NOT_OK.</description>
      <!-- note: based on EB_CryIf_00017 from ACG8 EB requirements-->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1369</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_MULTI_DRIVER_LENGHTS_OUT_OF_RANGE</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <!-- CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0002 -->
    <specobject>
      <id>CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>CryIf_KeyElementCopyPartial: If no errors are detected by CRYIF and the cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers and 'keyElementTargetOffset + keyElementCopyLength' is greater than the length of the target key element or 0xFFFFFFFFU, then CryIf_KeyElementCopyPartial shall return E_NOT_OK.</description>
      <!-- note: based on EB_CryIf_00018 from ACG8 EB requirements -->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1369</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_MULTI_DRIVER_LENGHTS_OUT_OF_RANGE</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <!-- CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001 -->
    <specobject>
      <id>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>CryIf_ProcessJob: If no CryIfKeys are configured, then the parameter job-&gt;cryptoKeyId shall always be set to CRYIF_KEY_EMPTY with a value 0xFFFFFFFF.</description>
      <!-- note: based on EB_CryIf_00015 from ACG8 EB requirements -->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_301</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_419</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Impl_ProcessJob_NoCryIfKeys</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <!-- CryIf.R2111/Req/Cfg/SymbolicNames/General/00001 -->
    <specobject>
      <id>CryIf.R2111/Req/Cfg/SymbolicNames/General/00001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>The CryIf_Channels and CryIf_Keys arrays shall use the symbolic names of the Crypto driver if available and if not, access the reference in the crypto driver directly.</description>
      <!-- note: based on CryIf.Req.Cfg/SymbolicNames/General/00001 from ACG8 EB requirements -->
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_32</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_47</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Impl_SymbolicNames</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <!-- CryIf.ASR21-11.SWS_CryIf_00001; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00002; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00003; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00004; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00144; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00145; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00009; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00141; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00143; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00011; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91020; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91118; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91000; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91019; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00014; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00015; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91001; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00017; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91003; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00027; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00028; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00029; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00044; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00136; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00133; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00134; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00135; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00142; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91014; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00129; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00130; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00131; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00132; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91004; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00049; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00050; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00052; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00053; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00055; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91005; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00056; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00057; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00058; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91021; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00150; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00151; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00152; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91012; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00146; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00147; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00148; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00149; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91006; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00059; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00060; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00062; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00063; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00064; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00065; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91015; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00110; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00111; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00112; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00113; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00114; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00115; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91018; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00137; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00138; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00139; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00140; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91016; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00116; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00117; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00118; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00119; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00120; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00121; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91007; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00068; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00069; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00070; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00071; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00072; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91008; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00073; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00074; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00075; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91009; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00076; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00077; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00122; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00081; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91010; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00082; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00083; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00084; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00085; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00086; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00087; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91011; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00090; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00091; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00092; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00094; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00095; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91013; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00107; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00108; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_00109; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91100; [sws] -->
    <!-- CryIf.ASR21-11.SWS_CryIf_91101; [sws] -->

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00001 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00001</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Module Name CryIf Module Description Configuration of the Crypto Interface. Post-Build Variant Support false Included Containers</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_23</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00009 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00009</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Container Name CryIfGeneral Parent Container CryIf Description Container for incorporation of CryIfGeneral. Configuration Parameters</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_47</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00010 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00010</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIfDevErrorDetect Parent Container CryIfGeneral Description Switches the development error detection and notification on or off. TRUE = detection and notification is enabled. FALSE = detection and notification is disabled. Multiplicity 1 Type EcucBooleanParamDef Default value false Scope / Dependency scope: local</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_60</srcid><srcstatus/><internalId>476</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00011 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00011</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIfVersionInfoApi Parent Container CryIfGeneral Description Pre-processor switch to enable and disable availability of the API CryIf_GetVersionInfo(). TRUE = API CryIf_GetVersionInfo() is available FALSE = API CryIf_GetVersionInfo() is not available. Multiplicity 1 Type EcucBooleanParamDef Default value false Scope / Dependency scope: local</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_93</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00002 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00002</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Container Name CryIfChannel Parent Container CryIf Description Container for incorporation of CryIfChannel. Configuration Parameters</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_129</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00004 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00004</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIfChannelId Parent Container CryIfChannel Description Identifier of the crypto channel. Specifies to which crypto channel the CSM queue is connected to. Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name generated for this parameter) Range 0 .. 4294967295 Default value -- Post-Build Variant Multiplicity false Post-Build Variant Value false Scope / Dependency scope: local</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_147</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00005 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00005</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIfDriverObjectRef Parent Container CryIfChannel Description This parameter refers to a Crypto Driver Object. Specifies to which Crypto Driver Object the crypto channel is connected to Multiplicity 1 Type Symbolic name reference to [ CryptoDriverObject ] Post-Build Variant Multiplicity false Post-Build Variant Value false Scope / Dependency scope: local</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_174</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00003 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00003</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Container Name CryIfKey Parent Container CryIf Description Container for incorporation of CryIfKey. Configuration Parameters</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_205</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00007 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00007</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIfKeyId Parent Container CryIfKey Description Identifier of the CryIf key. Specifies to which CryIf key the CSM key is mapped to. Multiplicity 1 Type EcucIntegerParamDef (Symbolic Name generated for this parameter) Range 0 .. 4294967295 Default value -- Post-Build Variant Value false Scope / Dependency scope: local</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_223</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <!-- CryIf.R0000/Sws/ECUC_CryIf_00008 -->
    <specobject>
      <id>CryIf.R0000/Sws/ECUC_CryIf_00008</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIfKeyRef Parent Container CryIfKey Description This parameter refers to the crypto driver key. Specifies to which crypto driver key the CryIf key is mapped to. Multiplicity 1 Type Symbolic name reference to [ CryptoKey ] Post-Build Variant Value false Scope / Dependency scope: local</description>
      <tags>
        <tag>R0000</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_250</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_GenTest_VSMD</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.ECUC_CryIf_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <!-- CryIf.ASR21-11.SWS_CryIf_00001; [rejected] -->

    <!-- CryIf.R2111/Sws/SWS_CryIf_00002 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00002</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>The CRYIF shall be able to access the underlying Crypto Drivers to calculate results with their cryptographic services. These results shall be returned back to the CSM by the CRYIF.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_991</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_00003; [rejected] -->

    <!-- CryIf.R2111/Sws/SWS_CryIf_00004 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00004</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>The code file structure shall contain one source file CryIf.c, that contains the entire CRYIF code.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_3</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00144 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00144</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>The CryIf module shall apply appropriate mechanisms to allow calls of its APIs from any partition.</description>
      <comment>Only CryIf_Init() API is affected because of global variable "Initialized".</comment>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111.Lim.Integration_CryIfInitMulticore</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov> <!--CryIf.R2111.Lim.Integration_CryIfInitMulticore -->
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00145 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00145</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>The CryIf module shall forward a call in the context of the original caller.</description>
      <furtherinfo>WRN.swurs.needscoverage.count</furtherinfo>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00044</srcid><srcstatus/><internalId>195</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00132</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00055</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00058</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00152</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00149</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00065</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00113</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00139</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00119</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00120</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00072</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00075</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00081</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00087</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Sws/SWS_CryIf_00095</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
      <!--
        ~ [SRS_CryptoStack_00009] The Crypto Stack shall support reentrancy for all crypto services:
          The Crypto Stack shall support reentrancy of crypto related interfaces to enable parallel operations of the
          same or different type when requested by multiple users. This requirement also covers scenarios where
          applications are residing on different cores.
        ~ List of all the covering requirement IDs
            CryIf.R2111/Sws/SWS_CryIf_00044            CryIf_ProcessJob()
            CryIf.R2111/Sws/SWS_CryIf_00132            CryIf_CancelJob()
            CryIf.R2111/Sws/SWS_CryIf_00055            CryIf_KeyElementSet()
            CryIf.R2111/Sws/SWS_CryIf_00058            CryIf_KeySetValid()
            CryIf.R2111/Sws/SWS_CryIf_00152            CryIf_KeySetInvalid()
            CryIf.R2111/Sws/SWS_CryIf_00149            CryIf_KeyGetStatus()
            CryIf.R2111/Sws/SWS_CryIf_00065            CryIf_KeyElementGet()
            CryIf.R2111/Sws/SWS_CryIf_00113            CryIf_KeyElementCopy()
            CryIf.R2111/Sws/SWS_CryIf_00139            CryIf_KeyElementCopyPartial()
            CryIf.R2111/Sws/SWS_CryIf_00119            CryIf_KeyCopy()
            CryIf.R2111/Sws/SWS_CryIf_00072            CryIf_RandomSeed()
            CryIf.R2111/Sws/SWS_CryIf_00075            CryIf_KeyGenerate()
            CryIf.R2111/Sws/SWS_CryIf_00081            CryIf_KeyDerive()
            CryIf.R2111/Sws/SWS_CryIf_00087            CryIf_KeyExchangeCalcPubVal()
            CryIf.R2111/Sws/SWS_CryIf_00095            CryIf_KeyExchangeCalcSecret()
            CryIf.R2111/Sws/SWS_CryIf_00120            CryIf_KeyElementIdsGet()
            CryIf.R2111/Add/CustomSync/SWS_CryIf_91002 CryIf_CustomSync()
      -->
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00009 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00009</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Type of error Related error code Error value API request called before initialisation of CRYIF module. CRYIF_E_UNINIT 0x00 Initialisation of CRYIF module failed. CRYIF_E_INIT_FAILED 0x01 API request called with invalid parameter (null pointer). CRYIF_E_PARAM_POINTER 0x02 API request called with invalid parameter (out of range). CRYIF_E_PARAM_HANDLE 0x03 API request called with invalid parameter (invalid value). CRYIF_E_PARAM_VALUE 0x04 Source key element size does not match the target key elements size. CRYIF_E_KEY_SIZE_MISMATCH 0x05</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111.h_26</srcid><srcstatus/><internalId>335</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_406</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00141 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00141</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameters job- &gt;jobPrimitiveInputOutput-&gt;cryIfKeyId and, if applicable, job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId shall be checked if it is in valid range. If keys are out of range and if development error detection for the CRYIF module is enabled, it shall report CRYIF_E_PARAM_HANDLE to DET in development mode, and return E_NOT_OK.</description>
      <!-- changed: 'CRYPTO_E_PARAM_HANDLE' into 'CRYIF_E_PARAM_HANDLE' (=> AR-111508)
           changed : 'Returning E_NOT_OK, if the particular API is reporting to DET in development mode and has a return value' (=> AR-117699)
      -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_True/0001</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_False/0001</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/DETErrorReturn/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00143 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00143</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If a job is called and the parameter job- &gt;jobPrimitiveInfo-&gt;primitiveInfo-&gt;service is either set to CRYPTO_MACGENERATE, CRYPTO_MACVERIFY, CRYPTO_ENCRYPT, CRYPTO_DECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_AEADDECRYPT, CRYPTO_RANDOMGENERATE, CRYPTO_SIGNATUREGENERATE or CRYPTO_SIGNATUREVERIFY, the parameter job-&gt;jobPrimitiveInfo- &gt;cryIfKeyId shall be checked if it is in valid range. If keys are out of range and if development error detection for the CRYIF module is enabled, it shall report CRYIF_E_PARAM_HANDLE to DET in development mode, and return E_NOT_OK.</description>
      <!-- changed: 'CRYPTO_E_PARAM_HANDLE' into 'CRYIF_E_PARAM_HANDLE' (=> AR-111508)
           changed : 'Returning E_NOT_OK, if the particular API is reporting to DET in development mode and has a return value' (=> AR-117699)
      -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/DETErrorReturn/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00011 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00011</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Imported Types Module Header File Imported Type Csm Crypto_GeneralTypes.h Crypto_AlgorithmFamilyType Crypto_GeneralTypes.h Crypto_AlgorithmInfoType Crypto_GeneralTypes.h Crypto_AlgorithmModeType Crypto_GeneralTypes.h Crypto_JobPrimitiveInfoType Crypto_GeneralTypes.h Crypto_JobPrimitiveInputOutputType Crypto_GeneralTypes.h Crypto_JobRedirectionInfoType Crypto_GeneralTypes.h Crypto_JobStateType Crypto_GeneralTypes.h Crypto_JobType Crypto_GeneralTypes.h Crypto_PrimitiveInfoType Crypto_GeneralTypes.h Crypto_ProcessingType Crypto_GeneralTypes.h Crypto_ServiceInfoType Rte_Csm_Type.h Crypto_KeyStatusType Rte_Csm_Type.h Crypto_OperationModeType Rte_Csm_Type.h Crypto_ResultType Rte_Csm_Type.h Crypto_VerifyResultType Std Std_Types.h Std_ReturnType Std_Types.h Std_VersionInfoType</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_15</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_15</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/CryIf_R2111.h_10</srcid><srcstatus/><internalId>333</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_10</srcid><srcstatus/><internalId>338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91020; [rejected] -->

    <!-- CryIf.R2111/Sws/SWS_CryIf_91118 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91118</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Name CryIf_ConfigType Kind Structure Elements implementation specific Type -- Comment The content of the configuration data structure is implementation specific. Description Configuration data structure of CryIf module Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Typ/CryIf_ConfigType/0001</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91000 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91000</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_Init Syntax void CryIf_Init ( const CryIf_ConfigType* configPtr ) Service ID [hex] 0x00 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) configPtr Pointer to a selected configuration structure Parameters (inout) None Parameters (out) None Return value None Description Initializes the CRYIF module. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91000/0001</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <!-- CryIf.ASR21-11.SWS_CryIf_91019; [rejected] -->

    <!-- CryIf.R2111/Sws/SWS_CryIf_00014 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00014</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If the initialization of the CRYIF module fails, the CRYIF shall report CRYIF_E_INIT_FAILED to the DET.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_147</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_INITS</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00015 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00015</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>The service CryIf_Init() shall initialize the global variables and data structures of the CRYIF including flags and buffers.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_139</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91001 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>Service Name CryIf_GetVersionInfo Syntax void CryIf_GetVersionInfo ( Std_VersionInfoType* versioninfo ) Service ID [hex] 0x01 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) None Parameters (inout) None Parameters (out) versioninfo Pointer to where to store the version information of this module Return value void -- Description Returns the version information of this module. Available via CryIf.h</description>
      <!-- changed: ' Parameters (in) versioninfo Pointer to where to store the version information of this module. Parameters (inout) None Parameters (out) None' into ' Parameters (in) None Parameters (inout) None Parameters (out) versioninfo Pointer to where to store the version information of this module.' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00017 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00017</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_GetVersionInfo shall report CRYIF_E_PARAM_POINTER to the DET if the parameter versioninfo is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_172</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_GETVERSIONINFO_PARAM_VERSIONINFO</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_GETVERSIONINFO</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91003 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91003</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>Service Name CryIf_ProcessJob Syntax Std_ReturnType CryIf_ProcessJob ( uint32 channelId, Crypto_JobType* job ) Service ID [hex] 0x03 Sync/Async Depends on configuration Reentrancy Reentrant Parameters (in) channelId Holds the identifier of the crypto channel. Parameters (inout) job Pointer to the configuration of the job. Contains structures with user and primitive relevant information. Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy CRYPTO_E_KEY_NOT_VALID: Request failed, the key is not valid CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, a key element has the wrong size CRYPTO_E_KEY_READ_FAIL: The service request failed, because key element extraction is not allowed CRYPTO_E_KEY_WRITE_FAIL: The service request failed because the writing access failed CRYPTO_E_KEY_NOT_AVAILABLE: The service request failed because the key is not available CRYPTO_E_JOB_CANCELED: The service request failed because the synchronous Job has been canceled CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_ENTROPY_EXHAUSTED Description This interface dispatches the received jobs to the configured crypto driver object. Available via CryIf.h</description>
      <!-- removed: 'Incorrect return value CRYPTO_E_QUEUE_FULL' (=> AR-117714) -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_False/0001</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00027 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00027</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_ProcessJob shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_213</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_INIT_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_INIT_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>685</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00028 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00028</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_ProcessJob shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter channelId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_224</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_PARAM_CHANNELID_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_PARAM_CHANNELID_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>686</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00029 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00029</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_ProcessJob shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter job is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_235</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_PARAM_JOB_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_PARAM_JOB_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00044 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00044</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_ProcessJob() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_ProcessJob() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_428</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_RETURN_VALUES_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_RETURN_VALUES_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>690</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00136 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00136</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If job processing redirection is used for a job, the crypto interface need to adapt the incoming crypto interface key references and key element references to the corresponding key references and key element references of the respective values of the crypto driver.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_246</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_REDIRECTKEY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>678</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_REDIRECTKEY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00133 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00133</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameters job-&gt;jobPrimitiveInputOutput- &gt;cryIfKeyId and, if applicable, job-&gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId have to be checked if it is in a valid range. If so, CryIf shall set job-&gt;cryptoKeyId with the key ID of the crypto driver that corresponds to job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId, and, if applicable, job- &gt;targetCryptoKeyId with the key ID of the crypto driver that corresponds to job- &gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</srcid><srcstatus/><internalId>154</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00134 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00134</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_KEYSETVALID, CRYPTO_KEYSETINVALID, CRYPTO_RANDOMSEED, CRYPTO_KEYGENERATE, CRYPTO_KEYDERIVE, CRYPTO_KEYEXCHANGECALCPUBVAL or CRYPTO_KEYEXCHANGECALCSECRET, the parameter job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId must be in range; else the function CryIf_ProcessJob shall report CRYIF_E_PARAM_HANDLE to DET and return E_NOT_OK.</description>
      <!-- changed: 'CRYPTO_E_PARAM_HANDLE' into 'CRYIF_E_PARAM_HANDLE' (=> AR-111508)
           changed: 'job-&gt;cryIfKeyId' => 'job-&gt;jobPrimitiveInputOutput-&gt;cryIfKeyId'
      -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_True/0001</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00135 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00135</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is set to CRYPTO_KEYDERIVE, the parameter job-&gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId must be in range; else the function CryIf_ProcessJob shall report CRYIF_E_PARAM_HANDLE to DET and return E_NOT_OK.</description>
      <!-- changed: 'CRYPTO_E_PARAM_HANDLE' into 'CRYIF_E_PARAM_HANDLE' (=> AR-111508)
           changed: 'job-&gt;cryIfTargetKeyId' => 'job-&gt;jobPrimitiveInputOutput-&gt;targetCryIfKeyId'
      -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_282</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_324</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_336</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_354</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_386</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00142 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00142</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If a job is called and the parameter job-&gt;jobPrimitiveInfo- &gt;primitiveInfo-&gt;service is either set to CRYPTO_MACGENERATE, CRYPTO_MACVERIFY, CRYPTO_ENCRYPT, CRYPTO_DECRYPT, CRYPTO_AEADENCRYPT, CRYPTO_AEADDECRYPT, CRYPTO_RANDOMGENERATE, CRYPTO_SIGNATUREGENERATE or CRYPTO_SIGNATUREVERIFY, the parameter job-&gt;jobPrimitiveInfo-&gt;cryIfKeyId have to be checked if it is in a valid range. If so, CryIf shall set job-&gt;cryptoKeyId with the key ID of the crypto driver that corresponds to job-&gt;jobPrimitiveInfo-&gt;cryIfKeyId.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_259</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_false</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_true</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91014 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91014</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_CancelJob Syntax Std_ReturnType CryIf_CancelJob ( uint32 channelId, Crypto_JobType* job ) Service ID [hex] 0x0e Sync/Async Synchronous Reentrancy Reentrant Parameters (in) channelId Holds the identifier of the crypto channel. Parameters (inout) job Pointer to the configuration of the job. Contains structures with user and primitive relevant information. Parameters None (out) Return value Std_ReturnType E_OK: Request successful, job has been removed E_NOT_OK: Request failed, job couldn't be removed CRYPTO_E_JOB_CANCELED Description This interface dispatches the job cancellation function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00129 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00129</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CancelJob shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1012</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_INIT</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00130 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00130</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CancelJob shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter channelId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1023</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_PARAM_CHANNEL</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00131 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00131</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CancelJob shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter job is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1034</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_PARAM_JOB</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00132 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00132</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_CancelJob() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_CancelJob() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1045</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_EMPTY_CHANNEL</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91004 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91004</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementSet Syntax Std_ReturnType CryIf_KeyElementSet ( uint32 cryIfKeyId, uint32 keyElementId, const uint8* keyPtr, uint32 keyLength ) Service ID [hex] 0x04 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be set. keyElement Id Holds the identifier of the key element which shall be set. keyPtr Holds the pointer to the key data which shall be set as key element. keyLength Contains the length of the key element in bytes. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_WRITE_FAIL:Request failed because write access was denied CRYPTO_E_KEY_NOT_AVAILABLE: Request failed because the key is not available CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element size does not match size of provided data Description This function shall dispatch the set key element function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00049 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00049</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_465</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_INIT</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00050 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00050</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_475</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00052 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00052</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter keyPtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_485</srcid><srcstatus/><internalId>393</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_KEYPTR</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00053 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00053</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementSet shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if keyLength is zero.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_495</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_KEYLENGTH</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00055 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00055</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyElementSet() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_505</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91005 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91005</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeySetValid Syntax Std_ReturnType CryIf_KeySetValid ( uint32 cryIfKeyId ) Service ID [hex] 0x05 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key whose key elements shall be set to valid. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy Description This function shall dispatch the set key valid function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91005/0001</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00056 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00056</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeySetValid shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_535</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETVALID_INIT</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00057 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00057</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeySetValid shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_545</srcid><srcstatus/><internalId>398</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETVALID_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00058 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00058</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeySetValid() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeySetValid() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_555</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETVALID</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91021 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91021</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeySetInvalid Syntax Std_ReturnType CryIf_KeySetInvalid ( uint32 cryIfKeyId ) Service ID [hex] 0x14 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key for which the status shall be set to invalid. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy Description Sets invalid for the status of the key identified by cryIfKeyId. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00150 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00150</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeySetInvalid() shall report the error CRYIF_E_UNINIT if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1470</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETINVALID_INIT</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00151 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00151</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeySetInvalid() shall report the error CRYIF_E_PARAM_HANDLE if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1480</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETINVALID_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00152 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00152</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CryIf, the service CryIf_KeySetInvalid() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeySetInvalid() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1490</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETINVALID</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91012 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91012</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyGetStatus Syntax Std_ReturnType CryIf_KeyGetStatus ( uint32 cryIfKeyId, Crypto_KeyStatusType* keyStatusPtr ) Service ID [hex] 0x13 Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key for which the key state shall be returned. Parameters (inout) None Parameters (out) keyStatusPtr Contains the pointer to the data where the status of the key shall be stored. Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed Description Returns the key state of the key identified by cryIfKeyId. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91012/0001</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00146 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00146</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeyGetStatus() shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1412</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGETSTATUS_INIT</srcid><srcstatus/><internalId>666</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00147 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00147</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeyGetStatus() shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1422</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGETSTATUS_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00148 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00148</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CryIf module is enabled, the function CryIf_KeyGetStatus() shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter keyStatusPtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1432</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGETSTATUS_PARAM_CRYIFKEYSTATUSPTR</srcid><srcstatus/><internalId>668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00149 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00149</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CryIf, the service CryIf_KeyGetStatus() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyGetStatus() for the driver configuration mapped to the service and pass on the return value</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1442</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGETSTATUS</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91006 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91006</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementGet Syntax Std_ReturnType CryIf_KeyElementGet ( uint32 cryIfKeyId, uint32 keyElementId, uint8* resultPtr, uint32* resultLengthPtr ) Service ID [hex] 0x06 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKey Id Holds the identifier of the key whose key element shall be returned. key Element Id Holds the identifier of the key element which shall be returned. Parameters (inout) result Length Ptr Holds a pointer to a memory location in which the length information is stored. On calling this function this parameter shall contain the size of the buffer provided by resultPtr. If the key element is configured to allow partial access, this parameter contains the amount of data which should be read from the key element. The size may not be equal to the size of the provided buffer anymore. When the request has finished, the amount of data that has been stored shall be stored. Parameters (out) resultPtr Holds the pointer of the buffer for the returned key element Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed because read access was denied CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description This function shall dispatch the get key element function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00059 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00059</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_584</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_INIT</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00060 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00060</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_594</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00062 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00062</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter resultPtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_606</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_RESULTPTR</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00063 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00063</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter resultLengthPtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_606</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_RESULTLENGTHPTR</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00064 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00064</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementGet shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if the value, which is pointed by resultLengthPtr, is zero.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_616</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_VALUE_RESULTLENGTHPTR</srcid><srcstatus/><internalId>645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00065 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00065</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyElementGet() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_626</srcid><srcstatus/><internalId>405</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91015 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91015</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementCopy Syntax Std_ReturnType CryIf_KeyElementCopy ( uint32 cryIfKeyId, uint32 keyElementId, uint32 targetCryIfKeyId, uint32 targetKeyElementId ) Service ID [hex] 0x0f Sync/Async Synchronous Reentrancy Reentrant, but not for the same cryIfKeyId Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be the source element. keyElementId Holds the identifier of the key element which shall be the source for the copy operation. targetCryIfKey Id Holds the identifier of the key whose key element shall be the destination element. targetKey ElementId Holds the identifier of the key element which shall be the destination for the copy operation. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed, not allowed to extract key element CRYPTO_E_KEY_WRITE_FAIL: Request failed, not allowed to write key element CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element sizes are not compatible CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description This function shall copy a key elements from one key to a target key. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00110 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00110</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementCopy shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1081</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_INIT</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00111 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00111</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1093</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00112 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00112</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyElementCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter targetCryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1093</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_PARAM_TARGET</srcid><srcstatus/><internalId>631</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00113 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00113</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>2</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in the same Crypto Driver, the service CryIf_KeyElementCopy() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementCopy() for the driver configuration mapped to the service and pass on the return value.</description>
      <!-- removed: 'no errors are detected by CRYIF and the' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1103</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_SAME_DRIVER</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00114 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00114</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>2</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers, the service CryIf_KeyElementCopy() shall copy the provided key element by getting the element with Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet() and setting the target key element via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet().</description>
      <!-- removed: 'no errors are detected by CRYIF and the' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1116</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_MULTI_DRIVER</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00115 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00115</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>3</version>
      <description>If development error detection for the CRYIF module is enabled: If requested key element of cryIfKeyId is available in targetCryIfKeyId, the Crypto driver where targetCryIfKeyId is located returns CRYIF_E_KEY_SIZE_MISMATCH (either via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementCopy() or Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet()), then CryIf_KeyElementCopy() shall report CRYIF_E_KEY_SIZE_MISMATCH to the DET and return E_NOT_OK.</description>
      <!-- changed: 'Included E_NOT_OK return value when DET is reported' -->
      <!-- removed: 'and if the source element size does not match the target key elements size,' -->
      <!-- added: 'the Crypto driver where targetCryIfKeyId is located returns CRYIF_E_KEY_SIZE_MISMATCH (either via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementCopy() or Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet()), then' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1151</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/DETErrorReturn/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91018 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91018</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyElementCopyPartial Syntax Std_ReturnType CryIf_KeyElementCopyPartial ( uint32 cryIfKeyId, uint32 keyElementId, uint32 keyElementSourceOffset, uint32 keyElementTargetOffset, uint32 keyElementCopyLength, uint32 targetCryIfKeyId, uint32 targetKeyElementId ) Service ID [hex] 0x12 Sync/Async Synchronous Reentrancy Reentrant but not for the same cryIfKeyId Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be the source element. keyElementId Holds the identifier of the key element which shall be the source for the copy operation. keyElementSourceOffset This is the offset of the source key element indicating the start index of the copy operation. keyElementTargetOffset This is the offset of the target key element indicating the start index of the copy operation. keyElementCopyLength Specifies the number of bytes that shall be copied. targetCryIfKeyId Holds the identifier of the key whose key element shall be the destination element. targetKeyElementId Holds the identifier of the key element which shall be the destination for the copy operation. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed, not allowed to extract key element CRYPTO_E_KEY_WRITE_FAIL: Request failed, not allowed to write key element CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element sizes are not compatible CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description Copies a key element to another key element. The keyElementOffsets and key ElementCopyLength allows to copy just parts of the source key element into the destination key element. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00137 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00137</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If the Crypto Interface is not yet initialized and if development error detection for the Crypto Interface is enabled, the function CryIf_KeyElementCopyPartial shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1302</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_INIT</srcid><srcstatus/><internalId>635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00138 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00138</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>If cryIfKeyId or targetCryIfKeyId is out of range and if development error detection for the Crypto Interface is enabled, the function CryIf_KeyElementCopyPartial shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK.</description>
      <!-- changed: 'CRYPTO_E_PARAM_HANDLE' into 'CRYIF_E_PARAM_HANDLE' (=> AR-111508)
           removed: 'keyElementId, targetKeyElementId'                  (=> AR-111507)
      -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1314</srcid><srcstatus/><internalId>456</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00139 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00139</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>2</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in the same Crypto Driver, the service CryIf_KeyElementCopyPartial() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementCopyPartial() for the driver configuration mapped to the service and pass on the return value.</description>
      <!-- removed: 'no errors are detected by CRYIF and the' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1324</srcid><srcstatus/><internalId>457</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_SAME_DRIVER</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00140 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00140</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>2</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers, the service CryIf_KeyElementCopyPartial() shall copy the provided key element by getting the element with Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet(), copy the partial data to its destination and setting the target key element via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet().</description>
      <!-- removed: 'no errors are detected by CRYIF and the' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1339</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_MULTI_DRIVER</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91016 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91016</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyCopy Syntax Std_ReturnType CryIf_KeyCopy ( uint32 cryIfKeyId, uint32 targetCryIfKeyId ) Service ID [hex] 0x10 Sync/Async Synchronous Reentrancy Reentrant but not for the same cryIfKeyId Parameters (in) cryIfKeyId Holds the identifier of the key whose key element shall be the source element. targetCryIf KeyId Holds the identifier of the key whose key element shall be the destination element. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_NOT_AVAILABLE: Request failed, the requested key element is not available CRYPTO_E_KEY_READ_FAIL: Request failed, not allowed to extract key element CRYPTO_E_KEY_WRITE_FAIL: Request failed, not allowed to write key element CRYPTO_E_KEY_SIZE_MISMATCH: Request failed, key element sizes are not compatible CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element Description This function shall copy all key elements from the source key to a target key. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91016/0001</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00116 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00116</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyCopy shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1191</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_INIT</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00117 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00117</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1203</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00118 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00118</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyCopy shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter targetCryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1203</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_PARAM_TARGET</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00119 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00119</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>2</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in the same Crypto Driver, the service CryIf_KeyCopy() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyCopy() for the driver configuration mapped to the service and pass on the return value.</description>
      <!-- removed: 'no errors are detected by CRYIF and the' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1213</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_SAME_DRIVER</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00120 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00120</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>2</version>
      <description>If cryIfKeyId and targetCryIfKeyId are located in different Crypto Drivers, the service CryIf_KeyCopy() shall transfer the key elements of the source key to the target key. First, a list of key elements from cryIfKeyId and targetCryIfKeyId shall be read using the function Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementdsIdGet(). All key elements from this list that are identical to each other shall be copied by reading each key element of cryIfKeyId with Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementGet() and setting the target key element of targetCryIfKeyId via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet().</description>
      <!-- removed: 'no errors are detected by CRYIF and the' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1234</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_MULTI_DRIVER</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Add/CryIf_KeyCopy/SWS_CryIf_00120</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00121 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00121</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>3</version>
      <description>If development error detection for the CRYIF module is enabled: For all key elements of cryIfKeyId that are available in targetCryIfKeyId, the Crypto driver where targetCryIfKeyId is located returns CRYIF_E_KEY_SIZE_MISMATCH (either via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyCopy() or Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet()), then CryIf_KeyCopy() shall report CRYIF_E_KEY_SIZE_MISMATCH to the DET and return E_NOT_OK.</description>
      <!-- changed: 'Included return E_NOT_OK when DET is reported' -->
      <!-- removed: 'the source element size does not match the target key elements size,' -->
      <!-- added: 'the Crypto driver where targetCryIfKeyId is located returns CRYIF_E_KEY_SIZE_MISMATCH (either via Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyCopy() or Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyElementSet()), then' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1259</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_IMPL_KEYCOPY_SIZE_MISMATCH_MULTI_DRIVER</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/DETErrorReturn/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91007 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91007</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>Service Name CryIf_RandomSeed Syntax Std_ReturnType CryIf_RandomSeed ( uint32 cryIfKeyId, const uint8* seedPtr, uint32 seedLength ) Service ID [hex] 0x07 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key for which a new seed shall be generated. seedPtr Holds a pointer to the memory location which contains the data to feed the seed. seedLength Contains the length of the seed in bytes. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypro Driver Object is busy CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the random seed function to the configured crypto driver object. Available via CryIf.h</description>
      <!-- added : 'Missing return value CRYPTO_E_BUSY' (=> AR-117888) -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00068 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00068</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_658</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_INIT</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00069 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00069</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_668</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00070 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00070</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter seedPtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_678</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_PARAM_SEEDPTR</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00071 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00071</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_RandomSeed shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if seedLength is zero.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_688</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_PARAM_SEEDLENGTH</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00072 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00072</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_RandomSeed() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_RandomSeed() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_698</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91008 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91008</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyGenerate Syntax Std_ReturnType CryIf_KeyGenerate ( uint32 cryIfKeyId ) Service ID [hex] 0x08 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which is to be updated with the generated value. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the key generate function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91008/0001</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00073 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00073</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyGenerate shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_727</srcid><srcstatus/><internalId>413</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGENERATE_INIT</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00074 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00074</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyGenerate shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_737</srcid><srcstatus/><internalId>414</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGENERATE_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00075 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00075</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyGenerate() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyGenerate() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_747</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYGENERATE</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91009 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91009</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyDerive Syntax Std_ReturnType CryIf_KeyDerive ( uint32 cryIfKeyId, uint32 targetCryIfKeyId ) Service ID [hex] 0x09 Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which is used for key derivation. targetCryIf KeyId Holds the identifier of the key which is used to store the derived key. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_BUSY: Crypto Driver Object has returned CRYPTO_ E_BUSY. CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the key derive function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00076 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00076</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyDerive shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_774</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE_INIT</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00077 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00077</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyDerive shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_786</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00122 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00122</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyDerive shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter targetCryIfKeyId is out or range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_786</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE_PARAM_TARGET</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00081 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00081</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyDerive() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyDerive() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_796</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91010 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91010</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyExchangeCalcPubVal Syntax Std_ReturnType CryIf_KeyExchangeCalcPubVal ( uint32 cryIfKeyId, uint8* publicValuePtr, uint32* publicValueLengthPtr ) Service ID [hex] 0x0a Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which shall be used for the key exchange protocol. Parameters (inout) public Value LengthPtr Holds a pointer to the memory location in which the public value length information is stored. On calling this function, this parameter shall contain the size of the buffer provided by publicValuePtr. When the request has finished, the actual length of the returned value shall be stored. Parameters (out) public ValuePtr Contains the pointer to the data where the public value shall be stored. Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryptoKeyId is "invalid". Description This function shall dispatch the key exchange public value calculation function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00082 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00082</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_829</srcid><srcstatus/><internalId>421</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_INIT</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00083 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00083</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_839</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00084 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00084</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter publicValuePtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_851</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_VALUEPTR</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00085 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00085</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter publicValueLengthPtr is a null pointer.</description>
      <!-- changed: 'pubValueLengthPtr' into 'publicValueLengthPtr' (=> AR-116441) -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_851</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_VALUELENGTHPTR</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00086 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00086</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcPubVal shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if the value, which is pointed by publicValueLengthPtr, is zero.</description>
      <!-- changed: 'pubValueLengthPtr' into 'publicValueLengthPtr' (=> AR-116441) -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_861</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_VALUE_LENGTHPTR</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00087 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00087</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyExchangeCalcPubVal() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyExchangeCalcPubVal() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_871</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91011 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91011</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_KeyExchangeCalcSecret Syntax Std_ReturnType CryIf_KeyExchangeCalcSecret ( uint32 cryIfKeyId, const uint8* partnerPublicValuePtr, uint32 partnerPublicValueLength ) Service ID [hex] 0x0b Sync/Async Synchronous Reentrancy Reentrant Parameters (in) cryIfKeyId Holds the identifier of the key which shall be used for the key exchange protocol. partnerPublic ValuePtr Holds the pointer to the memory location which contains the partner's public value. partnerPublic ValueLength Contains the length of the partner's public value in bytes. Parameters (inout) None Parameters (out) None Return value Std_ReturnType E_OK: Request successful E_NOT_OK: Request failed CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized source key element CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of the key identified by cryIfKeyId is "invalid". Description This function shall dispatch the key exchange common shared secret calculation function to the configured crypto driver object. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00090 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00090</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_UNINIT to the DET and return E_NOT_OK if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_902</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_INIT</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00091 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00091</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_PARAM_HANDLE to the DET and return E_NOT_OK if the parameter cryIfKeyId is out of range.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_912</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00092 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00092</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_PARAM_POINTER to the DET and return E_NOT_OK if the parameter partnerPublicValuePtr is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_922</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_VALUEPTR</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00094 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00094</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>2</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_KeyExchangeCalcSecret shall report CRYIF_E_PARAM_VALUE to the DET and return E_NOT_OK if partnerPublicValueLength is zero.</description>
      <!-- changed: 'partnerPubValueLength' into 'partnerPublicValueLength' (=> AR-116441) -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_932</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_VALUELENGTH</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00095 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00095</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_KeyExchangeCalcSecret() shall call Crypto_&lt;vi&gt;_&lt;ai&gt;_KeyExchangeCalcSecret() for the driver configuration mapped to the service and pass on the return value.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_942</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91013 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91013</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>Service Name CryIf_CallbackNotification Syntax void CryIf_CallbackNotification ( Crypto_JobType* job, Crypto_ResultType result ) Service ID [hex] 0x0d Sync/Async Synchronous Reentrancy Non Reentrant Parameters (in) job Points to the completed job's information structure. It contains a callback ID to identify which job is finished. result Contains the result of the cryptographic operation. Parameters (inout) None Parameters (out) None Return value void -- Description Notifies the CRYIF about the completion of the request with the result of the cryptographic operation. Available via CryIf.h</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91013/0001</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00107 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00107</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CallbackNotification shall report CRYIF_E_UNINIT to the DET if the module is not yet initialized.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_969</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CALLBACKNOTIFICATION_INIT</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00108 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00108</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If development error detection for the CRYIF module is enabled: The function CryIf_CallbackNotification shall report CRYIF_E_PARAM_POINTER to the DET if the parameter job is a null pointer.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_979</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CALLBACKNOTIFICATION_PARAM_JOB</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_00109 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_00109</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>If no errors are detected by CRYIF, the service CryIf_CallbackNotification() shall call Csm_CallbackNotification() and pass on the result.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_991</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CALLBACKNOTIFICATION</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91100 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91100</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>API Function Header File Description Csm_Callback- Notification Csm.h Notifies the CSM that a job has finished. This function is used by the underlying layer (CRYIF). Crypto_ProcessJob Crypto.h Performs the crypto primitive, that is configured in the job parameter. Crypto_CancelJob Crypto.h This interface removes the provided job from the queue and cancels the processing of the job if possible. Crypto_KeyCopy Crypto.h Copies a key with all its elements to another key in the same crypto driver. Crypto_KeyElementCopy Crypto.h Copies a key element to another key element in the same crypto driver. Crypto_KeyElementCopyPartial Crypto.h Copies a key element to another key element in the same crypto driver. The keyElementSourceOffset and keyElementCopyLength allows to copy just a part of the source key element into the destination. The offset of the target key is also specified with this function. Crypto_KeyElementGet Crypto.h This interface shall be used to get a key element of the key identified by the cryptoKeyId and store the key element in the memory location pointed by the result pointer. Crypto_KeyElementSet Crypto.h Sets the given key element bytes to the key identified by cryptoKeyId. Crypto_KeyExchangeCalcSecret Crypto.h Calculates the shared secret key for the key exchange with the key material of the key identified by the cryptoKeyId and the partner public key. The shared secret key is stored as a key element in the same key. Crypto_KeyGenerate Crypto.h Generates new key material store it in the key identified by cryptoKeyId. Crypto_KeySetValid Crypto.h Sets the key state of the key identified by cryptoKeyId to valid. Crypto_RandomSeed Crypto.h This function generates the internal seed state using the provided entropy source. Furthermore, this function can be used to update the seed state with new entropy. Crypto_KeySetInvalid Crypto.h Sets invalid for the status of the key identified by cryptoKeyId. Crypto_KeyGetStatus Crypto.h Returns the key state of the key identified by cryptoKeyId. Crypto_KeyElementIdsGet Crypto.h Used to retrieve information which key elements are available in a given key. Crypto_KeyDerive Crypto.h Derives a new key by using the key elements in the given key identified by the cryptoKeyId. The given key contains the key elements for the password, salt. The derived key is stored in the key element with the id 1 of the key identified by targetCryptoKeyId. The number of iterations is given in the key element CRYPTO_KE_KEYDERIVATION_ITERATIONS. Crypto_KeyExchangeCalcPubVal Crypto.h Calculates the public value for the key exchange and stores the public key in the memory location pointed by the public value pointer. Crypto_CustomSync Crypto.h Requests the execution of a function that is specified by the given dispatch id.</description>
      <!-- changed: 'removed Det_ReportRuntimeError() from mandatory interface and included external interfaces required from other modules' -->
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_38</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <!-- CryIf.R2111/Sws/SWS_CryIf_91101 -->
    <specobject>
      <id>CryIf.R2111/Sws/SWS_CryIf_91101</id>
      <status>approved</status>
      <source>SWS CryptoInterface, R21-11</source>
      <version>1</version>
      <description>API Function Header File Description Det_ReportError Det.h Service to report development errors.</description>
      <tags>
        <tag>R2111</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_42</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <!--CryIf.ASR21-11.ECUC_CryIf_00001; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00009; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00010; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00011; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00002; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00004; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00005; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00003; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00007; [ecuc] -->
    <!--CryIf.ASR21-11.ECUC_CryIf_00008; [ecuc] -->

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>CryIf.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_VerifyCodeStub</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>CryIf.R2111/Dev/GetVersionInfoParamDirection</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/CryptoEParamHandleCorrected</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/CryIfKeyElementCopyPartial_NoKeyElementChecks</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/pubValueLengthPtrCorrected</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/partnerPubValueLengthCorrected</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/NoCheckIfDETdisabled</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/AddedMissingDetReturnE_NOT_OK</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/CryptoEQueueFullUndefined</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/CryptoEBusyMissingInCryIfRandomSeed</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/MandatoryInterfacesWrong</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/CryIfEbCustomServiceApi</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/KeyDispatching</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/KeyElementCopyDifferentCryptoDrivers</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/KeyCopyDifferentCryptoDrivers</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>399</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dev/KeyElementCopyPartialDifferentCryptoDrivers</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>CryIf.ASR21-11.SWS_CryIf_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CryIf_Macros.m_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_Macros.m</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_Macros.m_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_Macros.m</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_Macros.m_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_Macros.m</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DEV_ERROR_DETECT/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_VERSION_INFO_API/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_51</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_ENABLED_KEYMNGMNT/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_ENABLED_CUSTOMSERVICE/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CRYIF_API_VERSION_R2111/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_VERSION/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CryIfConf_CryIfChannel/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Cfg.h_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Cfg.h</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CryIfConf_CryIfKey/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_JUMPTABLE_COUNT/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_CHANNEL_COUNT/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_KEY_COUNT/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_56</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_MAX_KEY_ELEMENTS_IN_KEY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_70</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_MAX_COPY_BUFFER_SIZE/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_KEYELEMENTCOPY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_89</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_KEYCOPY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_KEYELEMENTCOPYPARTIAL/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/LNT/CryIf_Channels/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Req/Cfg/SymbolicNames/General/00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/LNT/CryIf_Keys/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Req/Cfg/SymbolicNames/General/00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/LNT/CryIf_JumpTable/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_69</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/LNT/CryIf_CryptoInstanceForChannel/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/LNT/CryIf_CryptoInstanceForKey/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/CryIf_R2111.h_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111.h_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111.h</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_INSTANCE_ID/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111.h_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111.h_64</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111.h</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_SID_API/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111.h_206</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111.h</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_ConfigType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_ProcessJobPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_CancelJobPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementSetPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_53</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeySetValidPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementGetPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_70</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementCopyPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementCopyPartialPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_93</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementIdsGetPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_RandomSeedPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyGeneratePtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyDerivePtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyExchangeCalcPubValPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyExchangeCalcSecretPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_CustomSyncPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyCopyPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeySetInvalidPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyGetStatusPtrType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_186</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_JumpTableType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/CryIf_R2111_Int.h_227</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/include/CryIf_R2111_Int.h</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/VRT/CryIf_Initialized/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_106</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/VRT/CryIf_DiffDrv_CopyBuffer01/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/VRT/CryIf_DiffDrv_CopyBuffer02/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91000/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_172</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_246</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>246</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_282</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_301</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>301</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_336</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_428</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CryIfChannels/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_448</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>448</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_475</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91005/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_594</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_626</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>626</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_658</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>658</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_668</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>668</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_698</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>698</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91008/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_747</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>747</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_759</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>759</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_786</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>786</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_796</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>796</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_829</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>829</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00085</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_861</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>861</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00086</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_902</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>902</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_912</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>912</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00094</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_942</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>942</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_956</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>956</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91013/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_979</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>979</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1012</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1012</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1045</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1045</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1081</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1081</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1093</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1093</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00113</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00114</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00115</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91016/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00119</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_KeyCopy/SWS_CryIf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00120</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00121</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00139</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00140</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91012/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1412</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1412</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1442</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1456</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1456</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1470</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1470</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1480</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1480</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/CryIf_R2111.c_1562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/src/CryIf_R2111.c</sourcefile>
      <sourceline>1562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_93</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_223</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneral/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementationRefs/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbGeneralBswmdImplementationRefs/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Warning/CryIfEbGeneralBswmdImplementationRefs/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoBswImplementationRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoBswImplementationRef/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_411</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_414</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>414</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoRef/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbMisc/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbRelease/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbRelease_2111/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_482</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCustomServiceApis/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbDifferentDriversKeyCopy/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbDifferentDriversKeyCopy/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbDifferentDriversKeyElementCopy/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_554</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>554</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbDifferentDriversKeyElementCopy/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_561</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>561</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbDifferentDriversKeyElementCopyPartial/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbDifferentDriversKeyElementCopyPartial/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbDifferentDriversMaxCopyBufferSize/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/CryIf.xdm.m4_623</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/config/CryIf.xdm.m4</sourcefile>
      <sourceline>623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Cfg/Xdm/Warning/CryIfEbDifferentDriversMaxCopyBufferSize/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/CryIf_R2111_Types.m.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/src/Autosar/generate_swcd/swcd/CryIf_R2111_Types.m.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Typ/CryIf_ConfigType/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R2111/Dsn/MultipleCryptoDrivers/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>1053</sourceline>
      <version>1</version>
      <description>
              The CryIf shall handle all Crypto Driver instances by using a jump table for all key management, process, cancel and custom service functions 
              provided by each of Crypto Driver instance.
            </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/LNT/CryIf_CryptoInstanceForChannel/0001</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/LNT/CryIf_CryptoInstanceForKey/0001</srcid><srcstatus/><internalId>530</internalId></linkedfrom><linkedfrom><srcid>CryIf.R2111/Dsn/Bsw/LNT/CryIf_JumpTable/0001</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>1082</sourceline>
      <version>1</version>
      <description>
              If there is no key configured, the key management code shall not be generated or activated.
            </description>
      <furtherinfo>WRN.impl.needscoverage.count</furtherinfo>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_46</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_46</srcid><srcstatus/><internalId>326</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_69</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_126</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_227</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_KEYMANAGEMENT_OFF</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_ConfigType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8698</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91118.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111.h_206</srcid><srcstatus/><internalId>337</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/CryIf_R2111_Types.m.m4_65</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91000/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8714</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91000.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_128</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_INITS</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8733</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91001.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_161</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_GETVERSIONINFO_INIT</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_GETVERSIONINFO_PARAM_VERSIONINFO</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_GETVERSIONINFO</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8752</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91004.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_448</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementSet</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_INIT</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_KEYPTR</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_KEYLENGTH</srcid><srcstatus/><internalId>650</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTSET</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91005/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8771</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91005.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_521</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeySetValid</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8790</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91006.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_567</srcid><srcstatus/><internalId>400</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementGet</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_INIT</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_RESULTPTR</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_RESULTLENGTHPTR</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET_VALUE_RESULTLENGTHPTR</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTGET</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8809</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91007.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_642</srcid><srcstatus/><internalId>406</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_RandomSeed</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_INIT</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_PARAM_SEEDPTR</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED_PARAM_SEEDLENGTH</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_RANDOMSEED</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91007</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91008/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8828</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91008.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_713</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyGenerate</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8847</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91009.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_759</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyDerive</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE_INIT</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE_PARAM_TARGET</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYDERIVE</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8866</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91010.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_813</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyExchangeCalcPubVal</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_INIT</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_VALUEPTR</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_VALUELENGTHPTR</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_VALUE_LENGTHPTR</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8885</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91011.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_886</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyExchangeCalcSecret</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_INIT</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_VALUEPTR</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_VALUELENGTH</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91012/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8904</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91012.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1397</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyGetStatus</srcid><srcstatus/><internalId>596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91013/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8927</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91013.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_956</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CONF_CALLBACKNOTIFICATION_INIT</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CALLBACKNOTIFICATION_PARAM_JOB</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CALLBACKNOTIFICATION</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8946</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91014.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_998</srcid><srcstatus/><internalId>436</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_INIT</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_PARAM_CHANNEL</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_PARAM_JOB</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_CANCELJOB_EMPTY_CHANNEL</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8963</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91015.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1061</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementCopy</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_RETURN_VALUES</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPY_MULTI_DRIVER</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91016/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>8982</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91016.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1170</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyCopy</srcid><srcstatus/><internalId>598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9001</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91018.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1278</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CMPL_BSWMD</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementCopyPartial</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_INIT</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_SAME_DRIVER</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_MULTI_DRIVER</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_NOT_AVAILABLE</srcid><srcstatus/><internalId>639</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9020</sourceline>
      <version>1</version>
      <description>This design requirement realizes directly the identical requirement CryIf.R2111/Sws/SWS_CryIf_91021.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_1456</srcid><srcstatus/><internalId>465</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeySetInvalid</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETINVALID_INIT</srcid><srcstatus/><internalId>670</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETINVALID_PARAM_CRYIFKEYID</srcid><srcstatus/><internalId>671</internalId></linkedfrom><linkedfrom><srcid>TS_CRYIF_CONF_KEYSETINVALID</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_91021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/LNT/CryIf_Channels/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9043</sourceline>
      <version>1</version>
      <description>There shall be a configuration constant CryIf_Channels, an array of type uint32, that holds the Ids of the configured CryIf channels.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_31</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/LNT/CryIf_CryptoInstanceForChannel/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9053</sourceline>
      <version>1</version>
      <description>There shall be a configuration constant CryIf_CryptoInstanceForChannel, an array of type uint8 that holds, for each configured CryIf channel, the information where to find its corresponding Crypto Driver instance in the array CryIf_JumpTable.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_109</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/MultipleCryptoDrivers/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/LNT/CryIf_CryptoInstanceForKey/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9069</sourceline>
      <version>1</version>
      <description>There shall be a configuration constant CryIf_CryptoInstanceForKey, an array of type uint8 that holds, for each configured CryIf key, the information where to find its corresponding Crypto Driver instance in the array CryIf_JumpTable.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_127</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/MultipleCryptoDrivers/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/LNT/CryIf_JumpTable/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9085</sourceline>
      <version>1</version>
      <description>There shall be a configuration constant CryIf_JumpTable, an array of type CryIf_JumpTableType, that holds, for each Crypto Driver instance that is referenced by CryIf keys or channels, a list of function pointers to all key management, process, and cancel functions provided by that Crypto Driver instance.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_68</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/MultipleCryptoDrivers/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/LNT/CryIf_Keys/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9101</sourceline>
      <version>1</version>
      <description>There shall be a configuration constant CryIf_Keys, an array of type uint32, that holds the Ids of the configured CryIf keys.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/CryIf_R2111_Int_Cfg.c_45</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_ENABLED_CUSTOMSERVICE/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9112</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_API_ENABLED_CUSTOMSERVICE that represents whether the "Custom service" is enabled or disabled by the user.
It shall be enabled if at least one CryIf key is configured.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_62</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGOFFSINGLEDRIVER</srcid><srcstatus/><internalId>602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_ENABLED_KEYMNGMNT/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9124</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_API_ENABLED_KEYMNGMNT that represents whether the CryIf KeyManagement APIs are enabled or disabled.
The CryIf KeyManagement APIs shall be enabled if at least one CryIf key is configured.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_51</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_VERSION/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9135</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_API_VERSION that represents the AUTOSAR API version that is currently supported by the module.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_73</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_CHANNEL_COUNT/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9145</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_CHANNEL_COUNT those value is the number of configured CryIf channels.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_32</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DEV_ERROR_DETECT/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9155</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_DEV_ERROR_DETECT that represents whether the usage of the Development Error Detection API by the CryIf is directly enabled or disabled by the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_28</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_KEYCOPY/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9165</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_DIFFDRV_KEYCOPY that represents whether the usage of CryIf_KeyCopy for copying keys between different Crypto modules is enabled or disabled by the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_89</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_KEYELEMENTCOPY/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9175</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_DIFFDRV_KEYELEMENTCOPY that represents whether the usage of CryIf_KeyElementCopy for copying key elements between different Crypto modules is enabled or disabled by the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_78</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_KEYELEMENTCOPYPARTIAL/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9185</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_DIFFDRV_KEYELEMENTCOPYPARTIA that represents whether the usage of CryIf_KeyElementCopyPartial for partially copying key elements between different Crypto modules is enabled or disabled by the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_100</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_DIFFDRV_MAX_COPY_BUFFER_SIZE/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9195</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_DIFFDRV_MAX_COPY_BUFFER_SIZE those value is the configured size of the buffer in bytes used for copying a key element or a
key from one Crypto Driver instance to another.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_70</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_INSTANCE_ID/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9206</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_INSTANCE_ID those value is the instance Id of the CryIf module.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111.h_17</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_JUMPTABLE_COUNT/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9216</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_JUMPTABLE_COUNT those value is the number of configured Crypto driver instances.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_25</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_KEY_COUNT/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9226</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_KEY_COUNT those value is the number of configured keys.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_39</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_MAX_KEY_ELEMENTS_IN_KEY/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9236</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_MAX_KEY_ELEMENTS_IN_KEY those value is the maximum number of key elements contained in a configured key, i.e. key type.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Int_Cfg.h_56</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_SID_API/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9246</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_SID_&amp;lt;API&amp;gt; for each CryIf function &amp;lt;API&amp;gt;, those value is the AUTOSAR API service ID, used for Det_ReportError().</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111.h_64</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_VERSION_INFO_API/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9256</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CRYIF_VERSION_INFO_API that represents whether the VersionInfo API is directly enabled or disabled by the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_39</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CRYIF_CMPL_ALLCFGOFFSINGLEDRIVER</srcid><srcstatus/><internalId>602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CryIfConf_CryIfChannel/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9267</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CryIfConf_CryIfChannel_&amp;lt;Channel&amp;gt; for each configured CryIf channel, those value is the corresponding channel ID.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_85</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/PCT/CryIfConf_CryIfKey/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9277</sourceline>
      <version>1</version>
      <description>There shall be a configuration macro CryIfConf_CryIfKey_&amp;lt;Key&amp;gt; for each configured CryIf Key, those value is the corresponding Key ID.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_R2111_Cfg.h_96</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/VRT/CryIf_DiffDrv_CopyBuffer01/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9288</sourceline>
      <version>1</version>
      <description>There shall be a variable CryIf_DiffDrv_CopyBuffer01 of type array of uint8 that represents the global buffer which used for copying key material between different Crypto modules.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_106</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/VRT/CryIf_DiffDrv_CopyBuffer02/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9299</sourceline>
      <version>1</version>
      <description>There shall be a variable CryIf_DiffDrv_CopyBuffer02 of type uint8 array that represents the global buffer which used for copying key material between different Crypto modules.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_111</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/VRT/CryIf_Initialized/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9310</sourceline>
      <version>1</version>
      <description>There shall be a variable CryIf_Initialized of type boolean that represents the initialization state of the CryIf.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/CryIf_R2111.c_101</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_CancelJobPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9320</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_CancelJobPtrType that holds the pointer to a CryIf_CancelJob function implementation, to be used in the CryIf_CancelJob jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_35</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_CustomSyncPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9330</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_CustomSyncPtrType that holds the pointer to a CryIf_CustomSync function implementation, to be used in the CryIf_CustomSync jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_144</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_JumpTableType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9340</sourceline>
      <version>1</version>
      <description>There shall be a struct type CryIf_JumpTableType that holds a list of function pointers whose values are the addresses of the implemented Crypto Driver key management, process, and cancel interface, to be used in the array  CryIf_JumpTable.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_186</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyCopyPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9350</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyCopyPtrType that holds the pointer to a CryIf_KeyCopy function implementation, to be used in the CryIf_KeyCopy jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_163</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyDerivePtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9360</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyDerivePtrType that holds the pointer to a CryIf_KeyDerive function implementation, to be used in the CryIf_KeyDerive jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_118</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementCopyPartialPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9370</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyElementCopyPartialPtrType that holds the pointer to a CryIf_KeyElementCopyPartial function implementation, to be used in the CryIf_KeyElementCopyPartial jump table.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_80</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementCopyPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9381</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyElementCopyPtrType that holds the pointer to a CryIf_KeyElementCopy function implementation, to be used in the CryIf_KeyElementCopy jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_70</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementGetPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9391</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyElementGetPtrType that holds the pointer to a CryIf_KeyElementGet function implementation, to be used in the CryIf_KeyElementGet jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_60</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementIdsGetPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9401</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyElementIdsGetPtrType that holds the pointer to a CryIf_KeyElementIdsGet function implementation, to be used in the CryIf_KeyElementIdsGet jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_93</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyElementSetPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9411</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyElementSetPtrType that holds the pointer to a CryIf_KeyElementSet function implementation, to be used in the CryIf_KeyElementSet jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_43</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyExchangeCalcPubValPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9421</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyExchangeCalcPubValPtrType that holds the pointer to a CryIf_KeyExchangeCalcPubVal function implementation, to be used in the CryIf_KeyExchangeCalcPubVal jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_126</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyExchangeCalcSecretPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9431</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyExchangeCalcSecretPtrType that holds the pointer to a CryIf_KeyExchangeCalcSecret function implementation, to be used in the CryIf_KeyExchangeCalcSecret jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_135</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyGeneratePtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9441</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyGeneratePtrType that holds the pointer to a CryIf_KeyGenerate function implementation, to be used in the CryIf_KeyGenerate jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_111</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeyGetStatusPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9451</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeyGetStatusPtrType that holds the pointer to a CryIf_KeyGetStatus function implementation, to be used in the CryIf_KeyGetStatus jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_178</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeySetInvalidPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9461</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeySetInvalidPtrType that holds the pointer to a CryIf_KeySetInvalid function implementation, to be used in the CryIf_KeySetInvalid jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_171</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_KeySetValidPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9471</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_KeySetValidPtrType that holds the pointer to a CryIf_KeySetValid function implementation, to be used in the CryIf_KeySetValid jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_53</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_ProcessJobPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9481</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_ProcessJobPtrType that holds the pointer to a CryIf_ProcessJob function implementation, to be used in the CryIf_ProcessJob jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_27</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>CryIf.R2111/Dsn/Bsw/Typ/CryIf_RandomSeedPtrType/0001</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9491</sourceline>
      <version>1</version>
      <description>There shall be a function pointer type CryIf_RandomSeedPtrType that holds the pointer to a CryIf_RandomSeed function implementation, to be used in the CryIf_RandomSeed jump table.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/CryIf_R2111_Int.h_102</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9667</sourceline>
      <version>1</version>
      <description>If the EB specific CryIf container CryIfEbGeneralBswmdImplementation does not exist, the MIP of any Crypto API shall be created based on the individual Common Published Information, provided by the configured Crypto modules of an Ecu configuration project.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_Macros.m_48</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOff</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOffSingle</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOffSingleNoMIP</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0003</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9680</sourceline>
      <version>1</version>
      <description>If the EB specific CryIf container CryIfEbGeneralBswmdImplementation exists, the MIP of any Crypto API for Crypto modules contained in CryIfEbGeneralBswmdImplementation shall be created based on the individual BSWMD, that has to be provided by these configured Crypto modules of an Ecu configuration project.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_Macros.m_37</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOn</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdDual</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0004</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9693</sourceline>
      <version>1</version>
      <description>If the EB specific CryIf container CryIfEbGeneralBswmdImplementation exists, the MIP of any Crypto API for Crypto modules not contained in CryIfEbGeneralBswmdImplementation shall be created based on the individual Common Published Information, provided by these configured Crypto modules of an Ecu configuration project.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/CryIf_Macros.m_43</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_CryIf_Gen_CryptoMip_BswmdDual</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbGeneralBswmdImplementationRefs/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9843</sourceline>
      <version>1</version>
      <description>If the number of instances exceeds the number of Crypto modules within the configuration project an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_350</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoBswImplementationRef/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9855</sourceline>
      <version>1</version>
      <description>If the reference value is not valid an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_380</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoBswImplementationRef/0002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9867</sourceline>
      <version>1</version>
      <description>If the reference value is not unique within all configured instances of CryIfEbGeneralBswmdImplementationRefs an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_383</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoRef/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9879</sourceline>
      <version>1</version>
      <description>If the reference value is not valid an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_411</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbCryptoRef/0002</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9891</sourceline>
      <version>1</version>
      <description>If the reference value is not unique within all configured instances of CryIfEbGeneralBswmdImplementationRefs an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_414</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbDifferentDriversKeyElementCopy/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9903</sourceline>
      <version>1</version>
      <description>If the value is true for CryIfEbDifferentDriversKeyElementCopy and CryIfEbDifferentDriversMaxCopyBufferSize is not configured an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_554</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbDifferentDriversKeyCopy/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9914</sourceline>
      <version>1</version>
      <description>If the value is true for CryIfEbDifferentDriversKeyCopy and CryIfEbDifferentDriversMaxCopyBufferSize is not configured an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_526</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Error/CryIfEbDifferentDriversKeyElementCopyPartial/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9925</sourceline>
      <version>1</version>
      <description>If the value is true for CryIfEbDifferentDriversKeyElementCopyPartial and CryIfEbDifferentDriversMaxCopyBufferSize is not configured an INVALID message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_583</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Warning/CryIfEbGeneralBswmdImplementationRefs/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9947</sourceline>
      <version>1</version>
      <description>If the number of instances is less than the number of Crypto modules within the configuration project a WARNING message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_355</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>CryIf.R0000/Dsn/Cfg/Xdm/Warning/CryIfEbDifferentDriversMaxCopyBufferSize/0001</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/doc/project/design/pdf/CryIf_Design-profiled.xml</sourcefile>
      <sourceline>9966</sourceline>
      <version>1</version>
      <description>If CryIfEbDifferentDriversMaxCopyBufferSize is configured AND (CryIfEbDifferentDriversKeyElementCopy, CryIfEbDifferentDriversKeyCopy AND CryIfEbDifferentDriversKeyElementCopyPartial are not enabled) a WARNING message shall be presented to the user.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/CryIf.xdm.m4_623</srcid><srcstatus/><internalId>506</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CMPL_ALLCFGONSINGLEDRIVER</id>
      <status>approved</status>
      <shortdesc>Compile test Det ON</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Compile/IN/CryIf_Cmpl_AllCfgOn_CryptoSingle/source/application/tests.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Compile test with a single crypto driver instance with error detection on.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>This test is intended as compile test only.</testexec>
      <testout>None</testout>
      <testpasscrit>The following testobject compiled without errors and warnings:
              CryIf_Init()
              CryIf_GetVersionInfo
              CryIf_ProcessJob()
              CryIf_CancelJob()
              CryIf_KeyElementSet()
              CryIf_KeySetValid()
              CryIf_KeyElementGet()
              CryIf_KeyElementCopy()
              CryIf_KeyCopy()
              CryIf_KeyGenerate()
              CryIf_KeyDerive()
              CryIf_KeyExchangeCalcPubVal()
              CryIf_KeyExchangeCalcSecret()
              CryIf_RandomSeed()
              CryIf_KeyElementCopyPartial()
              CryIf_KeySetInvalid()
              CryIf_KeyGetStatus()</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91000/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91005/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91016/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91008/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91012/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CRYIF_API_VERSION_R2111/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CMPL_BSWMD</id>
      <status>approved</status>
      <shortdesc>Compile test for CryIf to check BSWMD.</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Compile/IN/CryIf_Cmpl_BSWMD/source/application/tests.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Compile test with a single crypto driver instance to check BSWMD.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>This test is intended as compile test only.</testexec>
      <testout>None</testout>
      <testpasscrit>The following testobject compiled without errors and warnings:
              CryIf_Init()
              CryIf_GetVersionInfo
              CryIf_ProcessJob()
              CryIf_CancelJob()
              CryIf_KeyElementSet()
              CryIf_KeySetValid()
              CryIf_KeyElementGet()
              CryIf_KeyElementCopy()
              CryIf_KeyCopy()
              CryIf_KeyGenerate()
              CryIf_KeyDerive()
              CryIf_KeyExchangeCalcPubVal()
              CryIf_KeyExchangeCalcSecret()
              CryIf_RandomSeed()
              CryIf_KeyElementCopyPartial()
              CryIf_KeySetInvalid()
              CryIf_KeyGetStatus()</testpasscrit>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91000/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91005/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91016/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91008/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91012/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CRYIF_API_VERSION_R2111/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CMPL_KEYMANAGEMENT_OFF</id>
      <status>approved</status>
      <shortdesc>Check for disabled variables/constants and functions with disabled KeyManagement</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Compile/IN/CryIf_Cmpl_KeyManagementOff/source/application/tests.c</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;This test checks if the variables/constants and functions used by the KeyManagement are disabled&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/NoCodeUnconfiguredKeyMgmt/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_CustomSync</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_CustomSync</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_CustomSync.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementSet</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyElementSet</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyElementSet.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeySetValid</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeySetValid</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeySetValid.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91005/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementGet</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyElementGet</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyElementGet.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_RandomSeed</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_RandomSeed</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_RandomSeed.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyGenerate</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyGenerate</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyGenerate.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91008/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyDerive</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyDerive</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyDerive.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyExchangeCalcPubVal</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyExchangeCalcPubVal</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>368</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyExchangeCalcPubVal.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyExchangeCalcSecret</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyExchangeCalcSecret</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>412</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyExchangeCalcSecret.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyGetStatus</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyGetStatus</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>457</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyGetStatus.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91012/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementCopy</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyElementCopy</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>500</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyElementCopy.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyCopy</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyCopy</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyCopy.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91016/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeyElementCopyPartial</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeyElementCopyPartial</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>592</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeyElementCopyPartial.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_Cnf_Bas_KMn_Det1_Rte0_R2111_KMn_E_OK_KeySetInvalid</id>
      <status>approved</status>
      <shortdesc>Conformance test for CryIf key management interface CryIf_KeySetInvalid</shortdesc>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Cnf_Bas_KMn_Det1_Rte0_R2111/source/application/tests.c</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Tests a successful call of CryIf_KeySetInvalid.&lt;/pre&gt;</description>
      <testin>None</testin>
      <testexec>01: Init module</testexec>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CryIf_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_CryIf/build/reqm/common_req/CryIf_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(CryIf.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CMPL_ALLCFGOFFSINGLEDRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Compile/IN/CryIf_Cmpl_AllCfgOff_CryptoSingle/source/application/tests.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Compile test with configurations turned off
Test Description: 
    Compile test with error detection off, API for getting version info off and API for getting CustomSync off.
  
Test Object: 
    &lt;itemizedlist&gt;
      &lt;listitem&gt;CryIf_GetVersionInfo()&lt;/listitem&gt;
      &lt;listitem&gt;CryIf_CustomSync()&lt;/listitem&gt;
    &lt;/itemizedlist&gt;
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_VERSION_INFO_API/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/PCT/CRYIF_API_ENABLED_CUSTOMSERVICE/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_CALLBACKNOTIFICATION_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CallbackNotification/source/application/tests_CallbackNotification.c</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CallbackNotification function returns correct
Test Description: 
    The test checks that the function CryIf_CallbackNotification() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CallbackNotification()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CallbackNotification() when the module is not yet initialized and check that
		the error CRYIF_E_UNINIT is raised.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91013/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CALLBACKNOTIFICATION_PARAM_JOB</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CallbackNotification/source/application/tests_CallbackNotification.c</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CallbackNotification function returns correct
Test Description: 
    The test checks that the function CryIf_CallbackNotification() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CallbackNotification()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CallbackNotification() with job being a null pointer and check that the error
		CRYIF_E_PARAM_POINTER is raised.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91013/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CALLBACKNOTIFICATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CallbackNotification/source/application/tests_CallbackNotification.c</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CallbackNotification function returns correct
Test Description: 
    The test checks that the function CryIf_CallbackNotification() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CallbackNotification()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CallbackNotification() with valid input.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91013/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_CANCELJOB_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CancelJob/source/application/tests_CancelJob.c</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CancelJob function returns correct
Test Description: 
    The test checks that the function CryIf_CancelJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CancelJob()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_CancelJob() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CANCELJOB_PARAM_CHANNEL</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CancelJob/source/application/tests_CancelJob.c</sourcefile>
      <sourceline>212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CancelJob function returns correct
Test Description: 
    The test checks that the function CryIf_CancelJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CancelJob()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_CancelJob() with channelId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CANCELJOB_PARAM_JOB</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CancelJob/source/application/tests_CancelJob.c</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CancelJob function returns correct
Test Description: 
    The test checks that the function CryIf_CancelJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CancelJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CancelJob() with job being a null pointer and check that the error
        CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CANCELJOB</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CancelJob/source/application/tests_CancelJob.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_CancelJob function returns correct
Test Description: 
    The test checks that the function CryIf_CancelJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CancelJob()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_CancelJob() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_CANCELJOB_EMPTY_CHANNEL</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CancelJobEmptyChannel/source/application/tests_CancelJob.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Tests CryIf_CancelJob with invalid channel configuration
Test Description: 
    The test checks that the function CryIf_CancelJob() correctly processes the input and returns
    the correct output values in case of invalid configured CryIf channels.
  
Test Object: 
    CryIf_CancelJob()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_CancelJob() with invalid input and check that E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91014/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_CUSTOMSYNC_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CustomSync/source/application/tests_CustomSync.c</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_CustomSync() function call
Test Description: 
    The test checks that if the function CryIf_CustomSync() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_CustomSync()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CustomSync() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CUSTOMSYNC_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CustomSync/source/application/tests_CustomSync.c</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_CustomSync() function call
Test Description: 
    The test checks that if the function CryIf_CustomSync() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_CustomSync()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CustomSync() with cryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CUSTOMSYNC_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CustomSync/source/application/tests_CustomSync.c</sourcefile>
      <sourceline>258</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_CustomSync() function call
Test Description: 
    The test checks that if the function CryIf_CustomSync() is called with pointers set to NULL_PTR
    CryIf sets the Det error PARAM_POINTER and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_CustomSync()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CustomSync() with NULL pointers and check that the
    error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_CUSTOMSYNC</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_CustomSync/source/application/tests_CustomSync.c</sourcefile>
      <sourceline>361</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_CustomSync() function call
Test Description: 
    The test checks that the function CryIf_CustomSync() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_CustomSync()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_CustomSync() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CustomSync/SWS_CryIf_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_GETVERSIONINFO_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_GetVersionInfo/source/application/tests_GetVersionInfo.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_GetVersionInfo function returns correct
Test Description: 
    The test checks that the function CryIf_GetVersionInfo() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_GetVersionInfo()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_GetVersionInfo() when the module is not yet initialized and check that
		the error CRYIF_E_UNINIT is raised.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_GETVERSIONINFO_PARAM_VERSIONINFO</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_GetVersionInfo/source/application/tests_GetVersionInfo.c</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_GetVersionInfo function returns correct
Test Description: 
    The test checks that the function CryIf_GetVersionInfo() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_GetVersionInfo()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_GetVersionInfo() with versioninfo being a null pointer and check that the error
		CRYIF_E_PARAM_POINTER is raised.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_GETVERSIONINFO</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_GetVersionInfo/source/application/tests_GetVersionInfo.c</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_GetVersionInfo function returns correct
Test Description: 
    The test checks that the function CryIf_GetVersionInfo() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_GetVersionInfo()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_GetVersionInfo() with versioninfo being valid.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91001/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_INITS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_Init/source/application/test_Inits.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Tests the functions before CryIf_Init call
Test Description: 
    The test checks that the functions correctly
    processes the input and returns the correct output values before
    CryIf_Init() is called.
  
Test Object: 
    CryIf_Init()
  
Test Precondition: 
  
Test Execution: 
	01: call CryIf_Init() and check that the error CRYIF_E_INIT_FAILED is not raised.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91000/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYCOPY_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyCopy/source/application/tests_KeyCopy.c</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyCopy() function call
Test Description: 
    The test checks that if the function CryIf_KeyCopy() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyCopy() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYCOPY_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyCopy/source/application/tests_KeyCopy.c</sourcefile>
      <sourceline>301</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyCopy() function call
Test Description: 
    The test checks that if the function CryIf_KeyCopy() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyCopy() with cryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYCOPY_PARAM_TARGET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyCopy/source/application/tests_KeyCopy.c</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyCopy() function call
Test Description: 
    The test checks that if the function CryIf_KeyCopy() is called with a targetCryIfKeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyCopy() with targetCryIfKeyId being out of range and check
    that the error CRYPTO_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYCOPY_RETURN_VALUES</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyCopy/source/application/tests_KeyCopy.c</sourcefile>
      <sourceline>439</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyCopy() function call
Test Description: 
    The test checks various return values set in Crypto_1_Alpha stub when
    CryIf_KeyCopy() function is called for copying source and target keys.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyCopy() and check the return value when Crypto_KeyCopy
        returns different non E_OK values
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00120</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00121</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CryIfKeyCopy/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYCOPY_SAME_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyCopy/source/application/tests_KeyCopy.c</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyCopy() function call
Test Description: 
    The test checks that the function CryIf_KeyCopy() correctly copies keys on the
    same Crypto Driver.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyCopy() with valid input, check that E_OK is returned and
      Crypto_KeyCopy() was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00119</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYCOPY_MULTI_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyCopy/source/application/tests_KeyCopy.c</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test of the CryIf_KeyCopy() function call
Test Description: 
    The test checks that the function CryIf_KeyCopy() correctly processes the input and returns
    the correct output values when used with multiple Crypto Drivers.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyCopy() with valid input from different Crypto Drivers, check that E_OK is
      returned and that the KeyElementGet() function of the source key Crypto Driver and the
      KeyElementSet() function of the target key Crypto Driver was called for each key element.
  02: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementGet()
      function of the source key Crypto Driver returning an error and check that E_NOT_OK is returned.
  03: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementGet()
      function of the target key Crypto Driver returning an error and check that E_NOT_OK is returned.
  04: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementGet()
      function of the target key  Crypto Driver returning E_OK with invalid key element size.
  05: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementIdsGet()
      function of the source key Crypto Driver returning E_NOT_OK.
  06: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementIdsGet()
      function of the target key  Crypto Driver returning E_NOT_OK.
  07: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementGet()
      function of the source key Crypto Driver returning E_NOT_OK.
  08: call CryIf_KeyCopy() with valid input from different Crypto Drivers, but with KeyElementSet()
      function of the target key Crypto Driver returning E_NOT_OK.
  09: call CryIf_KeyCopy() with valid inputs and all target and source key elements are identical from different Crypto Drivers.
      check that E_OK is returned and KeyElementSet() with target keyId is called 2 times
  10: call CryIf_KeyCopy() with valid inputs and None target and source key elements are identical from different Crypto Drivers.
      check that E_OK is returned and KeyElementSet() with target keyId is not called
  11: call CryIf_KeyCopy() with valid inputs and partial target and source key elements are identical from different Crypto Drivers.
      check that E_OK is returned and KeyElementSet() is called only 1 time
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00120</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_KeyCopy/SWS_CryIf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYDERIVE_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyDerive/source/application/tests_KeyDerive.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyDerive function returns correct
Test Description: 
    The test checks that the function CryIf_KeyDerive() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyDerive()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyDerive() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYDERIVE_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyDerive/source/application/tests_KeyDerive.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyDerive function returns correct
Test Description: 
    The test checks that the function CryIf_KeyDerive() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyDerive()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyDerive() with cryIfKeyId being out of range and check that the
      error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYDERIVE_PARAM_TARGET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyDerive/source/application/tests_KeyDerive.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyDerive function returns correct
Test Description: 
    The test checks that the function CryIf_KeyDerive() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyDerive()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyDerive() with targetCryIfKeyId being out of range and check
      that the error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYDERIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyDerive/source/application/tests_KeyDerive.c</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyDerive function returns correct
Test Description: 
    The test checks that the function CryIf_KeyDerive() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyDerive()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyDerive() with valid input and check that E_OK is returned.
  02: call CryIf_KeyDerive() with keys from different Crypto Drivers and check that E_NOT_OK is
      returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91009/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPY_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopy/source/application/tests_KeyElementCopy.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyElementCopy() function call
Test Description: 
    The test checks that if the function CryIf_KeyElementCopy() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK
  
Test Object: 
    CryIf_KeyElementCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopy() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPY_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopy/source/application/tests_KeyElementCopy.c</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyElementCopy() function call
Test Description: 
    The test checks that if the function CryIf_KeyElementCopy() is called with a targetCryIfKeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyElementCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopy() with cryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPY_PARAM_TARGET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopy/source/application/tests_KeyElementCopy.c</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyElementCopy() function call
Test Description: 
    The test checks that if the function CryIf_KeyElementCopy() is called with a targetCryIfKeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyElementCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopy() with targetCryIfKeyId being out of range and check
    that the error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPY_RETURN_VALUES</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopy/source/application/tests_KeyElementCopy.c</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test of the CryIf_KeyElementCopy() function call
Test Description: 
    The test checks that the function CryIf_KeyElementCopy() correctly
    processes the input and returns the correct not E_OK values.
  
Test Object: 
    CryIf_KeyElementCopy()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyElementCopy() and check the return value when Crypto_KeyElementCopy returns different non E_OK values
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00114</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00115</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CryIfKeyElementCopy/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPY_SAME_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopy/source/application/tests_KeyElementCopy.c</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyElementCopy() function call
Test Description: 
    The test checks that the function CryIf_KeyElementCopy() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementCopy()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyElementCopy() with cryIfKeyId and targetCryIfKeyId valid and in the same
        Crypto Drivers and with identical key element IDs, check that E_OK is returned,
        Crypto_KeyElementCopy() was called, and the correct values had been handed over to that
        function.

    02: call CryIf_KeyElementCopy() with cryIfKeyId and targetCryIfKeyId valid and in the same
        Crypto Drivers and with different key element IDs, check that E_OK is returned,
        Crypto_KeyElementCopy() was called, and the correct values had been handed over to that
        function.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00113</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPY_MULTI_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopy/source/application/tests_KeyElementCopy.c</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementCopy function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopy() correctly
    processes the input and returns the correct output values when used with two different
    Crypto Drivers.
  
Test Object: 
    CryIf_KeyElementCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopy() with valid cryIfKeyId, valid targetCryIfKeyId, different
      key element IDs, and in different Crypto Drivers and check that E_OK is returned,
      no DET Error is reported.

  02: call CryIf_KeyElementCopy() with valid cryIfKeyId, valid targetCryIfKeyId, identical
      key element IDs, and in different Crypto Drivers and check that E_OK is returned and that
      Crypto_KeyElementGet and Crypto_KeyElementSet have been called and that the correct
      values have been handed over to them.

  03: call CryIf_KeyElementCopy() with valid cryIfKeyId, valid targetCryIfKeyId, different
      key element IDs, and in different Crypto Drivers and check that E_OK is returned and that
      Crypto_KeyElementGet and Crypto_KeyElementSet have been called and that the correct
      values have been handed over to them.

  04: call CryIf_KeyElementCopy() with valid cryIfKeyId, valid targetCryIfKeyId, different
      key element IDs, target key element size is bigger than source key element size
      and in different Crypto Drivers and check that E_OK is returned and that
      Crypto_KeyElementGet and Crypto_KeyElementSet have been called and that the correct
      values have been handed over to them.

  05: call CryIf_KeyElementCopy() with valid cryIfKeyId and valid targetCryIfKeyId and in different
      Crypto Drivers, but with KeyElementGet() function of the first Crypto Driver returning an
      error and check that E_NOT_OK is returned.

  06: call CryIf_KeyElementCopy() with valid cryIfKeyId and valid targetCryIfKeyId and in different
      Crypto Drivers, but with 1st call KeyElementGet() function of the first Crypto Driver returning an error
      and check that E_NOT_OK is returned.

  07: call CryIf_KeyElementCopy() with valid cryIfKeyId and valid targetCryIfKeyId and in different
      Crypto Drivers, but with KeyElementGet() function of the second Crypto Driver returning E_OK
      with invalid output result length and check that E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91015/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00114</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopyPartial/source/application/tests_KeyElementCopyPartial.c</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementCopyPartial function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopyPartial() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementCopyPartial()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopyPartial() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopyPartial/source/application/tests_KeyElementCopyPartial.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementCopyPartial function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopyPartial() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementCopyPartial()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopyPartial() with cryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  01: call CryIf_KeyElementCopyPartial() with targetCryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_SAME_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopyPartial/source/application/tests_KeyElementCopyPartial.c</sourcefile>
      <sourceline>264</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementCopyPartial function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopyPartial() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementCopyPartial()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyElementCopyPartial() with cryIfKeyId and targetCryIfKeyId valid and in the same
        Crypto Drivers and with identical key element IDs, check that E_OK is returned,
        Crypto_KeyElementCopyPartial() was called, and the correct values had been handed over to that
        function.

    02: call CryIf_KeyElementCopyPartial() with cryIfKeyId and targetCryIfKeyId valid and in the same
        Crypto Drivers and with different key element IDs, check that E_OK is returned,
        Crypto_KeyElementCopyPartial() was called, and the correct values had been handed over to that
        function.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00139</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_MULTI_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopyPartial/source/application/tests_KeyElementCopyPartial.c</sourcefile>
      <sourceline>410</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementCopyPartial function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopyPartial() correctly
    processes the input and returns the correct output values when used with two different
    Crypto Drivers.
  
Test Object: 
    CryIf_KeyElementCopyPartial()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementCopyPartial() with valid cryIfKeyId, valid targetCryIfKeyId, identical
      key element IDs, and in different Crypto Drivers and check that E_OK is returned and that
      Crypto_KeyElementGet and Crypto_KeyElementSet have been called and that the correct
      values have been handed over to them.

  02: call CryIf_KeyElementCopyPartial() with valid cryIfKeyId, valid targetCryIfKeyId, different
      key element IDs, and in different Crypto Drivers and check that E_OK is returned and that
      Crypto_KeyElementGet and Crypto_KeyElementSet have been called and that the correct
      values have been handed over to them.

  03: call CryIf_KeyElementCopyPartial() with valid cryIfKeyId and valid targetCryIfKeyId and in different
      Crypto Drivers, but with KeyElementGet() function of the first Crypto Driver returning an
      error and check that E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00140</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_NOT_AVAILABLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopyPartial/source/application/tests_KeyElementCopyPartial.c</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementCopyPartial function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopyPartial() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementCopyPartial()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyElementCopyPartial() with a key element of cryIfKeyId not being available in
        targetCryIfKeyId and check that the element is not copied and that
        CRYPTO_E_KEY_NOT_AVAILABLE is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91018/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTCOPYPARTIAL_MULTI_DRIVER_LENGHTS_OUT_OF_RANGE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementCopyPartial/source/application/tests_KeyElementCopyPartial.c</sourcefile>
      <sourceline>681</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test that CryIf_KeyElementCopyPartial function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementCopyPartial() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementCopyPartial()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyElementCopyPartial() with (keyElementSourceOffset + keyElementCopyLength) &gt; UINT32_MAX
    VP: check for E_NOT_OK is returned
    02: call CryIf_KeyElementCopyPartial() with (keyElementTargetOffset + keyElementCopyLength) &gt; UINT32_MAX
    VP: check for E_NOT_OK is returned
    03: call CryIf_KeyElementCopyPartial() with (keyElementSourceOffset + keyElementCopyLength) &gt; the length of the source key element
    VP: check for E_NOT_OK is returned
    04: call CryIf_KeyElementCopyPartial() with (keyElementTargetOffset + keyElementCopyLength) &gt; the length of the target key element
    VP: check for E_NOT_OK is returned
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CryIf_KeyElementCopyPartial/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTGET_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementGet/source/application/tests_KeyElementGet.c</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementGet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementGet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementGet()
  
Test Precondition: 
  
Test Execution: 
  01: call call CryIf_KeyElementGet() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementGet/source/application/tests_KeyElementGet.c</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementGet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementGet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementGet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementGet() with cryIfKeyId being out of range and check that the
      error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_RESULTPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementGet/source/application/tests_KeyElementGet.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementGet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementGet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementGet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementGet() with resultPtr being a null pointer and check that the
      error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTGET_PARAM_RESULTLENGTHPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementGet/source/application/tests_KeyElementGet.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementGet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementGet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementGet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementGet() with resultLengthPtr being a null pointer and check that the
      error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTGET_VALUE_RESULTLENGTHPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementGet/source/application/tests_KeyElementGet.c</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementGet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementGet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementGet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementGet() with the value, resultLengthPtr is pointing to, being zero
      and check that the error CRYIF_E_PARAM_VALUE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTGET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementGet/source/application/tests_KeyElementGet.c</sourcefile>
      <sourceline>494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementGet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementGet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementGet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementGet() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91006/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTSET_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementSet/source/application/tests_KeyElementSet.c</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementSet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementSet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementSet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementSet() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementSet/source/application/tests_KeyElementSet.c</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementSet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementSet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementSet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementSet() with cryIfKeyId being out of range and check that the
      error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_KEYPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementSet/source/application/tests_KeyElementSet.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementSet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementSet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementSet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementSet() with keyPtr being a null pointer and check that the
      error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTSET_PARAM_KEYLENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementSet/source/application/tests_KeyElementSet.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementSet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementSet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementSet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementSet() with keyLength being zero and check that the
      error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYELEMENTSET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyElementSet/source/application/tests_KeyElementSet.c</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyElementSet function returns correct
Test Description: 
    The test checks that the function CryIf_KeyElementSet() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyElementSet()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyElementSet() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91004/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcPubVal/source/application/tests_KeyExchangeCalcPubVal.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcPubVal function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcPubVal() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcPubVal()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcPubVal() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcPubVal/source/application/tests_KeyExchangeCalcPubVal.c</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcPubVal function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcPubVal() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcPubVal()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcPubVal() with cryIfKeyId being out of range and check that the
      error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_VALUEPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcPubVal/source/application/tests_KeyExchangeCalcPubVal.c</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcPubVal function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcPubVal() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcPubVal()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcPubVal() with publicValuePtr being a null pointer and check that
      the error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_PARAM_VALUELENGTHPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcPubVal/source/application/tests_KeyExchangeCalcPubVal.c</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcPubVal function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcPubVal() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcPubVal()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcPubVal() with publicValueLengthPtr being a null pointer and
      check that the error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00085</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL_VALUE_LENGTHPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcPubVal/source/application/tests_KeyExchangeCalcPubVal.c</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcPubVal function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcPubVal() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcPubVal()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcPubVal() with the value, publicValueLengthPtr is pointing to,
      being zero and check that the error CRYIF_E_PARAM_VALUE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00086</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCPUBVAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcPubVal/source/application/tests_KeyExchangeCalcPubVal.c</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcPubVal function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcPubVal() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcPubVal()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcPubVal() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91010/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcSecret/source/application/tests_KeyExchangeCalcSecret.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcSecret function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcSecret() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcSecret()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcSecret() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcSecret/source/application/tests_KeyExchangeCalcSecret.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcSecret function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcSecret() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcSecret()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcSecret() with cryIfKeyId being out of range and check that the
      error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  Ts5Atl_ResultType
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_VALUEPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcSecret/source/application/tests_KeyExchangeCalcSecret.c</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcSecret function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcSecret() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcSecret()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcSecret() with partnerPublicValuePtr being a null pointer and
      check that the error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET_PARAM_VALUELENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcSecret/source/application/tests_KeyExchangeCalcSecret.c</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcSecret function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcSecret() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcSecret()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcSecret() with partnerPublicValueLength being zero and check
      that the error CRYIF_E_PARAM_VALUE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00094</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYEXCHANGECALCSECRET</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyExchangeCalcSecret/source/application/tests_KeyExchangeCalcSecret.c</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyExchangeCalcSecret function returns correct
Test Description: 
    The test checks that the function CryIf_KeyExchangeCalcSecret() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyExchangeCalcSecret()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyExchangeCalcSecret() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91011/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYGENERATE_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGenerate/source/application/tests_KeyGenerate.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGenerate() function call
Test Description: 
    The test checks that if the function CryIf_KeyGenerate() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyGenerate()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyGenerate() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYGENERATE_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGenerate/source/application/tests_KeyGenerate.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGenerate() function call
Test Description: 
    The test checks that if the function CryIf_KeyGenerate() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyGenerate()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyGenerate() with cryIfKeyId being out of range and check that the
        error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYGENERATE</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGenerate/source/application/tests_KeyGenerate.c</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGenerate() function call
Test Description: 
    The test checks that the function CryIf_KeyGenerate() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyGenerate()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyGenerate() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYGETSTATUS_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGetStatus/source/application/tests_KeyGetStatus.c</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGetStatus() function call
Test Description: 
    The test checks that if the function CryIf_KeyGetStatus() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyGetStatus()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyGetStatus() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYGETSTATUS_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGetStatus/source/application/tests_KeyGetStatus.c</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGetStatus() function call
Test Description: 
    The test checks that if the function CryIf_KeyGetStatus() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyGetStatus()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyGetStatus() with cryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYGETSTATUS_PARAM_CRYIFKEYSTATUSPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGetStatus/source/application/tests_KeyGetStatus.c</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGetStatus() function call
Test Description: 
    The test checks that if the function CryIf_KeyGetStatus() is called with keyStatusPtr set to NULL_PTR
    CryIf sets the Det error PARAM_POINTER and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeyGetStatus()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeyGetStatus() with keyStatusPtr being NULL_PTR and check that the
    error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYGETSTATUS</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeyGetStatus/source/application/tests_KeyGetStatus.c</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeyGetStatus() function call
Test Description: 
    The test checks that the function CryIf_KeyGetStatus() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeyGetStatus()
  
Test Precondition: 
  
Test Execution: 
    01-a: Call CryIf_KeyGetStatus() with Crypto_KeyGetStatus_Stub.RetVal = E_OK,
          Crypto_KeyGetStatus_Stub.keyStatusPtr_Out is set to CRYPTO_KEYSTATUS_INVALID.
    VP:   Check that E_OK and valid status is returned
    01-b: Call CryIf_KeyGetStatus() with Crypto_KeyGetStatus_Stub.RetVal = E_OK,
          Crypto_KeyGetStatus_Stub.keyStatusPtr_Out is set to CRYPTO_KEYSTATUS_VALID.
    VP:   Check that E_OK is returned and valid status is returned.
    02:   Call CryIf_KeyGetStatus() with Crypto_KeyGetStatus_Stub.RetVal = E_NOT_OK
    VP:   Check E_NOT_OK is returned by CryIf_KeyGetStatus.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYSETINVALID_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeySetInvalid/source/application/tests_KeySetInvalid.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeySetInvalid() function call
Test Description: 
    The test checks that if the function CryIf_KeySetInvalid() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeySetInvalid()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeySetInvalid() when the module is not yet initialized and check that
    the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYSETINVALID_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeySetInvalid/source/application/tests_KeySetInvalid.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeySetInvalid() function call
Test Description: 
    The test checks that if the function CryIf_KeySetInvalid() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeySetInvalid()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeySetInvalid() with cryIfKeyId being out of range and check that the
    error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYSETINVALID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeySetInvalid/source/application/tests_KeySetInvalid.c</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeySetInvalid() function call
Test Description: 
    The test checks that the function CryIf_KeySetInvalid() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeySetInvalid()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeySetInvalid() with valid input and check that E_OK is returned,
        Crypto_KeySetInvalid_Stub.Count is increased and Crypto_KeySetInvalid_Stub.cryptoKeyId value is as expected.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91021/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_KEYSETVALID_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeySetValid/source/application/tests_KeySetValid.c</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeySetValid() function call
Test Description: 
    The test checks that if the function CryIf_KeySetValid() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeySetValid()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeySetValid() when the module is not yet initialized and check that
      the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYSETVALID_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeySetValid/source/application/tests_KeySetValid.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeySetValid() function call
Test Description: 
    The test checks that if the function CryIf_KeySetValid() is called with a KeyId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_KeySetValid()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeySetValid() with cryIfKeyId being out of range and check that the
      error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_KEYSETVALID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_KeySetValid/source/application/tests_KeySetValid.c</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_KeySetValid() function call
Test Description: 
    The test checks that the function CryIf_KeySetValid() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_KeySetValid()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_KeySetValid() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_INIT_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call 
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() when the module is not yet initialized and check that
        the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_PARAM_CHANNELID_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with a channelId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with channelId being out of range and check that the
        error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_REDIRECTKEY_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>497</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called the configured redirectkey job,
    CryIf will set the reference Crypto KeyId and Key Element correctly.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with the invalid configured redirectKey Job.
    VP: Check that E_NOT_OK is returned.
    02: call CryIf_ProcessJob() with the valid configured redirectKey Job.
    VP: Check that E_OK is returned and the reference Crypto KeyId and Key Element are set correctly.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_PARAM_JOB_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with a pointers set to NULL_PTR then
    the CryIf sets the Det error PARAM_POINTER and the return value of the function is E_NOT_OK.
    The test checks that the function CryIf_ProcessJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with job being a null pointer and check that the error
        CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_PRIMITIVE_NOT_SUPPORTED_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>654</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with an unsupported primitive and check that E_NOT_OK is returned
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_RETURN_VALUES_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>849</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    determines job.cryptoKeyId from job.jobPrimitiveInfo.cryIfKeyId.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and
        job.jobPrimitiveInfo.cryIfKeyId
        set to values in range.
    VP: check that job.cryptoKeyId is
        set correctly and E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>995</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with keyIds out of range for any primitives it will correctly
    processes the input and return E_NOT_OK and set the DetError to CRYIF_E_PARAM_HANDLE.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and
        job.jobPrimitiveInfo.cryIfKeyId
        set to values out of range.
    VP: check that job.cryptoKeyId is
        not changed, error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p0/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>1143</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with cryIfKeyId set to value CRYIF_KEY_EMPTY for any primitives it will correctly
    processes the input and return E_NOT_OK and set the DetError to CRYIF_E_PARAM_HANDLE.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and
        job.jobPrimitiveInfo.cryIfKeyId set to value CRYIF_KEY_EMPTY, indicating a not configured key.
    VP: check that job.cryptoKeyId is
        not changed, error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned for all services not equal HASH SECCOUNTERREAD or SECCOUNTERINCREMENT.
        For these services is shall be checked that job.cryptoKeyId is changed to CRYIF_KEY_EMPTY and E_OK is returned.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_INIT_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call 
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called before the initialization of
    the module the CryIf sets the Det error CRYIF_E_UNINIT and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() when the module is not yet initialized and check that
        the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_PARAM_CHANNELID_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>432</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with a channelId out of range then
    the CryIf sets the Det error CRYIF_E_PARAM_HANDLE and the return value of the function is E_NOT_OK.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with channelId being out of range and check that the
        error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_REDIRECTKEY_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called the configured redirectkey job,
    CryIf will set the reference Crypto KeyId and Key Element correctly.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with the invalid configured redirectKey Job.
    VP: Check that E_NOT_OK is returned.
    02: call CryIf_ProcessJob() with the valid configured redirectKey Job.
    VP: Check that E_OK is returned and the reference Crypto KeyId and Key Element are set correctly.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_PARAM_JOB_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>586</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with a pointers set to NULL_PTR then
    the CryIf sets the Det error PARAM_POINTER and the return value of the function is E_NOT_OK.
    The test checks that the function CryIf_ProcessJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with job being a null pointer and check that the error
        CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_PRIMITIVE_NOT_SUPPORTED_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>658</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with an unsupported primitive and check that E_NOT_OK is returned
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_RETURN_VALUES_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: call CryIf_ProcessJob() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OK_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>857</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    determines job.cryptoKeyId from job.jobPrimitiveInfo.cryIfKeyId.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and
        job.jobPrimitiveInfo.cryIfKeyId
        set to values in range.
    VP: check that job.cryptoKeyId is
        set correctly and E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_OUTOFRANGE_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>1004</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with keyIds out of range for any primitives it will correctly
    processes the input and return E_NOT_OK and set the DetError to CRYIF_E_PARAM_HANDLE.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and
        job.jobPrimitiveInfo.cryIfKeyId
        set to values out of range.
    VP: check that job.cryptoKeyId is
        not changed, error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/SWS_CryIf_00134/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_PROCESSJOB_KEYIDS_EMPTY_CUSTOM_SERVICE_ENABLED_true</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_ProcessJob_p1/source/application/tests_ProcessJob.c</sourcefile>
      <sourceline>1153</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test of the CryIf_ProcessJob() function call
Test Description: 
    The test checks that if the function CryIf_ProcessJob() is called with cryIfKeyId set to value CRYIF_KEY_EMPTY for any primitives it will correctly
    processes the input and return E_NOT_OK and set the DetError to CRYIF_E_PARAM_HANDLE.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and
        job.jobPrimitiveInfo.cryIfKeyId set to value CRYIF_KEY_EMPTY, indicating a not configured key.
    VP: check that job.cryptoKeyId is
        not changed, error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned for all services not equal HASH SECCOUNTERREAD or SECCOUNTERINCREMENT.
        For these services is shall be checked that job.cryptoKeyId is changed to CRYIF_KEY_EMPTY and E_OK is returned.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_ProcessJob/00000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_91003/CryIfEbCustomServiceApis_False/0001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00133/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00141/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Add/CryIf_CustomService/SWS_CryIf_00143/CryIfEbCustomServiceApis_True/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_CONF_RANDOMSEED_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_RandomSeed/source/application/tests_RandomSeed.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_RandomSeed function returns correct
Test Description: 
    The test checks that the function CryIf_RandomSeed() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_RandomSeed()
  
Test Precondition: 
  
Test Execution: 
	01: call CryIf_RandomSeed() when the module is not yet initialized and check that
		the error CRYIF_E_UNINIT is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_RANDOMSEED_PARAM_CRYIFKEYID</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_RandomSeed/source/application/tests_RandomSeed.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_RandomSeed function returns correct
Test Description: 
    The test checks that the function CryIf_RandomSeed() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_RandomSeed()
  
Test Precondition: 
  
Test Execution: 
	01: call CryIf_RandomSeed() with cryIfKeyId being out of range and check that the
		error CRYIF_E_PARAM_HANDLE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_RANDOMSEED_PARAM_SEEDPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_RandomSeed/source/application/tests_RandomSeed.c</sourcefile>
      <sourceline>214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_RandomSeed function returns correct
Test Description: 
    The test checks that the function CryIf_RandomSeed() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_RandomSeed()
  
Test Precondition: 
  
Test Execution: 
	01: call CryIf_RandomSeed() with seedPtr being a null pointer and check that the
		error CRYIF_E_PARAM_POINTER is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_RANDOMSEED_PARAM_SEEDLENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_RandomSeed/source/application/tests_RandomSeed.c</sourcefile>
      <sourceline>295</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_RandomSeed function returns correct
Test Description: 
    The test checks that the function CryIf_RandomSeed() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_RandomSeed()
  
Test Precondition: 
  
Test Execution: 
	01: call CryIf_RandomSeed() with seedLength being zero and check that the error
		CRYIF_E_PARAM_VALUE is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>TS_CRYIF_CONF_RANDOMSEED</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Conformance/IN/CryIf_RandomSeed/source/application/tests_RandomSeed.c</sourcefile>
      <sourceline>376</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_RandomSeed function returns correct
Test Description: 
    The test checks that the function CryIf_RandomSeed() correctly
    processes the input and returns the correct output values.
  
Test Object: 
    CryIf_RandomSeed()
  
Test Precondition: 
  
Test Execution: 
	01: call CryIf_RandomSeed() with valid input and check that E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Bsw/Api/SWS_CryIf_91007/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the Bswmd.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementationRefs/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdDual</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the Bswmd and
     the correct CommonPublishInformation is used if not configured.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdOff</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the
     CommonPublishInformation if the Bswmd is not configured.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdOffSingle</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the
     CommonPublishInformation if only a single Crypto module is used and the Bswmd shall not be used.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdOnSingle</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the Bswmd
     if only a single Crypto module is used and the Bswmd shall be used.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementationRefs/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdOffSingleNoMIP</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the
     CommonPublishInformation if only a single Crypto module is used and the Bswmd shall not be used.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>TS_CryIf_Gen_CryptoMip_BswmdOnSingleNoMIP</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_CryptoMip/source/application/testspec.h</sourcefile>
      <sourceline>199</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for MIP.
Test Description: 
     This generic tests if the ApiInfix and the VendorId are correctly read out of the Bswmd
     if only a single Crypto module is used and the Bswmd shall be used.
    
Test Object: None.
Test Precondition: 
      none
    
Test Execution: 
    1) Load the project.
    2) Run the importer for the opened project.
    3) Generated the code using the project based code generator.
    4) Check if the correct files are included.
    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Dsn/Tbcg/Mip/CryIfEbGeneralBswmdImplementation/0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementation/0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbGeneralBswmdImplementationRefs/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Add/CryIfEbCryptoBswImplementationRef/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CryIf_GenTest_VSMD</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Generic/IN/CryIf_Gen_VsmdCheck/source/application/tests.h</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test of vendor-specific against standard module definition.
Test Description: 
      This test shall verify that the vendor-specific module definiton (VSMD) matches the standard
      module definition (StMD).
    
Test Object: None.
Test Precondition: 
    
Test Execution: 
      VP: There shall be no violations except:

    
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Sws/ECUC_CryIf_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CryIf_Impl_ProcessJob_NoCryIfChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Implementation/IN/CryIf_Impl_ProcessJob_NoCryIfChannels/source/application/Tests.c</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_ProcessJob function returns correct
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    processes the configuration w/o CryIfChannels of the CryIf and returns the
    correct output values..
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and job.jobPrimitiveInfo.cryIfKeyId,
        set to a value in range.
    VP: check that E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CryIfProcessJob/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CryIfChannels/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CryIf_Impl_ProcessJob_NoCryIfKeys</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Implementation/IN/CryIf_Impl_ProcessJob_NoCryIfKeys/source/application/Tests.c</sourcefile>
      <sourceline>284</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_ProcessJob function returns correct
Test Description: 
    The test checks that the function CryIf_ProcessJob() correctly
    processes the configuration w/o CryIfKeys of the CryIf and returns the
    correct output values.
  
Test Object: 
    CryIf_ProcessJob()
  
Test Precondition: 
  
Test Execution: 
    01: iterate over services.
    02: call CryIf_ProcessJob() with a job of a specific service and job.jobPrimitiveInfo.cryIfKeyId,
        set to a value in range.
    VP: check that job.cryptoKeyId is changed to CRYIF_KEY_EMPTY and E_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R0000/Cmn/CryIfProcessJob/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>CryIf.R2111/Dsn/Alg/CRYIF_KEY_EMPTY/0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CryIf_Impl_SymbolicNames</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Implementation/IN/CryIf_Impl_SymbolicNames/source/application/Tests.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test for correct usage of symbolic names.
Test Description: 
    This test checks correct usage of the symbolic names of CryptoDriverObject and CryptoKeys.
    The CryIf module shall be backwards compatible and also work without the symbolic names.
    This has to be tested aswell.
  
Test Object: 
    &lt;itemizedlist&gt;
      &lt;listitem&gt;CryIf_Channels&lt;/listitem&gt;
      &lt;listitem&gt;CryIf_Keys&lt;/listitem&gt;
    &lt;/itemizedlist&gt;
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Req/Cfg/SymbolicNames/General/00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_CRYIF_IMPL_KEYCOPY_SIZE_MISMATCH_MULTI_DRIVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_CryIf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/tests/Implementation/IN/CryIf_KeyCopy_Robustness/source/application/tests_KeyCopyRobustness.c</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test that CryIf_KeyCopy function returns correct
Test Description: 
    The test checks that the function CryIf_KeyCopy() correctly processes the input and returns
    the correct output values when used with multiple Crypto Drivers.
  
Test Object: 
    CryIf_KeyCopy()
  
Test Precondition: 
  
Test Execution: 
  01: call CryIf_KeyCopy() with the source element size in the first Crypto Driver not matching
      the target element size in the second Crypto Driver and check that DET error
      CRYIF_E_KEY_SIZE_MISMATCH is raised and E_NOT_OK is returned.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>CryIf.R2111/Sws/SWS_CryIf_00121</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
