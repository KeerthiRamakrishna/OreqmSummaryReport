<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_E2EP01_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_ASR_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_AUTOSAR_SWS_E2ETransformer_P01.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_PRS_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_TL_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_PRS_Pxx_PRS_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_SWS_PRS_UC_E2E_SWS_PRS_UC_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesDynLen_TL_Requirements_DynLen.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesGeneral_TL_Requirements_General.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/common_req/E2EP01_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 22:10:34 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_E2EP01_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_ASR_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_AUTOSAR_SWS_E2ETransformer_P01.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_PRS_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2EP01_requirements_TL_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_PRS_Pxx_PRS_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_SWS_PRS_UC_E2E_SWS_PRS_UC_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesDynLen_TL_Requirements_DynLen.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesGeneral_TL_Requirements_General.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/common_req/E2EP01_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

<!--  GENERIC AUTOSAR REQUIREMENTS  -->

    <specobject>
      <id>ASR_E2EP01020050</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00050.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00050'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020311</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00311.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00311'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00048
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00048'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          applies,
          but the E2E library Profile 01 shall be built of the following files:
          E2E_P01.h and E2E_P01.c
        </para>
        <para>
          Note:
          E2E.h (common header) is shared by all profiles and exists in a different module.
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_05_Files</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020215</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00215.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00215'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00115.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00115'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_04_IncludeFiles</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020049</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00049.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00049'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00011.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00011'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_InvalidInput</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_InvalidInput</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020216</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00216.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00216'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00047
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00047'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
          applies,
          but only the library functions E2E_P01Protect() and E2E_P01Check()
          shall use the specified return values,
          and the error flag <code>E2E_E_INTERR</code> is not used
          as return value.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_InvalidInput</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_InvalidInput</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.InternalError</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020017</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00017.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00017'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00037.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00037'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_03_NoConfigParams</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00038
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00038'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          applies,
          but the version numbers shall be published
          as stated in [BSW00318] according to the General Requirements on Basic Software Modules
          of ASR V3.1.0 R4.0 Rev 2 <biblioref linkend="ASRGENREQUSBSW"/> and for sake of compatibility
          also of ASR V2.3.0 R3.1 Rev 5 <biblioref linkend="ASRGENREQUSBSW"/>,
          and the module id shall not be published.
        </para>
        <para>
          That is, the following version numbers shall be defined in the header file
          according to [BSW00318] (General Requirements on Basic Software Modules
          of ASR V3.1.0 R4.0 Rev 2 <biblioref linkend="ASRGENREQUSBSW"/>):
          <itemizedlist>
            <listitem>E2E_VENDOR_ID</listitem>
            <listitem>E2E_AR_RELEASE_MAJOR_VERSION</listitem>
            <listitem>E2E_AR_RELEASE_MINOR_VERSION</listitem>
            <listitem>E2E_AR_RELEASE_REVISION_VERSION</listitem>
            <listitem>E2E_SW_MAJOR_VERSION</listitem>
            <listitem>E2E_SW_MINOR_VERSION</listitem>
            <listitem>E2E_SW_PATCH_VERSION</listitem>
          </itemizedlist>
        </para>
        <para>
          For sake of compatibility, the following additional version numbers
          shall be defined in the header file
          according to [BSW00318] (General Requirements on Basic Software Modules
          of ASR V2.3.0 R3.1 Rev 5):
        <itemizedlist>
          <listitem>E2E_AR_MAJOR_VERSION </listitem>
          <listitem>E2E_AR_MINOR_VERSION </listitem>
          <listitem>E2E_AR_REVISION_VERSION </listitem>
        </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_03_PublishedInformation</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <!-- E2EP01 Autosar SWS Requirements  -->

    <specobject>
      <id>ASR_E2EP01020018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>3</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00018
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00018'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>enh.E2EP01.ReSync</srcid><srcstatus/><internalId>460</internalId></linkedfrom><linkedfrom><srcid>enh.E2EP01.ExtendedDataLength</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_Struct</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_10000_ASCE2EXF516</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_10100_ASCE2EXF516</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020646</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00200.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00200'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_03_TypeDataIDMode</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00020.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00020'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_03_TypeSenderState</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020644</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>2</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00021.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00021'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_Struct</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>enh.E2EP01.ReSync</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020645</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>2</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00022
        <para>
          <itemizedlist>
            <listitem>
              <para>
                 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00022'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.CheckStatusType</srcid><srcstatus/><internalId>457</internalId></linkedfrom><linkedfrom><srcid>enh.E2EP01.ReSync</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_CheckEnum</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020588.PRS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>3</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00166
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00166'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ComTest_01</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020385</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00385.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00385'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ComTest_01</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_Ok</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_InvalidInput</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020386</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00386.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00386'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_Ok</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_InvalidInput</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020588</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00588
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00588'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        this has been added to R22-11 and status is draft
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>2</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00158
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00158'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ComTest_01</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020390</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00390.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00390'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ComTest_01</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_Ok</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_InvalidInput</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020389</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>2</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00389.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                In case State is NULL, E2E_P01CheckInit shall return immediately with E2E_E_INPUTERR_NULL.
                Otherwise, it shall initialize the state structure, setting:
                 1. LastValidCounter = 0
                 2. MaxDeltaCounter = 0
                 3. WaitForFirstData = FALSE (ASR 4.2.1) | TRUE (ASR 4.3.0)
                 4. NewDataAvailable = TRUE
                 5. LostData = 0
                 6. Status = E2E_P01STATUS_NONEWDATA
                 7. NoNewOrRepeatedDataCounter = 0
                 8. SyncCounter = 0.
              </para>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00389'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_Ok</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_InvalidInput</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_11_WaitForFirstData</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020382</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00382.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00382'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ComTest_01</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020383</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00383
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00383'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
          applies,
          but if Status equals E2E_P01STATUS_NONEWDATA, then E2E_P01MapStatusToSM() shall return E2E_P_NONEWDATA instead of E2E_P_REPEATED .
          See also <ulink url="https://jira.autosar.org/browse/AR-7661">https://jira.autosar.org/browse/AR-7661</ulink>.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01MapStatusToSMProfileBehaviorTRUE</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020598</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020476</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00476
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00476'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
          applies,
          but if Status equals E2E_P01STATUS_NONEWDATA, then E2E_P01MapStatusToSM() shall return E2E_P_NONEWDATA instead of E2E_P_REPEATED .
          See also <ulink url="https://jira.autosar.org/browse/AR-7661">https://jira.autosar.org/browse/AR-7661</ulink>.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01MapStatusToSMProfileBehaviorFALSE</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020384</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item SWS_E2E_00384
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00384'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01MapStatusToSMProfileBehaviorTRUE</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01MapStatusToSMProfileBehaviorFALSE</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <!-- SWS UC Requirements -->

    <specobject>
      <id>ASR_E2EP0102UC00313</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00313
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00313'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00202</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00202
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00202'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00203</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00203
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00203'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00204</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00204
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00204'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00205</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00205
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00205'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00232</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00232
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00232'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00206</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00206
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00206'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00207</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00207
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00207'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00209</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00209
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00209'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00233</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00233
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00233'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00277</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00277
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00277'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00278</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00278
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00278'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00258</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00258
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00258'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2EP01.SWS_E2EXf_00102.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_&lt;transformerId&gt; shall perform the following
            two precondition checks, without continuing further processing:
             1.  (buffer == NULL)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength  &lt;
                  EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06001_IOValidParamCheck</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00102</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00106.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength  &lt;
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL
             3.  buffer == NULL
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00106</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00108.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBitsToShiftbits,
            in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable for profile 01.
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00109.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
            inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting
            with offset upperHeaderBitsToShift) to parameter buffer starting with the destination
            offset of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable for profile 01.
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00109</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00115.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
            destination offset of BufferProperties.headerLength. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07002_CopyUpperHeader</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00115</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00111.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_&lt;transformerId&gt; shall set
            *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06003_BufLength</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07003_BufLength</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00111</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00139.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt; shall perform a check of
            the *bufferLength (after the computation of *bufferLength):
            If (*bufferLength != config-&gt;DataLength/8), then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06004_BufLengthCheck</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07004_BufLengthCheck</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00139</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00107.P01</id>
         <status>approved</status> <!-- draft in ASR R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If DataTransformationStatusForwarding is set to no TransformerStatusForwarding and PXX
            is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44,
            The function E2EXf_&lt;transformerId&gt;() shall invoke
            E2E_PXXProtect(), passing to that function the appropriate Config and State
            structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated
            with &lt;transformerId&gt;, as well as buffer and bufferLength
            (only for P04, P05, P06, P07, P08 ,P11 ,P22 and P44) that were updated in above
            requirements SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06005_InvokeProtect</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07005_InvokeProtect</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_14000_FWCodeStatusCheck</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00107</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00018.P01</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            In case E2E_P01Protect()or E2E_P01Forward() returns E2E_E_OK, then
            E2EXf_&lt;transformerId&gt; shall return E_OK, otherwise E2EXf_&lt;transformerId&gt;
            shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R21-11 and its in draft version.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06006_RetValProtect</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07006_RetValProtect</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00018</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00105.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following two precondition checks, without continuing further processing:
             1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u
                 + EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06101_IOValidParamCheck</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00105</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00103.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  If (bufferLength == NULL)
             3.  If (buffer == NULL).
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07101_IOValidParamCheck</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00103</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00140.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
             1.  if(inputBuffer == NULL and inputBufferLength == 0), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to FALSE
             2.  else if (inputBufferLength == config-&gt;DataLength/8), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to TRUE.
             3.  else return E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07103_NewData</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00140</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00123.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  Config,
              -  State,
              -  Data
            Concerning pointer to Data: if(inputBuffer == NULL and inputBufferLength == 0), then
            it shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
            inputBuffer.(RS_E2E_08538)
         </description>
         <comment>
             Incorporated RfC 70069
             'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
             see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
             For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient
             to have a valid pointer to data. From the dummy variable where it points to is never
             read. The size of the variable where it points to is considered as an implementation
             detail and thus not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00123</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00141.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
            1.  If(buffer == NULL and inputBufferLength == 0), then
                - variable NewDataAvailable of state object of type
                   E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                   &lt;transformerId&gt; shall be set to FALSE.
            2.  Else if (inputBufferLength == config-&gt;DataLength/8), then
                - variable NewDataAvailable of state object of type E2E_PXXCheckState
                  Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall
                  be set to TRUE.
            3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
           (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06103_NewData</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00141</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00124.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
               -  Config,
               -  State,
               -  Data
            Concerning pointer to Data: if(buffer == NULL and inputBufferLength == 0), then it shall
            pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read.
            The size of the variable where it points to is considered as an implementation detail
            and thus not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00124</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00142.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration parameter profileBehavior is PRE_R4_2, then
            for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
            MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
            the corresponding configuration object. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_08101_MaxDeltaCounterCheck</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_09101_MaxDeltaCounterCheck</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00142</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00104.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 04, 05, 06, 07, 11, 22: the function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
              -  config,
              -  state,
              -  data length: inputBufferLength
            pointer to data: inputBuffer (out-of-place version) or buffer (in-place
            version). (RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable for profile 01.
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00104</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00029.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
            E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
            and the profiles check Status (variable Status of state object of type
            E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
            independent check status. For P1/P2 mapping functions, there is an additional call
            parameter profileBehavior:
            -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
               shall be invoked with the call parameter profileBehavior = 1
            -  if configuration parameter profileBehavior is PRE_R4_2, then
               E2E_PXXMapStatusToSM() shall be invoked with call parameter profileBehavior = 0
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06104_InvokeMapStatusToSM</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07104_InvokeMapStatusToSM</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_08102_ProfileBehaviorParameterCheck</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_09102_ProfileBehaviorParameterCheck</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00029</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00028.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
            E2E_SMCheck() function, passing to that function the configuration object of type
            E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088])and state
            object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are associated
            with &lt;transformerId&gt;, plus the profile-independent check status that was computed
            by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06105_InvokeSMCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07105_InvokeSMCheck</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00028</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00027.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
            - the high nibble of the return
              of the function E2EXf_Inv_&lt;transformerId&gt; shall be set to the low nibble
              of the state of the state machine (member SMState of object of type
              E2E_SMStateType that is associated with &lt;transformerId&gt;, see
              [SWS_E2EXf_00125]).
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
              shall  be set to the low nibble of the profile-independent check status
              of type E2E_PCheckStatusType.
              If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
              E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06106_SMCheckRetVal</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07106_SMCheckRetVal</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00027</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00112.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (buffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
            bits, in parameter buffer, in direction right by 'distance' of
            BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable for profile 01.
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00112</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00113.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
            upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
            remaining part of inputBuffer skipping E2E header (i.e. starting with
            offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
            buffer starting with the destination offset of
           (upperHeaderBitsToShift).(RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable for profile 01.
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00113</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00116.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
            with the offset of BufferProperties.headerLength, to
            buffer.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07107_CopyUpperHeader</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00116</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00114.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
            *bufferLength = 0, otherwise it shall set
            *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06108_BufLength</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07108_BufLength</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00114</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

      <specobject>
        <id>E2EP01.SWS_E2EXf_00167.P01</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
        <version>1</version>
        <description>
          In case of Client/Server-Communication on the server side, if the return value ret equals
          to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
          (RS_E2E_08538)
        </description>
        <releases>
          <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
          <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.ClientServer</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>E2E.SWS_E2EXf_00167</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00037.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            Mandatory Interfaces
            API function         Description
            E2E_P01Check         Checks the Data received using the E2E profile 1. This includes CRC
                                 calculation, handling of Counter and Data ID.
            E2E_P01CheckInit     Initializes the check state
            E2E_P01Forward       Protects data which is forwarded by using the E2E profile 01. This
            (draft)              includes checksum calculation, handling of counter and Data ID.
                                 Detected Errors of received message will be reconstruct on output
                                 data.
            E2E_P01MapStatusToSM The function maps the check status of Profile 1 to a generic check
                                 status, which can be used by E2E state machine check function. The
                                 E2E Profile 1 delivers a more fine-granular status, but this is not
                                 relevant for the E2E state machine.
            E2E_P01Protect       Protects the array/buffer to be transmitted using the E2E profile 1.
                                 This includes checksum calculation, handling of counter and Data ID.
            E2E_P01ProtectInit   Initializes the protection state.
            E2E_SMCheck          Checks the communication channel. It determines if the data can be
                                 used for safety-related application, based on history of checks
                                 performed by a corresponding E2E_P0XCheck() function.
            E2E_SMCheckInit      Initializes the state machine.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R21-11 and its in draft state.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06005_InvokeProtect</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06104_InvokeMapStatusToSM</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06105_InvokeSMCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07005_InvokeProtect</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07104_InvokeMapStatusToSM</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07105_InvokeSMCheck</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_14000_FWCodeStatusCheck</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_16000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00037</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>66</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_Xfrm_00108.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            A transformer which is called with NULL_PTR as input data shall not change the output
            buffer unless the transformer invocation shall trigger an autonomous error reaction
            (see also [SWS_Rte_07420]).(SRS_Xfrm_00005)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06001_IOValidParamCheck</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06101_IOValidParamCheck</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07101_IOValidParamCheck</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07103_NewData</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_Xfrm_00032.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            -----------------------------------------------------------------------------
            Error Name                 | Error Code | Error Type | Description
            -----------------------------------------------------------------------------
            E_OK                       | 0x00       | -          | The communication is safe.
            -----------------------------------------------------------------------------
            E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                                   safety, although data with a re-
                                                                   peated counter were received.
            -----------------------------------------------------------------------------
            E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                                   safety, although a counter jump
                                                                   occurred.
            -----------------------------------------------------------------------------
            E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                                   safety, although the check itself
                                                                   failed.
            -----------------------------------------------------------------------------
            E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                                   safety, but no new data received.
            -----------------------------------------------------------------------------
            E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                                   tialization of transformer.
            -----------------------------------------------------------------------------
            E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                                   initialization of transformer be-
                                                                   cause a repeated counter was
                                                                   received.
            -----------------------------------------------------------------------------
            E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                                   tialization of transformer and a
                                                                   counter jump occurred.
            -----------------------------------------------------------------------------
            E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                                   tialization of transformer. There-
                                                                   fore the check failed.
            -----------------------------------------------------------------------------
            E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                                   initialization of transformer.
            -----------------------------------------------------------------------------
            E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                                   to use them.
            -----------------------------------------------------------------------------
            E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                                   to use them but some with a re-
                                                                   peated counter were received.
            -----------------------------------------------------------------------------
            E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                                   to use them, additionally a
                                                                   counter jump occurred.
            -----------------------------------------------------------------------------
            E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                                   to use them, additionally a check
                                                                   failed.
            -----------------------------------------------------------------------------
            E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                                   them, additionally no new data
                                                                   received.
            -----------------------------------------------------------------------------
            E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                                   be used.
            -----------------------------------------------------------------------------
            E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                                   not be used because a repeated
                                                                   counter was received.
            -----------------------------------------------------------------------------
            E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                                   be used due to a counter jump.
            -----------------------------------------------------------------------------
            E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                                   be used because a check failed.
            -----------------------------------------------------------------------------
            E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                                   safety and no new data received
            -----------------------------------------------------------------------------
            E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                                   is not active.
            -----------------------------------------------------------------------------
            E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                                   received. E2EStateMachine disabled.
            -----------------------------------------------------------------------------
            E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                                   E2EStateMachine disabled.
            -----------------------------------------------------------------------------
            E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                                   be used because a check failed.
                                                                   E2EStateMachine disabled.
            -----------------------------------------------------------------------------
            E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                                   E2EStateMachine disabled.
            -----------------------------------------------------------------------------
            E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                                   disabled E2E check.
            -----------------------------------------------------------------------------
            E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occurred, safety
                                                                   properties could not be checked
                                                                   (state or status cannot be deter-
                                                                   mined) but non-protected output
                                                                   data could be produced nonethe-
                                                                   less.
            -----------------------------------------------------------------------------
            E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
            -----------------------------------------------------------------------------
            E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occurred, safety
                                                                   properties could not be checked
                                                                   and NO output data could be pro-
                                                                   duced.
            ---------------------------------------------------------------------------------------
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_16000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00032</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_Xfrm_00051.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If a transformer returns a hard error, it shall leave the output buffer unchanged
            (SRS_Xfrm_00004)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06001_IOValidParamCheck</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06101_IOValidParamCheck</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07101_IOValidParamCheck</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00051</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.SWS_E2EXf_00133.P01</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If the E2E Transformer has not been correctly initialized (which means that
            E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() was not successfully
            called before), then all generated E2E Transformer APIs shall immediately
            return E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06000_NotInitialized</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06100_NotInitialized</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07000_NotInitialized</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07100_NotInitialized</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00133</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.Transformer.InPlace.NoCopying.P01</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            The setting upperHeaderBitsToShift == 0 implicits the use of ComXf
            which is applicable for profile 01.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06002_CopyUpperHeader</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.Transformer.InPlace.NoCopying</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.InvTransformer.InPlace.NoCopying.P01</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            The setting upperHeaderBitsToShift == 0 implicits the use of ComXf
            which is applicable for profile 01.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06107_CopyUpperHeader</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.InvTransformer.InPlace.NoCopying</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.SWS_E2EXf_00021.P01</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() function shall initialize
            all state structures managed by E2E transformer, calling the corresponding
            E2E_Init() method on each state variable.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06005_InvokeProtect</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06105_InvokeSMCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07005_InvokeProtect</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07105_InvokeSMCheck</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00021</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.Transformer.Server.ProtectStatePtrInputCheck.P01</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_&lt;transformerId&gt; on server-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <rationale>This requirement is not applicable as not supported in profile 01 so far.</rationale>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            and set by the RequestCounter of csTransactionHandlePtr-&gt;e2eCounter.
         </comment>
         <providescoverage>
           <provcov>
              <linksto>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</linksto>
              <dstversion>1</dstversion>
           <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.InvTransformer.Client.ProtectStatePtrInputCheck.P01</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_Inv_&lt;transformerId&gt; on client-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <rationale>This requirement is not applicable as not supported in profile 01 so far.</rationale>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            to setting the Counter member of CheckStatesPtr-&gt;PXXmCheckState.
         </comment>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00047.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            Imported Types
            Module:Imported Type
            E2E:
                E2E_P01CheckStateType
                E2E_P01CheckStatusType
                E2E_P01ConfigType
                E2E_P01DataIDMode
                E2E_P01ProtectStateType
                E2E_PCheckStatusType
                E2E_SMCheckStateType
                E2E_SMConfigType
                E2E_SMStateType
            Std_Types:
                Std_ExtractProtocolHeaderFieldsType
                Std_MessageResultType
                Std_MessageTypeType
                Std_ReturnType
                Std_TransformerForwardCode (draft)
                Std_VersionInfoType
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06002_CopyUpperHeader</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_14000_FWCodeStatusCheck</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00047</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00175.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side, if the
            E2E_PXXCheck function returns a value different from E2E_P_OK, the status shall be
            set to E2E_P_ERR.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00175</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00169.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf</source>
         <version>1</version>
         <description>
            If disableEndToEndStateMachine is to TRUE,
            - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to 0x6.
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to the low nibble of the profile-independent check status of type
              E2E_PCheckStatusType. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_16000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00169</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00173.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and
            Profile is P04, P05, P06, P07, P08, P11, P22 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter-1.
            (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00173</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00172.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
            requestCounter-1.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not supported in profile 01 so far.</rationale>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.ClientServer</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00172</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00203.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
            of the csTransactionHandle to the value of the local variable receivedRequestCounter.
            (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00203</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00202.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
            of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00202</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00201.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
            server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the address of the local variable
              sourceID
            - data length:
              inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                (out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (in-place version).
            (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00201</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00200.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the local variable sourceID
            - data length:
              inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
                . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (out-of-place version) or
                . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (in-place version).
            (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00200</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00199.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00199</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00198.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields()
            function passing the inputBuffer, the inputBufferLength,
            the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00198</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00197.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function
            passing the buffer, the bufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00197</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00196.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place
            and the out-of-place E2EXf_Inv_&lt;transformerId&gt; on the client-side shall
            set a local variable sourceID to the sourceID stored in the configuration.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00196</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00194.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of a local variable named messageType,
            and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00194</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00193.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00193</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00192.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional
            precondition checks, without continuing further processing:
            1. extractProtocolHeaderFields == NULL
            2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00192</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00191.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to transformerStatusForwarding and
            PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXForward(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the above requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00191</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00168.P01</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to transformerStatusForwarding and PXX is P01
            the function E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing
            to that function the appropriate Config and State structures (see [SWS_E2EXf_00125] and
            [SWS_E2EXf_00126]) that are associated with &lt;transformerId&gt;, as well as buffer and
            bufferLength (only for P04, P05, P06, P07, P08, P11, P22 and P44) that were updated in
            requirements SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
            In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward() function,
            which is provided by the RTE. This parameter is associated with the optional IN parameter
            ForwardStatus from Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072),
            Rte_IWrite (SWS_Rte_03744) and Rte_IWriteRef (SWS_Rte_05509)(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_14000_FWCodeStatusCheck</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00168</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00190.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
            and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXProtect(), passing to that function:
            - the appropriate Config structure (see [SWS_E2EXf_00125]),
            - the appropriate State structure (see [SWS_E2EXf_00126]),
            - the local variables sourceID, messageType, and messageResult
            - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
            - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111. (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00190</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00166.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used in a Client-Server Communication and
            Profile is P01, P04, P04m, P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m
            the sequence counter for protecting the response shall be set to requestCounter.
            (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable as not supported in profile 01 so far.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.ClientServer</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00166</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

      <specobject>
        <id>E2EP01.SWS_E2EXf_00208.P01</id>
        <status>approved</status>
          <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
          <version>1</version>
          <description>
            The function E2EXf_MapCodeToStatus shall return the values depending on the value of
            forwardedCode.(RS_E2E_08538)
          </description>
          <releases>
            <release>AUTOSAR CP R22-11</release>
          </releases>
          <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_14000_FWCodeStatusCheck</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
          <containerCovstatus>covered</containerCovstatus></needscoverage>
          <providescoverage>
            <provcov>
              <linksto>E2E.SWS_E2EXf_00208</linksto>
              <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
          </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00165.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used for a response in a Client-Server Communication and
            Profile is P02 or P22 the sequence counter used for protecting the response shall
            be set to requestCounter -1. (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00165</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00189.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; on the server-side shall
            set a local variable named requestCounter to the value of the e2eCounter element
            of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00189</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00188.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall set a local variable sourceID to the value of the e2eSourceId
            element of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00188</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00187.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00187</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00186.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00186</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00185.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
            the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
            the bufferLength, the address of local messageType variable, and the address of a local
            messageResult variable as parameters.
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00185</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00184.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
            to the sourceID stored in the configuration (see SWS_E2EXf_00126).
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00184</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00183.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00183</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00181.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00181</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00182.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the inputBuffer, the inputBufferLength, the address of a local variable
            named messageType, and the address of a local variable named messageResult as
            parameters.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00182</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00171.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, state-&gt;Counter - 1 shall be
            stored as requestCounter to be accessed by the E2EXf_Inv_&lt;transformerId&gt; for
            checking the response. (RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable as not supported in profile 01 so far.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.ClientServer</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00171</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00170.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P02 or P22, state-&gt;Counter shall be stored to as requestCounter to be
            accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking the response.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00170</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00180.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; shall perform the following
            additional precondition checks, without continuing further processing:
             1. extractProtocolHeaderFields == NULL
             2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall
            return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00180</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.Transformer.Init.SR.P01</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06005_InvokeProtect</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07005_InvokeProtect</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init.SR</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

      <specobject>
         <id>E2EP01.EB.Transformer.Init.Client.P01</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and inverse transformer
            shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <rationale>
            This requirement is not applicable to E2EP01.
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init.Client</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00206.P01</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            the receivedRequestCounter shall be set to state-&gt;LastValidCounter of
            E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not supported in profile 01 so far.</rationale>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.ClientServer</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00206</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

      <specobject>
         <id>E2EP01.SWS_E2EXf_00207.P01</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P04, P05, P06,
            P07, P08, P11, P22, P44, P04m, P07m, P08m or P44m the receivedRequestCounter shall be
            set to state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <rationale>This requirement is not applicable for profile 01.</rationale>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00207</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

  <!--  E2EP01 EB-SPECIFIC REQUIREMENTS  -->

    <specobject>
      <id>EB_E2EP01020001</id>
      <status>approved</status>
      <source>
        Lastenheft Requirements Specification: Bordnetzkommunikation; BMW Group;
        Requirement Id: BN_KOM_30_569; 11.11.2009
      </source>
      <version>1</version>
      <description>
        The receiver shall evaluate if all bits in the payload data are set to 1
        ("Ungueltigkeitskennzeichnung" of Application CRC). For this, the evaluation of the payload
        data (without CRC) shall be done as follows:
        <itemizedlist>
          <listitem>
            1) First, the receiver shall check the payload data to contain completely binary ones.
          </listitem>
          <listitem>
            2a) If so, then the data is invalid (maybe no data was received) and no further checks are
            performed.
          </listitem>
          <listitem>
            2b) If the data does not contain completely binary ones, then the data shall be checked as
            specified by the profile 01.
          </listitem>
        </itemizedlist>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <!-- Requirements used from ASR R22-11 in order to implement ReSync Handling -->

    <specobject>
      <id>EB_E2EP01020023</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          The E2E library function E2EP01Check() shall return with
          the error E2E_E_INPUTERR_WRONG
          without any execution of library internals if one of the
          following config parameters is out of range (i.e. outside [0..14]):
          MaxDeltaCounterInit, MaxNoNewOrRepeatedData, MaxSyncCounterInit
        </para>
        <para>
          Note: The library function E2EP01Protect() does not read
          any of the aforementioned parameters.
        </para>
      </description>
      <comment>
        This design item is used as an argumentation for a
        safety analysis of the generated E2EPW code in order
        make the E2EPW Check implementation easier.
        For example, the checker need not verify the value
        of the MaxDeltacounterInit value if it equals 255
        (in case this parameter should not be used at Tx side),
        because in this case the library always returns an
        error.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <!-- additional requirements for sake of more detailed traceability in test
    implemenetation regarding ReSync hanlding for design item EB_E2EP01020196 -->

    <specobject>
      <id>EB_E2EP01020298</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00298 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/> for E2E_P02Check shall also apply
          for E2E_P01Check.
          <para>
            The E2E_P01Check() function shall
          </para>
            <itemizedlist>
              <listitem>
                <para>re-initialize SyncCounter with SyncCounterInit; and</para>
              </listitem>
              <listitem>
                <para>set Status to E2E_P01STATUS_SYNC;</para>
              </listitem>
            </itemizedlist>
          <para>
            if the following conditions are true:
          </para>
          <itemizedlist>
            <listitem>
              <para>the calculated DeltaCounter is within the parameters of 1 and MaxDeltaCounter
              (i.e. 1 &lt;= DeltaCounter &lt;= MaxDeltaCounter); and</para>
            </listitem>
            <listitem>
              <para>the value of the NoNewOrRepeatedDataCounter exceeds MaxNoNewOrRepeatedData.
              (i.e. State-&gt;NoNewOrRepeatedDataCounter &gt; Config-&gt;MaxNoNewOrRepeatedData)
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020299</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00299 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/> for E2E_P02Check shall also apply
          for E2E_P01Check.
          <para>
            The E2E_P01Check() function shall
          </para>
          <itemizedlist>
            <listitem>
              <para>decrement SyncCounter by 1; and</para>
            </listitem>
            <listitem>
              <para>set Status to E2E_P01STATUS_SYNC</para>
            </listitem>
          </itemizedlist>
          <para>
            if the following conditions are true:
          </para>
          <itemizedlist>
            <listitem>
              <para>the calculated DeltaCounter is within the parameters of 1 and MaxDeltaCounter
              (i.e. 1 &lt;= DeltaCounter &lt;= MaxDeltaCounter); and</para>
            </listitem>
            <listitem>
              <para>the value of the NoNewOrRepeatedDataCounter is less than or equal to
              MaxNoNewOrRepeatedData
              (i.e. State-&gt;NoNewOrRepeatedDataCounter &lt;= Config-&gt;MaxNoNewOrRepeatedData);
              and</para>
            </listitem>
            <listitem>
              <para>the SyncCounter exceeds 0.</para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020300</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00300 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/> for E2E_P02Check shall also apply
          for E2E_P01Check.
        </para>
        <para>
            The E2E_P01Check() function shall reset the NoNewOrRepeatedDataCounter to 0 if it
            returns one of the following status:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>E2E_P01STATUS_OK; or</para>
            </listitem>
            <listitem>
              <para>E2E_P01STATUS_OKSOMELOST; or</para>
            </listitem>
            <listitem>
              <para>E2E_P01STATUS_SYNC; or</para>
            </listitem>
            <listitem>
              <para>E2E_P01STATUS_WRONGSEQUENCE</para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020301</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00301 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/>  for E2E_P02Check shall also apply
          for E2E_P01Check.
        </para>
        The E2E_P01Check() function shall increment NoNewOrRepeatedDataCounter by 1
        if it returns the Status E2E_P01STATUS_NONEWDATA or E2E_P01STATUS_REPEATED
        up to the maximum value of Counter (i.e. 15 or 0xF).
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Repeated</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_NoNewData</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020150</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00150 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11<biblioref linkend="ASRSWSE2E"/>
          for E2E_P02Check shall also apply for E2E_P01Check.
        </para>
        <para>
          The E2E_P01Check() function shall re-initialize MaxDeltaCounter with MaxDeltaCounterInit
          if it returns one of the following Status:
        </para>
        <itemizedlist>
          <listitem>
          <para>E2E_P01STATUS_OK; or</para>
          </listitem>
          <listitem>
          <para>E2E_P01STATUS_OKSOMELOST; or</para>
          </listitem>
          <listitem>
          <para>E2E_P01STATUS_INITIAL; or</para>
          </listitem>
          <listitem>
          <para>E2E_P01STATUS_SYNC; or</para>
          </listitem>
          <listitem>
          <para>E2E_P01STATUS_WRONGSEQUENCE on condition that SyncCounter exceeds 0
          (i.e. SyncCounter &gt; 0).</para>
          </listitem>
        </itemizedlist>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Initial</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020151</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00151 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/>
          for E2E_P02Check shall also apply for E2E_P01Check.
        </para>
        <para>
          The E2E_P01Check() function shall set LastValidCounter to Counter of Data if it returns
          one of the following Status:
        </para>
        <itemizedlist>
          <listitem>
            <para>E2E_P01STATUS_OK; or</para>
          </listitem>
          <listitem>
            <para>E2E_P01STATUS_OKSOMELOST; or</para>
          </listitem>
          <listitem>
            <para>E2E_P01STATUS_INITIAL; or</para>
          </listitem>
          <listitem>
            <para>E2E_P01STATUS_SYNC; or</para>
          </listitem>
          <listitem>
            <para>E2E_P01STATUS_WRONGSEQUENCE on condition that SyncCounter exceeds 0
            (i.e. SyncCounter &gt; 0).</para>
          </listitem>
        </itemizedlist>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Initial</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020147</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00147 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/>
          for E2E_P02Check shall also apply for E2E_P01Check.
          </para>
          <para>
            The E2E_P01Check() function shall set Status to E2E_P01STATUS_OK
            if the following conditions are true:
          </para>
          <itemizedlist>
          <listitem>
            <para>the calculated DeltaCounter equals 1; and</para>
          </listitem>
          <listitem>
            <para>the value of the NoNewOrRepeatedDataCounter is less than or equal to
            MaxNoNewOrRepeatedData
            (i.e. State-&gt;NoNewOrRepeatedDataCounter &lt;= Config-&gt;MaxNoNewOrRepeatedData);
            and</para>
          </listitem>
          <listitem>
            <para>the SyncCounter equals 0.</para>
          </listitem>
        </itemizedlist>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020148</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Design Item PRS_E2E_00148 of the Specification of E2E Protocol Specification
          AUTOSAR FO R22-11 <biblioref linkend="ASRSWSE2E"/>
          for E2E_P02Check shall also apply for E2E_P01Check.
        </para>
        <para>
          The E2E_P01Check() function shall set Status to E2E_P01STATUS_OKSOMELOST if the following
          conditions are true:
        </para>
        <itemizedlist>
          <listitem>
            <para>the calculated DeltaCounter is greater-than 1 but less-than or equal to
            MaxDeltaCounter (i.e. 1 &lt; DeltaCounter &lt;= MaxDeltaCounter); and</para>
          </listitem>
          <listitem>
          <para>the NoNewOrRepeatedDataCounter is less than or equal to MaxNoNewOrRepeatedData
          (i.e. State-&gt;NoNewOrRepeatedDataCounter &lt;= Config-&gt;MaxNoNewOrRepeatedData);
          and</para>
          </listitem>
          <listitem>
            <para>the SyncCounter equals 0.</para>
          </listitem>
        </itemizedlist>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Initial</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020149</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          The E2E_P01Check() resp. E2E_P01Protect() shall return with E2E_E_INPUTERR_WRONG if
          the used Data ID Inclusion Mode does not equal E2E_P01_DATAID_BOTH,
          E2E_P01_DATAID_LOW, or E2E_P01_DATAID_NIBBLE.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020152</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          The E2E_P01Check() resp. E2E_P01Protect() shall return with E2E_E_INPUTERR_WRONG if
          the configured CRCOffset is greater than the DataLength.
        </para>
      </description>
      <needscoverage>
      <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020153</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          The E2E_P01Check() resp. E2E_P01Protect() shall return with E2E_E_INPUTERR_WRONG if
          the configured CounterOffset is greater than the DataLength.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

<!-- Required file structure -->

    <specobject>
      <id>EB_E2EP01020113</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Design Item SWS_E2E_00113
        applies,
        but E2E_PXX.h shall be replaced by E2E_P01.h
        and E2E_P01.h can also include MemMap.h.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_04_IncludeFiles</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>EB_E2EP01020114</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Design Item SWS_E2E_00114
      </description>
      <comment>
        Set to DEVIATION because of:
        - Deviation [ASCE2E-34] The E2E library uses a Safety Crc module (SCrc) instead of the ASR
        Crc module
        applies,
        but E2E_PXX.c shall be replaced by E2E_P01.c
        and E2E_P01.c additionally shall include the required SCrc routine
        SCrc_CRC8.h and MemMap.h.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_04_IncludeFiles</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--  GENERIC AUTOSAR PRS-REQUIREMENTS  -->

    <specobject>
      <id>ASR_E2EP01020012</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> Design Item PRS_E2E_00012
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00012'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
          applies,
          but the library-internal mechanisms shall detect and report errors
          implemented according to the pre-defined E2E Profiles specified
          in this design document.
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01ProtectInit_InvalidInput</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckInit_InvalidInput</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020673</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> Design Item PRS_E2E_00673
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00673'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_WriteCounter_FS_Repeated</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_WriteCounter_FS_WrongSeq</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_WriteDataID_FS_Error</srcid><srcstatus/><internalId>533</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_FS_Nonewdata</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>ASR_E2E020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

<!--  E2EP01 AUTOSAR PRS-REQUIREMENTS  -->

    <specobject>
      <id>ASR_E2EP01020218</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00218.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00218'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>
        This requirement is informational only
      </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020075</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00075.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00075'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020076</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00076.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00076'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Repeated</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Initial</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_NoNewData</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020163</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00163.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00163'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020163.1</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020163.2</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020163.3</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020163.4</srcid><srcstatus/><internalId>138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020163.1</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>ASR_E2EP010200163 applies for the first inclusion mode (double ID configuration).
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020163.2</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>ASR_E2EP010200163 applies for the second inclusion mode
        (alternating ID configuration).
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020163.3</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>ASR_E2EP01020163 applies for the third inclusion mode (only low byte of Data ID).
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020163.4</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>ASR_E2EP01020163 applies for the fourth inclusion mode (low nibble of high byte
        of Data ID is transmitted explicitly).
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020085</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00085.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00085'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020169</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR SWS, Design Item PRS_E2E_00169.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00169'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020306</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00306.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00306'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> This requirement is added in R21-11. </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_InvalidInput</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020070</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00070.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00070'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020190</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00190.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00190'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        is replaced by EB_E2EP01020190
      </description>
      <comment>
        Set to DEVIATION because of:
        - Deviation [ASCE2E-34] The E2E library uses a Safety Crc module (SCrc) instead of the ASR
        Crc module
      </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.SCrc</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020082</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00082.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00082'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020640</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00640.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00640'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> This requirement is added in R21-11. </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020195</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00195.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00195'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        applies,
        The function E2E_P01Protect() shall:
        1. write the Counter in Data,
        2. write DataID nibble in Data, if E2E_P01_DATAID_NIBBLE configuration is used
        3. compute the CRC
        4. write CRC in Data
        5. increment the Counter (which will be used in the next invocation of
        E2E_P01Protect()),as specified by Figure 3.1 "E2E_P01Protect()".
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P01Protect"/>.
        </para>
        <figure id="fig_E2E_P01Protect">
          <title>E2E_P01Protect()</title>
          <inlinegraphic fileref="images/E2E_P01Protect.png" width="90%"/>
        </figure>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_01_P01Protect</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020608</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00608.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00608'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This is added in R22-11 </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020609</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00609.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00609'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          E2E_P01Forward diagram is visualized in <xref linkend="fig_E2E_P01Forward"/>
        </para>
        <para>
          CalculateCRC diagram is visualized in <xref linkend="fig_P01_Protect_Forward_Check_CalculateCRC"/>
        </para>
        <figure id="fig_E2E_P01Forward">
          <title>E2E_P01Forward()</title>
          <inlinegraphic fileref="images/E2E_P01Forward.png" width="90%"/>
        </figure>
        <figure id="fig_P01_Protect_Forward_Check_CalculateCRC">
          <title>P01_Protect_Forward_Check_CalculateCRC</title>
          <inlinegraphic fileref="images/P01_Protect_Forward_Check_CalculateCRC.png" width="90%"/>
        </figure>
      </description>
      <comment>This is added in R22-11 </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020610</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00610.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00610'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          E2E_P01Forward diagram is visualized in <xref linkend="fig_E2E_P01Forward"/>
        </para>
        <para>
          CalculateCRC diagram is visualized in <xref linkend="fig_P01_Protect_Forward_Check_CalculateCRC"/>
        </para>
      </description>
      <comment>This is added in R22-11 </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_WriteCounter_FS_Repeated</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020611</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00611.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00611'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          E2E_P01Forward diagram is visualized in <xref linkend="fig_E2E_P01Forward"/>
        </para>
        <para>
          CalculateCRC diagram is visualized in <xref linkend="fig_P01_Protect_Forward_Check_CalculateCRC"/>/&gt;
        </para>
      </description>
      <comment>This is added in R22-11 </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_WriteCounter_FS_WrongSeq</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020612</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00612.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00612'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          E2E_P01Forward diagram is visualized in <xref linkend="fig_E2E_P01Forward"/>
        </para>
        <para>
          CalculateCRC diagram is visualized in <xref linkend="fig_P01_Protect_Forward_Check_CalculateCRC"/>/&gt;
        </para>
      </description>
      <comment>This is added in R22-11 </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_WriteDataID_FS_Error</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020196</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>3</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00196.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00196'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P01Check"/>.
        </para>
        <figure id="fig_E2E_P01Check">
          <title>E2E_P01Check()</title>
          <inlinegraphic fileref="images/E2E_P01Check.png"/>
        </figure>
      </description>
      <comment>
        Set to DEVIATION because of:
        - Deviation [ASCE2E-41] The receiver shall evaluate if all bits in the payload data are set to 1
        - Enhancement [ASCE2E-204] Support for Profile 01 Variant C
        - Enhancement [ASCE2ESE-138] Re-synchronization handling in case the Profile detects
        an unexpected behavior of the received counter
      </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP01.DataInvalidDetection</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>enh.E2EP01.ReSync</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_E2EP01020298</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020299</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020300</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020301</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020150</srcid><srcstatus/><internalId>120</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020151</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020147</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020148</srcid><srcstatus/><internalId>123</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020149</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020152</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020153</srcid><srcstatus/><internalId>126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Repeated</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Initial</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_NoNewData</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01CheckStatus_WrongDataIDNibble</srcid><srcstatus/><internalId>476</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020644</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00644.
        <para>
          <itemizedlist>
            <listitem>
               <para>
                 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00644'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This is added in R22-11 </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020020</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020645</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00645.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00645'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This is added in R22-11</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020021</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020588.PRS</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00588.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00588'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This is added in R22-11</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020022</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020646</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00646.
        <para>
          <itemizedlist>
            <listitem>
              <para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00646'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This is added in R22-11</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020018</srcid><srcstatus/><internalId>12</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EP01.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020598</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00598
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00598'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020383</srcid><srcstatus/><internalId>25</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>ASR_E2E020597</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>ASR_E2EP01020677</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00677
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00677'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

        <!-- E2E Profiles - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2EP010201205</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01205
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01205'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201206</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01206
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01206'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201207</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01207
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01207'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201209</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01209
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01209'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201210</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01210
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01210'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201211</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01211
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01211'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201212</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01212
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01212'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201213</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01213
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01213'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201214</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01214
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01214'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201215</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01215
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01215'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201216</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01216
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01216'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201217</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01217
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01217'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201218</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01218
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01218'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201228</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01228
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01228'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The diagram is visualized in <xref linkend="fig_E2E_PXXForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXForward_VerifyInputs">
        <title>E2E_PXXForward Input Verification</title>
        <inlinegraphic fileref="../../../../asc_E2E/doc/project/design/images/E2E_PXXForward_VerifyInputs.png" width="90%"/>
      </figure>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_ConTest_12_P01Forward_FS_Nonewdata</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201219</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01219
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01219'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201220</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01220
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01220'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201221</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01221
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01221'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201222</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01222
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01222'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201223</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01223
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01223'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201224</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01224
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01224'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201225</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01225
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01225'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201226</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01226
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01226'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201227</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01227
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01227'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201250</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01250
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01250'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201251</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01251
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01251'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201252</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01252
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01252'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <!-- E2E Profiles for Methods - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2EP010201156</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01156
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01156'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201157</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01157
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01157'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201159</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01159
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01159'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201160</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01160
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01160'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201161</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01161
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01161'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201162</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01162
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01162'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201163</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01163
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01163'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201203</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01203
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01203'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201164</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01164
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01164'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201165</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01165
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01165'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201166</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01166
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01166'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201167</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01167
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01167'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201169</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01169
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01169'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201170</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01170
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01170'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201171</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01171
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01171'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201172</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01172
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01172'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201173</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01173
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01173'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201174</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01174
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01174'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201175</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01175
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01175'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201176</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01176
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01176'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201177</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01177
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01177'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201178</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01178
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01178'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201179</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01179
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01179'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201180</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01180
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01180'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201181</id>
      <status>rejected</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01181
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01181'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201182</id>
      <status>rejected</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01182
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01182'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201183</id>
      <status>rejected</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01183
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01183'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201184</id>
      <status>rejected</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01184
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01184'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201185</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01185
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01185'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201186</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01186
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01186'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201187</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01187
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01187'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201188</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01188
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01188'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201189</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01189
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01189'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201190</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01190
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01190'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201191</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01191
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01191'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201192</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01192
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01192'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201193</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01193
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01193'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201194</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01194
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01194'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201195</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01195
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01195'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201196</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01196
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01196'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201197</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01197
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01197'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201198</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01198
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01198'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201199</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01199
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01199'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201200</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01200
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01200'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010201201</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01201
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01201'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010200739</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00739
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00739'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0200739</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010200743</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00743
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00743'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is not applicable for profile 01.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0200743</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010206300</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06300
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_CONSTR_06300'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0206300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>ASR_E2EP010206303</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06303
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_CONSTR_06303'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0206303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

       <!-- PRS UC Requirements -->

    <specobject>
      <id>ASR_E2EP0102UC00235</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00235
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00235'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC01204</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01204
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01204'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC01158</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01158
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01158'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC01158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC01168</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01168
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01168'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC01168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00239</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00239
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00239'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00238</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00238
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00238'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00325</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00325
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00325'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00236</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00236
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00236'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00170</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00170
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00170'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00171</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00171
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00171'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00062</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00062
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00062'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00063</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00063
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00063'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00320</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00320
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00320'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00173</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00173
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00173'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00055</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00055
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00055'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00071</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00071
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00071'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00317</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00317
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00317'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00606</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00606
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00606'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00741</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_USE_00741
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_USE_00741'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00741</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <!-- Profile specific PRS UC Requirements -->

    <specobject>
      <id>ASR_E2EP0102UC00072</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00072
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00072'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00073</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00073
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00073'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0102UC00308</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00308
      <para>
        <itemizedlist>
          <listitem>
            <para>
              <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00308'])"/>
             </para>
          </listitem>
        </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

    <specobject>
      <id>E2EP01.top.001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP01 module shall implement a 4 bit sequence counter,
        explicitly sent in the message header.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020020</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020021</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020166</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020385</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020386</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020588</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020158</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020390</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020389</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020075</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020076</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020195</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020609</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020610</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020611</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020612</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020196</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020644</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020645</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020646</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>E2EP01.top.002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP01 module shall implement a data ID with a configurable
        behavior based on E2E_P01DataIDMode used for CRC calculation.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020018</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020200</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020166</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020588</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020158</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020163</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020169</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020306</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020070</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020640</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020195</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020609</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020610</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020611</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020612</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020196</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020646</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>E2EP01.top.003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP01 module shall implement a 8 bit CRC calculation based on
        CRC-8-SAE J1850.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020166</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020588</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020158</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020070</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020190</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020640</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020195</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020609</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020610</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020611</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020612</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020196</srcid><srcstatus/><internalId>152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <!--
        Top Level requirements motivated by module specific behavior
    -->

    <specobject>
      <id>E2EP01.top.004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP01 module shall implement error indication and error states
        to indicate malfunction to the SWC.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020011</srcid><srcstatus/><internalId>6</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020047</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020022</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020166</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020385</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020588</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020158</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020390</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020389</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020382</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020383</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020476</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020384</srcid><srcstatus/><internalId>27</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020023</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020012</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020673</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020612</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020196</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020645</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020588.PRS</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020598</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020677</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>E2EP01.top.005</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP01 module shall support client-server communication via methods.
      </description>
      <comment>This requirement is not applicable.
        AUTOSAR does not specify a profile E2EP01m and methods for client-server communication are not supported.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00102</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_&lt;transformerId&gt; shall perform the following
            two precondition checks, without continuing further processing:
             1.  (buffer == NULL)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt;
                  EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00102.P01</srcid><srcstatus/><internalId>41</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00106</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL
             3.  buffer == NULL
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00106.P01</srcid><srcstatus/><internalId>42</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBitsToShiftbits,
            in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00108.P01</srcid><srcstatus/><internalId>43</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00109</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
            inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting with
            offset upperHeaderBitsToShift) to parameter buffer starting with the destination offset
            of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00109.P01</srcid><srcstatus/><internalId>44</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00115</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
            destination offset of BufferProperties.headerLength. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00115.P01</srcid><srcstatus/><internalId>45</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00111</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_&lt;transformerId&gt; shall set
            *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00111.P01</srcid><srcstatus/><internalId>46</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00139</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt; shall perform a check of
            the *bufferLength (after the computation of *bufferLength):
            If (*bufferLength != config-&gt;DataLength/8), then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00139.P01</srcid><srcstatus/><internalId>47</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00107</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If DataTransformationStatusForwarding is set to no TransformerStatusForwarding and PXX
            is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44,
            The function E2EXf_&lt;transformerId&gt;() shall invoke
            E2E_PXXProtect(), passing to that function the appropriate Config and State
            structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated
            with &lt;transformerId&gt;, as well as buffer and bufferLength
            (only for P04, P05, P06, P07, P08 ,P11 ,P22 and P44) that were updated in above
            requirements SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00107.P01</srcid><srcstatus/><internalId>48</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00018</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            In case E2E_PXXProtect() and E2E_PXXForward() returns E2E_E_OK, then E2EXf_&lt;transformerId&gt; shall
            return E_OK, otherwise E2EXf_&lt;transformerId&gt; shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00018.P01</srcid><srcstatus/><internalId>49</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00105</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following two precondition checks, without continuing further processing:
             1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00105.P01</srcid><srcstatus/><internalId>50</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  If (bufferLength == NULL)
             3.  If (buffer == NULL).
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00103.P01</srcid><srcstatus/><internalId>51</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00140</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
             1.  if(inputBuffer == NULL and inputBufferLength == 0), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to FALSE
             2.  else if (inputBufferLength == config-&gt;DataLength/8), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to TRUE.
             3.  else return E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00140.P01</srcid><srcstatus/><internalId>52</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00123</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  config,
              -  state,
              -  data
            Concerning pointer to data: if(inputBuffer == NULL and inputBufferLength == 0), then
            it shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
            inputBuffer.(RS_E2E_08538)
          </description>
          <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00123.P01</srcid><srcstatus/><internalId>53</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00141</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
            1.  If(buffer == NULL and inputBufferLength == 0), then
                - variable NewDataAvailable of state object of type
                   E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                   &lt;transformerId&gt; shall be set to FALSE.
            2.  Else if (inputBufferLength == config-&gt;DataLength/8), then
                - variable NewDataAvailable of state object of type E2E_PXXCheckState
                  Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall
                  be set to TRUE.
            3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00141.P01</srcid><srcstatus/><internalId>54</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00124</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  Config,
              -  State,
              -  Data
            Concerning pointer to Data: if(buffer == NULL and inputBufferLength == 0), then it shall
            pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00124.P01</srcid><srcstatus/><internalId>55</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00142</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration parameter profileBehavior is PRE_R4_2, then
            for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
            MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
            the corresponding configuration object. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00142.P01</srcid><srcstatus/><internalId>56</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00104</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 04, 05, 06, 07, 11, 22: the function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
              -  config,
              -  state,
              -  data length: inputBufferLength
            pointer to data: inputBuffer (out-of-place version) or buffer (in-place
            version). (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00104.P01</srcid><srcstatus/><internalId>57</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00029</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
            E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
            and the profiles check Status (variable Status of state object of type
            E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
            independent check status. For P1/P2 mapping functions, there is an additional call
            parameter profileBehavior:
            -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
               shall be invoked with the call parameter profileBehavior = 1
            -  if configuration parameter profileBehavior is PRE_R4_2, then
               E2E_PXXMapStatusToSM() shall be invoked with call parameter profileBehavior = 0
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00029.P01</srcid><srcstatus/><internalId>58</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00028</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
            E2E_SMCheck() function, passing to that function the configuration object of type
            E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088])and state
            object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are associated
            with &lt;transformerId&gt;, plus the profile-independent check status that was computed
            by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00028.P01</srcid><srcstatus/><internalId>59</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00027</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
            - the high nibble of the return
              of the function E2EXf_Inv_&lt;transformerId&gt; shall be set to the low nibble
              of the state of the state machine (member SMState of object of type
              E2E_SMStateType that is associated with &lt;transformerId&gt;, see
              [SWS_E2EXf_00125]).
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
              shall  be set to the low nibble of the profile-independent check status
              of type E2E_PCheckStatusType.
              If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
              E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00027.P01</srcid><srcstatus/><internalId>60</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (buffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
            bits, in parameter buffer, in direction right by 'distance' of
            BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00112.P01</srcid><srcstatus/><internalId>61</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
            upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
            remaining part of inputBuffer skipping E2E header (i.e. starting with
            offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
            buffer starting with the destination offset of
            (upperHeaderBitsToShift).(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00113.P01</srcid><srcstatus/><internalId>62</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00116</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
            with the offset of BufferProperties.headerLength, to
            buffer.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00116.P01</srcid><srcstatus/><internalId>63</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00169</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If disableEndToEndStateMachine is to TRUE,
            - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to 0x6.
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to the low nibble of the profile-independent check status of type
              E2E_PCheckStatusType. (RS_E2E_08538)
         </description>
         <comment>
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00169.P01</srcid><srcstatus/><internalId>78</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
            *bufferLength = 0, otherwise it shall set
            *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00114.P01</srcid><srcstatus/><internalId>64</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00167</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server-Communication on the server side, if the return value ret equals
            to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00167.P01</srcid><srcstatus/><internalId>65</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00037</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            Mandatory Interfaces
            API function         Description
            E2E_P01Check           Checks the Data received using the E2E profile 1. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P01CheckInit       Initializes the check state
            E2E_P01Forward (draft) Protects data which is forwarded by using the E2E profile 01.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P01MapStatusToSM   The function maps the check status of Profile 1 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 1 delivers a more fine-granular status, but this is not
                                   relevant for the E2E state machine.
            E2E_P01Protect         Protects the array/buffer to be transmitted using the E2E profile 1.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P01ProtectInit     Initializes the protection state.
            E2E_P02Check           Check the array/buffer using the E2E profile 2. This includes checksum
                                   calculation, handling of sequence counter and Data ID.
            E2E_P02CheckInit       Initializes the check state
            E2E_P02Forward (draft) Protects data which is forwarded by using the E2E profile 02.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P02MapStatusToSM   The function maps the check status of Profile 2 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 2 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P02Protect         Protects the array/buffer to be transmitted using the E2E profile 2.
                                   This includes checksum calculation, handling of sequence counter and
                                   Data ID.
            E2E_P02ProtectInit     Initializes the protection state.
            E2E_P04Check           Checks the Data received using the E2E profile 4. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P04CheckInit       Initializes the check state
            E2E_P04Forward (draft) Protects data which is forwarded by using the E2E profile 04.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04MapStatusToSM   The function maps the check status of Profile 4 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04Protect         Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04ProtectInit     Initializes the protection state.
            E2E_P04mCheckInit      Initializes the check state
            E2E_P04mForward (draft)Protects data which is forwarded by using the E2E profile 04m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04mMapStatusToSM  The function maps the check status of Profile 4m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04mProtect        Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04mProtectInit    Initializes the protection state.
            E2E_P04mSinkCheck      Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P04mSourceCheck    Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P05Check           Checks the Data received using the E2E profile 5. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P05CheckInit       Initializes the check state
            E2E_P05Forward (draft) Protects data which is forwarded by using the E2E profile 05.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P05MapStatusToSM   The function maps the check status of Profile 5 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 5 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P05Protect         Protects the array/buffer to be transmitted using the E2E profile 5. This
                                   includes checksum calculation, handling of counter.
            E2E_P05ProtectInit     Initializes the protection state.
            E2E_P06Check           Checks the Data received using the E2E profile 6. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P06CheckInit       Initializes the check state
            E2E_P06Forward (draft) Protects data which is forwarded by using the E2E profile 06.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P06MapStatusToSM   The function maps the check status of Profile 6 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 6 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P06Protect         Protects the array/buffer to be transmitted using the E2E profile 6.
                                   This includes checksum calculation, handling of counter.
            E2E_P06ProtectInit     Initializes the protection state.
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P11Check           Checks the Data received using the E2E profile 11. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P11CheckInit       Initializes the check state
            E2E_P11Forward (draft) Protects data which is forwarded by using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P11MapStatusToSM   The function maps the check status of Profile 11 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 11 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P11Protect         Protects the array/buffer to be transmitted using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P11ProtectInit     Initializes the protection state.
            E2E_P22Check           Checks the Data received using the E2E profile 22. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P22CheckInit       Initializes the check state
            E2E_P22Forward (draft) Protects data which is forwarded by using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P22MapStatusToSM   The function maps the check status of Profile 22 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 22 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P22Protect         Protects the array/buffer to be transmitted using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P22ProtectInit     Initializes the protection state.
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_SMCheck            Checks the communication channel. It determines if the data can
                                   be used for safety-related application, based on history of
                                   checks performed by a corresponding E2E_P0XCheck() function.
            E2E_SMCheckInit        Initializes the state machine.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00037.P01</srcid><srcstatus/><internalId>66</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsTo
            Shift &gt; 0), in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBits
            ToShiftbits, in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_Xfrm_00108.P01</srcid><srcstatus/><internalId>67</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
      
      <specobject>
         <id>E2E.SWS_Xfrm_00032</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            A safety transformer shall return one of the errors shown in Table below
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                               safety and no new data received
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_Xfrm_00032.P01</srcid><srcstatus/><internalId>68</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If a transformer returns a hard error, it shall leave the output buffer unchanged
            (SRS_Xfrm_00004)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_Xfrm_00051.P01</srcid><srcstatus/><internalId>69</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00047</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>2</version>
         <description>
            Imported Types
            Module:Imported Type
            E2E:
            E2E_P01CheckStateType
            E2E_P01CheckStatusType
            E2E_P01ConfigType
            E2E_P01DataIDMode
            E2E_P01ProtectStateType
            E2E_P02CheckStateType
            E2E_P02CheckStatusType
            E2E_P02ConfigType
            E2E_P02ProtectStateType
            E2E_P04CheckStateType
            E2E_P04CheckStatusType
            E2E_P04ConfigType
            E2E_P04ProtectStateType
            E2E_P04mCheckStateType
            E2E_P04mCheckStatusType
            E2E_P04mConfigType
            E2E_P04mProtectStateType
            E2E_P05CheckStateType
            E2E_P05CheckStatusType
            E2E_P05ConfigType
            E2E_P05ProtectStateType
            E2E_P06CheckStateType
            E2E_P06CheckStatusType
            E2E_P06ConfigType
            E2E_P06ProtectStateType
            E2E_P07CheckStatusType
            E2E_P07CheckStateType
            E2E_P07ConfigType
            E2E_P07ProtectStateType
            E2E_P07mCheckStateType
            E2E_P07mCheckStatusType
            E2E_P07mConfigType
            E2E_P07mProtectStateType
            E2E_P08CheckStateType
            E2E_P08CheckStatusType
            E2E_P08ConfigType
            E2E_P08ProtectStateType
            E2E_P08mCheckStateType
            E2E_P08mCheckStatusType
            E2E_P08mConfigType
            E2E_P08mProtectStateType
            E2E_P11CheckStatusType
            E2E_P11CheckStateType
            E2E_P11ConfigType
            E2E_P11DataIDMode
            E2E_P11ProtectStateType
            E2E_P22CheckStateType
            E2E_P22CheckStatusType
            E2E_P22ConfigType
            E2E_P22ProtectStateType
            E2E_P44CheckStateType
            E2E_P44CheckStatusType
            E2E_P44ConfigType
            E2E_P44ProtectStateType
            E2E_P44mCheckStateType
            E2E_P44mCheckStatusType
            E2E_P44mConfigType
            E2E_P44mProtectStateType
            E2E_PCheckStatusType
            E2E_SMCheckStateType
            E2E_SMConfigType
            E2E_SMStateType
            Std_Types:
            Std_ExtractProtocolHeaderFieldsType
            Std_MessageResultType
            Std_MessageTypeType
            Std_ReturnType
            Std_TransformerForwardCode (draft)
            Std_VersionInfoType
         </description>
         <comment>
            This requirement was adapted for profile E2EP07 and E2EP11 with SWS Release 4.3.0.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00047.P01</srcid><srcstatus/><internalId>76</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00175</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side, if the
            E2E_PXXCheck function returns a value different from E2E_P_OK, the status shall be
            set to E2E_P_ERR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00175.P01</srcid><srcstatus/><internalId>77</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00173</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and
            Profile is P04, P05, P06, P07, P08, P11, P22 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter - 1.
            (RS_E2E_08538)
         </description>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00173.P01</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00172</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
            requestCounter-1.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00172.P01</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00203</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
            of the csTransactionHandle to the value of the local variable receivedRequestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00203.P01</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00202</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
            of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00202.P01</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00201</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
            server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the address of the local variable
            sourceID
            - data length:
              inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00201.P01</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00200</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the local variable sourceID
            - data length:
              inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
                . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (out-of-place version) or
                . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00200.P01</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00199</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00199.P01</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00198</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields()
            function passing the inputBuffer, the inputBufferLength,
            the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00198.P01</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00197</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function
            passing the buffer, the bufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00197.P01</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00196</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place
            and the out-of-place E2EXf_Inv_&lt;transformerId&gt; on the client-side shall
            set a local variable sourceID to the sourceID stored in the configuration
            (see SWS_E2EXf_00126).(RS_E2E_08538).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00196.P01</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00194</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of a local variable named messageType,
            and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00194.P01</srcid><srcstatus/><internalId>89</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00193</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00193.P01</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00192</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional
            precondition checks, without continuing further processing:
            1. extractProtocolHeaderFields == NULL
            2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00192.P01</srcid><srcstatus/><internalId>91</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00191</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to transformerStatusForwarding and
            PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXForward(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the above requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00191.P01</srcid><srcstatus/><internalId>92</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00168</id>
        <status>approved</status> <!-- draft in R22-11 -->
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
          If DataTransformationStatusForwarding is set to transformerStatusForwarding and
          PXX is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44 the function
          E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing to that function
          the appropriate Config and State structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126])
          that are associated with &lt;transformerId&gt;, as well as buffer and bufferLength
          (only for P04, P05, P06, P07, P08, P11, P22 and P44) that were updated in requirements
          SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
          In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward() function,
          which is provided by the RTE. This parameter is associated with the optional IN parameter
          ForwardStatus from Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072),
          Rte_IWrite (SWS_Rte_03744) and Rte_IWriteRef (SWS_Rte_05509)(RS_E2E_08538)
        </description>
        <releases>
          <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
          <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00168.P01</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00190</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
            and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXProtect(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00190.P01</srcid><srcstatus/><internalId>94</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00166</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used in a Client-Server Communication and
            Profile is P01, P04, P04m, P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m
            the sequence counter for protecting the response shall be set to requestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00166.P01</srcid><srcstatus/><internalId>95</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_MapCodeToStatus shall return the values depending on the value of
            forwardedCode.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00208.P01</srcid><srcstatus/><internalId>96</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00165</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used for a response in a Client-Server Communication and
            Profile is P02 or P22 the sequence counter used for protecting the response shall
            be set to requestCounter -1. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00165.P01</srcid><srcstatus/><internalId>97</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00189</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; on the server-side shall
            set a local variable named requestCounter to the value of the e2eCounter element
            of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00189.P01</srcid><srcstatus/><internalId>98</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00188</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall set a local variable sourceID to the value of the e2eSourceId
            element of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00188.P01</srcid><srcstatus/><internalId>99</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00187</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00187.P01</srcid><srcstatus/><internalId>100</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00186</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00186.P01</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00185</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
           For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
           the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
           the bufferLength, the address of local messageType variable, and the address of a local
           messageResult variable as parameters.
        </description>
        <releases>
           <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
           <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00185.P01</srcid><srcstatus/><internalId>102</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00184</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
            to the sourceID stored in the configuration (see SWS_E2EXf_00126).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00184.P01</srcid><srcstatus/><internalId>103</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00183</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00183.P01</srcid><srcstatus/><internalId>104</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00181</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00181.P01</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00182</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the inputBuffer, the inputBufferLength, the address of a local variable
            named messageType, and the address of a local variable named messageResult as
            parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00182.P01</srcid><srcstatus/><internalId>106</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00171</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter - 1 shall be stored as requestCounter to be accessed by the
            E2EXf_Inv_&lt;transformerId&gt; for checking the response. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00171.P01</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00170</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P02 or P22, state-&gt;Counter shall be stored to as requestCounter to be
            accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking the response.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00170.P01</srcid><srcstatus/><internalId>108</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00180</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; shall perform the following
            additional precondition checks, without continuing further processing:
             1. extractProtocolHeaderFields == NULL
             2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall
            return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00180.P01</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00206</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            the receivedRequestCounter shall be set to state-&gt;LastValidCounter of
            E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00206.P01</srcid><srcstatus/><internalId>112</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00207</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P04, P05, P06,
            P07, P08, P11, P22, P44, P04m, P07m, P08m or P44m the receivedRequestCounter shall be
            set to state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.SWS_E2EXf_00207.P01</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

     <!--
         EB requirements valid for E2E profiles
     -->

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If the E2E Transformer has not been correctly initialized (which means that
            E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() was not successfully
            called before), then all generated E2E
            Transformer APIs shall immediately return E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00133.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.SWS_E2EXf_00133.P01</srcid><srcstatus/><internalId>70</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.ASR421.SWS_E2EXf_00115
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.Transformer.InPlace.NoCopying.P01</srcid><srcstatus/><internalId>71</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00021</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() function shall initialize
            all state structures managed by E2E transformer, calling the corresponding
            E2E_Init() method on each state variable.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00021
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.SWS_E2EXf_00021.P01</srcid><srcstatus/><internalId>73</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.SWS_E2EXf_00116
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.InvTransformer.InPlace.NoCopying.P01</srcid><srcstatus/><internalId>72</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_&lt;transformerId&gt; on server-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            and set by the RequestCounter of csTransactionHandlePtr-&gt;e2eCounter.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.Transformer.Server.ProtectStatePtrInputCheck.P01</srcid><srcstatus/><internalId>74</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_Inv_&lt;transformerId&gt; on client-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            to set the Counter member of CheckStatesPtr-&gt;PXXmCheckState.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.InvTransformer.Client.ProtectStatePtrInputCheck.P01</srcid><srcstatus/><internalId>75</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            While in C/S communication, at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.SR</srcid><srcstatus/><internalId>333</internalId></linkedfrom><linkedfrom><srcid>E2E.EB.Transformer.Init.Client</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.SR</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.Transformer.Init.SR.P01</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.Client</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.EB.Transformer.Init.Client.P01</srcid><srcstatus/><internalId>111</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>ASR_E2E020012</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00012
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00012'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>ASR_E2E020673</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00673
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00673'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020673</srcid><srcstatus/><internalId>130</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>ASR_E2E020597</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00597.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00597'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This Requirement is added in R22-11</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020598</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <!-- E2E Profiles - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2E0201205</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01205
         In E2E Profiles, on the sender side, for the first transmission request
         of a data element the counter shall be initialized with 0 and shall be incremented
         by 1 for every subsequent send request. When the counter reaches the maximum
         value, then it shall restart with 0 for the next send request. The maximum value of the
         counter depends on the size of the counter It is 0xFF (8bit counter), 0xFF’FF (16bit
         counter) or 0xFF’FF’FF’FF (32 bit).(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201205</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201206</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01206
         E2E Profiles shall use the CRC functions listed in chapters
         section 6.7, section 6.10, section 6.11, section 6.14, for calculating the CRC.(RS_-
         E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201206</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201207</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01207
         The CRC shall be calculated over the entire E2E header (excluding
         the CRC bytes) and over the user data.(RS_E2E_08531)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201207</srcid><srcstatus/><internalId>161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201209</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01209
         The function E2E_PXXProtect() shall have the overall behavior as
         shown in Figure 3.1.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect"/>.
      </para>
      <figure id="fig_E2E_PXXProtect">
        <title>E2E_PXXProtect</title>
        <inlinegraphic fileref="images/E2E_PXXProtect.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201209</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201210</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01210
         The step ”Verify inputs of the protect function” in
         E2E_PXXProtect() shall behave as shown in Figure 3.2.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Verifyinputs"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Verifyinputs">
        <title>E2E_PXXProtect Verify inputs</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Verifyinputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201210</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201211</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01211
         The step ”Compute offset” in E2E_PXXProtect(), E2E_PXXForward() and E2E_PXXCheck()
         shall behave as shown in Figure 3.3.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset">
        <title>E2E_PXXProtect,E2E_PXXForward and E2E_PXXCheck Compute OffSet</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201211</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201212</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01212
         The step ”Write Length” in E2E_PXXProtect() and E2E_PXXForward()
         shall behave as shown in Figure 3.4.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_WriteLength"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_WriteLength">
        <title>E2E_PXXProtect, E2E_PXXForward Write Length</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_WriteLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201212</srcid><srcstatus/><internalId>165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201213</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01213
         The step ”Write Counter” in E2E_PXXProtect()
         shall behave as shown in Figure 3.5.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_WriteCounter">
        <title>E2E_PXXProtect Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201213</srcid><srcstatus/><internalId>166</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201214</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01214
         The step ”Write DataID” in E2E_PXXProtect()
         shall behave as shown in Figure 3.6.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_WriteDataID">
        <title>E2E_PXXProtect Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201214</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201215</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01215
         The step ”Compute CRC” in
         E2E_PXXProtect(), E2E_PXXForward() and in E2E_PXXCheck()
         Shall behave as shown in Figure 3.7.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC">
        <title>E2E_PXXProtect, E2E_PXXForward and E2E_PXXCheck Compute CRC</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201215</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201216</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01216
         The step ”Write CRC” in E2E_PXXProtect() and
         E2E_PXXForward() shall behave as shown in Figure 3.8.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Forward_WriteCRC"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Forward_WriteCRC">
        <title>E2E_PXXProtect, E2E_PXXForward Write CRC</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Forward_WriteCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201216</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201217</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01217
         The step ”Increment Counter” in E2E_PXXProtect() and E2E_PXXForward()
         shall behave as shown in Figure 3.9.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Forward_IncrementCounter"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Forward_IncrementCounter">
        <title>E2E_PXXProtect, E2E_PXXForward Increment Counter</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Forward_IncrementCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201217</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201218</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01218
         The function E2E_PXXForward() shall have the overall behavior
         as shown in Figure 3.10.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward"/>.
      </para>
      <figure id="fig_E2E_PXXForward">
        <title>E2E_PXXForward</title>
        <inlinegraphic fileref="images/E2E_PXXForward.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201218</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201228</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01228
         The step ”Verify inputs of the forward function” in
         E2E_PXXForward() shall behave as shown in Figure 3.11.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXForward_VerifyInputs">
        <title>E2E_PXXForward Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXForward_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201228</srcid><srcstatus/><internalId>172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201219</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01219
         The step ”Write Counter” in E2E_PXXForward() shall behave as
         shown in Figure 3.12.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXForward_WriteCounter">
        <title>E2E_PXXForward Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXForward_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201219</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201220</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01220
         The step ”Write DataID” in E2E_PXXForward() shall behave as
         shown in Figure 3.13.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXForward_WriteDataID">
        <title>E2E_PXXForward Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXForward_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201220</srcid><srcstatus/><internalId>174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201221</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01221
         The function E2E_PXXCheck() shall have
         the overall behavior as shown in Figure 3.14.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck"/>.
      </para>
      <figure id="fig_E2E_PXXCheck">
        <title>E2E_PXXCheck</title>
        <inlinegraphic fileref="images/E2E_PXXCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201221</srcid><srcstatus/><internalId>175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201222</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01222
         The step ”Verify inputs of the check function” in
         E2E_PXXCheck() shall behave as shown in Figure 3.15.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_VerifyInputs">
        <title>E2E_PXXCheck Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201222</srcid><srcstatus/><internalId>176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201223</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01223
         The step ”Read Length” in E2E_PXXCheck()
         shall behave as shown in Figure 3.16.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadLength"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadLength">
        <title>E2E_PXXCheck Read Length</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201223</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201224</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01224
         The step ”Read Counter” in E2E_PXXCheck()
         shall behave as shown in Figure 3.17.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadCounter"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadCounter">
        <title>E2E_PXXCheck Read Counter</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201224</srcid><srcstatus/><internalId>178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201225</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01225
         The step ”Read DataID” in E2E_PXXCheck()
         shall behave as shown in Figure 3.18.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadDataID"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadDataID">
        <title>E2E_PXXCheck Read DataID</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201225</srcid><srcstatus/><internalId>179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201226</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01226
         The step ”Read CRC” in E2E_PXXCheck()
         shall behave as shown in Figure 3.19.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadCRC"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadCRC">
        <title>E2E_PXXCheck Read CRC</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201226</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201227</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01227
         The step ”Do Checks” in E2E_PXXCheck()
         shall behave as shown in Figure 3.20.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_DoChecks">
        <title>E2E_PXXCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201227</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201250</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01250
         The E2E_PXXProtect and E2E_PXXForward functions ’state’
         shall have the members defined in (see Table 6.5).(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter to be used for protecting the next
         Data. The initial value is 0, which means that in the first cycle, Counter is 0. Each
         time E2E_PXXProtect() is called, it increments the counter up to the maximum
         value (0xFF for 8 bit counter, 0xFF’FF for a 16 bit counter and 0xFF’FF’FF’FF for a 32
         bit counter). After the maximum value is reached, the next value is 0x0. The overflow
         is not reported to the caller.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201250</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201251</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01251
         The E2E_PXXCheck functions ’State’ shall have the members
         defined in (see Table 6.6).(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter of the data in previous cycle.|
         Status | Enumeration | Result of the verification of the Data in this
         cycle, determined by the Check function.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201251</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201252</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01252
         The E2E_PXXCheck functions ’State-&gt;Status’ enumeration type
         shall consist the following enumeration values (see Table 6.7).(RS_E2E_08528)
         Name | State Type | Description |
         E2E_PXXSTATUS_OK | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented by 1).|
         E2E_PXXSTATUS_NONEWDATA | Error | The Check function has been invoked but
         no new Data is available since the last call, according to communication medium
         (e.g. RTE, COM). As a result, no E2E checks of Data have been consequently
         executed. This may be considered similar to E2E_PXXSTATUS_REPEATED.|
         E2E_PXXSTATUS_ERROR | Error | Error not related to counters occurred (e.g.
         wrong crc, wrong length, wrong options, wrong Data ID).|
         E2E_PXXSTATUS_REPEATED | Error | The checks of the Data in this cycle were
         successful, with the exception of the repetition.|
         E2E_PXXSTATUS_OKSOMELOST | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented within the allowed
         configured delta).|
         E2E_PXXSTATUS_WRONGSEQUENCE | Error | The checks of the Data in this cycle were
         successful, with the exception of counter jump, which changed more than the
         allowed delta|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201252</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <!-- E2E Profiles for Methods - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2E0201156</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01156
         In E2E profiles for methods, the counter on the sender side shall
         be initialized with 0 for the first transmission request of a data element the counter
         and shall be incremented by 1 for every subsequent send request. When the counter
         reaches the maximum value (0xFF’FF for a 16bit counter, 0xFF’FF’FF’FF for a 32bit
         counter, 0xFF’FF’FF’FF’ FF’FF’FF’FF for a 64bit counter), then it shall restart with
         0 for the next send request.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201156</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201157</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01157
         In the E2E profiles for methods, the Data ID shall be explicitly
         transmitted, i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201157</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201159</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01159
         E2E profiles for methods shall use the function defined in PXXMCALCULATE_CRC
         of the SWS CRC supervision for calculating the CRC.(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201159</srcid><srcstatus/><internalId>187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201160</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01160
         In E2E profiles for methods, the CRC shall be calculated over
         the entire E2E header (excluding the CRC bytes) and over the user data.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201160</srcid><srcstatus/><internalId>188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201161</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01161
         In the E2E profiles for methods the Message Type field shall be explicitly transmitted,
         i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201161</srcid><srcstatus/><internalId>189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201162</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01162
         A Message Type field with a value of 0 indicates a request message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201162</srcid><srcstatus/><internalId>190</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201163</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01163
         A Message Type field with a value of 1 indicates a response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201163</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201203</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01203
         In the E2E profiles for methods the Message Result field shall be explicitly transmitted,
         i.e. it shall be the part of the transmitted E2E header.c(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201203</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201164</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01164
         A Message Result field with a value of 0 indicates a normal response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201164</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201165</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01165
         A Message Result field with a value of 1 indicates an error response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201165</srcid><srcstatus/><internalId>194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201166</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01166
         The Message Result field shall be set to 0 for request messages
         (i.e., in case the Message Type field is set to 0).(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201166</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201167</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01167
         In the E2E profiles for methods, the Source ID shall be explicitly
         transmitted, i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201167</srcid><srcstatus/><internalId>196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201169</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01169
         The function E2E_PXXmProtect() shall have the overall behavior as shown in Figure 3.21.
         (RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect">
        <title>E2E_PXXmProtect()</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201169</srcid><srcstatus/><internalId>197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01170
         The step ”Verify inputs of the protect function” in
         E2E_PXXmProtect() shall behave as shown in Figure 3.22.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_VerifyInputs">
        <title>E2E_PXXmProtect Input Verification</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201170</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01171
         The step ”Compute offset” in E2E_PXXmProtect(),
         E2E_PXXmForward(), E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.23.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset">
        <title>E2E_PXXmProtect/Forward/SourceCheck/SinkCheck offset Computation</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201171</srcid><srcstatus/><internalId>199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201172</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01172
         The step ”Write Length” in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.24.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_WriteLength"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_WriteLength">
        <title>E2E_PXXmProtect and E2E_PXXmForward Write Length</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201172</srcid><srcstatus/><internalId>200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201173</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01173
         The step ”Write Counter” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.25.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteCounter">
        <title>E2E_PXXmProtect Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201173</srcid><srcstatus/><internalId>201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201174</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01174
         The step ”Write DataID” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.26.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteDataID">
        <title>E2E_PXXmProtect Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201174</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201175</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01175
         The step ”Write SourceID” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.27.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteSourceID">
        <title>E2E_PXXmProtect Write SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201175</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201176</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01176
         The step ”Write Message Type” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.28.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteMessageType"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteMessageType">
        <title>E2E_PXXmProtect Write Message Type</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteMessageType.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201176</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201177</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01177
         The step ”Write Message Result” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.29.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteMessageResult"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteMessageResult">
        <title>E2E_PXXmProtect Write Message Result</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteMessageResult.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201177</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201178</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01178
         The step ”Compute CRC” in E2E_PXXmProtect(),
         E2E_PXXmForward(), E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.30.(RS_E2E_08539)
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC"/>.
        </para>
        <figure id="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC">
        <title>E2E_PXXmProtect, E2E_PXXmForward, E2E_PXXmSourceCheck and E2E_PXXmSinkCheck Compute CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC.png" width="70%"/>
        </figure>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201178</srcid><srcstatus/><internalId>206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201179</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01179
         The step ”Write CRC”in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.31.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_WriteCRC"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_WriteCRC">
        <title>E2E_PXXmProtect and E2E_PXXmForward Write CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_Forward_WriteCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201179</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201180</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01180
         The step ”Increment Counter” in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.32.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_IncrementCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_IncrementCounter">
        <title>E2E_PXXmProtect and E2E_PXXmForward Increment Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_Forward_IncrementCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201180</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201181</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01181
         The function E2E_PXXmForward() shall have the overall
         behavior as shown in Figure 3.33.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward"/>.
      </para>
      <figure id="fig_E2E_PXXmForward">
        <title>E2E_PXXmForward</title>
        <inlinegraphic fileref="images/E2E_PXXmForward.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201181</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201182</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01182
         The step ”Verify inputs of the forward function” in
         E2E_PXXmForward() shall behave as shown in Figure 3.34.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_VerifyInputs">
        <title>E2E_PXXmForward Verify inputs of the forward function</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201182</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201183</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01183
         The step ”Write Counter” in E2E_PXXmForward()
         shall behave as shown in Figure 3.35.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_WriteCounter">
        <title>E2E_PXXmForward Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201183</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201184</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01184
         The step ”Write DataID” in E2E_PXXmForward()
         shall behave as shown in Figure 3.36.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_WriteDataID">
        <title>E2E_PXXmForward Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201184</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201185</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01185
         The function E2E_PXXmSourceCheck() for the client side
         shall have the overall behavior as shown in Figure 3.37.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck">
        <title>E2E_PXXmSourceCheck</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201185</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201186</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01186
         The step ”Verify inputs of the function” in
         E2E_PXXmSourceCheck() shall behave as shown in Figure 3.38.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_VerifyInputs">
        <title>E2E_PXXmSourceCheck Verify inputs</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201186</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201187</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01187
         The step ”Read Length” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.39.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadLength"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadLength">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Length</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201187</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201188</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01188
         The step ”Read Counter” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.40.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCounter">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201188</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201189</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01189
         The step ”Read DataID” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.41.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadDataID">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201189</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201190</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01190
         The step ”Read SourceID” in E2E_PXXmSourceCheck()
         shall behave as shown in Figure 3.42.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_ReadSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_ReadSourceID">
        <title>E2E_PXXmSourceCheck SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_ReadSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201190</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201191</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01191
         The step ”Read Message Type” in E2E_PXXmSourceCheck()
         and E2E_PXXmSinkCheck() shall behave as shown in Figure 3.43.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadMessageType"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadMessageType">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Message Type</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadMessageType.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201191</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201192</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01192
         The step ”Read Message Result” in E2E_PXXmSourceCheck()
         and E2E_PXXmSinkCheck() shall behave as shown in Figure 3.44.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Message Result</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201192</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201193</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01193
         The step ”Read CRC” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.45.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCRC"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCRC">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201193</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201194</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01194
         The step ”Do Checks” in E2E_PXXmSourceCheck()
         shall behave as shown in Figure 3.46.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_DoChecks">
        <title>E2E_PXXmSourceCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201194</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201195</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01195
         The function E2E_PXXmSinkCheck() for the server side
         shall have the overall behavior as shown in Figure 3.47.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck">
        <title>E2E_PXXmSinkCheck</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201195</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201196</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01196
         The step ”Verify inputs of the check function” in
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.48.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_VerifyInputs">
        <title>E2E_PXXmSinkCheck Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201196</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201197</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01197
         The step ”Read SourceID” in E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.49.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_ReadSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_ReadSourceID">
        <title>E2E_PXXmSinkCheck Read SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_ReadSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201197</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201198</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01198
         The step ”Do Checks” in E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.50.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_DoChecks">
        <title>E2E_PXXmSinkCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201198</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201199</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01199
         The E2E_PXXmProtect() and E2E_PXXmForward() functions’
         ”state” shall have the members defined in Table 6.9.(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter to be used for protecting the
         next Data. The initial value is 0, which means that in the first cycle, counter
         is 0. Each time E2E_PXXmProtect() is called, it increments the counter up to
         its maximum value (0xFF’FF for a 16 bit counter, 0xFF’FF’FF’FF for a 32 bit
         counter, 0xFF’FF’FF’FF’ FF’FF’FF’FF for a 64 bit counter). After the maximum value
         is reached, the next value is 0x0. The overflow is not reported to the caller.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201199</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201200</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01200
         The E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         functions’ ”state” shall have the members defined in Table 6.10.(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter of the data in previous cycle.|
         Status | Enumeration | Result of the verification of the Data in this
         cycle, determined by the Check function.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201200</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201201</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01201
         The step ”Do Checks” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall set State-&gt;Status to one of the following enumeration
         values (see Table 6.11).(RS_E2E_08528)
         Name | State Type | Description |
         E2E_PXXMSTATUS_OK | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented by 1).|
         E2E_PXXMSTATUS_NONEWDATA | Error | The Check function has been invoked but
         no new Data is available since the last call, according to communication medium
         (e.g. RTE, COM). As a result, no E2E checks of Data have been consequently
         executed. This may be considered similar to E2E_PXXMSTATUS_REPEATED.|
         E2E_PXXMSTATUS_ERROR | Error | Error not related to counters occurred (e.g.
         wrong CRC, wrong Length, wrong Options, wrong Data ID).
         E2E_PXXMSTATUS_REPEATED | Error | The checks of the Data in this cycle were
         successful, except for the repetition.
         E2E_PXXMSTATUS_OKSOMELOST | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented within the allowed
         configured delta).
         E2E_PXXMSTATUS_WRONGSEQUENCE | Error | The checks of the Data in this cycle were
         successful, except for a counter jump, which changed more than the allowed delta.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010201201</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200739</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00739
         The MessageType argument of the E2E_PXXmProtect,
         E2E_PXXmForward, and E2E_PXXmCheck functions shall be set to one of the following
         enumeration values (see Table 6.2).(RS_E2E_08528)
         Name | Value | Description |
         STD_MESSAGETYPE_REQUEST | 0 | The type of the message is a request message
         which is sent from the client to the server.
         STD_MESSAGETYPE_RESPONSE | 1 | The type of the message is a response
         message which is sent from the server to the client.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010200739</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200743</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00743
         The MessageResult argument of the E2E_PXXmProtect,
         E2E_PXXmForward, and E2E_PXXmCheck functions shall be set to one of the following
         enumeration values (see Table 6.3).(RS_E2E_08528)
         Name | Value | Description |
         STD_MESSAGERESULT_OK | 0 | The type of the result in the response message
         is a normal (i.e., a non erroneus) result. This value is also used for the request
         messages, where the value of this field is fixed to this value.
         STD_MESSAGERESULT_ERROR | 1 | The type of the result int the response
         message is an error (i.e., an erroneus) result.|
      </description>
      <furtherinfo>
       Justifying rule: WRN.swurs.needscoverage.count violation.
       This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010200743</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200677</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00677
         The mapping between profile independent and profile specific
         states shall be as described in the table(Table 7.1): (yy is one of the profiles
         01,02,04,05,06,07,08,11,22,44,04m,07m)(RS_E2E_08534, RS_E2E_08528)
         Name | Value | Description |
         Profile independent result | Profile specific result with yy one of profiles
         (01,02,04,05,06,07,08,11,22,44,04m,07m)|
         OK | E2E_PyySTATUS_OK |
         OK | E2E_PyySTATUS_OKSOMELOST |
         WRONGCRC | E2E_PyySTATUS_ERROR |
         REPEATED | E2E_PyySTATUS_REPEATED |
         NONEWDATA | E2E_PyySTATUS_NONEWDATA |
         WRONGSEQUENCE | E2E_PyySTATUS_WRONGSEQUENCE |
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>ASR_E2E0206300</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06300
        MaxDeltaCounter for Client-Server Communication(server) For Client-Server Communication the
        MaxDeltaCounter on server-side shall be set to the maximum of the value range of the
        sequence counter.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010206300</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>ASR_E2E0206303</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06303
        MaxDeltaCounter for Client-Server Communication (client)
        For Client-Server Communication the MaxDeltaCounter on client-side shall be set
        to 1.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP010206303</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!-- SWS UC Requirements -->

    <specobject>
      <id>ASR_E2E02UC00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00313
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00313'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00313</srcid><srcstatus/><internalId>28</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00202
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00202'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00202</srcid><srcstatus/><internalId>29</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00203
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00203'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00203</srcid><srcstatus/><internalId>30</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00204</srcid><srcstatus/><internalId>31</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00205
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00205'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00205</srcid><srcstatus/><internalId>32</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00232
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00232'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00232</srcid><srcstatus/><internalId>33</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00206
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00206'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00206</srcid><srcstatus/><internalId>34</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00207
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00207'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00207</srcid><srcstatus/><internalId>35</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00209
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00209'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00209</srcid><srcstatus/><internalId>36</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00233
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00233'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00233</srcid><srcstatus/><internalId>37</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00277</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00277
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00277'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00277</srcid><srcstatus/><internalId>38</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00278
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00278'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00278</srcid><srcstatus/><internalId>39</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00258
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00258'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00258</srcid><srcstatus/><internalId>40</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200115</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00115
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00115'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <!-- PRS UC Requirements -->

    <specobject>
      <id>ASR_E2E02UC00235</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00235
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00235'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00235</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01204</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC01204</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01158</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01158
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01158'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC01158</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01168</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01168
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01168'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC01168</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00239</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00239
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00239'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00239</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00238</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00238
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00238'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00238</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00325</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00325
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00325'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00325</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00236</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00236
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00236'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00236</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00170
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00170'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00170</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00171
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00171'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00171</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00062</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00062
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00062'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00062</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00063</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00063
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00063'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00063</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00320</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00320
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00320'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00320</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00173</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00173
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00173'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00173</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00055</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00055
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00055'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00055</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00071</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00071
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00071'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00071</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00606</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00606
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00606'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00606</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00741</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00741
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_USE_00741'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0102UC00741</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

      <specobject>
         <id>E2E.top.007</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If used to transmit data with dynamic length, the E2E module shall
            add data length information to the E2E header.
         </description>
         <comment>
            The modules E2EPxx (if designed to transmit and receive dynamic data) contain
            the implementation of the data length information.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201212</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201223</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201172</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201187</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

      <specobject>
         <id>E2E.top.001</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a sequence counter mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the sequence counter mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.top.001</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201205</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201213</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201217</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201219</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201224</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201250</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201251</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201156</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201173</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201180</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201183</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201188</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

      <specobject>
         <id>E2E.top.002</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a data ID mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the data ID mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.top.002</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201214</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201220</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201225</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201157</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201174</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201184</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201189</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>405</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

      <specobject>
         <id>E2E.top.003</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a Cyclic Redundancy Check mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the Cyclic Redundancy
            Check mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.top.003</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201206</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201207</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201215</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201216</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201226</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201252</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201159</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201160</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201178</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201179</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201193</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>405</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

      <!--
        Top Level requirements motivated by module specific behavior
    -->

      <specobject>
         <id>E2E.top.004</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall modularly structure static implementation files and data types.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020048</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020115</srcid><srcstatus/><internalId>4</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020037</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020018</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020200</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020020</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020021</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020022</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020113</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020114</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020644</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020588.PRS</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020646</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201201</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

      <specobject>
         <id>E2E.top.005</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall check input parameter for validity.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020385</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020386</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020389</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP01020023</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020608</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP01020196</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020673</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020597</srcid><srcstatus/><internalId>337</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201210</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201228</srcid><srcstatus/><internalId>351</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201222</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201170</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201182</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201186</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201196</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

      <specobject>
         <id>E2E.top.006</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall provide a mechanism to read the version number.
      </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP01020038</srcid><srcstatus/><internalId>11</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

      <specobject>
         <id>E2E.top.011</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall support client-server communication via methods for PXXm profiles.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP01.top.005</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201161</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201162</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201163</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201203</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201164</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201165</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201166</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201167</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201172</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201173</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201174</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201175</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201176</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201177</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201178</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201179</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201180</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201182</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201183</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201184</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201186</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201187</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201188</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201189</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201190</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201191</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201192</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201193</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201196</srcid><srcstatus/><internalId>403</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201197</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201201</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0200739</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0200743</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0206300</srcid><srcstatus/><internalId>412</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0206303</srcid><srcstatus/><internalId>413</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EP01.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP01_VerifyCodeStub</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.E2EP01.SCrc</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>dev.E2EP01.DataInvalidDetection</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>dev.E2EP01.CheckStatusType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020022</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>dev.E2EP01.ClientServer</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00172.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00171.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00166.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00206.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00167.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>dev.E2EP01.InternalError</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>enh.E2EP01.ReSync</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/releasenotes/Enhancements_reqm.xml</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020018</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020022</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020021</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>enh.E2EP01.ExtendedDataLength</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/doc/public/releasenotes/Enhancements_reqm.xml</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020018</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/build/reqm/common_req/E2EP01_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(E2EP01.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ComTest_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Compile/IN/E2EP01_ComTest_01/source/application/E2EP01_ComTest_01.c</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
 &lt;para&gt;
 The End-to-End Communication Protection Library Module shall be translated.
 &lt;/para&gt;
 
Test Object: None.
Test Precondition: None.
Test Execution: 

 01: Call E2E_P01Protect().
 02: VP(ASR_E2EP01020166):
 E2E_P01Protect() shall be translated.
 03: Call E2E_P01Check().
 04: VP(ASR_E2EP01020158):
 E2E_P01Check() shall be translated.
 05: Call E2E_P01ProtectInit().
 06: VP(ASR_E2EP01020385):
 E2E_P01ProtectInit() shall be translated.
 07: Call E2E_P01CheckInit().
 08: VP(ASR_E2EP01020390):
 E2E_P01CheckInit() shall be translated.
 09: Call E2E_P01MapStatusToSM().
 10: VP(ASR_E2EP01020382):
 E2E_P01MapStatusToSM() shall be translated.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020166</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020158</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020385</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020382</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_01_P01Protect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_01_P01Protect/source/application/E2EP01_ConTest_01_P01Protect.c</sourcefile>
      <sourceline>631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  &lt;para&gt;
  The aspects stated below are done on valid input data only.

  1) (ASR_E2EP01020166,ASR_E2EP01020195)
    Test that E2E_P01Protect()
    a) writes the Counter in the Data at the Counter position specified
       in the State data,
    b) writes DataID Nibble in Data (if E2E_P01_DATAID_NIBBLE is used) at the Nibble
       position specified in the configuration data,
    c) computes the CRC over DataID (depending on DataID mode - see
       test aspects 5), 6), and 7)) and Data,
    d) writes the CRC in the Data at the CRC position provided in the configuration data, and
    e) increments the Counter in the State data.

  2) (ASR_E2EP01020075)
     Test that E2E_P01Protect() increments the passed State Counter
     value by 1 up to 14, and then restarts with 0 again.

  3) (ASR_E2EP01020190)
     Test that E2E_P01Protect() calls the SCrc_CalculateCRC8() function

  4) (ASR_E2EP01020070)
     Test that E2E_P01Protect() uses CRC-8-SAE J1850 with 0 as start value and XOR value
     for the calculation of the CRC (That is,  SCrc_CalculateCRC8() is called
     with StartValue8=0).

  5) (ASR_E2EP01020163.1)
     Test that for DataId inclusion Mode E2E_P01_DATAID_BOTH,
     first low byte and then high byte of the DataID are included in the CRC calculation
     step regarding the DataID.

  6) (ASR_E2EP01020163.2)
     Test that for DataID inclusion Mode E2E_P01_DATAID_ALT,
     for even counter values the low byte is included and
     for odd counter values the high byte is included

  7) (ASR_E2EP01020163.3)
     Test that for DataID inclusion Mode E2E_P01_DATAID_LOW,
     only low byte of the DataID is included in the CRC calculation
     step regarding the DataID.

  8) (ASR_E2EP01020163.4)
     Test that for DataID inclusion Mode E2E_P01_DATAID_NIBBLE,
     the low Nibble of the high byte of the DataID
     is written to the Data (covered by CRC calculation when computing CRC over Data),
     and that first low byte of the DataID then value 0 is included
     in the CRC calculation step regarding the DataID.
  &lt;/para&gt;

  &lt;para&gt;
  Test strategies applied:
     Equivalence Class Partitioning:
       Test execution is done with a permutation of following parameters
          - E2E_P01ProtectStateType.Counter
          - E2E_P01ConfigType.CounterOffset
          - E2E_P01ConfigType.CRCOffset
          - E2E_P01ConfigType.DataIDNibbleOffset
          - E2E_P01ConfigType.DataIDMode
          - E2E_P01ConfigType.DataLength
          - E2E_P01ConfigType.DataID
        Note: The following parameters are not used at sender side and therefore not relevant:
           - MaxDeltaCounterInit
           - MaxNoNewOrRepeatedData
           - SyncCounterInit

     Pair wise tests: Tests are executed with a  combination of following parameters / values
          - DataIDMode
          - CRCOffset
          - CounterOffset
          - DataIDNibbleOffset (only relevant for E2E_P01_DATAID_NIBBLE)

     Boundary Value Analysis in combination
     with test-case TS_E2EP01_ConTest_01_P01Protect_InvalidInput (outside bound):
        DataIdMode: [E2E_P01_DATAID_BOTH, E2E_P01_DATAID_LOW, E2E_P01_DATAID_NIBBLE]
        DataLength: MIN=2, MAX=30
        Counter: MIN=0, MAX=14; (First Byte, Last Byte, in between Data)
        DataId: MIN=0, MAX=0xFFFF (E2E_P01_DATAID_BOTH)
        DataId: MIN=0, MAX=0xFFFF (E2E_P01_DATAID_ALT)
                       MAX=0x0FFF (E2E_P01_DATAID_NIBBLE)
                       MAX=0x00FF (E2E_P01_DATAID_LOW)
        DataIDNibbleOffset: MIN=12, MAX=DataLength (low nibble and high nibble)
        CounterOffset: MIN=0, MAX=DataLength
        CRCOffset: MIN=0, MAX=DataLength
  &lt;/para&gt;


Test Object: None.
Test Precondition: None.
Test Execution: 

 010: Prepare CRC stub (SCrc_CalculateCRC8) to return the number of overall Stub calls
      XORed by 0xFF

For each stated TestDataBlock (InputTstCfg), execute the following steps:
 020: call the E2E_Protect function with following parameters:
      - Parameter Config points to following test-data
          Config.DataIDMode       = InputTstCfg.DataIDMode
          Config.DataID           = InputTstCfg.DataID
          Config.DataIDNibbleOffset = InputTstCfg.DataIDNibbleOffset
          Config.CRCOffset        = InputTstCfg.CRCOffset
          Config.CounterOffset    = InputTstCfg.CounterOffset
          Config.DataLength       = InputTstCfg.DataLength
          Config.TstData          = InputTstCfg.TstData
       - Parameter State points to following input data
          State.Counter           = InputTstCfg.Counter
       - Parameter Data points to valid input data
 030: VP (ASR_E2EP01020166):
     E2E_Protect function returns E2E_E_OK
 040: VP (ASR_E2EP01020075,ASR_E2EP01020166,ASR_E2EP01020195)
     State.Counter is updated as follows:
         If InputTstCfg.Counter==MAX(14) =&gt; State.Counter=0
         If InputTstCfg.Counter &lt; MAX(14) =&gt; State.Counter=InputTstCfg.Counter+1
 050: VP (ASR_E2EP01020166,ASR_E2EP01020195)
     TestData at position Config.CounterOffset (4 bits) equals InputTstCfg.Counter
 060: VP (ASR_E2EP01020166,ASR_E2EP01020163.4,ASR_E2EP01020195)
     If Config.DataIDMode=E2E_P01_DATAID_NIBBLE =&gt;
       TestData at position Config.DataIDNibbleOffset (4 bits) equals
       the low Nibble of the high byte of Config.DataID
 070: VP (ASR_E2EP01020166,ASR_E2EP01020195)
     TestData at position Config.CRCOffset (8 bits) equals
     the number of overall calls to the SCrc_CalculateCRC8 CRC stub
 080: VP (ASR_E2EP01020166,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP010200163.1
          ASR_E2EP01020163.3,ASR_E2EP01020163.4,ASR_E2EP01020195)
      Number of SCrc_CalculateCRC8 CRC stub calls equals n where:
         IF Config.DataIDMode==E2E_P01_DATAID_LOW
            and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=2
         IF InputTstCfg.DataIDMode==E2E_P01_DATAID_LOW
            and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=3
         IF Config.DataIDMode==E2E_P01_DATAID_ALT
            and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=2
         IF InputTstCfg.DataIDMode==E2E_P01_DATAID_ALT
            and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=3
         IF InputTstCfg.DataIDMode==E2E_P01_DATAID_BOTH
            and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=3
         IF InputTstCfg.DataIDMode==E2E_P01_DATAID_BOTH
           and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=4
         IF InputTstCfg.DataIDMode==E2E_P01_DATAID_NIBBLE
           and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=3
         IF InputTstCfg.DataIDMode==E2E_P01_DATAID_NIBBLE
            and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=4
 090: VP (ASR_E2EP01020195)
        No other data except CRC / Counter and DataId Nibble is modified in TestData
 100: VP (ASR_E2EP01020166,ASR_E2EP01020190,ASR_E2EP01020163.1
          ASR_E2EP01020163.3,ASR_E2EP01020163.4,ASR_E2EP01020195)
      1st call to SCrc_CalculateCRC8 CRC stub in this test iteration:
        - SCrc_DataPtr points to a value that equals the low byte of InputTstCfg.DataID
        - SCrc_Length equals 1
        - SCrc_StartValue8 equals 255
        - SCrc_IsFirstCall equals FALSE
 110: VP (ASR_E2EP01020166,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020163.1
          ASR_E2EP01020163.3,ASR_E2EP01020163.4,ASR_E2EP01020195)
      Next call to SCrc_CalculateCRC8 CRC stub in this test iteration (depends on DataIdMode):
        If InputTstCfg.DataIDMode==E2E_P01_DATAID_BOTH:
         - SCrc_DataPtr points to a value that equals the high byte of InputTstCfg.DataID
         - SCrc_Length equals 1
         - SCrc_StartValue8 equals the SCrc return value from the previous stub call
           (number of overall SCrc stub calls XORed by 0xFFU)
         - SCrc_IsFirstCall equals FALSE
       If InputTstCfg.DataIDMode==E2E_P01_DATAID_NIBBLE:
         - SCrc_DataPtr points to a value 0
         - SCrc_Length equals 1
         - SCrc_StartValue8 equals the SCrc return value from the previous stub call
           (number of overall SCrc stub calls XORed by 0xFFU)
         - SCrc_IsFirstCall equals FALSE
 120: VP (ASR_E2EP01020166,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020163.1
          ASR_E2EP01020163.3,ASR_E2EP01020163.4,ASR_E2EP01020195)
      Next call to SCrc_CalculateCRC8 CRC stub in this test iteration (depends on CRC position):
       if InputTstCfg.CRCOffset is first byte in TestData
          - SCrc_DataPtr points to 2nd byte of the data passed to E2E_Protect
          - SCrc_Length equals Config.DataLength-1
          - SCrc_StartValue8 equals the SCrc return value from the previous stub call
            (number of overall SCrc stub calls XORed by 0xFFU)
          - SCrc_IsFirstCall equals FALSE
       if InputTstCfg.CRCOffset is not first byte in TestData
          - SCrc_DataPtr points to 1st byte of the data passed to E2E_Protect
          - SCrc_Length equals Config.CRCOffset / 8 (excludes CRC value)
          - SCrc_StartValue8 equals the SCrc return value from the previous stub call
            (number of overall SCrc stub calls XORed by 0xFFU)
          - SCrc_IsFirstCall equals FALSE
 130: VP (ASR_E2EP01020166,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020163.1
          ASR_E2EP01020163.3,ASR_E2EP01020163.4,ASR_E2EP01020195)
      Next call to SCrc_CalculateCRC8 CRC stub in this test iteration (depends on CRC position):
       if InputTstCfg.CRCOffset is not first byte and not last byte
          - SCrc_DataPtr points to 1st byte after CRC byte in the TestData
          - SCrc_Length equals Config.DataLength-(Config.CRCOffset/8) (Data after CRC byte)
          - SCrc_StartValue8 equals the SCrc return value from the previous stub call
            (number of overall SCrc stub calls XORed by 0xFFU)
          - SCrc_IsFirstCall equals FALSE


Test Input: 

Note: MAX ... maximum possible counter value =  14

TestDataBlock 1 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_BOTH
  - CRC at first Byte
  - Counter at second Byte
InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             0
InputTstCfg.CounterOffset:         8
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different size and values)

TestDataBlock 2 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_BOTH
  - CRC in the middle of the Data (not first, not last byte)
  - Counter at in the middle of the Data block (not first, not last byte)
InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             16
InputTstCfg.CounterOffset:         28
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different size and values)

TestDataBlock 3 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_BOTH
  - CRC in the last byte of the Data
  - Counter at in the next to last byte of the Data
InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             56
InputTstCfg.CounterOffset:         52
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different values)



TestDataBlock 4 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_NIBBLE
  - CRC at first Byte
  - Counter at second Byte
  - DataID Nibble at bit position 12 (High Nibble)
InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFF
InputTstCfg.DataIDNibbleOffset:    12
InputTstCfg.CRCOffset:             0
InputTstCfg.CounterOffset:         8
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different size and values)

TestDataBlock 5 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_NIBBLE
  - CRC in the middle of the Data (not first, not last byte)
  - Counter at in the middle of the Data block (not first, not last byte)
  - DataID Nibble at bit position 32  (Low Nibble)
InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFF
InputTstCfg.DataIDNibbleOffset:    32
InputTstCfg.CRCOffset:             16
InputTstCfg.CounterOffset:         28
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                      { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different size and values)

TestDataBlock 6 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_NIBBLE
  - CRC in the last byte of the Data
  - Counter at in the next to last byte of the Data
  - DataID Nibble at bit position 8 (Low Nibble)
InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFF
InputTstCfg.DataIDNibbleOffset:    8
InputTstCfg.CRCOffset:             56
InputTstCfg.CounterOffset:         52
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different values)

TestDataBlock 7 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_LOW
  - CRC at first Byte
  - Counter at second Byte
InputTstCfg.DataIDMode:            E2E_P01_DATAID_LOW
InputTstCfg.DataID:                Different valid values from 0 to maximum 0x00FF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             0
InputTstCfg.CounterOffset:         8
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different size and values)

TestDataBlock 8 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_LOW
  - CRC in the middle of the Data (not first, not last byte)
  - Counter at in the middle of the Data block (not first, not last byte)
InputTstCfg.DataIDMode:            E2E_P01_DATAID_LOW
InputTstCfg.DataID:                Different valid values from 0 to maximum 0x00FF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             16
InputTstCfg.CounterOffset:         28
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different size and values)

TestDataBlock 9 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_LOW
  - CRC in the last byte of the Data
  - Counter at in the next to last byte of the Data
InputTstCfg.DataIDMode:            E2E_P01_DATAID_LOW
InputTstCfg.DataID:                Different valid values from 0 to maximum 0x00FF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             56
InputTstCfg.CounterOffset:         52
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different values)

TestDataBlock 10 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_ALT
  - CRC in the last byte of the Data
  - Counter at in the next to last byte of the Data
InputTstCfg.DataIDMode:            E2E_P01_DATAID_ALT
InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             56
InputTstCfg.CounterOffset:         52
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different values)

TestDataBlock 11 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_ALT
  - CRC in the last byte of the Data
  - Counter at in the next to last byte of the Data
InputTstCfg.DataIDMode:            E2E_P01_DATAID_ALT
InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             56
InputTstCfg.CounterOffset:         52
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different values)

TestDataBlock 12 test aspects:
=============================
  - DataIDMode E2E_P01_DATAID_ALT
  - CRC in the last byte of the Data
  - Counter at in the next to last byte of the Data
InputTstCfg.DataIDMode:            E2E_P01_DATAID_ALT
InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFF
InputTstCfg.DataIDNibbleOffset:    0
InputTstCfg.CRCOffset:             56
InputTstCfg.CounterOffset:         52
InputTstCfg.Counter:               State Counter provided as input for E2EP01_Protect
                                   { 0, MAX, 1, 7, 2 }
InputTstCfg.DataLength:            correct length of TstData
InputTstCfg.TstData:               Data passed to E2EP01_Protect (different values)


Test Output: 
  return value for all tests shall be E2E_E_OK
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020166</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020195</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_01_P01ProtectInit_Ok</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_01_P01Protect/source/application/E2EP01_ConTest_01_P01Protect.c</sourcefile>
      <sourceline>1283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

    Test that E2E_P01ProtectInit() initializes the state structure, setting Counter to 0.

  &lt;/para&gt;
  
Test Object: E2E_P01ProtectInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P01ProtectInit() with valid parameter.
    02: VP(ASR_E2EP01020385,ASR_E2EP01020386):
        E2E_P01ProtectInit() returns E2E_E_OK.
        P01CheckState.Counter is initialized with 0.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to E2E_E_OK status for E2E_P01ProtectInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020385</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020386</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_01_P01ProtectInit_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_01_P01Protect/source/application/E2EP01_ConTest_01_P01Protect.c</sourcefile>
      <sourceline>1340</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      Test that if E2E_P01ProtectInit() is called with StatePtr equal to NULL
      then E2E_P01ProtectInit() returns immediately with E2E_E_INPUTERR_NULL.

  &lt;/para&gt;
  
Test Object: E2E_P01ProtectInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P01ProtectInit() with NULL parameter.
    02: VP(ASR_E2EP01020385,ASR_E2EP01020386,ASR_E2EP01020012,ASR_E2EP01020011,ASR_E2EP01020047):
        E2E_P01ProtectInit() returns E2E_E_INPUTERR_NULL.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to E2E_E_INPUTERR_NULL status for E2E_P01ProtectInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020385</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020386</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_01_P01Protect_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_01_P01Protect/source/application/E2EP01_ConTest_01_P01Protect.c</sourcefile>
      <sourceline>1401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

    1) Check that the E2E-library function E2E_P01Protect()
       returns the error codes E2E_E_INPUTERR_NULL if:
    - NULL_PTR is passed for configuration data / state data / data to be protected

    2) Check that the E2E-library function E2E_P01Protect()
       returns the error codes E2E_E_INPUTERR_WRONG if:
    - Unsupported Data ID Inclusion Mode does not equal E2E_P01_DATAID_ALT
    - invalid counter values in state data (maximum value exceeded)
    - invalid data length (not a multiple of 8, maximum value exceeded, value smaller than 16)
    - invalid crc offsets (greater than data length, )
    - invalid counter offset (greater than data length, )
    - invalid DataIDNibbleOffset in case of DataID mode not equal to E2E_P01_DATAID_NIBBLE (!=0)
    - invalid DataId value in case of DataID mode E2E_P01_DATAID_NIBBLE (value exceeds 12 bit limit)

    See also in the SWS section 7.2.1 Error classification
    (End-to-End Communication Protection Library V1.0.0 R4.0 Rev 1).

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 
    The input/output parameter(s) shall hold the following
    value(s) for calling E2E_P01Protect():
    01: set configuration to NULL
    02: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_NULL
    03: set sender state to NULL
    04: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_NULL
    05: set data to NULL
    06: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_NULL
    07: set all input parameters (configuration, sender state
        and data) to NULL
    08: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_NULL
    09: set all input parameters in RAM (sender state and data)
        to NULL
    10: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_NULL
    11: exceed maximum allowed State.Counter
    12: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    13: call with a data length which is not a multiple of 8
    14: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    15: call with a data length exceeding the maximum number of
        specified bits
    16: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    17: call with a data length smaller than 16 bits
    18: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    19: call with a crc offset greater than the configured data length
    20: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047,ASR_E2EP01020153)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    21: call with a counter offset greater than the configured data length
    22: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047,ASR_E2EP01020152)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    23: call with data id mode INVALID_DATAIDMODE
    24: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    27: call with data id mode E2E_P01_DATAID_BOTH and DataIDNibbleOffset != 0
    28 VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    29: call with data id mode E2E_P01_DATAID_ALT and DataIDNibbleOffset != 0
    30 VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    31: call with data id mode E2E_P01_DATAID_LOW and DataIDNibbleOffset != 0
    32 VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    33: call with data id mode E2E_P01_DATAID_NIBBLE and DataID &gt;
        12bit value (0x1000U)
    34 VP (ASR_E2EP01020306)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    35: call with data id mode E2E_P01_DATAID_NIBBLE and DataID &gt;
        12bit value (0xFFFFU)
    36 VP (ASR_E2EP01020306)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    37: call with data id mode E2E_P01_DATAID_LOW and DataID &gt;
        8bit value (0x0100U)
    38 VP (ASR_E2EP01020169)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    39: call with data id mode E2E_P01_DATAID_LOW and DataID &gt;
        8bit value (0xFFFFU)
    40 VP (ASR_E2EP01020169)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    41: call with data id mode E2E_P01_DATAID_NIBBLE and a too high DataIdNibbleOffset)
        (i.e. Config-&gt;DataIDNibbleOffset + 4U) &gt; Config-&gt;DataLength)
    42: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020166,ASR_E2EP01020047)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG


Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020166</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01Check_AllStates_DataIDModes</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>1699</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

    A) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_NONEWDATA with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    B) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_INITIAL with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    C) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_WRONGCRC with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    D) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_OK with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    E) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_REPEATED with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    F) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_WRONGSEQUENCE with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    G) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_OKSOMELOST with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    H) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_NONEWDATA with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    I) Test the correct behavior of the E2E-library
       for the function E2E_P01Check() by the path leading to
       E2E_P01STATUS_DATAINVALID with respect
       to different configurations of the DataIDMode and
       CRC / Counter / DataIDNibble offset values.

    Note:
      Additional test-cases do exist for some Status values
      which are either not tested here
      (e.g. TS_E2EP01_ConTest_02_P01CheckStatus_Sync)
      or have special test aspects which do not match
      with the Test Strategies applied here
      (e.g. additional parameters for Boundary Value analysis
      as it is the case for reaching Status E2E_P01STATUS_OKSOMELOST).

  &lt;/para&gt;

  &lt;para&gt;
  Test strategies applied:
     Equivalence Class Partitioning:
       Test execution is done with a permutation of following parameters
          - E2E_P01ProtectStateType.Counter
          - E2E_P01ConfigType.CounterOffset
          - E2E_P01ConfigType.CRCOffset
          - E2E_P01ConfigType.DataIDNibbleOffset
          - E2E_P01ConfigType.DataIDMode
          - E2E_P01ConfigType.DataLength
          - E2E_P01ConfigType.DataID
          - E2E_P01ConfigType.MaxDeltaCounterInit
          - E2E_P01ConfigType.MaxNoNewOrRepeatedData
          - E2E_P01ConfigType.SyncCounterInit

     Pair wise tests: Tests are executed with a  combination of following parameters / values
          - DataIDMode
          - CRCOffset
          - CounterOffset
          - DataIDNibbleOffset (only relevant for E2E_P01_DATAID_NIBBLE)
          - MaxDeltaCounterInit
          - MaxNoNewOrRepeatedData
          - SyncCounterInit

     Boundary Value Analysis in combination
     with test-case E2EP01_ConTest_01_P01Protect_InvalidInput (outside bound):
        DataIdMode: [E2E_P01_DATAID_BOTH, E2E_P01_DATAID_LOW, E2E_P01_DATAID_NIBBLE]
        DataLength: MIN=2, MAX=30
        Counter: MIN=0, MAX=14; (First Byte, Last Byte, in between Data)
        DataId: MIN=0, MAX=0xFFFF (E2E_P01_DATAID_BOTH)
                       MAX=0x0FFF (E2E_P01_DATAID_NIBBLE)
                       MAX=0x00FF (E2E_P01_DATAID_LOW)
        DataIDNibbleOffset: MIN=12, MAX=DataLength (low nibble and high nibble)
        CounterOffset: MIN=0, MAX=DataLength
        CRCOffset: MIN=0, MAX=DataLength
        MaxDeltaCounterInit: MIN=0, MAX=14
        MaxNoNewOrRepeatedData: MIN=0, MAX=14
        SyncCounterInit: MIN=0, MAX=14
  &lt;/para&gt;


Test Object: None.
Test Precondition: None.
Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState values are equal to values stated in OutputDataXX

   Additionally, the following VPs are checked within E2ETEST_GenericTest()
      E2ETEST_GenericTest.01: VP (ASR_E2EP01020196)
          The return value of E2E_P01Check()
          shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.02: VP (ASR_E2EP01020196)
          State-&gt;Status shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.03: VP (ASR_E2EP01020196)
          State-&gt;LastValidCounter shall hold the value specified in OutputDataXX
      E2ETEST_GenericTest.04: VP (ASR_E2EP01020196)
          The State-&gt;MaxDeltaCounter shall hold the value specified in OutputDataXX
      E2ETEST_GenericTest.05: VP (ASR_E2EP01020196)
          State-&gt;WaitForFirstData shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.06: VP (ASR_E2EP01020196)
          State-&gt;NewDataAvailable shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.07: VP (ASR_E2EP01020196)
          State-&gt;LostData shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.08: VP (ASR_E2EP01020196)
          State-&gt;NoNewOrRepeatedDataCounter
          shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.09: VP (ASR_E2EP01020196)
          State-&gt;SyncCounter
          shall be equal to the value specified in OutputDataXX
      E2ETEST_GenericTest.10: VP (ASR_E2EP01020196,ASR_E2EP01020190,ASR_E2EP01020163)
        Number of SCrc_CalculateCRC8 CRC stub calls equals n where:
         IF E2E_P01_DATAID_LOW is configured in InputDataXX
            and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=2
         IF E2E_P01_DATAID_LOW is configured in InputDataXX
            and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=3
         IF E2E_P01_DATAID_ALT is configured in InputDataXX
            and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=2
         IF E2E_P01_DATAID_ALT is configured in InputDataXX
            and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=3
         IF E2E_P01_DATAID_BOTH is configured in InputDataXX
            and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=3
         IF E2E_P01_DATAID_BOTH is configured in InputDataXX
           and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=4
         IF E2E_P01_DATAID_NIBBLE is configured in InputDataXX
           and InputTstCfg.CRCOffset is first or last byte in TestData
            =&gt; n=3
         IF E2E_P01_DATAID_NIBBLE is configured in InputDataXX
            and InputTstCfg.CRCOffset is not first and not last byte in TestData
            =&gt; n=4

  The following VPs are checked within the SCrc_CalculateCRC8 stub
   (test aspect related to call of CalculateCRC8):
    EBTEST_CalculateCRC8_Callout.01: VP (ASR_E2EP01020163,ASR_E2EP01020070,ASR_E2EP01020070)
            1st call to SCrc stub regarding DataId:
            - SCrc_DataPtr points to a value that equals the low byte of the configured DataId
            - SCrc_Length equals 1
            - SCrc_StartValue8 equals 255
            - SCrc_IsFirstCall equals FALSE
    EBTEST_CalculateCRC8_Callout.02: VP (ASR_E2EP01020163,ASR_E2EP01020070,ASR_E2EP01020070)
            Next call (2nd call) to SCrc stub regarding DataId (depends on data-id mode):
              If DataIdMode equals E2E_P01_DATAID_BOTH:
               - SCrc_DataPtr points to a value that equals the high byte of the configured DataId
               - SCrc_Length equals 1
               - SCrc_StartValue8 equals the SCrc return value from the previous stub call
                 (number of overall SCrc stub calls XORed by 0xFFU)
               - SCrc_IsFirstCall equals FALSE
              If DataIdMode equals E2E_P01_DATAID_NIBBLE:
               - SCrc_DataPtr points to a value 0
               - SCrc_Length equals 1
               - SCrc_StartValue8 equals the SCrc return value from the previous stub call
                 (number of overall SCrc stub calls XORed by 0xFFU)
               - SCrc_IsFirstCall equals FALSE
    EBTEST_CalculateCRC8_Callout.03: VP (ASR_E2EP01020163,ASR_E2EP01020070,ASR_E2EP01020070)
            Next call (2nd or 3rd call) to SCrc stub regarding Data (depends on CRCOffsetByte):
            if CRCOffsetByte equals 0:
              - SCrc_DataPtr points to 2nd byte of the data passed to E2E_Protect
              - SCrc_Length equals the data length of complete array - 1 (excluding CRC)
              - SCrc_StartValue8 equals the SCrc return value from the previous stub call
                (number of overall SCrc stub calls XORed by 0xFFU)
              - SCrc_IsFirstCall equals FALSE
            if CRCOffsetByte does not equal 0:
              - SCrc_DataPtr points to 1st byte of the data passed to E2E_Protect
              - SCrc_Length equals \a CRCOffsetByte
              - SCrc_StartValue8 equals the SCrc return value from the previous stub call
                (number of overall SCrc stub calls XORed by 0xFFU)
              - SCrc_IsFirstCall equals FALSE
    EBTEST_CalculateCRC8_Callout.04: VP (ASR_E2EP01020163,ASR_E2EP01020070,ASR_E2EP01020070)
            Next call (3rd or 4th call) to SCrc stub regarding Data (depends on CRCOffsetByte):
            if CRCOffsetByte does not equal 0 and does not equal last byte in data array:
              - SCrc_DataPtr points to 1st byte after CRC byte of the data passed to E2E_Protect
              - SCrc_Length equals Array size of complete data minus \a CRCOffsetByte
              - SCrc_StartValue8 equals the SCrc return value from the previous stub call
                (number of overall SCrc stub calls XORed by 0xFFU)
              - SCrc_IsFirstCall equals FALSE
    EBTEST_CalculateCRC8_Callout.05:
            For last CalculateCRC8 call in a sequence:
                return the CRC value stated in InputDataXX
                (XORed by final XOR value = 0x00)
            else:
                return the number of overall SCrc stub calls XORed by 0xFFU


Test aspects of individual InputDataXX/OutputDataXX (Note X ... any stand for any digit):
    DataX00: VP (ASR_E2EP01020190,ASR_E2EP01020076)
          See Test aspect A)
    DataX01: VP (ASR_E2EP01020190,ASR_E2EP01020076)
          I) See Test aspect B)
    DataX02: VP (ASR_E2EP01020190)
          See Test aspect C)
    DataX03: VP (ASR_E2EP01020190,ASR_E2EP01020076)
          See Test aspect D)
    DataX04: VP (ASR_E2EP01020190)
          See Test aspect E)
    DataX05: VP (ASR_E2EP01020190)
          See Test aspect F)
    DataX06: VP (ASR_E2EP01020190)
          See Test aspect G)
    DataX07: Exists only for sake of sanity check.
    DataX08: VP (ASR_E2EP01020190)
          See Test aspect H)
    DataX09: VP (ASR_E2EP01020190,EB_E2EP01020001)
          See Test aspect I) with correct CRC (DataInvalid shall be returned too)
    DataX10: VP (ASR_E2EP01020190,EB_E2EP01020001)
          See Test aspect I) with incorrect CRC

  - Test Data Variation regarding DataIDModes:
    Data0XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.1)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_BOTH
          CRC byte is placed in first byte of serialized data
          CRCOffset = 0, CounterOffset = 8
    Data1XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.1)
          Tests the correct behavior of library where
          DataIDMode = E2E_P01_DATAID_BOTH
          CRC byte is placed in a byte in-between the serialized data
          CRCOffset = 16, CounterOffset = 28
    Data2XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.1)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_BOTH
          CRC byte is placed in last byte of serialized data
          CRCOffset = 56, CounterOffset = 52
    Data3XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.3)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_NIBBLE
          CRC byte is placed in first byte of serialized data
          CRCOffset = 0, CounterOffset = 8, DataIDNibble = 12
    Data4XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.3)
          Tests the correct behavior of library where
          DataIDMode = E2E_P01_DATAID_NIBBLE
          CRC byte is placed in a byte in-between the serialized data
          CRCOffset = 16, CounterOffset = 28, DataIDNibble = 24
    Data5XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.3)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_NIBBLE
          CRC byte is placed in last byte of serialized data
          CRCOffset = 56, CounterOffset = 52, DataIDNibble = 40
    Data6XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.4)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_LOW
          CRC byte is placed in first byte of serialized data
          CRCOffset = 0, CounterOffset = 8, DataIDNibble = 12
    Data7XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.4)
          Tests the correct behavior of library where
          DataIDMode = E2E_P01_DATAID_LOW
          CRC byte is placed in a byte in-between the serialized data
          CRCOffset = 16, CounterOffset = 28, DataIDNibble = 24
    Data8XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.4)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_LOW
          CRC byte is placed in last byte of serialized data
          CRCOffset = 56, CounterOffset = 52, DataIDNibble = 40
    Data9XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.2)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_ALT
          CRC byte is placed in first byte of serialized data
          CRCOffset = 0, CounterOffset = 8, DataIDNibble = 0
    Data10XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.2)
          Tests the correct behavior of library where
          DataIDMode = E2E_P01_DATAID_ALT
          CRC byte is placed in a byte in-between the serialized data
          CRCOffset = 16, CounterOffset = 28, DataIDNibble = 0
    Data11XX: VP (ASR_E2EP01020190,ASR_E2EP01020163.2)
          Tests that all Status values are set by the library for following configuration:
          DataIDMode = E2E_P01_DATAID_ALT
          CRC byte is placed in last byte of serialized data
          CRCOffset = 56, CounterOffset = 52, DataIDNibble = 0
Used Test Strategies:
- Pair wise tests
  with respect to following sets:
  1) possible Status values set by E2E library: E2E_P01STATUS_NONEWDATA,
                                                E2E_P01STATUS_INITIAL,
                                                E2E_P01STATUS_WRONGCRC,
                                                E2E_P01STATUS_OK,
                                                E2E_P01STATUS_REPEATED,
                                                E2E_P01STATUS_WRONGSEQUENCE,
                                                E2E_P01STATUS_OKSOMELOST,
                                                E2E_P01STATUS_NONEWDATA,
                                                E2E_P01STATUS_DATAINVALID
     See Test Aspects A)-I)
  2) Configuration variation with respect to different DataID Modes:
     See Description of Test Data Variation Data0XX ... Data8XX
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing each DataIDMode)


Test Input: 

 InputDataXXX:

  CounterOffset                      MaxDeltaCounterInit                   NoNewOrRepeatedDataCounter+
       |                                  |  MaxNoNewOrRepeatedData                      LostData+   | +SyncCounter
       |  +CRCOffset                      |   | SyncCounterInit             NewDataAvailable+    |   | | data+
       |  | DataID                        |   |   |                    WaitForFirstData+    |    |   | |     |returned
       |  |  | DataIDNibbleOffset         |   |   |                 MaxDeltaCounter+   |    |    |   | |     |  CRC+
       |  |  | |                          |   |   |             LastValidCounter+  |   |    |    |   | |     |     |
       |  |  | |       DataIDMode         |   |   |        Status               |  |   |    |    |   | |     |     |
000:{ 8U, 0U,0U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD400,0x00}
001:{ 8U, 0U,1U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0x11}
002:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0xFF}
003:{ 8U, 0U,3U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
004:{ 8U, 0U,4U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
005:{ 8U, 0U,5U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD403,0x33}
006:{ 8U, 0U,6U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD403,0x33}
007:{ 8U, 0U,7U, 0U,E2E_P01_DATAID_BOTH,  1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD404,0x44}
008:{ 8U, 0U,8U, 0U,E2E_P01_DATAID_BOTH,  1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD405,0x55}
009:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0x66}
010:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0xFF}

100:{28U,16U,0U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD500,0x00}
101:{28U,16U,1U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0x11}
102:{28U,16U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0xFF}
103:{28U,16U,3U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
104:{28U,16U,4U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
105:{28U,16U,5U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD503,0x33}
106:{28U,16U,6U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD503,0x33}
107:{28U,16U,7U, 0U,E2E_P01_DATAID_BOTH,  1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD504,0x44}
108:{28U,16U,8U, 0U,E2E_P01_DATAID_BOTH,  1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD505,0x55}
109:{28U,16U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD501,0xFF}
110:{28U,16U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0xFF}

200:{52U,56U,0U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD600,0x00}
201:{52U,56U,1U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0x11}
202:{52U,56U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0xFF}
203:{52U,56U,3U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
204:{52U,56U,4U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
205:{52U,56U,5U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD603,0x33}
206:{52U,56U,6U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD603,0x33}
207:{52U,56U,7U, 0U,E2E_P01_DATAID_BOTH,  1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD604,0x44}
208:{52U,56U,8U, 0U,E2E_P01_DATAID_BOTH,  1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD605,0x55}
209:{52U,56U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0x66}
210:{52U,56U,2U, 0U,E2E_P01_DATAID_BOTH,  0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0xFF}

300:{ 8U, 0U,0U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD400,0x00}
301:{ 8U, 0U,1U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0x11}
302:{ 8U, 0U,2U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0xFF}
303:{ 8U, 0U,3U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
304:{ 8U, 0U,4U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
305:{ 8U, 0U,5U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD403,0x33}
306:{ 8U, 0U,6U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD403,0x33}
307:{ 8U, 0U,7U,12U,E2E_P01_DATAID_NIBBLE,1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD404,0x44}
308:{ 8U, 0U,8U,12U,E2E_P01_DATAID_NIBBLE,1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD405,0x55}
309:{ 8U, 0U,2U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0x66}
310:{ 8U, 0U,2U,12U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0xFF}

400:{28U,16U,0U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD500,0x00}
401:{28U,16U,1U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0x11}
402:{28U,16U,2U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0xFF}
403:{28U,16U,3U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
404:{28U,16U,4U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
405:{28U,16U,5U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD503,0x33}
406:{28U,16U,6U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD503,0x33}
407:{28U,16U,7U,24U,E2E_P01_DATAID_NIBBLE,1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD504,0x44}
408:{28U,16U,8U,24U,E2E_P01_DATAID_NIBBLE,1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD505,0x55}
409:{28U,16U,2U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0x66}
410:{28U,16U,2U,24U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0xFF}

500:{52U,56U,0U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD600,0x00}
501:{52U,56U,1U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0x11}
502:{52U,56U,2U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0xFF}
503:{52U,56U,3U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
504:{52U,56U,4U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
505:{52U,56U,5U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD603,0x33}
506:{52U,56U,6U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD603,0x33}
507:{52U,56U,7U,40U,E2E_P01_DATAID_NIBBLE,1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD604,0x44}
508:{52U,56U,8U,40U,E2E_P01_DATAID_NIBBLE,1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD605,0x55}
509:{52U,56U,2U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0x66}
510:{52U,56U,2U,40U,E2E_P01_DATAID_NIBBLE,0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0xFF}

600:{ 8U, 0U,0U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD400,0x00}
601:{ 8U, 0U,1U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0x11}
602:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0xFF}
603:{ 8U, 0U,3U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
604:{ 8U, 0U,4U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
605:{ 8U, 0U,5U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD403,0x33}
606:{ 8U, 0U,6U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD403,0x33}
607:{ 8U, 0U,7U, 0U,E2E_P01_DATAID_LOW,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD404,0x44}
608:{ 8U, 0U,8U, 0U,E2E_P01_DATAID_LOW,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD405,0x55}
609:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0x66}
610:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0xFF}

700:{28U,16U,0U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD500,0x00}
701:{28U,16U,1U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0x11}
702:{28U,16U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0xFF}
703:{28U,16U,3U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
704:{28U,16U,4U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
705:{28U,16U,5U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD503,0x33}
706:{28U,16U,6U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD503,0x33}
707:{28U,16U,7U, 0U,E2E_P01_DATAID_LOW,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD504,0x44}
708:{28U,16U,8U, 0U,E2E_P01_DATAID_LOW,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD505,0x55}
709:{28U,16U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0x66}
710:{28U,16U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0xFF}

800:{52U,56U,0U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD600,0x00}
801:{52U,56U,1U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0x11}
802:{52U,56U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0xFF}
803:{52U,56U,3U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
804:{52U,56U,4U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
805:{52U,56U,5U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD603,0x33}
806:{52U,56U,6U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD603,0x33}
807:{52U,56U,7U, 0U,E2E_P01_DATAID_LOW,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD604,0x44}
808:{52U,56U,8U, 0U,E2E_P01_DATAID_LOW,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD605,0x55}
809:{52U,56U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0x66}
810:{52U,56U,2U, 0U,E2E_P01_DATAID_LOW,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0xFF}

900:{ 8U, 0U,0U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD400,0x00}
901:{ 8U, 0U,1U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0x11}
902:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD401,0xFF}
903:{ 8U, 0U,3U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
904:{ 8U, 0U,4U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD401,0x11}
905:{ 8U, 0U,5U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD403,0x33}
906:{ 8U, 0U,6U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD403,0x33}
907:{ 8U, 0U,7U, 0U,E2E_P01_DATAID_ALT,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD404,0x44}
908:{ 8U, 0U,8U, 0U,E2E_P01_DATAID_ALT,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD405,0x55}
909:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0x66}
910:{ 8U, 0U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD406,0xFF}

1000:{28U,16U,0U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD500,0x00}
1001:{28U,16U,1U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0x11}
1002:{28U,16U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD501,0xFF}
1003:{28U,16U,3U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
1004:{28U,16U,4U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD501,0x11}
1005:{28U,16U,5U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD503,0x33}
1006:{28U,16U,6U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD503,0x33}
1007:{28U,16U,7U, 0U,E2E_P01_DATAID_ALT,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD504,0x44}
1008:{28U,16U,8U, 0U,E2E_P01_DATAID_ALT,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD505,0x55}
1009:{28U,16U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0x66}
1010:{28U,16U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD506,0xFF}

1100:{52U,56U,0U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_INITIAL,  0U, 0U,FALSE,FALSE,0U,0U,0U},VD600,0x00}
1101:{52U,56U,1U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0x11}
1102:{52U,56U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,TRUE, TRUE, 0U,0U,0U},VD601,0xFF}
1103:{52U,56U,3U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
1104:{52U,56U,4U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD601,0x11}
1105:{52U,56U,5U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 0U,FALSE,TRUE, 0U,0U,0U},VD603,0x33}
1106:{52U,56U,6U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 4U,FALSE,TRUE, 1U,0U,0U},VD603,0x33}
1107:{52U,56U,7U, 0U,E2E_P01_DATAID_ALT,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD604,0x44}
1108:{52U,56U,8U, 0U,E2E_P01_DATAID_ALT,   1U,14U,0U},{E2E_P01STATUS_NONEWDATA,1U, 1U,FALSE,TRUE, 2U,0U,0U},VD605,0x55}
1109:{52U,56U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0x66}
1110:{52U,56U,2U, 0U,E2E_P01_DATAID_ALT,   0U,14U,0U},{E2E_P01STATUS_NONEWDATA,0U,14U,FALSE,TRUE, 0U,0U,0U},VD606,0xFF}
with:

 Test data for CRC byte 0, Counter low nibble byte 1, DataIDNibble high nibble byte 1:
       CRC-+      +-Counter and DataIDNibble
           |      |      +-Data----------------------------------------------------------------+
VD400: {0x00U, 0x00U, 0x00U}
VD401: {0x11U, 0x01U, 0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
VD402: {0x22U, 0x02U, 0x20U, 0x21U, 0x22U, 0x23U, 0x24U, 0x25U, 0x26U, 0x27U, 0x28U, 0x29U, 0x2AU,
                                                                              0x2BU, 0x2CU, 0x2DU}
VD403: {0x33U, 0x03U, 0x30U, 0x31U, 0x32U, 0x33U, 0x34U, 0x35U, 0x36U, 0x37U, 0x38U, 0x39U, 0x3AU,
                                                                0x3BU, 0x3CU, 0x3DU, 0x3EU, 0x3FU}
VD404: {0x44U, 0x04U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U, 0x47U, 0x48U, 0x49U, 0x4AU,
                                                                0x4BU, 0x4CU, 0x4DU, 0x4EU, 0x4FU}
VD405: {0x55U, 0x0FU, 0x50U}  contains a wrong counter value
VD406: {0x66U, 0xFFU, 0xFFU}  data and counter contains only set bits


 Test data for CRC byte 2, Counter high nibble byte 3, DataIDNibble low nibble byte 3:
                    CRC-+      +-Counter and DataIDNibble
          +-Data--+     |      |      +-Data----------------------------------------------------+
VD500: {0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U}
VD501: {0x10U, 0x11U, 0x11U, 0x10U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
VD502: {0x20U, 0x21U, 0x22U, 0x20U, 0x22U, 0x23U, 0x24U, 0x25U, 0x26U, 0x27U, 0x28U, 0x29U, 0x2AU,
                                                                              0x2BU, 0x2CU, 0x2DU}
VD503: {0x30U, 0x31U, 0x33U, 0x30U, 0x32U, 0x33U, 0x34U, 0x35U, 0x36U, 0x37U, 0x38U, 0x39U, 0x3AU,
                                                                0x3BU, 0x3CU, 0x3DU, 0x3EU, 0x3FU}
VD504: {0x40U, 0x41U, 0x44U, 0x40U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U, 0x47U, 0x48U, 0x49U, 0x4AU,
                                                                0x4BU, 0x4CU, 0x4DU, 0x4EU, 0x4FU}
VD505: {0x50U, 0x00U, 0x55U, 0xF0U, 0x00U, 0x00U, 0x00U, 0x00U}  contains a wrong counter value
VD506: {0xFFU, 0xFFU, 0x66U, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU}  data and counter contains only set bits


 Test data for CRC byte 7, Counter high nibble byte 6, DataIDNibble low nibble byte 5:
                                             Counter+  CRC-+
                                  DataIDNibble+     |      |
          +-Data---------------------+        |     |      |     +-Data----------------+
VD600: {0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U}
VD601: {0x15U, 0x14U, 0x10U, 0x11U, 0x12U, 0x10U, 0x1AU, 0x11U, 0x16U}
VD602: {0x25U, 0x24U, 0x20U, 0x21U, 0x22U, 0x20U, 0x2AU, 0x22U, 0x26U, 0x27U, 0x28U, 0x29U, 0x2AU,
                                                                              0x2BU, 0x2CU, 0x2DU}
VD603: {0x35U, 0x34U, 0x30U, 0x31U, 0x32U, 0x30U, 0x3AU, 0x33U, 0x36U, 0x37U, 0x38U, 0x39U, 0x3AU,
                                                                0x3BU, 0x3CU, 0x3DU, 0x3EU, 0x3FU}
VD604: {0x45U, 0x44U, 0x40U, 0x41U, 0x42U, 0x40U, 0x4AU, 0x44U, 0x46U, 0x47U, 0x48U, 0x49U, 0x4AU,
                                                                0x4BU, 0x4CU, 0x4DU, 0x4EU, 0x4FU}
VD605: {0x00U, 0x00U, 0x50U, 0x00U, 0x00U, 0x00U, 0xFAU, 0x55U}  contains a wrong counter value
VD606: {0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0x66U}  data and counter contains only set bits


Test Output: 

OutputDataXXX:
                                         NewDataAvailable+       +LostData
                                    WaitForFirstData+      |       |   +NoNewOrRepeatedDataCounter
                                 MaxDeltaCounter+   |      |       |   |   +SyncCounter
                             stValidCounter+    |   |      |       |   |   |     +retVal
                    +-Status-+             |    |   |      |       |   |   |     |             invokeCRC+
000: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
001: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
002: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
003: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
004: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
005: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
006: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
007: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
008: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
009: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
010: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

100: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
101: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
102: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
103: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
104: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
105: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
106: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
107: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
108: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
109: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
110: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

200: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
201: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
202: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
203: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
204: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
205: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
206: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
207: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
208: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
209: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
210: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

300: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
301: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
302: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
303: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
304: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
305: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
306: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
307: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
308: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
309: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
310: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

400: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
401: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
402: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
403: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
404: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
405: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
406: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
407: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
408: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
409: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
410: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

500: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
501: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
502: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
503: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
504: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
505: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
506: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
507: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
508: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
509: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
510: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

600: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
601: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
602: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
603: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
604: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
605: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
606: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
607: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
608: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
609: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
610: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

700: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
701: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
702: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
703: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
704: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
705: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
706: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
707: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
708: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
709: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
710: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

800: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
801: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
802: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
803: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
804: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
805: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
806: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
807: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
808: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
809: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
810: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

900: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
901: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
902: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
903: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
904: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
905: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
906: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
907: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
908: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
909: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
910: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

1000: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
1001: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1002: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1003: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1004: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
1005: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1006: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
1007: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
1008: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
1009: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
1010: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },

1100: {{E2E_P01STATUS_NONEWDATA,        0U,  1U, FALSE, FALSE,  0U, 1U, 0U}, E2E_E_OK,             FALSE },
1101: {{E2E_P01STATUS_INITIAL,          1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1102: {{E2E_P01STATUS_WRONGCRC,         0U,  1U, TRUE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1103: {{E2E_P01STATUS_OK,               1U,  0U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1104: {{E2E_P01STATUS_REPEATED,         1U,  1U, FALSE, TRUE,   0U, 1U, 0U}, E2E_E_OK,             TRUE  },
1105: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  1U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
1106: {{E2E_P01STATUS_OKSOMELOST,       3U,  0U, FALSE, TRUE,   1U, 0U, 0U}, E2E_E_OK,             TRUE  },
1107: {{E2E_P01STATUS_WRONGSEQUENCE,    1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_OK,             TRUE  },
1108: {{E2E_P01STATUS_NONEWDATA,        1U,  2U, FALSE, TRUE,   2U, 0U, 0U}, E2E_E_INPUTERR_WRONG, FALSE },
1109: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE },
1110: {{E2E_P01STATUS_DATAINVALID,      0U, 14U, FALSE, TRUE,   0U, 0U, 0U}, E2E_E_OK,             FALSE }
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        
        <provcov>
          <linksto>ASR_E2EP01020190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020677</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_Ok</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>2431</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

    This test shall check the behavior of the E2E-library
    for the function E2E_P01Check() by the path leading to
    State-&gt;Status E2E_P01STATUS_OK.

    In detail:
     Test that if
       - DeltaCounter equals 1 (difference between data counter and LastValidCounter), AND
       - the value of the NoNewOrRepeatedDataCounter is less than
         or equal to MaxNoNewOrRepeatedData, AND
       - the SyncCounter equals 0
     THEN
       - E2E_P01ReceiverState.Status equals E2E_P01STATUS_OK

&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState values are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:
   Data00..Data19: VP (EB_E2EP01020148,ASR_E2EP01020076,ASR_E2EP01020196)
           Test that if
             - DeltaCounter equals 1 (difference between data counter and LastValidCounter), AND
             - the value of the NoNewOrRepeatedDataCounter is less than
               or equal to MaxNoNewOrRepeatedData, AND
             - the SyncCounter equals 0
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_OK
           FOR
             - all possible values of: LastValidCounter
             - all possible values of: NoNewOrRepeatedDataCounter
             - MaxNoNewOrRepeatedData set to 15
             - different values of initial Status values
               (  OK           ,
                  OKSOMELOST   ,
                  NONEWDATA    ,
                  WRONGCRC     ,
                  SYNC         ,
                  INITIAL      ,
                  REPEATED     ,
                  WRONGSEQUENCE)
   Data00..Data19: VP (ASR_E2EP01020196)
           Test that LostData is set to 0 (status OK is returned)
   Data00..Data19: VP (EB_E2EP01020150)
           Test that
           - MaxDeltaCounter is set to MaxDeltaCounterInit
           FOR
           - all possible values of MaxDeltaCounterInit.
   Data00..Data19: VP (EB_E2EP01020151)
           Test that
           - LastValidCounter is set to the Counter of the data
           FOR
           - all possible counter values.
   Data00..Data19: VP (EB_E2EP01020300)
           Test that
           - NoNewOrRepeatedDataCounter is set to 0 (status OKSOMELOST is returned)
           FOR
           - all possible values of NoNewOrRepeatedDataCounter

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_OK)


Test Input: 

InputDataXX:

CounterOffset                   MaxDeltaCounterInit                      NoNewOrRepeatedDataCounter+
     |                               |  MaxNoNewOrRepeatedData                         LostData+   |  +SyncCounter
     |  +CRCOffset                   |   | SyncCounterInit                NewDataAvailable+    |   |  | data+
     |  | DataID                     |   |   |                       WaitForFirstData+    |    |   |  |     |returned
     |  |  | DataIDNibbleOffset      |   |   |                    MaxDeltaCounter+   |    |    |   |  |     |  CRC+
     |  |  | |                       |   |   |                LastValidCounter+  |   |    |    |   |  |     |     |
     |  |  | |       DataIDMode      |   |   |        Status                  |  |   |    |    |   |  |     |     |
00:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 2U,14U,3U},{E2E_P01STATUS_OK           , 0U,2U,FALSE,TRUE,0U, 0U,0U},VD000,0x00U}
01:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 3U,14U,3U},{E2E_P01STATUS_OKSOMELOST   , 1U,2U,FALSE,TRUE,0U, 1U,0U},VD001,0x01U}
02:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 4U,14U,3U},{E2E_P01STATUS_NONEWDATA    , 2U,2U,FALSE,TRUE,0U, 2U,0U},VD002,0x02U}
03:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 5U,14U,3U},{E2E_P01STATUS_WRONGCRC     , 3U,2U,FALSE,TRUE,0U, 3U,0U},VD003,0x03U}
04:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 6U,14U,3U},{E2E_P01STATUS_SYNC         , 4U,2U,FALSE,TRUE,0U, 4U,0U},VD004,0x04U}
05:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 7U,14U,3U},{E2E_P01STATUS_INITIAL      , 5U,2U,FALSE,TRUE,0U, 5U,0U},VD005,0x05U}
06:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 8U,14U,3U},{E2E_P01STATUS_REPEATED     , 6U,2U,FALSE,TRUE,0U, 6U,0U},VD006,0x06U}
07:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 9U,14U,3U},{E2E_P01STATUS_WRONGSEQUENCE, 7U,2U,FALSE,TRUE,0U, 7U,0U},VD007,0x07U}
08:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH,10U,14U,3U},{E2E_P01STATUS_OK           , 8U,2U,FALSE,TRUE,0U, 8U,0U},VD008,0x08U}
09:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH,11U,14U,3U},{E2E_P01STATUS_OKSOMELOST   , 9U,2U,FALSE,TRUE,0U, 9U,0U},VD009,0x09U}
10:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH,12U,14U,3U},{E2E_P01STATUS_NONEWDATA    ,10U,2U,FALSE,TRUE,0U,10U,0U},VD010,0x10U}
11:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH,13U,14U,3U},{E2E_P01STATUS_WRONGCRC     ,11U,2U,FALSE,TRUE,0U,11U,0U},VD011,0x11U}
12:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH,14U,14U,3U},{E2E_P01STATUS_SYNC         ,12U,2U,FALSE,TRUE,0U,12U,0U},VD012,0x12U}
13:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_INITIAL      ,13U,2U,FALSE,TRUE,0U,13U,0U},VD013,0x13U}
14:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_REPEATED     ,14U,2U,FALSE,TRUE,0U,14U,0U},VD014,0x14U}
15:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_WRONGSEQUENCE, 0U,2U,FALSE,TRUE,0U, 0U,0U},VD000,0x00U}
16:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_OK           , 1U,2U,FALSE,TRUE,0U, 1U,0U},VD001,0x01U}
17:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_OKSOMELOST   , 2U,2U,FALSE,TRUE,0U, 2U,0U},VD002,0x02U}
18:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_NONEWDATA    , 3U,2U,FALSE,TRUE,0U, 3U,0U},VD003,0x03U}
19:{{8U,0U,1,0U,E2E_P01_DATAID_BOTH, 0U,14U,3U},{E2E_P01STATUS_WRONGCRC     , 4U,2U,FALSE,TRUE,0U, 4U,0U},VD004,0x04U}


For input data VDxx, see TS_E2EP01_ConTest_02_P01CheckStatus_Repeated.



Test Output: 

OutputDataXX:
00: {E2E_P01STATUS_OK         ,    1U, 2U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
01: {E2E_P01STATUS_OK         ,    2U, 3U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
02: {E2E_P01STATUS_OK         ,    3U, 4U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
03: {E2E_P01STATUS_OK         ,    4U, 5U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
04: {E2E_P01STATUS_OK         ,    5U, 6U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
05: {E2E_P01STATUS_OK         ,    6U, 7U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
06: {E2E_P01STATUS_OK         ,    7U, 8U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
07: {E2E_P01STATUS_OK         ,    8U, 9U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
08: {E2E_P01STATUS_OK         ,    9U,10U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
09: {E2E_P01STATUS_OK         ,   10U,11U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
10: {E2E_P01STATUS_OK         ,   11U,12U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
11: {E2E_P01STATUS_OK         ,   12U,13U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
12: {E2E_P01STATUS_OK         ,   13U,14U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
13: {E2E_P01STATUS_OK         ,   14U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
14: {E2E_P01STATUS_OK         ,    0U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
15: {E2E_P01STATUS_OK         ,    1U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
16: {E2E_P01STATUS_OK         ,    2U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
17: {E2E_P01STATUS_OK         ,    3U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
18: {E2E_P01STATUS_OK         ,    4U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
19: {E2E_P01STATUS_OK         ,    5U, 0U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2EP01020148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_OkSomeLost</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>2679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

    This test shall check the behavior of the E2E-library for the function E2E_P01Check()
    by the path leading to State-&gt;Status E2E_P01STATUS_OKSOMELOST.

    In detail:
     Test that if
       - the calculated DeltaCounter is greater-than 1 but less-than or equal to MaxDeltaCounter, AND
       - NoNewOrRepeatedDataCounter is less than or equal to MaxNoNewOrRepeatedData, AND
       - the SyncCounter equals 0
     THEN
       - E2E_P01ReceiverState.Status equals E2E_P01STATUS_OKSOMELOST

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState values are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:

   Data00..Data19: VP (EB_E2EP01020148,ASR_E2EP01020076,ASR_E2EP01020196)
           Test that if
             - calculated DeltaCounter is greater-than 1 but less-than or equal MaxDeltaCounter, AND
             - NoNewOrRepeatedDataCounter is less than or equal to MaxNoNewOrRepeatedData, AND
             - the SyncCounter equals 0
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_OKSOMELOST
           FOR
             - all possible values of: DeltaCounter / MaxDeltaCounter
             - all possible values of: NoNewOrRepeatedDataCounter
             - all possible values of: MaxNoNewOrRepeatedData
             - different values of initial Status values
               (  OK           ,
                  OKSOMELOST   ,
                  NONEWDATA    ,
                  WRONGCRC     ,
                  SYNC         ,
                  INITIAL      ,
                  REPEATED     ,
                  WRONGSEQUENCE)
   Data00..Data19: VP (ASR_E2EP01020196)
           Test that LostData is set to (DeltaCounter - 1) (status OKSOMELOST is returned)
   Data00..Data19: VP (ASR_E2EP01020196,EB_E2EP01020150)
           Test that
           - MaxDeltaCounter is set to MaxDeltaCounterInit
           FOR
           - all possible values of MaxDeltaCounterInit.
   Data00..Data19: VP (ASR_E2EP01020196,EB_E2EP01020151)
           Test that
           - LastValidCounter is set to the Counter of the data
           FOR
           - all possible counter values.
   Data00..Data19: VP (ASR_E2EP01020196,EB_E2EP01020300)
           Test that
           - NoNewOrRepeatedDataCounter is set to 0 (status OKSOMELOST is returned)
           FOR
           - all possible values of NoNewOrRepeatedDataCounter

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_OKSOMELOST)


Test Input: 

InputDataXX:

CounterOffset                   MaxDeltaCounterInit                    NoNewOrRepeatedDataCounter+
     |                               | MaxNoNewOrRepeatedData                        LostData+   |  +SyncCounter
     |  +CRCOffset                   |  | SyncCounterInit               NewDataAvailable+    |   |  | data+
     |  | DataID                     |  |  |                       WaitForFirstData+    |    |   |  |     |returned
     |  |  | DataIDNibbleOffset      |  |  |                    MaxDeltaCounter+   |    |    |   |  |     |  CRC+
     |  |  | |                       |  |  |                LastValidCounter+  |   |    |    |   |  |     |     |
     |  |  | |       DataIDMode      |  |  |        Status                  |  |   |    |    |   |  |     |     |
00:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2  1, 3},{E2E_P01STATUS_OK           , 0U, 2U,FALSE,TRUE,0U, 1U,0U},VD001,0x01U}
01:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 3, 2, 7},{E2E_P01STATUS_OKSOMELOST   , 1U, 3U,FALSE,TRUE,1U, 2U,0U},VD003,0x03U}
02:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 4, 3,10},{E2E_P01STATUS_NONEWDATA    , 2U, 4U,FALSE,TRUE,1U, 3U,0U},VD005,0x05U}
03:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 5, 4,13},{E2E_P01STATUS_WRONGCRC     , 3U, 5U,FALSE,TRUE,1U, 4U,0U},VD007,0x07U}
04:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 6, 5, 4},{E2E_P01STATUS_SYNC         , 4U, 6U,FALSE,TRUE,1U, 5U,0U},VD009,0x09U}
05:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 7, 6, 9},{E2E_P01STATUS_INITIAL      , 5U, 7U,FALSE,TRUE,1U, 6U,0U},VD011,0x11U}
06:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 8, 7, 3},{E2E_P01STATUS_REPEATED     , 6U, 8U,FALSE,TRUE,1U, 7U,0U},VD013,0x13U}
07:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 9, 8,10},{E2E_P01STATUS_WRONGSEQUENCE, 7U, 9U,FALSE,TRUE,1U, 8U,0U},VD014,0x14U}
08:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,10, 9,11},{E2E_P01STATUS_OK           , 8U,10U,FALSE,TRUE,1U, 9U,0U},VD001,0x01U}
09:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,11,10,12},{E2E_P01STATUS_OKSOMELOST   , 9U,11U,FALSE,TRUE,1U,10U,0U},VD003,0x03U}
10:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,12,11,14},{E2E_P01STATUS_NONEWDATA    ,10U,12U,FALSE,TRUE,1U,11U,0U},VD005,0x05U}
11:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,13,12, 0},{E2E_P01STATUS_WRONGCRC     ,11U,13U,FALSE,TRUE,1U,12U,0U},VD007,0x07U}
12:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,14,13, 1},{E2E_P01STATUS_SYNC         ,12U,14U,FALSE,TRUE,1U,13U,0U},VD009,0x09U}
13:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2,14, 2},{E2E_P01STATUS_INITIAL      ,13U,14U,FALSE,TRUE,1U,14U,0U},VD011,0x11U}
14:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2, 0, 3},{E2E_P01STATUS_REPEATED     ,12U, 2U,FALSE,TRUE,1U, 0U,0U},VD013,0x13U}
15:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2, 1, 4},{E2E_P01STATUS_WRONGSEQUENCE,13U, 2U,FALSE,TRUE,1U, 0U,0U},VD014,0x14U}
16:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2, 2, 5},{E2E_P01STATUS_OK           , 0U, 2U,FALSE,TRUE,1U, 0U,0U},VD001,0x01U}
17:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2, 3, 6},{E2E_P01STATUS_OKSOMELOST   , 2U, 2U,FALSE,TRUE,1U, 0U,0U},VD003,0x03U}
18:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2, 4, 7},{E2E_P01STATUS_NONEWDATA    , 4U, 2U,FALSE,TRUE,1U, 0U,0U},VD005,0x05U}
19:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2, 5, 8},{E2E_P01STATUS_WRONGCRC     , 6U, 2U,FALSE,TRUE,1U, 0U,0U},VD007,0x07U}

For input data VDxx, see TS_E2EP01_ConTest_02_P01CheckStatus_Repeated.


Test Output: 

OutputDataXX:
00: {{E2E_P01STATUS_OKSOMELOST,    2U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},
01: {{E2E_P01STATUS_OKSOMELOST,    4U, 3U,FALSE, TRUE, 2U, 0U, 0U}, E2E_E_OK,  TRUE},
02: {{E2E_P01STATUS_OKSOMELOST,    6U, 4U,FALSE, TRUE, 3U, 0U, 0U}, E2E_E_OK,  TRUE},
03: {{E2E_P01STATUS_OKSOMELOST,    8U, 5U,FALSE, TRUE, 4U, 0U, 0U}, E2E_E_OK,  TRUE},
04: {{E2E_P01STATUS_OKSOMELOST,   10U, 6U,FALSE, TRUE, 5U, 0U, 0U}, E2E_E_OK,  TRUE},
05: {{E2E_P01STATUS_OKSOMELOST,   12U, 7U,FALSE, TRUE, 6U, 0U, 0U}, E2E_E_OK,  TRUE},
06: {{E2E_P01STATUS_OKSOMELOST,   14U, 8U,FALSE, TRUE, 7U, 0U, 0U}, E2E_E_OK,  TRUE},
07: {{E2E_P01STATUS_OKSOMELOST,    0U, 9U,FALSE, TRUE, 7U, 0U, 0U}, E2E_E_OK,  TRUE},
08: {{E2E_P01STATUS_OKSOMELOST,    2U,10U,FALSE, TRUE, 8U, 0U, 0U}, E2E_E_OK,  TRUE},
09: {{E2E_P01STATUS_OKSOMELOST,    4U,11U,FALSE, TRUE, 9U, 0U, 0U}, E2E_E_OK,  TRUE},
10: {{E2E_P01STATUS_OKSOMELOST,    6U,12U,FALSE, TRUE,10U, 0U, 0U}, E2E_E_OK,  TRUE},
11: {{E2E_P01STATUS_OKSOMELOST,    8U,13U,FALSE, TRUE,11U, 0U, 0U}, E2E_E_OK,  TRUE},
12: {{E2E_P01STATUS_OKSOMELOST,   10U,14U,FALSE, TRUE,12U, 0U, 0U}, E2E_E_OK,  TRUE},
13: {{E2E_P01STATUS_OKSOMELOST,   12U, 2U,FALSE, TRUE,13U, 0U, 0U}, E2E_E_OK,  TRUE},
14: {{E2E_P01STATUS_OKSOMELOST,   14U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},
15: {{E2E_P01STATUS_OKSOMELOST,    0U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},
16: {{E2E_P01STATUS_OKSOMELOST,    2U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},
17: {{E2E_P01STATUS_OKSOMELOST,    4U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},
18: {{E2E_P01STATUS_OKSOMELOST,    6U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},
19: {{E2E_P01STATUS_OKSOMELOST,    8U, 2U,FALSE, TRUE, 1U, 0U, 0U}, E2E_E_OK,  TRUE},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2EP01020148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>2924</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check the behavior of the E2E-library
    for the function E2E_P01Check() by the path leading to
    E2E_P01STATUS_WRONGSEQUENCE that the values
    SyncCounter, MaxDeltaCounter, LastValidCounter, and NoNewOrRepeatedDataCounter
    are correctly set based on the configuration of SyncCounterInit.

    In detail:
       Test that if
         - DeltaCounter (difference between data counter and LastValidCounter)
           exceeds the value of MaxDeltaCounter (incremented by 1)
       THEN
         - E2E_P01ReceiverState.Status equals E2E_P01STATUS_WRONGSEQUENCE
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Successful execution of TS_E2EP01_ConTest_02_P01Check_AllStates.


Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState values are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:

   Data00..Data05: VP (ASR_E2EP01020076,ASR_E2EP01020196)
           Test that if
             - DeltaCounter (difference between data counter and LastValidCounter)
               exceeds the value of MaxDeltaCounter (incremented by 1)
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_WRONGSEQUENCE
           FOR
             - boundary values of DeltaCounter values (1, 8 ,14)
           INDEPENDENT of
             - parameters LastValidCounter, NoNewOrRepeatedDataCounter, SyncCounter,
                          MaxNoNewOrRepeatedData, SyncCounterInit

   Data00..Data05: VP (ASR_E2EP01020196)
           Test that
           - MaxDeltaCounter is incremented by 1 up to 14 (13 in this test-case)
           FOR
           - initial boundary values (0, 3, 13
             (NOTE: with 14, WRONGSEQUENCE will never be returned =&gt; not applicable here)

   Data00..Data02: VP (EB_E2EP01020150)
          Test that if
             - SyncCounter / SyncCounterInit equals 0
          THEN
             - MaxDeltaCounter is NOT re-initialized to MaxDeltaCounterInit
               (but incremented by 1)
   Data03..Data05: VP (EB_E2EP01020150)
          Test that if
             - SyncCounter / SyncCounterInit exceeds 0
               (SyncCounter is always set to SyncCounter in case of WRONGSEQUENCE)
          THEN
             - MaxDeltaCounter is re-initialized to MaxDeltaCounterInit

   Data00..Data02: VP (EB_E2EP01020151)
          Test that if
             - SyncCounter / SyncCounterInit equals 0
          THEN
             - LastValidCounter is NOT set to Counter of Data
   Data03..Data05: VP (EB_E2EP01020151)
          Test that if
             - SyncCounter / SyncCounterInit exceeds 0
               (SyncCounter is always set to SyncCounter in case of WRONGSEQUENCE)
          THEN
             - LastValidCounter is set to Counter of Data

   Data00..Data05: VP (EB_E2EP01020300)
           Test that
           - NoNewOrRepeatedDataCounter is set to 0 (status WRONGSEQUENCE is returned)
           FOR
           - boundary values of NoNewOrRepeatedDataCounter (1,5,15)

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_WRONGSEQUENCE)


Test Input: 

InputDataXX:

CounterOffset                   MaxDeltaCounterInit                   NoNewOrRepeatedDataCounter+
     |                               |  MaxNoNewOrRepeatedData                      LostData+   |  +SyncCounter
     |  +CRCOffset                   |   | SyncCounterInit             NewDataAvailable+    |   |  | data+
     |  | DataID                     |   |   |                    WaitForFirstData+    |    |   |  |     |returned
     |  |  | DataIDNibbleOffset      |   |   |                 MaxDeltaCounter+   |    |    |   |  |     |  CRC+
     |  |  | |                       |   |   |             LastValidCounter+  |   |    |    |   |  |     |     |
     |  |  | |       DataIDMode      |   |   |        Status               |  |   |    |    |   |  |     |     |
00:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U, 1U, 0U},{E2E_P01STATUS_INITIAL   ,0U,0U,FALSE,TRUE,0U, 1U,0U},VD001,0x01U}
01:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U, 5U, 0U},{E2E_P01STATUS_OK        ,0U,3U,FALSE,TRUE,0U, 5U,0U},VD007,0x07U}
02:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,14U, 0U},{E2E_P01STATUS_OKSOMELOST,0U,12,FALSE,TRUE,0U,14U,0U},VD013,0x13U}
03:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U, 1U, 1U},{E2E_P01STATUS_WRONGCRC  ,0U,2U,FALSE,TRUE,0U, 1U,0U},VD003,0x03U}
04:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U, 5U, 7U},{E2E_P01STATUS_NONEWDATA ,0U,3U,FALSE,TRUE,0U, 5U,0U},VD007,0x07U}
05:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,14U,14U},{E2E_P01STATUS_REPEATED  ,0U,4U,FALSE,TRUE,0U,14U,0U},VD011,0x13U}

For input data VDxx, see TS_E2EP01_ConTest_02_P01CheckStatus_Repeated.


Test Output: 

OutputDataXX:
                                   NewDataAvailable+    +LostData
                            WaitForFirstData+      |    |   +NoNewOrRepeatedDataCounter
                         MaxDeltaCounter+   |      |    |   |   +SyncCounter
                    LastValidCounter+   |   |      |    |   |   |     +retVal
          +-Status-+                |   |   |      |    |   |   |     |  invokeCRC+
01:  {{E2E_P01STATUS_WRONGSEQUENCE, 0U, 1U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
02:  {{E2E_P01STATUS_WRONGSEQUENCE, 0U, 4U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
03:  {{E2E_P01STATUS_WRONGSEQUENCE, 0U,13U,FALSE, TRUE, 0U, 0U, 0U}, E2E_E_OK,  TRUE},
04:  {{E2E_P01STATUS_WRONGSEQUENCE, 4U, 2U,FALSE, TRUE, 0U, 0U, 1U}, E2E_E_OK,  TRUE},
05:  {{E2E_P01STATUS_WRONGSEQUENCE, 8U, 2U,FALSE, TRUE, 0U, 0U, 7U}, E2E_E_OK,  TRUE},
06:  {{E2E_P01STATUS_WRONGSEQUENCE,14U, 2U,FALSE, TRUE, 0U, 0U,14U}, E2E_E_OK,  TRUE},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_Repeated</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>3135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall check the behavior of the E2E-library for the function
   E2E_P01Check() by the path leading to E2E_P01STATUS_REPEATED
   that the NoNewOrRepeatedDataCounter is incremented.

    In detail:
        Test that if
          - DeltaCounter equals 0 (difference between data counter and LastValidCounter)
        THEN
          - E2E_P01ReceiverState.Status equals E2E_P01STATUS_REPEATED
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Successful execution of TS_E2EP01_ConTest_02_P01Check_AllStates.


Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx stated
           in TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState value are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:
   Data00..Data19: VP (ASR_E2EP01020076,ASR_E2EP01020196)
           Test that if
             - DeltaCounter equals 0 (difference between data counter and LastValidCounter)
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_REPEATED
           FOR
             - different rx counter values (LastValidCounter set to same value)
           INDEPENDENT
             - of parameters: SyncCounter, SyncCounterInit, NoNewOrRepeatedDataCounter,
                              MaxNoNewOrRepeatedData (set to 1), initial Rx status

   Data00..Data19: VP (ASR_E2EP01020196)
           Test that
           - MaxDeltaCounter is incremented by 1 up to 14
           FOR
           - all possible initial values

   Data00..Data19: VP (ASR_E2EP01020196)
           Test that
           - NoNewOrRepeatedDataCounter is incremented by one up to 14
           FOR
           - initial boundary values (0, 12, 13, 14)

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_REPEATED)


Test Input: 

InputDataXX:

CounterOffset                   MaxDeltaCounterInit                     NoNewOrRepeatedDataCounter+
     |                               |  MaxNoNewOrRepeatedData                        LostData+   |  +SyncCounter
     |  +CRCOffset                   |   | SyncCounterInit               NewDataAvailable+    |   |  | data+
     |  | DataID                     |   |   |                      WaitForFirstData+    |    |   |  |     |returned
     |  |  | DataIDNibbleOffset      |   |   |                   MaxDeltaCounter+   |    |    |   |  |     |  CRC+
     |  |  | |                       |   |   |               LastValidCounter+  |   |    |    |   |  |     |     |
     |  |  | |       DataIDMode      |   |   |        Status                 |  |   |    |    |   |  |     |     |
00:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 3U},{E2E_P01STATUS_OK           , 1U, 3U,FALSE,TRUE,0U, 1U,3U},VD000,0x00U}
01:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 7U},{E2E_P01STATUS_OKSOMELOST   , 2U, 4U,FALSE,TRUE,0U, 2U,3U},VD001,0x01U}
02:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U,10U},{E2E_P01STATUS_NONEWDATA    , 3U, 5U,FALSE,TRUE,0U, 3U,3U},VD002,0x02U}
03:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U,13U},{E2E_P01STATUS_WRONGCRC     , 4U, 6U,FALSE,TRUE,0U, 4U,3U},VD003,0x03U}
04:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 4U},{E2E_P01STATUS_SYNC         , 5U, 7U,FALSE,TRUE,0U, 5U,3U},VD004,0x04U}
05:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 9U},{E2E_P01STATUS_INITIAL      , 6U, 8U,FALSE,TRUE,0U, 6U,3U},VD005,0x05U}
06:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 3U},{E2E_P01STATUS_REPEATED     , 7U, 9U,FALSE,TRUE,0U, 7U,3U},VD006,0x06U}
07:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U,10U},{E2E_P01STATUS_WRONGSEQUENCE, 8U,10U,FALSE,TRUE,0U, 8U,3U},VD007,0x07U}
08:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U,11U},{E2E_P01STATUS_OK           , 9U,11U,FALSE,TRUE,0U, 9U,3U},VD008,0x08U}
09:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U,12U},{E2E_P01STATUS_OKSOMELOST   ,10U,12U,FALSE,TRUE,0U,10U,3U},VD009,0x09U}
10:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U,14U},{E2E_P01STATUS_NONEWDATA    ,11U,13U,FALSE,TRUE,0U,11U,3U},VD010,0x10U}
11:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 0U},{E2E_P01STATUS_WRONGCRC     ,12U,14U,FALSE,TRUE,0U,12U,3U},VD011,0x11U}
12:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 1U},{E2E_P01STATUS_SYNC         ,13U,14U,FALSE,TRUE,0U,13U,3U},VD012,0x12U}
13:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 2U},{E2E_P01STATUS_INITIAL      ,14U,14U,FALSE,TRUE,0U,14U,3U},VD013,0x13U}
14:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 3U},{E2E_P01STATUS_REPEATED     , 0U,14U,FALSE,TRUE,0U,14U,3U},VD014,0x14U}
15:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 4U},{E2E_P01STATUS_WRONGSEQUENCE, 1U,14U,FALSE,TRUE,0U,14U,3U},VD000,0x00U}
16:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 5U},{E2E_P01STATUS_OK           , 2U,14U,FALSE,TRUE,0U,14U,3U},VD001,0x01U}
17:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 6U},{E2E_P01STATUS_OKSOMELOST   , 3U,14U,FALSE,TRUE,0U,14U,3U},VD002,0x02U}
18:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 7U},{E2E_P01STATUS_NONEWDATA    , 4U,14U,FALSE,TRUE,0U,14U,3U},VD003,0x03U}
19:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,2U,1U, 8U},{E2E_P01STATUS_WRONGCRC     , 5U,14U,FALSE,TRUE,0U,14U,3U},VD004,0x04U}

with input data VDxx:
     CRC-+        +-Counter
         |        |      +-Data------------------------------------+
VD000 {0x00U, 0xD1U, 0x00U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
VD001 {0x01U, 0xA2U, 0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
VD002 {0x02U, 0xB3U, 0x20U, 0x21U, 0x22U, 0x23U, 0x24U, 0x25U, 0x26U}
VD003 {0x03U, 0xA4U, 0x30U, 0x31U, 0x32U, 0x33U, 0x34U, 0x35U, 0x36U}
VD004 {0x04U, 0xA5U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD005 {0x05U, 0xA6U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD006 {0x06U, 0xA7U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD007 {0x07U, 0xA8U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD008 {0x08U, 0xA9U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD009 {0x09U, 0xAAU, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD010 {0x10U, 0xDBU, 0x00U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
VD011 {0x11U, 0xACU, 0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
VD012 {0x12U, 0xBDU, 0x20U, 0x21U, 0x22U, 0x23U, 0x24U, 0x25U, 0x26U}
VD013 {0x13U, 0xAEU, 0x30U, 0x31U, 0x32U, 0x33U, 0x34U, 0x35U, 0x36U}
VD014 {0x14U, 0xA0U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD015 {0x15U, 0xA1U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD016 {0x16U, 0xA2U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD017 {0x17U, 0xA3U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD018 {0x18U, 0xA4U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}
VD019 {0x19U, 0xA4U, 0x40U, 0x41U, 0x42U, 0x43U, 0x44U, 0x45U, 0x46U}


Test Output: 

OutputDataXX:

                                    NewDataAvailable+    +LostData
                             WaitForFirstData+      |    |   +NoNewOrRepeatedDataCounter
                          MaxDeltaCounter+   |      |    |   |   +SyncCounter
                     LastValidCounter+   |   |      |    |   |   |     +retVal
         +-Status-+                  |   |   |      |    |   |   |     |  invokeCRC+
00: {{E2E_P01STATUS_REPEATED,      1U, 4U,FALSE, TRUE, 0U, 2U, 3U}, E2E_E_OK,  TRUE},
01: {{E2E_P01STATUS_REPEATED,      2U, 5U,FALSE, TRUE, 0U, 3U, 3U}, E2E_E_OK,  TRUE},
02: {{E2E_P01STATUS_REPEATED,      3U, 6U,FALSE, TRUE, 0U, 4U, 3U}, E2E_E_OK,  TRUE},
03: {{E2E_P01STATUS_REPEATED,      4U, 7U,FALSE, TRUE, 0U, 5U, 3U}, E2E_E_OK,  TRUE},
04: {{E2E_P01STATUS_REPEATED,      5U, 8U,FALSE, TRUE, 0U, 6U, 3U}, E2E_E_OK,  TRUE},
05: {{E2E_P01STATUS_REPEATED,      6U, 9U,FALSE, TRUE, 0U, 7U, 3U}, E2E_E_OK,  TRUE},
06: {{E2E_P01STATUS_REPEATED,      7U,10U,FALSE, TRUE, 0U, 8U, 3U}, E2E_E_OK,  TRUE},
07: {{E2E_P01STATUS_REPEATED,      8U,11U,FALSE, TRUE, 0U, 9U, 3U}, E2E_E_OK,  TRUE},
08: {{E2E_P01STATUS_REPEATED,      9U,12U,FALSE, TRUE, 0U,10U, 3U}, E2E_E_OK,  TRUE},
09: {{E2E_P01STATUS_REPEATED,     10U,13U,FALSE, TRUE, 0U,11U, 3U}, E2E_E_OK,  TRUE},
10: {{E2E_P01STATUS_REPEATED,     11U,14U,FALSE, TRUE, 0U,12U, 3U}, E2E_E_OK,  TRUE},
11: {{E2E_P01STATUS_REPEATED,     12U,14U,FALSE, TRUE, 0U,13U, 3U}, E2E_E_OK,  TRUE},
12: {{E2E_P01STATUS_REPEATED,     13U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
13: {{E2E_P01STATUS_REPEATED,     14U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
14: {{E2E_P01STATUS_REPEATED,      0U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
15: {{E2E_P01STATUS_REPEATED,      1U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
16: {{E2E_P01STATUS_REPEATED,      2U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
17: {{E2E_P01STATUS_REPEATED,      3U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
18: {{E2E_P01STATUS_REPEATED,      4U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
19: {{E2E_P01STATUS_REPEATED,      5U,14U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_Initial</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>3385</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

    This test shall check the behavior of the E2E-library for the function E2E_P01Check()
    by the path leading to State-&gt;Status E2E_P01STATUS_INITIAL.

    In detail:
        Test that if
          - WaitForFirstData is set to TRUE
        THEN
          - E2E_P01ReceiverState.Status equals E2E_P01STATUS_INITIAL

&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx stated
           in TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState value are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:
   Data00..Data19: VP (ASR_E2EP01020196,EB_E2EP01020148,ASR_E2EP01020076)
           Test that if
             - WaitForFirstData is set to TRUE
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_INITIAL
           INDEPDENT of all other parameters (e.g. counter values, but correct CRC)
           Note: Other parameters (e.g. NoNewOrRepeatedDataCounter) are not affected

   Data00..Data19: VP (ASR_E2EP01020196)
           Test that WaitForFirstData is set to FALSE

   Data00..Data19: VP (ASR_E2EP01020196,EB_E2EP01020150)
           Test that
           - MaxDeltaCounter is set to  MaxDeltaCounterInit
           FOR
           - all possible MaxDeltaCounterInit values.

   Data00..Data19: VP (ASR_E2EP01020196,EB_E2EP01020151)
           Test that
           - LastValidCounter is set to the Counter of the data
           FOR
           - all possible counter values.

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_INITIAL)


Test Input: 

InputDataXX:

CounterOffset                   MaxDeltaCounterInit                       NoNewOrRepeatedDataCounter+
     |                               |  MaxNoNewOrRepeatedData                          LostData+   |  +SyncCounter
     |  +CRCOffset                   |   | SyncCounterInit                 NewDataAvailable+    |   |  | data+
     |  | DataID                     |   |   |                        WaitForFirstData+    |    |   |  |     |returned
     |  |  | DataIDNibbleOffset      |   |   |                     MaxDeltaCounter+   |    |    |   |  |     |  CRC+
     |  |  | |                       |   |   |                 LastValidCounter+  |   |    |    |   |  |     |     |
     |  |  | |       DataIDMode      |   |   |        Status                   |  |   |    |    |   |  |     |     |
00:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,14U,1U, 3U},{E2E_P01STATUS_OK           , 0U, 3U,TRUE,TRUE,0U, 1U,3U},VD000,0x00U}
01:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,13U,1U, 7U},{E2E_P01STATUS_OKSOMELOST   , 8U, 4U,TRUE,TRUE,0U, 2U,3U},VD001,0x01U}
02:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,12U,1U,10U},{E2E_P01STATUS_NONEWDATA    ,14U, 5U,TRUE,TRUE,0U, 3U,3U},VD002,0x02U}
03:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,11U,1U,13U},{E2E_P01STATUS_WRONGCRC     , 3U, 6U,TRUE,TRUE,0U, 4U,3U},VD003,0x03U}
04:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,10U,1U, 4U},{E2E_P01STATUS_SYNC         , 7U, 7U,TRUE,TRUE,0U, 5U,3U},VD004,0x04U}
05:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 9U,1U, 9U},{E2E_P01STATUS_INITIAL      , 9U, 8U,TRUE,TRUE,0U, 6U,3U},VD005,0x05U}
06:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 8U,1U, 3U},{E2E_P01STATUS_REPEATED     , 2U, 9U,TRUE,TRUE,0U, 7U,3U},VD006,0x06U}
07:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 7U,1U,10U},{E2E_P01STATUS_WRONGSEQUENCE, 4U,10U,TRUE,TRUE,0U, 8U,3U},VD007,0x07U}
08:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 6U,1U,11U},{E2E_P01STATUS_OK           , 6U,11U,TRUE,TRUE,0U, 9U,3U},VD008,0x08U}
09:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 5U,1U,12U},{E2E_P01STATUS_OKSOMELOST   , 8U,12U,TRUE,TRUE,0U,10U,3U},VD009,0x09U}
10:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 4U,1U,14U},{E2E_P01STATUS_NONEWDATA    ,10U,13U,TRUE,TRUE,0U,11U,3U},VD010,0x10U}
11:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 3U,1U, 0U},{E2E_P01STATUS_WRONGCRC     ,12U,14U,TRUE,TRUE,0U,12U,3U},VD011,0x11U}
12:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2U,1U, 1U},{E2E_P01STATUS_SYNC         ,14U,14U,TRUE,TRUE,0U,13U,3U},VD012,0x12U}
13:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 1U,1U, 2U},{E2E_P01STATUS_INITIAL      , 1U,14U,TRUE,TRUE,0U,14U,3U},VD013,0x13U}
14:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 0U,1U, 3U},{E2E_P01STATUS_REPEATED     , 3U,14U,TRUE,TRUE,0U,14U,3U},VD014,0x14U}
15:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 1U,1U, 4U},{E2E_P01STATUS_WRONGSEQUENCE, 5U,14U,TRUE,TRUE,0U,14U,3U},VD000,0x00U}
16:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2U,1U, 5U},{E2E_P01STATUS_OK           , 7U,14U,TRUE,TRUE,0U,14U,3U},VD001,0x01U}
17:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 3U,1U, 6U},{E2E_P01STATUS_OKSOMELOST   , 9U,14U,TRUE,TRUE,0U,14U,3U},VD002,0x02U}
18:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 4U,1U, 7U},{E2E_P01STATUS_NONEWDATA    , 13,14U,TRUE,TRUE,0U,14U,3U},VD003,0x03U}
19:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 5U,1U, 8U},{E2E_P01STATUS_WRONGCRC     , 0U,14U,TRUE,TRUE,0U,14U,3U},VD004,0x04U}

For input data VDxx, see TS_E2EP01_ConTest_02_P01CheckStatus_Repeated.


Test Output: 

OutputDataXX:
                                   NewDataAvailable+    +LostData
                            WaitForFirstData+      |    |   +NoNewOrRepeatedDataCounter
                         MaxDeltaCounter+   |      |    |   |   +SyncCounter
                    LastValidCounter+   |   |      |    |   |   |     +retVal
          +-Status-+                |   |   |      |    |   |   |     |  invokeCRC+
00: {{E2E_P01STATUS_INITIAL  ,     1U,14U,FALSE, TRUE, 0U, 1U, 3U}, E2E_E_OK,  TRUE},
01: {{E2E_P01STATUS_INITIAL  ,     2U,13U,FALSE, TRUE, 0U, 2U, 3U}, E2E_E_OK,  TRUE},
02: {{E2E_P01STATUS_INITIAL  ,     3U,12U,FALSE, TRUE, 0U, 3U, 3U}, E2E_E_OK,  TRUE},
03: {{E2E_P01STATUS_INITIAL  ,     4U,11U,FALSE, TRUE, 0U, 4U, 3U}, E2E_E_OK,  TRUE},
04: {{E2E_P01STATUS_INITIAL  ,     5U,10U,FALSE, TRUE, 0U, 5U, 3U}, E2E_E_OK,  TRUE},
05: {{E2E_P01STATUS_INITIAL  ,     6U, 9U,FALSE, TRUE, 0U, 6U, 3U}, E2E_E_OK,  TRUE},
06: {{E2E_P01STATUS_INITIAL  ,     7U, 8U,FALSE, TRUE, 0U, 7U, 3U}, E2E_E_OK,  TRUE},
07: {{E2E_P01STATUS_INITIAL  ,     8U, 7U,FALSE, TRUE, 0U, 8U, 3U}, E2E_E_OK,  TRUE},
08: {{E2E_P01STATUS_INITIAL  ,     9U, 6U,FALSE, TRUE, 0U, 9U, 3U}, E2E_E_OK,  TRUE},
09: {{E2E_P01STATUS_INITIAL  ,    10U, 5U,FALSE, TRUE, 0U,10U, 3U}, E2E_E_OK,  TRUE},
10: {{E2E_P01STATUS_INITIAL  ,    11U, 4U,FALSE, TRUE, 0U,11U, 3U}, E2E_E_OK,  TRUE},
11: {{E2E_P01STATUS_INITIAL  ,    12U, 3U,FALSE, TRUE, 0U,12U, 3U}, E2E_E_OK,  TRUE},
12: {{E2E_P01STATUS_INITIAL  ,    13U, 2U,FALSE, TRUE, 0U,13U, 3U}, E2E_E_OK,  TRUE},
13: {{E2E_P01STATUS_INITIAL  ,    14U, 1U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
14: {{E2E_P01STATUS_INITIAL  ,     0U, 0U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
15: {{E2E_P01STATUS_INITIAL  ,     1U, 1U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
16: {{E2E_P01STATUS_INITIAL  ,     2U, 2U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
17: {{E2E_P01STATUS_INITIAL  ,     3U, 3U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
18: {{E2E_P01STATUS_INITIAL  ,     4U, 4U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},
19: {{E2E_P01STATUS_INITIAL  ,     5U, 5U,FALSE, TRUE, 0U,14U, 3U}, E2E_E_OK,  TRUE},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2EP01020148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_NoNewData</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>3616</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   This test shall check the behavior of the E2E-library for the function
   E2E_P01Check() by the path leading to E2E_P01STATUS_NONEWDATA
   that the NoNewOrRepeatedDataCounter is incremented.

    In detail:
     Test that if
       - E2E_P01ReceiverState.NewDataAvailable is set to FALSE
     THEN
       - E2E_P01ReceiverState.Status equals E2E_P01STATUS_NONEWDATA
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Successful execution of TS_E2EP01_ConTest_02_P01Check_AllStates.


Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx stated
           in TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState value are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:

   Data00..Data19: VP (ASR_E2EP01020076,ASR_E2EP01020196)
           Test that if
             - E2E_P01ReceiverState.NewDataAvailable is set to FALSE
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_NONEWDATA
           INDEPENDENT
             - of all other E2E_P01ReceiverState parameters

   Data00..Data19: VP (ASR_E2EP01020196)
           Test that
           - MaxDeltaCounter is incremented by 1 up to 14
           FOR
           - all possible initial values

   Data00..Data19: VP (EB_E2EP01020301)
           Test that
           - NoNewOrRepeatedDataCounter is incremented by one up to 14
           FOR
           - all possible initial values

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_NONEWDATA)


Test Input: 

InputDataXX:

CounterOffset                   MaxDeltaCounterInit                     NoNewOrRepeatedDataCounter+
     |                               |  MaxNoNewOrRepeatedData                         LostData+  | +SyncCounter
     |  +CRCOffset                   |   | SyncCounterInit                NewDataAvailable+    |  | | data+
     |  | DataID                     |   |   |                       WaitForFirstData+    |    |  | |     |returned
     |  |  | DataIDNibbleOffset      |   |   |                    MaxDeltaCounter+   |    |    |  | |     |  CRC+
     |  |  | |                       |   |   |                LastValidCounter+  |   |    |    |  | |     |     |
     |  |  | |       DataIDMode      |   |   |        Status                  |  |   |    |    |  | |     |     |
00:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,15U, 1U, 1U},{E2E_P01STATUS_OK           ,0, 2,FALSE,FALSE,0, 0,3},VD000,0x00}
01:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,14U, 2U, 3U},{E2E_P01STATUS_OKSOMELOST   ,0, 3,FALSE,FALSE,0, 1,3},VD001,0x01}
02:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,13U, 3U, 5U},{E2E_P01STATUS_NONEWDATA    ,0, 4,FALSE,FALSE,0, 2,3},VD002,0x02}
03:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,12U, 4U, 7U},{E2E_P01STATUS_WRONGCRC     ,0, 5,FALSE,FALSE,0, 3,3},VD003,0x03}
04:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,11U, 5U, 9U},{E2E_P01STATUS_SYNC         ,0, 6,FALSE,FALSE,0, 4,3},VD004,0x04}
05:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH,10U, 6U,11U},{E2E_P01STATUS_INITIAL      ,0, 7,FALSE,FALSE,0, 5,3},VD005,0x05}
06:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 9U, 7U,13U},{E2E_P01STATUS_REPEATED     ,0, 8,FALSE,FALSE,0, 6,3},VD006,0x06}
07:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 8U, 8U,15U},{E2E_P01STATUS_WRONGSEQUENCE,0, 9,FALSE,FALSE,0, 7,3},VD007,0x07}
08:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 7U, 9U,13U},{E2E_P01STATUS_OK           ,0,10,FALSE,FALSE,0, 8,3},VD008,0x08}
09:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 6U,10U,11U},{E2E_P01STATUS_OKSOMELOST   ,0,11,FALSE,FALSE,0, 9,3},VD009,0x09}
10:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 5U,11U, 9U},{E2E_P01STATUS_NONEWDATA    ,0,12,FALSE,FALSE,0,10,3},VD010,0x10}
11:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 4U,12U, 7U},{E2E_P01STATUS_WRONGCRC     ,0,13,FALSE,FALSE,0,11,3},VD011,0x11}
12:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 3U,13U, 5U},{E2E_P01STATUS_SYNC         ,0,14,FALSE,FALSE,0,12,3},VD012,0x12}
13:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2U,14U, 3U},{E2E_P01STATUS_INITIAL      ,0,14,FALSE,FALSE,0,13,3},VD013,0x13}
14:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 1U,15U, 1U},{E2E_P01STATUS_REPEATED     ,0,14,FALSE,FALSE,0,14,3},VD014,0x14}
15:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 0U,14U, 0U},{E2E_P01STATUS_WRONGSEQUENCE,0,14,FALSE,FALSE,0,14,3},VD015,0x15}
16:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 1U,13U, 2U},{E2E_P01STATUS_OK           ,0,14,FALSE,FALSE,0, 1,3},VD016,0x16}
17:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 2U,12U, 4U},{E2E_P01STATUS_OKSOMELOST   ,0,14,FALSE,FALSE,0, 2,3},VD017,0x17}
18:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 3U,11U, 6U},{E2E_P01STATUS_NONEWDATA    ,0,14,FALSE,FALSE,0, 3,3},VD018,0x18}
19:{8U,0U,1U,0U,E2E_P01_DATAID_BOTH, 4U,10U, 8U},{E2E_P01STATUS_WRONGCRC     ,0,14,FALSE,FALSE,0, 4,3},VD019,0x19}

For input data VDxx, see TS_E2EP01_ConTest_02_P01CheckStatus_Repeated.


Test Output: 

OutputDataXX:
                                   NewDataAvailable+    +LostData
                            WaitForFirstData+      |    |   +NoNewOrRepeatedDataCounter
                         MaxDeltaCounter+   |      |    |   |   +SyncCounter
                    LastValidCounter+   |   |      |    |   |   |     +retVal
          +-Status-+                |   |   |      |    |   |   |     |  invokeCRC+
00: {{E2E_P01STATUS_NONEWDATA,     0U, 3U,FALSE,FALSE, 0U, 1U, 3U}, E2E_E_OK, FALSE},
01: {{E2E_P01STATUS_NONEWDATA,     0U, 4U,FALSE,FALSE, 0U, 2U, 3U}, E2E_E_OK, FALSE},
02: {{E2E_P01STATUS_NONEWDATA,     0U, 5U,FALSE,FALSE, 0U, 3U, 3U}, E2E_E_OK, FALSE},
03: {{E2E_P01STATUS_NONEWDATA,     0U, 6U,FALSE,FALSE, 0U, 4U, 3U}, E2E_E_OK, FALSE},
04: {{E2E_P01STATUS_NONEWDATA,     0U, 7U,FALSE,FALSE, 0U, 5U, 3U}, E2E_E_OK, FALSE},
05: {{E2E_P01STATUS_NONEWDATA,     0U, 8U,FALSE,FALSE, 0U, 6U, 3U}, E2E_E_OK, FALSE},
06: {{E2E_P01STATUS_NONEWDATA,     0U, 9U,FALSE,FALSE, 0U, 7U, 3U}, E2E_E_OK, FALSE},
07: {{E2E_P01STATUS_NONEWDATA,     0U,10U,FALSE,FALSE, 0U, 8U, 3U}, E2E_E_OK, FALSE},
08: {{E2E_P01STATUS_NONEWDATA,     0U,11U,FALSE,FALSE, 0U, 9U, 3U}, E2E_E_OK, FALSE},
09: {{E2E_P01STATUS_NONEWDATA,     0U,12U,FALSE,FALSE, 0U,10U, 3U}, E2E_E_OK, FALSE},
10: {{E2E_P01STATUS_NONEWDATA,     0U,13U,FALSE,FALSE, 0U,11U, 3U}, E2E_E_OK, FALSE},
11: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U,12U, 3U}, E2E_E_OK, FALSE},
12: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U,13U, 3U}, E2E_E_OK, FALSE},
13: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U,14U, 3U}, E2E_E_OK, FALSE},
14: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U,14U, 3U}, E2E_E_OK, FALSE},
15: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U,14U, 3U}, E2E_E_OK, FALSE},
16: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U, 2U, 3U}, E2E_E_OK, FALSE},
17: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U, 3U, 3U}, E2E_E_OK, FALSE},
18: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U, 4U, 3U}, E2E_E_OK, FALSE},
19: {{E2E_P01STATUS_NONEWDATA,     0U,14U,FALSE,FALSE, 0U, 5U, 3U}, E2E_E_OK, FALSE},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_Sync</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>3841</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check the behavior of the E2E-library for the function E2E_P01Check()
    by the path leading to
    State-&gt;Status E2E_P01STATUS_SYNC.

    Note:
    Since several test strategies are applied intensively, this test-case
    additionally checks some aspects of the paths leading to different
    Status values too (e.g. E2E_P01STATUS_OK, E2E_P01STATUS_OKSOMELOST,
    E2E_P01STATUS_REPEATED, E2E_P01STATUS_WRONGSEQUENCE, E2E_P01STATUS_REPEATED)
    Test additionally possible different Status values).
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

For all input vector entries i:
    01: Prepare CRC stub to return correct CRC w.r.t.
        used test data
    02: call E2E_P01Check(Config, State, Data) with:
        Config.MaxDeltaCounterInit = 5
        Config.MaxNoNewOrRepeatedData = 6
        Config.SyncCounterInit = 3
        State = IV_E2E_P01CheckStateType[i]
        Data = some valid data with counter value specified in IV_DataCounterValue[i]
    03: E2E_P01Check returns OK and the new P01ReceiverState equals
        OV_E2E_P01CheckStateType[i]

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Additional Descriptions for steps 02 and 03 w.r.t. IV/OV entries:
      Vector entry id
  Step |
    |  |
   02[01]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData
         (=&gt;invalidates Sync state regarding EB_E2EP01020298)
       * State.SyncCounter = 0
         (=&gt;invalidates Sync state regarding EB_E2EP01020299)
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 1 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding DeltaCounter and NoNewOrRepeatedDataCounter)
   02[02]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData+1
       * State.SyncCounter = 7
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 1 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding DeltaCounter and NoNewOrRepeatedDataCounter)
   02[03]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData
         (=&gt;invalidates Sync state regarding EB_E2EP01020298)
       * State.SyncCounter = 0
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 11 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding DeltaCounter and NoNewOrRepeatedDataCounter)
   02[04]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData+1
       * State.SyncCounter = 8
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 11 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding DeltaCounter and NoNewOrRepeatedDataCounter)
   02[05]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData+1
       * State.SyncCounter = 0
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 0 (&amp;lt;1)
         (=&gt;invalidates Sync state regarding EB_E2EP01020298)
       (Boundary test regarding DeltaCounter and NoNewOrRepeatedDataCounter)
   02[06]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData+1
       * State.SyncCounter = 0
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 12 (&gt;MaxDeltaCounter+1)
         (=&gt;invalidates Sync state regarding EB_E2EP01020298)
       (Boundary test regarding DeltaCounter and NoNewOrRepeatedDataCounter)

   02[07]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData
       * State.SyncCounter = 3
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 1 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding SyncCounter, DeltaCounter, and NoNewOrRepeatedDataCounter)
   02[08]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData+1
         (=&gt;invalidates Sync state regarding EB_E2EP01020299, but EB_E2EP01020298 is valid)
       * State.SyncCounter = 3
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 1 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding SyncCounter, DeltaCounter, and NoNewOrRepeatedDataCounter)
   02[09]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = 0
       * State.SyncCounter = 2
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 11 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding SyncCounter, DeltaCounter, and NoNewOrRepeatedDataCounter)
   02[10]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData+1
         (=&gt;invalidates Sync state regarding EB_E2EP01020299 but validates EB_E2EP01020298)
       * State.SyncCounter = 1
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 11 (1&amp;lt;=..&amp;lt;=MaxDeltaCounter+1)
       (Boundary test regarding SyncCounter, DeltaCounter, and NoNewOrRepeatedDataCounter)
   02[11]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData
       * State.SyncCounter = 3
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 0 (&amp;lt;1)
         (=&gt;invalidates Sync state regarding EB_E2EP01020299)
       (Boundary test regarding SyncCounter, DeltaCounter, and NoNewOrRepeatedDataCounter)
   02[12]:
       Prepare data such that
       * State.NoNewOrRepeatedDataCounter = Config.MaxNoNewOrRepeatedData
       * State.SyncCounter = 3
       * State.MaxDeltaCounter = 10 (Note: is internally incremented before comparison)
       * difference between LastValidCounter and received Counter = 12 (&gt;MaxDeltaCounter+1)
         (=&gt;invalidates Sync state regarding EB_E2EP01020299)
       (Boundary test regarding SyncCounter, DeltaCounter, and NoNewOrRepeatedDataCounter)

   03[01]: VP (EB_E2EP01020147, ASR_E2EP01020196, EB_E2EP01020298, EB_E2EP01020299)
             ReceiverStateType.status equals E2E_P01STATUS_OK
             SyncCounter equals 0
           VP (EB_E2EP01020300)
             NoNewOrRepeatedDataCounter equals 0
   03[02]: VP (ASR_E2EP01020196, EB_E2EP01020298)
             ReceiverStateType.status equals E2E_P01STATUS_SYNC
             SyncCounter equals Config-&gt;SyncCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020150)
             * State-&gt;MaxDeltaCounter equals Config-&gt;MaxDeltaCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020151)
             * State-&gt;LastValidCounter equals the counter of the actually received Data
           VP (ASR_E2EP01020196, EB_E2EP01020300)
             * State-&gt;NoNewOrRepeatedDataCounter equals 0
   03[03]: VP (EB_E2EP01020148, ASR_E2EP01020196, EB_E2EP01020298)
             ReceiverStateType.status equals E2E_P01STATUS_OKSOMELOST
           VP (EB_E2EP01020300)
             NoNewOrRepeatedDataCounter equals 0
   03[04]: VP (ASR_E2EP01020196, EB_E2EP01020298)
             ReceiverStateType.status equals E2E_P01STATUS_SYNC
             SyncCounter equals Config-&gt;SyncCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020150)
             * State-&gt;MaxDeltaCounter equals Config-&gt;MaxDeltaCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020151)
             * State-&gt;LastValidCounter equals the counter of the actually received Data
           VP (ASR_E2EP01020196, EB_E2EP01020300)
             * State-&gt;NoNewOrRepeatedDataCounter equals 0
   03[05]: VP (ASR_E2EP01020196, EB_E2EP01020298)
             ReceiverStateType.status does not equal E2E_P01STATUS_SYNC
   03[06]: VP (ASR_E2EP01020196, EB_E2EP01020298)
             ReceiverStateType.status does not equal E2E_P01STATUS_SYNC


   03[07]: VP (ASR_E2EP01020196, EB_E2EP01020299)
             * ReceiverStateType.status equals E2E_P01STATUS_SYNC
             * SyncCounter equals 2
           VP (ASR_E2EP01020196, EB_E2EP01020150)
             * State-&gt;MaxDeltaCounter equals Config-&gt;MaxDeltaCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020151)
             * State-&gt;LastValidCounter equals the counter of the actually received Data
           VP (ASR_E2EP01020196, EB_E2EP01020300)
             * State-&gt;NoNewOrRepeatedDataCounter equals 0
   03[08]: VP (ASR_E2EP01020196, EB_E2EP01020299, EB_E2EP01020298)
             * ReceiverStateType.status equals E2E_P01STATUS_SYNC
             * SyncCounter equals 3
           VP (ASR_E2EP01020196, EB_E2EP01020150)
             * State-&gt;MaxDeltaCounter equals Config-&gt;MaxDeltaCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020151)
             * State-&gt;LastValidCounter equals the counter of the actually received Data
           VP (ASR_E2EP01020196, EB_E2EP01020300)
             * State-&gt;NoNewOrRepeatedDataCounter equals 0
   03[09]: VP (ASR_E2EP01020196, EB_E2EP01020299)
             ReceiverStateType.status equals E2E_P01STATUS_SYNC
             SyncCounter equals 1
           VP (ASR_E2EP01020196, EB_E2EP01020150)
             * State-&gt;MaxDeltaCounter equals Config-&gt;MaxDeltaCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020151)
             * State-&gt;LastValidCounter equals the counter of the actually received Data
           VP (ASR_E2EP01020196, EB_E2EP01020300)
             * State-&gt;NoNewOrRepeatedDataCounter equals 0
   03[10]: VP (ASR_E2EP01020196, EB_E2EP01020299, EB_E2EP01020298)
             ReceiverStateType.status equals E2E_P01STATUS_SYNC
             SyncCounter equals 3
           VP (ASR_E2EP01020196, EB_E2EP01020150)
             * State-&gt;MaxDeltaCounter equals Config-&gt;MaxDeltaCounterInit
           VP (ASR_E2EP01020196, EB_E2EP01020151)
             * State-&gt;LastValidCounter equals the counter of the actually received Data
           VP (ASR_E2EP01020196, EB_E2EP01020300)
             * State-&gt;NoNewOrRepeatedDataCounter equals 0
   03[11]: VP (ASR_E2EP01020196, EB_E2EP01020299)
             ReceiverStateType.status does not equal E2E_P01STATUS_SYNC
             SyncCounter equals 3
   03[12]: VP (ASR_E2EP01020196, EB_E2EP01020299)
             ReceiverStateType.status does not equal E2E_P01STATUS_SYNC
             SyncCounter equals 3

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Either usage of all possible values or min / intermediate /max value for individual parameters)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_SYNC)


Test Input: 

Config.MaxDeltaCounterInit = 5
Config.MaxNoNewOrRepeatedData = 6
Config.SyncCounterInit = 3

                               NewDataAvailable+    +LostData
                        WaitForFirstData+      |    |   +NoNewOrRepeatedDataCounter
                     MaxDeltaCounter+   |      |    |   |   +SyncCounter
               LastValidCounter+    |   |      |    |   |   |
            +-Status-+         |    |   |      |    |   |   |
 IV_E2E_P01CheckStateType[] =
   01: {E2E_P01STATUS_OK,    1U, 10U,FALSE, TRUE, 0U, 6U, 0U},
   02: {E2E_P01STATUS_OK,    2U, 10U,FALSE, TRUE, 0U, 7U, 0U},
   03: {E2E_P01STATUS_OK,    3U, 10U,FALSE, TRUE, 0U, 6U, 0U},
   04: {E2E_P01STATUS_OK,    4U, 10U,FALSE, TRUE, 0U, 7U, 8U},
   05: {E2E_P01STATUS_OK,    5U, 10U,FALSE, TRUE, 0U, 7U, 0U},
   06: {E2E_P01STATUS_OK,    6U, 10U,FALSE, TRUE, 0U, 7U, 0U},
   07: {E2E_P01STATUS_OK,    7U, 10U,FALSE, TRUE, 0U, 6U, 3U},
   08: {E2E_P01STATUS_OK,    8U, 10U,FALSE, TRUE, 0U, 7U, 3U},
   09: {E2E_P01STATUS_OK,    9U, 10U,FALSE, TRUE, 0U, 0U, 2U},
   10: {E2E_P01STATUS_OK,   10U, 10U,FALSE, TRUE, 0U, 7U, 1U},
   11: {E2E_P01STATUS_OK,   11U, 10U,FALSE, TRUE, 0U, 6U, 3U},
   12: {E2E_P01STATUS_OK,   12U, 10U,FALSE, TRUE, 0U, 6U, 3U},

           +-Counter
           |
 IV_DataCounterValue[] =
   01: {  2U }  =&gt; Delta=1
   02: {  3U }  =&gt; Delta=1
   03: { 14U }  =&gt; Delta=11
   04: {  0U }  =&gt; Delta=11
   05: {  5U }  =&gt; Delta=0
   06: {  3U }  =&gt; Delta=12
   07: {  8U }  =&gt; Delta=1
   08: {  9U }  =&gt; Delta=1
   09: {  5U }  =&gt; Delta=11
   10: {  6U }  =&gt; Delta=11
   11: { 11U }  =&gt; Delta=0
   12: {  9U }  =&gt; Delta=12


Test Output: 


                                        NewDataAvailable+   +LostData
                                 WaitForFirstData+      |    |   +NoNewOrRepeatedDataCounter
                             MaxDeltaCounter+    |      |    |   |   +SyncCounter
                      LastValidCounter+     |    |      |    |   |   |
            +-Status-+                |     |    |      |    |   |   |
 OV_E2E_P01CheckStateType[] =
   01: {E2E_P01STATUS_OK,            2U, 5U, FALSE, TRUE,  0U, 0U, 0U},
   02: {E2E_P01STATUS_SYNC,          3U, 5U, FALSE, TRUE,  0U, 0U, 3U},
   03: {E2E_P01STATUS_OKSOMELOST,   14U, 5U, FALSE, TRUE, 10U, 0U, 0U},
   04: {E2E_P01STATUS_SYNC,          0U, 5U, FALSE, TRUE, 10U, 0U, 3U},
   05: {E2E_P01STATUS_REPEATED,      5U,11U, FALSE, TRUE,  0U, 8U, 0U},
   06: {E2E_P01STATUS_WRONGSEQUENCE, 3U, 5U, FALSE, TRUE,  0U, 0U, 3U},
   07: {E2E_P01STATUS_SYNC,          8U, 5U, FALSE, TRUE,  0U, 0U, 2U},
   08: {E2E_P01STATUS_SYNC,          9U, 5U, FALSE, TRUE,  0U, 0U, 3U},
   09: {E2E_P01STATUS_SYNC,          5U, 5U, FALSE, TRUE, 10U, 0U, 1U},
   10: {E2E_P01STATUS_SYNC,          6U, 5U, FALSE, TRUE, 10U, 0U, 3U},
   11: {E2E_P01STATUS_REPEATED,     11U,11U, FALSE, TRUE,  0U, 7U, 3U},
   12: {E2E_P01STATUS_WRONGSEQUENCE, 9U, 5U, FALSE, TRUE,  0U, 0U, 3U},

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckStatus_WrongDataIDNibble</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>4213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    The function E2E_P01Check() shall be tested by the path leading to
    E2E_P01STATUS_WRONGCRC if the CRC is correct but the received
    DataIDNibble is wrong.

    In detail:
     Test that if
       - DataIDMode is configured to E2E_P01_DATAID_NIBBLE, and
       - received Data contains correct CRC, and
       - the received DataIDNibble is different to the value configured in DataID
     THEN
       - E2E_P01ReceiverState.Status equals E2E_P01STATUS_WRONGCRC
     FOR
       - different DataIdNibbleOffset values
&lt;/para&gt;
&lt;para&gt;

&lt;/para&gt;

Test Object: None.
Test Precondition: 

Successful execution of TS_E2EP01_ConTest_02_P01Check_AllStates.


Test Execution: 

Execute the following steps several times with InputDataXX from input:
   01: Call E2E_P01Check() with
       - the E2E_P01Config stated in InputDataXX
       - the E2E_P01ReceiverState stated in InputDataXX
       - the data VDxx stated in InputDataXX
   02: VP (see VPs of E2ETEST_GenericTest.xx stated
           in TS_E2EP01_ConTest_02_P01CheckStatus_WrongSequence)
       E2E_P01Check() returns the value stated in OutputDataXX
       E2E_P01ReceiverState value are equal to values stated in OutputDataXX

   The following VPs are checked within the SCrc_CalculateCRC8 stub
   (see TS_E2EP01_ConTest_02_P01Check_DataIdMode):
      - ASR_E2EP01020163 (test aspect related to call of SCrc_CalculateCRC8() only)
      - ASR_E2EP01020070,ASR_E2EP01020070
      - ASR_E2EP01020190

Test aspects of individual InputDataXX/OutputDataXX:

   Data01,Data03,Data05: VP (ASR_E2EP01020196)
           Test that if
             - DataIDMode is configured to E2E_P01_DATAID_NIBBLE, and
             - received Data contains correct CRC, and
             - the received DataIDNibble is different to the value configured in DataID
           THEN
             - E2E_P01ReceiverState.Status equals E2E_P01STATUS_WRONGCRC
           FOR
             - different DataIdNibbleOffset values, and
             - different DataIdNibble values

   Data02,Data04,Data06: VP (ASR_E2EP01020196)
           Test that if
             - DataIDMode is configured to E2E_P01_DATAID_NIBBLE, and
             - received Data contains correct CRC, and
             - the received DataIDNibble is equal to the value configured in DataID
           THEN
             - E2E_P01ReceiverState.Status does not equal E2E_P01STATUS_WRONGCRC
               (equals E2E_P01STATUS_OK)
           FOR
             - different DataIdNibbleOffset values, and
             - different DataIdNibble values

   Data01..Data06: VP (ASR_E2EP01020196)
           Test that
           - MaxDeltaCounter is incremented by 1

Used Test Strategies:
- Pair wise tests
  (Different values among different E2E_P01ReceiverState parameters)
- Boundary Value Analysis
  (Different and equal DataIdNibble values are tested)
- Equivalence Class Partitioning
  (Testing only transitions to Rx status E2E_P01STATUS_WRONGCRC due to incorrect DataIDNibble value)


Test Input: 

InputDataXX:
CounterOffset                        MaxDeltaCounterInit                 NoNewOrRepeatedDataCounter+
     |                                    |MaxNoNewOrRepeatedData                     LostData+  |  +SyncCounter
     |  +CRCOffset                        | |SyncCounterInit            NewDataAvailable+    |  |  | data+
     |  |   DataIDNibble                  | |  |                   WaitForFirstData+    |    |  |  |     |returned
     |  |    |++LowByte of DataID         | |  |                MaxDeltaCounter+   |    |    |  |  |     |  CRC+
     |  |   0||| +-DataIDNibbleOffset     | |  |            LastValidCounter+  |   |    |    |  |  |     |     |
     |  |   |||| |       DataIDMode       | |  |        Status              |  |   |    |    |  |  |     |     |
01:{ 8, 0,0x0023,12,E2E_P01_DATAID_NIBBLE,7,14,0},{E2E_P01STATUS_NONEWDATA,0U,0U,FALSE,TRUE,0U,0U,0U},VD702,0x11U}
02:{ 8, 0,0x0F23,12,E2E_P01_DATAID_NIBBLE,7,14,0},{E2E_P01STATUS_NONEWDATA,0U,0U,FALSE,TRUE,0U,0U,0U},VD702,0x11U}
03:{28,16,0x0734,24,E2E_P01_DATAID_NIBBLE,7,14,0},{E2E_P01STATUS_NONEWDATA,0U,0U,FALSE,TRUE,0U,0U,0U},VD712,0x11U}
04:{28,16,0x0034,24,E2E_P01_DATAID_NIBBLE,7,14,0},{E2E_P01STATUS_NONEWDATA,0U,0U,FALSE,TRUE,0U,0U,0U},VD712,0x11U}
05:{52,56,0x0FA8,40,E2E_P01_DATAID_NIBBLE,7,14,0},{E2E_P01STATUS_NONEWDATA,0U,0U,FALSE,TRUE,0U,0U,0U},VD722,0x11U}
06:{52,56,0x08A8,40,E2E_P01_DATAID_NIBBLE,7,14,0},{E2E_P01STATUS_NONEWDATA,0U,0U,FALSE,TRUE,0U,0U,0U},VD722,0x11U}

with input data VDxx:

                 +-DataIDNibble
      CRC-+      |+-Counter
          |      ||      +-Data------------------------------------+
VD702: {0x11U, 0xF1U, 0x10U, 0x11U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
                               +-Counter
                   CRC-+       |+-DataIDNibble
         +-Data--+     |       ||      +-Data-----------------------+
VD712: {0x10U, 0x11U, 0x11U, 0x10U, 0x12U, 0x13U, 0x14U, 0x15U, 0x16U}
                                             Counter+   CRC-+
                                  DataIDNibble+     |       |
         +-Data---------------------+         |     |       |   +Data+
VD722: {0x15U, 0x14U, 0x10U, 0x11U, 0x12U, 0x18U, 0x1AU, 0x11U, 0x16U}


Test Output: 

OutputDataXX:
                                     NewDataAvailable+       +LostData
                              WaitForFirstData+      |       |   +NoNewOrRepeatedDataCounter
                           MaxDeltaCounter+   |      |       |   |   +SyncCounter
                     LastValidCounter+    |   |      |       |   |   |     +retVal
              +-Status-+             |    |   |      |       |   |   |     |             invokeCRC+
01: {{E2E_P01STATUS_WRONGCRC,         0U,  1U,FALSE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
02: {{E2E_P01STATUS_OK      ,         1U,  7U,FALSE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
03: {{E2E_P01STATUS_WRONGCRC,         0U,  1U,FALSE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
04: {{E2E_P01STATUS_OK      ,         1U,  7U,FALSE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
05: {{E2E_P01STATUS_WRONGCRC,         0U,  1U,FALSE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },
06: {{E2E_P01STATUS_OK      ,         1U,  7U,FALSE,  TRUE,   0U, 0U, 0U}, E2E_E_OK,             TRUE  },

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020196</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01MapStatusToSMProfileBehaviorTRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>4403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

     Test that if profileBehavior==TRUE then E2E_P01MapStatusToSM provides the following
     return value depending on the passed CheckReturn and Status values:

     1) If CheckReturn==E2E_E_OK and:
        Status==E2E_P01STATUS_OK =&gt; E2E_P_OK
        Status==E2E_P01STATUS_OKSOMELOST =&gt; E2E_P_OK
        Status==E2E_P01STATUS_SYNC =&gt; E2E_P_OK
        Status==E2E_P01STATUS_WRONGCRC =&gt; E2E_P_ERROR
        Status==E2E_P01STATUS_REPEATED =&gt; E2E_P_REPEATED
        Status==E2E_P01STATUS_NONEWDATA =&gt; E2E_P_NONEWDATA
        Status==E2E_P01STATUS_WRONGSEQUENCE =&gt; E2E_P_WRONGSEQUENCE
        Status==E2E_P01STATUS_INITIAL =&gt; E2E_P_WRONGSEQUENCE

     2) If CheckReturn != E2E_E_OK then the function E2E_P01MapStatusToSM()
        returns E2E_P_ERROR.

     3) If Status is undefined then the function E2E_P01MapStatusToSM()
        returns E2E_P_ERROR.

  &lt;/para&gt;
  
Test Object: E2E_P01MapStatusToSM()
Test Precondition: 
  
Test Execution: 

    01: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_OK
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    02: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_OK.
    03: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_OKSOMELOST
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    04: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_OK.
    05: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_SYNC
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    06: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_OK.
    07: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_WRONGCRC
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    08: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    09: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_REPEATED
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    10: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_REPEATED.
    11: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_NONEWDATA
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    12: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_NONEWDATA.
    13: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_WRONGSEQUENCE
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    14: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_WRONGSEQUENCE.
    15: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_INITIAL
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    16: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_WRONGSEQUENCE.
    17: Set first parameter to E2E_E_OK, second parameter to an undefined
        value (E2E_P01STATUS_WRONGSEQUENCE+1U) and profileBehavior to TRUE and
        call E2E_P01MapStatusToSM().
    18: VP(ASR_E2EP01020383):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    19: Set first parameter to E2E_E_INPUTERR_NULL, second parameter to E2E_P01STATUS_OK
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    20: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    21: Set first parameter to E2E_E_INPUTERR_WRONG, second parameter to E2E_P01STATUS_OK
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    22: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    23: Set first parameter to E2E_E_INTERR, second parameter to E2E_P01STATUS_OK
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    24: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    25: Set first parameter to E2E_E_INVALID, second parameter to E2E_P01STATUS_OK
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    26: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    27: Set first parameter to E2E_E_WRONGSTATE, second parameter to E2E_P01STATUS_OK
        and profileBehavior to TRUE and call E2E_P01MapStatusToSM().
    28: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P01MapStatusToSM() parameters)

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020383</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01MapStatusToSMProfileBehaviorFALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>4630</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

     Test that if profileBehavior==FALSE then E2E_P01MapStatusToSM provides the following
     return value depending on the passed CheckReturn and Status values:

     1) If CheckReturn==E2E_E_OK and:
        Status==E2E_P01STATUS_OK =&gt; E2E_P_OK
        Status==E2E_P01STATUS_OKSOMELOST =&gt; E2E_P_OK
        Status==E2E_P01STATUS_INITIAL =&gt; E2E_P_OK
        Status==E2E_P01STATUS_WRONGCRC =&gt; E2E_P_ERROR
        Status==E2E_P01STATUS_REPEATED =&gt; E2E_P_REPEATED
        Status==E2E_P01STATUS_NONEWDATA =&gt; E2E_P_REPEATED
        Status==E2E_P01STATUS_WRONGSEQUENCE =&gt; E2E_P_WRONGSEQUENCE
        Status==E2E_P01STATUS_SYNC =&gt; E2E_P_WRONGSEQUENCE

     2) If CheckReturn != E2E_E_OK then the function E2E_P01MapStatusToSM()
        returns E2E_P_ERROR.

     3) If Status is undefined then the function E2E_P01MapStatusToSM()
        returns E2E_P_ERROR.

  &lt;/para&gt;
  
Test Object: E2E_P01MapStatusToSM()
Test Precondition: 
  
Test Execution: 

    01: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_OK
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    02: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_OK.
    03: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_OKSOMELOST
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    04: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_OK.
    05: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_INITIAL
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    06: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_OK.
    07: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_WRONGCRC
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    08: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    09: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_REPEATED
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    10: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_REPEATED.
    11: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_NONEWDATA
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    12: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_NONEWDATA.
    13: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_WRONGSEQUENCE
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    14: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_WRONGSEQUENCE.
    15: Set first parameter to E2E_E_OK, second parameter to E2E_P01STATUS_SYNC
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    16: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_WRONGSEQUENCE.
    17: Set first parameter to E2E_E_OK, second parameter to an undefined
        value (E2E_P01STATUS_WRONGSEQUENCE+1U) and profileBehavior to FALSE and
        call E2E_P01MapStatusToSM().
    18: VP(ASR_E2EP01020476):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    19: Set first parameter to E2E_E_INPUTERR_NULL, second parameter to E2E_P01STATUS_OK
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    20: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    21: Set first parameter to E2E_E_INPUTERR_WRONG, second parameter to E2E_P01STATUS_OK
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    22: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    23: Set first parameter to E2E_E_INTERR, second parameter to E2E_P01STATUS_OK
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    24: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    25: Set first parameter to E2E_E_INVALID, second parameter to E2E_P01STATUS_OK
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    26: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.
    27: Set first parameter to E2E_E_WRONGSTATE, second parameter to E2E_P01STATUS_OK
        and profileBehavior to FALSE and call E2E_P01MapStatusToSM().
    28: VP(ASR_E2EP01020384):
        E2E_P01MapStatusToSM() shall return E2E_P_ERROR.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P01MapStatusToSM() parameters)

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckInit_Ok</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>4857</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

     Test that in case State is valid, E2E_P01CheckInit()
     initializes the state structure by setting:
     - LastValidCounter = 0
     - MaxDeltaCounter = 0
     - WaitForFirstData = TRUE
     - NewDataAvailable = TRUE
     - LostData = 0
     - Status = E2E_P01STATUS_NONEWDATA
     - NoNewOrRepeatedDataCounter = 0
     - SyncCounter = 0

  &lt;/para&gt;
  
Test Object: E2E_P01CheckInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P01CheckInit() with valid parameter.
    02: VP(ASR_E2EP01020390,ASR_E2EP01020389):
        E2E_P01CheckInit() returns E2E_E_OK.
        State structure is initialized by setting:
        - LastValidCounter = 0
        - MaxDeltaCounter = 0
        - WaitForFirstData = TRUE
        - NewDataAvailable = TRUE
        - LostData = 0
        - Status = E2E_P01STATUS_NONEWDATA
        - NoNewOrRepeatedDataCounter = 0
        - SyncCounter = 0

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to status E2E_E_OK for E2EP01CheckInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020389</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01CheckInit_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>4938</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

    Test that In case State is NULL, E2E_P01CheckInit() returns immediately
    with E2E_E_INPUTERR_NULL (no state data is modified).

&lt;/para&gt;

Test Object: E2E_P01CheckInit
Test Precondition: None.
Test Execution: 

  01: Call E2E_P01CheckInit() with NULL parameter.
  02: VP(ASR_E2EP01020012,ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020389,ASR_E2EP01020390):
      E2E_P01CheckInit() returns E2E_E_INPUTERR_NULL.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to status E2E_E_INPUTERR_NULL for E2EP01CheckInit() function)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020389</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01Check_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>4999</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check the behavior of the E2E-library for the function E2E_P01Check()
    applied to invalid input parameters.
    See also in the SWS section 7.2.1 Error classification
    (End-to-End Communication Protection Library V1.0.0 R4.0 Rev 1).
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 

    01: use a NULL pointer for the configuration parameter
    02: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_NULL
    03: use a NULL pointer for the receiver state parameter
    04: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_NULL
    05: use a NULL pointer for the data parameter
    06: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_NULL
    07: all input parameters (configuration, sender state and
        data) are set to NULL
    08: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_NULL
    09: all input parameters in RAM (sender state and data) are
        set to NULL
    10: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_NULL
    11: maximum allowed State.MaxDeltaCounter exceeds
    12: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020023)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    13: call with a data length which is not a multiple of 8
    14: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,ASR_E2EP01020018)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    15: call with a data length exceeding the maximum number of
        specified bits
    16: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,ASR_E2EP01020018)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    17: call with a data length smaller then 16 bits
    18: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    19: call with MaxDeltaCounterInit with invalid value
    20: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020023)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    21: WaitForFirstData in the E2E_P01CheckStateType does
        not equal TRUE nor FALSE
    22: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    23: NewDataAvailable in the E2E_P01CheckStateType does
        not equal TRUE nor FALSE
    24: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    25: call with value for LastValidCounter greater then 14
    26: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    27: maximum allowed State.NoNewOrRepeatedDataCounter exceeds
    28: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    29: maximum allowed State.SyncCounter exceeds
    30: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    31: maximum allowed Config.MaxNoNewOrRepeatedData exceeds
    32: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020023)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    33: maximum allowed Config.SyncCounterInit exceeds
    34: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    35: maximum allowed Config.MaxDeltaCounterInit exceeds
    36: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020023)
         E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    37: call with a crc offset greater than the configured data length
    38: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020152)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    39: call with a counter offset greater than the configured data length
    40: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020153)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    41: call with data id mode INVALID_DATAIDMODE
    42: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020153)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    43: call with data id mode E2E_P01_DATAID_NIBBLE and a too high data id (0x1000)
    44: VP (ASR_E2EP01020306)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    45: call with data id mode E2E_P01_DATAID_NIBBLE and a too high data id (0xFFFF)
    46: VP (ASR_E2EP01020306)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    47: call with data id mode E2E_P01_DATAID_LOW and DataID &gt;
        8bit value (0x0100U)
    48 VP (ASR_E2EP01020169)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    49: call with data id mode E2E_P01_DATAID_LOW and DataID &gt;
        8bit value (0xFFFFU)
    50 VP (ASR_E2EP01020169)
        E2E_P01Protect() returns E2E_E_INPUTERR_WRONG
    51: call with data id mode E2E_P01_DATAID_NIBBLE and a too high DataIdNibbleOffset)
        (i.e. Config-&gt;DataIDNibbleOffset + 4U) &gt; Config-&gt;DataLength)
    52: VP (ASR_E2EP01020011,ASR_E2EP01020047,ASR_E2EP01020158,EB_E2EP01020152)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    53: call with data id mode equal to E2E_P01_DATAID_BOTH
        and DataIDNibbleOffset not equal to 0
    54: VP (ASR_E2EP01020018)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    55: call with data id mode equal to E2E_P01_DATAID_LOW
        and DataIDNibbleOffset not equal to 0
    56: VP (ASR_E2EP01020018)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG
    57: call with data id mode equal to E2E_P01_DATAID_BOTH
        and DataIDNibbleOffset not equal to 0
    58: VP (ASR_E2EP01020018)
        E2E_P01Check() returns E2E_E_INPUTERR_WRONG


Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020158</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020018</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_P01Check_CheckEnum</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>5525</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

   This test shall check enumerations in E2E_P01CheckStatusType

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 

    Following values shall be checked:
        NONEWDATA     0x01
        WRONGCRC      0x02
        INITAL        0x04
        REPEATED      0x08
        OK            0x00
        OKSOMELOST    0x20
        WRONGSEQUENCE 0x40
        SYNC          0x03


Test Output: 
    The values of the input set must reflect the values of the
    enumeration E2E_P01CheckStatusType specified in
    requirement ASR_E2EP01020022.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020022</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_02_Struct</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_02_P01Check/source/application/E2EP01_ConTest_02_P01Check.c</sourcefile>
      <sourceline>5586</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the member order in structures
   E2E_P01CheckStateType and E2E_P01ConfigType.
 
Test Object: None.
Test Precondition: None.
Test Execution: 

  01: create a typedef E2E_P01ReceiverStateCompareType
      that has the expected order of the members
      w.r.t E2E_P01CheckStateType
  02: create a typedef E2E_P01CheckStateCompareType
      that has the expected order of the members
      w.r.t E2E_P01CheckStateType
  03: create a typedef E2E_P01ConfigCompareType
      that has the expected order of the members
      w.r.t E2E_P01ConfigType
  04: Define two local variables of type
      E2E_P01CheckStateType and E2E_P01ReceiverStateCompareType,
      respectively, each having the same values in the ordered
      initializer list
  05: Define two local variables of type
      E2E_P01CheckStateType and E2E_P01CheckStateCompareType,
      respectively, each having the same values in the ordered
      initializer list
  06: Define two local variables of type
      E2E_P01ConfigType and E2E_P01ConfigCompareType,
      respectively, each having the same values in the ordered
      initializer list
  07: VP (ASR_E2EP01020021)
      Each member of the the two local variables of Step 04
      are equal
  08: VP (ASR_E2EP01020021)
      Each member of the the two local variables of Step 05
      are equal
  09: VP (ASR_E2EP01020018)
      Each member of the the two local variables of Step 06
      are equal

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020018</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020021</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_03_PublishedInformation</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_03_General/source/application/E2EP01_ConTest_03_General.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check the correct definition of the common published information
    provided in the module header file.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 
1. macro definition E2EP01_VENDOR_ID
2. macro definition E2EP01_AR_RELEASE_MAJOR_VERSION
3. macro definition E2EP01_AR_RELEASE_MINOR_VERSION
4. macro definition E2EP01_AR_RELEASE_REVISION_VERSION
5. macro definition E2EP01_SW_MAJOR_VERSION
6. macro definition E2EP01_SW_MINOR_VERSION
7. macro definition E2EP01_SW_PATCH_VERSION

Test Output: 
Test Pass Criteria:
1. E2EP01_VENDOR_ID shall be defined
   with the value globally provided by the tooling
   environment
2. E2EP01_AR_RELEASE_MAJOR_VERSION shall be defined
   with the value specified in config.mk
3. E2EP01_AR_RELEASE_MINOR_VERSION shall be defined
   with the value specified in config.mk
4. E2EP01_AR_RELEASE_REVISION_VERSION shall be defined
   with the value specified in config.mk
5. E2EP01_SW_MAJOR_VERSION shall be defined
   with the value specified in config.mk
6. E2EP01_SW_MINOR_VERSION shall be defined
   with the value specified in config.mk
7. E2EP01_SW_PATCH_VERSION shall be defined
    with the value specified in config.mk
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_03_NoConfigParams</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_03_General/source/application/E2EP01_ConTest_03_General.c</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check that the profile does not
    have any configuration options.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

 TS5 build process steps:
 01: Provide a reference file E2EP01_Config.txt
     that contains the first line of the configuration
     container of the module configuration
 02: grep all variables of the installed
     profile configuration and for the name of
     the configuration container
 02a: remove all allowed variables from the result of step 02,
     i.e parameters of CommonPublishedInformation and PublishedInformation
 03: Compare the result of Step 2a with
     variables listed in E2EP01_Config.txt
     and store the difference into
     E2EP01_Config.txt.diff.
 04: VP (ASR_E2EP010037)
     Step 03 reveals no difference
     (i.e. E2EP01_Config.txt.diff is empty)
 05: Include comparison differences of Step 04
     (i.e. E2EP01_Config.txt.diff)
     within this file.
 06: Compile this file
 07: VP (ASR_E2EP010037)
     This file compiles without errors.
 08: Execute this test case
 09: VP (ASR_E2EP010037)
     TS5ATL_RESULT_SUCCESS is returned Step 08

   Note:
    If one of the Verification points is violated, then the
    build process is aborted and an error is reported.


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_03_TypeDataIDMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_03_General/source/application/E2EP01_ConTest_03_General.c</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check that the DataID Mode enumeration type exists and
    is correctly defined.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

 TS5 build process steps:
 01: define variable of type E2E_P01DataIDMode
 02: VP (ASR_E2EP01020200)
     size of type E2E_P01DataIDMode equals size of an enumeration type

For each of the following enumeration values,
    E2E_P01_DATAID_BOTH,
    E2E_P01_DATAID_ALT,
    E2E_P01_DATAID_LOW,
    E2E_P01_DATAID_NIBBLE
  execute the following steps:
     03: VP (ASR_E2EP01020200)
         value is not defined as a macro
     04: assign the value to the variable of step 01
     05: VP (ASR_E2EP01020200)
         variable contains the same value


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_03_TypeSenderState</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_03_General/source/application/E2EP01_ConTest_03_General.c</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check that the E2E_P01ProtectStateType type exists and
    is correctly defined.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

 TS5 build process steps:
 01: define variable of type E2E_P01ProtectStateType with initializer list
 02: VP (ASR_E2EP01020020)
     Counter member of defined variable of step 01 equals the value from step 01
     (verifies that exactly one member exists)
 03: VP (ASR_E2EP01020020)
     size of type E2E_P01ProtectStateType equals size of struct typedef
     with one uint8 member
 04: VP (ASR_E2EP01020020)
     Counter member of defined variable of step 01 can be accessed
 05: VP (ASR_E2EP01020020)
     Counter member of defined variable can have values from 0...255


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_04_IncludeFiles</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_04_Includes/source/application/E2EP01_ConTest_04_Includes.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check that E2E_P01.h exclusively includes the files
   E2E.h, MemMap.h
   and that E2E_P01.c exclusively includes the files
   E2E_P01.h, SCrc_CRC8.h, MemMap.h.
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps:
  1) Provide a reference file includesOf_E2E_P01.h.txt
     that contains the includes:
     E2E.h, MemMap.h
  2) Provide a reference file includesOf_E2E_P01.c.txt
     that contains the includes:
     E2E_P01.h, SCrc_CRC8.h, MemMap.h.
  3) Extract all includes of E2E_P01.h
  4) Extract all includes of E2E_P01.c
  5) Compare all includes of Step 3 with the
     reference file includesOf_E2E_P01.h.txt
     and store difference
     in file includesOf_E2E_P01.h.txt.diff.
  6) Compare all includes of Step 4 with the
     reference file includesOf_E2E_P01.c.txt
     and store difference
     in file includesOf_E2E_P01.h.txt.diff.
  7) Include comparison differences of Step 5 and Step 6
     (i.e. includesOf_E2E_P01.h.txt.diff and
     includesOf_E2E_P01.c.txt.diff) within this file.
  8) Compile this file
  9) Execute this test case which always returns
     TS5ATL_RESULT_SUCCESS

 
Test Input: 
 
Test Output: 

   Test pass criteria:
     1) The extracted includes of Step 5 and
        the reference file are identical.
     2) The extracted includes of Step 6 and
        the reference file are identical.
     3) In Step 8, this file compiles without errors.
     4) In Step 9, TS5ATL_RESULT_SUCCESS is returned.
   Note:
    If Criteria 1) or 2) is violated, then the
    build process is aborted and an error is reported.
    Further, if Criteria 1) or 2) is violated,
    then this file will not compile due to the
    inclusion of the diff results which contains
    not compilable text (backup in case the build process
    incorrectly does not abort).

 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2EP01020113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_05_Files</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_05_Files/source/application/E2EP01_ConTest_05_Files.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check that the profile 01 specific part
   of the E2E library is built of the following files: E2E_P01.h and E2E_P01.c
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps:
  1) Provide a reference file E2EP01_HeaderFiles.txt
     that contains: E2E_P01.h
  2) Provide a reference file E2EP01_SourceFiles.txt
     that contains: E2E_P01.c
  3) Search for all header files existing in the
     installed Tresos plugin of E2EP01
  4) Search for all source files existing in the
     installed Tresos plugin of E2EP01
  5) Compare the found files of Step 3 with the
     files listed in E2EP01_HeaderFiles.txt
     and store the difference into
     E2EP01_HeaderFiles.txt.diff.
  6) VP (ASR_E2EP01020048)
     Step 5 reveals no difference
     (i.e. E2EP01_HeaderFiles.txt.diff is empty)
  7) Compare the found files of Step 4 with the
     files listed in E2EP01_SourceFiles.txt
     and store the difference into
     E2EP01_SourceFiles.txt.diff.
  8) VP (ASR_E2EP01020048)
     Step 7 reveals no difference
     (i.e. E2EP01_SourceFiles.txt.diff is empty)
  9) Include comparison differences of Step 5 and Step 7
     (i.e. E2EP01_HeaderFiles.txt.diff and
     E2EP01_SourceFiles.txt.diff) within this file.
  10) Compile this file
  11) VP (ASR_E2EP01020048)
      This file compiles without errors.
  12) Execute this test case
  13) VP (ASR_E2EP01020048)
     TS5ATL_RESULT_SUCCESS is returned in 12

   Note:
    If one of the Verification points is violated, then the
    build process is aborted and an error is reported.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06000_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00133.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06001_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the in-place
  function 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 01c.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize module

  Case 1
  01: Set buffer to NULL and inputBufferLength different from 0 and call
      in-place transformer function.
      Note: The above condition is the only valid scenario for the first precondition check of
            the requirement tested here since inputBufferLength cannot have a smaller value
            than 0U (inputBufferLength &lt; upperHeaderBitsToShift/8U).
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

  Case 2
  03: Set bufferLength to NULL and call in-place transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.
  05: Deinitialize module

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00102.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00108.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00051.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06002_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the upper header is copied to the front of
  existing parameter buffer by the in-place function 'E2EXf_transformerId' of profile 01c.

  This test also verifies the imported types of P01
     - E2E_P01CheckStateType
     - E2E_P01CheckStatusType
     - E2E_P01ConfigType
     - E2E_P01ProtectStateType
     - E2E_P01CheckStateType
     - E2E_P01ProtectStateType
     - E2E_PCheckStatusType
     - E2E_SMCheckStateType
     - E2E_SMConfigType
     Std_Types:
     - Std_ReturnType
     - Std_VersionInfoType
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize module
  01: Call in-place transformer 'E2EXf_transformerId'.
  02: VP: In-place 'E2EXf_transformerId' copied the amount upperHeaderBitsToShift bits,
      in parameter buffer, with starting offset of headerLength, in direction
      left by 'distance' of headerLength.
  03: VP:(E2EP01.SWS_E2EXf_00047.P01) Instances of the imported types are defined for:
        E2E_P01CheckStateType                    E2E_P01CheckStateType
        E2E_P01CheckStatusType                   E2E_P01CheckStatusType
        E2E_P01ConfigType                        E2E_P01ConfigType
        E2E_P01DataIDMode                        E2E_P01DataIDMode
        E2E_P01ProtectStateType                  E2E_P01ProtectStateType
        E2E_PCheckStatusType                     E2E_PCheckStatusType
        E2E_SMCheckStateType                     E2E_SMCheckStateType
        E2E_SMConfigType                         E2E_SMConfigType
        Std_ExtractProtocolHeaderFieldsType      Std_ExtractProtocolHeaderFieldsType
        Std_MessageResultType                    Std_MessageResultType
        Std_MessageTypeType                      Std_MessageTypeType
        Std_ReturnType                           Std_ReturnType
        Std_VersionInfoType                      Std_VersionInfoType
  04: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.Transformer.InPlace.NoCopying.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00047.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06003_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 01c sets the
  BufferLength equal to InputBufferLength plus HeaderLength in bytes.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Call in-place transformer function with valid parameters.
  02: VP: BufferLength holds the sum of InputBufferLength and HeaderLength in bytes.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00111.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06004_BufLengthCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>431</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for profile 01c, in-place transformer 'E2EXf_transformerId()'
  performs a check of the bufferLength (after the computation of bufferLength):
  If bufferLength is different than the configured DataLength, then the function returns
  immediately E_SAFETY_HARD_RUNTIMEERROR (without calling an E2E Library function).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits / 2048 bits

Test Execution: 
  00: Initialize test buffer
  01: Reinitialize module
  02: Set correct InputBufferLength
  03: Call in-place transformer function multiple times and perform
      sanity checks (the counter value increasement is done through E2E_P01Protect)
  04: Set InputBufferLength equal to a value different from dataLength/8 so that bufferLength
      will be computed erroneously
  05: Call in-place transformer function
  06: VP: No E2E library function was called (the counter value increasement is not done)
  07: VP: BufferLength holds the calculated value
  08: VP: 'E2EXf_transformerId()' returns E_SAFETY_HARD_RUNTIMEERROR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00139.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06005_InvokeProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>536</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 01c
  invokes 'E2E_P01Protect()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P01ProtectInit.

  This test verifies implicitly that the mandatory interfaces for a protect transformer are called:
      API function         Description
      E2E_P01Protect       Protects the array/buffer to  be transmitted using the E2E profile 1.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P01ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize Buffer with values different to 0U
  01: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P01ProtectInit (Counter set to 0U).
  02: Set correct InputBufferLength.
  03: Call transformer function with valid parameters.
  04: VP: E2E_P01ProtectInit() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  05: Call transformer function with valid parameters, which increments the counter.
  06: VP: E2E_P01Protect() was called, because counter was incremented to 1U in E2E header.
          This verifies that counter is incremented correctly.
  07: VP: E2EXf_P01_InP_ComXf_Tx1_Init() was called, so that state structures are initialized
          correctly.
  08: VP: E2E_P01Protect() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  09: Manipulate config local data struct
  10: Calling internal API that is wrapped by transformer API with manipulated config data 3U times.
  11: VP: E2E_P01Protect() was called, because counter was increased to 3U and set correctly in E2E
          header.
          This verifies indirectly that E2E_P01Protect() passes the correct pointer to state by
          StatePtr.
          DataId in E2E header is set correctly according configuration.
          This verifies indirectly that E2E_P01Protect() passes the correct pointer to data by
          DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00107.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.Transformer.Init.SR.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06006_RetValProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf.c.m4</sourcefile>
      <sourceline>704</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if E2E_P01Protect() returns E2E_E_OK then
  in-place transformer 'E2EXf_transformerId' for profile 01c returns E_OK,
  otherwise it returns E_SAFETY_HARD_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module.
  02: Call transformer function with valid parameters.
  03: VP: The call was successful and 'E2EXf_transformerId' returns E_OK
  04: Make E2E_P01Protect() return E2E_E_INPUTERR_NULL by calling internal API that is wrapped
      by transformer API with StatePtr set to NULL_PTR. Note: StatePtr is only checked in
      E2E_P01Protect function.
  05: VP: The call was successful and 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00018.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06100_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00133.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06101_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the in-place
  function 'E2EXf_Inv_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 01c.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize module

  Case 1
  01: Set buffer to NULL and inputBufferLength different from 0 and call
      in-place inverted transformer function.
      Note: The above condition is the only valid scenario for the first precondition check of
            the tested requirement since inputBufferLength cannot have a smaller value than 0U
            (inputBufferLength &lt; headerLength/8U + upperHeaderBitsToShift/8U).
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

  Case 2
  03: Set bufferLength to NULL and call in-place inverted transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00105.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00108.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00051.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06102_InvokeCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>332</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId' of profile 01c
  invokes 'E2E_P01Check()' with proper parameters.
  Additionally it is verified that in the scenario 'no new data is available' (Buffer == NULL and
  InputBufferLength == 0) the pointer to Data is valid. The size of the variable where it points
  to is not tested, as it cannot be tested and it is considered an implementation detail.

  This test also verfies that state structures are initialized correctly by E2E_P01CheckInit.

  This test verifies that the mandatory interfaces for a check transformer are called:
      API function         Description
      E2E_P01Check         Checks the Data received using the E2E profile 1. This includes CRC
                           calculation, handling of Counter and Data ID.
      E2E_P01CheckInit     Initializes the check state
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Set Buffer to defined values.
  02: Deinitialize module.
  03: VP: Transformer is deinitialized.
  04: Initialize module.
  05: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  06: VP: E2E_P01Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

  07: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  08: VP: E2E_P01Check() returns E2E_P_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.

  09: - Set E2E header to values simulating repeated message (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  10: VP: E2E_P01Check() returns E2E_P_REPEATED.
          Verifies that E2E_P01Check() is called because Counter was checked.

  11: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with valid parameters.
  12: VP: E2E_P01Check() returns E2E_P_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  13: - Set E2E header to correct values (Counter = 4U) except CRC is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  14: VP: E2E_P01Check() returns E2E_P_ERROR.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  15: - Set E2E header to correct values (Counter = 4U).
      - Call inverted transformer function with valid parameters.
  16: VP: E2E_P01Check() returns E2E_P_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  17: - Set E2E header to correct values (Counter = 4U).
      - Call inverted transformer function with Buffer == NULL and
        InputBufferLength == 0.
  18: VP: E2E_P01Check() returns E2E_P_NONEWDATA.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  19: Initialize the inverse transform.
  20: - Set E2E header to correct values.
      - Call inverted transformer function with valid parameters.
  21: VP: E2E_P01Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00124.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.Transformer.Init.SR.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06103_NewData</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the following for an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c:
  - if buffer is equal to NULL and inputBufferLength is equal to 0, then variable
    NewDataAvailable of state object of type E2E_P01CheckStateType associated with 'transformerId'
    is set to FALSE;
  - if inputBufferLength is equal to the configured DataLength, then variable NewDataAvailable
    of state object of type E2E_P01CheckStateType associated with 'transformerId' is set
    to TRUE;
  - if the above conditions are not fulfilled then return E_SAFETY_HARD_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits / 2048 bits

Test Execution: 
  01: Set buffer equal to NULL and inputBufferLength equal to 0 and call
      inverted transformer function.
  02: VP: Variable NewDataAvailable is set to FALSE.

  03: Set inputBufferLength equal to the configured DataLength and call inverted
      transformer function.
  04: VP: Variable NewDataAvailable is set to TRUE.

  05: Set inputBufferLength to a value different from dataLength and
      call inverted transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00141.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06104_InvokeMapStatusToSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>691</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
   of profile 01c with configuration parameter profileBehavior set to R4_2 invokes
   'E2E_P01MapStatusToSM()' with proper parameters.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_P01MapStatusToSM The function maps the check status of Profile 1 to a generic check
                           status, which can be used by E2E state machine check function.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module
  02: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  03: VP: Inverted transformer function returns E_OK.
          Ensures that states are correct.
  04: - Set E2E header to values simulating a wrong sequence message (Counter = 4U).
        The ConfigPtr-&gt;MaxDeltaCounter value (2U) determines the threshold of a wrong sequence.
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P01MapStatusToSM() is called. Verified by checking the return value of
          E2E_P01MapStatusToSM() which is passed to E2ESM stub. It is expected to be E2E_P_WRONGSEQUENCE.
          Verifies that E2E_P01MapStatusToSM() passes the Status provided by initialization.
  06: - Set E2E header to correct values back again (Counter = 5U) from the wrong sequence value.
      - Call inverted transformer function with valid parameters multiple times until the
        counter value reaches E2EP01_COUNTER_MAX.
  07: - Set E2E header to values provoking E2E_P01STATUS_WRONGSEQUENCE, i.e. set counter to a value
        smaller than the current ConfigPtr-&gt;MaxDeltaCounter value.
      - Call inverted transformer function.
  08: VP: E2E_P01Check() returns E2E_P01STATUS_WRONGSEQUENCE.
  09: - Set E2E header to values provoking E2E_P_ERROR through an overflow of the
        E2EP01_COUNTER_MAX value.
      - Call inverted transformer function.
  10: VP: E2E_P01Check() returns E2E_P_ERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00029.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06105_InvokeSMCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>845</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c invokes 'E2E_SMCheck()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_SMCheckInit.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_SMCheck          Checks the communication channel. It determines if the data can be used
                           for safety-related application, based on history of checks performed by
                           a corresponding E2E_P0XCheck() function.
      E2E_SMCheckInit      Initializes the state machine.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module
  02: VP: Init functions are called.
  03: Set E2E header to correct values
      Call inverted transformer function with valid parameters.
  04: VP: E2E_SMCheck() is called.
  05: VP: E2E_SMCheck() passes the correct ProfileStatus
      (the returned value of E2E_P01MapStatusToSM).
  06: VP: E2E_SMCheck() points through ConfigPtr to the static SM configuration
      (provided by initialization module via E2E_SMCheckInit).
  07: VP: E2E_SMCheck() passes the correct pointer to state by StatePtr and state structures
      are initialized correctly (verified within callout).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00028.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06106_SMCheckRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>963</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c returns E2E_E_OK after a 'E2E_SMCheck()' call, then:
  - the high nibble of the return will be set to the low nibble of the state
    of the state machine (member SMState of object of type E2E_SMStateType that
    is associated with 'transformerId');
  - the low nibble of the return will be set to the low nibble of the profile-independent
    check status of type E2E_PCheckStatusType;
  otherwise the return of the 'E2E_SMCheck()' call is E_SAFETY_SOFT_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Initialize SMState of StatePtr and return a value equal to E2E_E_OK by E2E_SMCheck.
  02: Call in-place inverted transformer function with valid parameters.
  03: VP: The high nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the state of the state machine.
  04: VP: The low nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the profile-independent check status of type E2E_PCheckStatusType.

  05: Return a value different to E2E_E_OK by E2E_SMCheck.
  06: VP: E2E_SMCheck() returns E_SAFETY_SOFT_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00027.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06107_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>1054</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the buffer remains unchanged after an in-place function call
  'E2EXf_Inv_transformerId' of profile 01c when upperHeaderBitsToShift is equal to 0.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Reinitialize module
  01: Call in-place inverted transformer function with inputBuffer different from NULL and
      upperHeaderBitsToShift equal to 0.
  02: VP: In-place 'E2EXf_Inv_transformerId' keeps the buffer unchanged.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.InvTransformer.InPlace.NoCopying.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_06108_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_06_E2EXf_InP_ComXf/source/application/E2EP01_ConTest_06_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>1122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c sets the BufferLength equal to InputBufferLength minus HeaderLength in bytes.
  Additionally it is verified that BufferLength is set to zero in the case that no new data
  is available (InputBufferLength == 0 and Buffer == NULL).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits / 2048 bits

Test Execution: 
  Case 1 (Normal operation: For P01, it works only if inputBufferLength equals the
    configured DataLength)
  00: Reinitialize module
  01: Set InputBufferLength to configured DataLength.
  02: Call in-place inverted transformer function with valid parameters.
  03: VP: BufferLength holds the correct value given by the subtraction of
      E2E transformer HeaderLength in bytes from InputBufferLength.

  Case 2 (No new data available: InputBufferLength equals zero and Buffer equals NULL)
  04: Set InputBufferLength to 0.
  05: Call in-place inverted transformer function with Buffer set to NULL.
  06: VP: BufferLength is 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00114.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07000_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00133.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07001_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the out-of-place
  function 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 01c.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize module

  Case 1 part 1
  01: Set inputBuffer to NULL and inputBufferLength different from 0 and call
      out-of-place transformer function.
      Note: The above condition is the only valid scenario for the first precondition check of
            the tested requirement since inputBufferLength cannot have a smaller value than 0U
            (inputBufferLength &lt; upperHeaderBitsToShift/8U).
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  03: Set bufferLength equal to NULL and call out-of-place transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 3
  05: Set buffer equal to NULL and call out-of-place transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00106.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00108.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00051.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07002_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  out-of-place transformer 'E2EXf_transformerId' of profile 01c copies inputBuffer to buffer
  starting with the destination offset of headerLength.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Set inputBuffer different from NULL and upperHeaderBitsToShift equal to 0 and call
      out-of-place transformer function.
  02: VP: The function copies the inputBuffer to buffer starting with the destination offset of
      headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00115.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07003_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of profile 01c sets the
  BufferLength equal to InputBufferLength plus HeaderLength in bytes.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Call out-of-place transformer function with valid parameters.
  02: VP: BufferLength holds the sum of InputBufferLength and HeaderLength in bytes.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00111.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07004_BufLengthCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for profile 01c, out-of-place transformer 'E2EXf_transformerId()'
  performs a check of the bufferLength (after the computation of bufferLength):
  If bufferLength is different than the configured DataLength, then the function returns
  immediately E_SAFETY_HARD_RUNTIMEERROR (without calling an E2E Library function).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits / 2048 bits

Test Execution: 
  00: Initialize test buffer
  01: Reinitialize module
  02: Set correct InputBufferLength
  03: Call in-place transformer function multiple times and perform
      sanity checks (the counter value increasement is done through E2E_P01Protect)
  04: Set InputBufferLength equal to a value different from dataLength/8 so that bufferLength
      will be computed erroneously
  05: Call in-place transformer function
  06: VP: No E2E library function was called (the counter value increasement is not done)
  07: VP: BufferLength holds the calculated value
  08: VP: 'E2EXf_transformerId()' returns E_SAFETY_HARD_RUNTIMEERROR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00139.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07005_InvokeProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of profile 01c
  invokes 'E2E_P01Protect()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P01ProtectInit.

  This test verifies implicitly that the mandatory interfaces for a protect transformer are called:
      API function         Description
      E2E_P01Protect       Protects the array/buffer to  be transmitted using the E2E profile 1.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P01ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize Buffer with values different to 0U
  01: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P01ProtectInit (Counter set to 0U).
  02: Set correct InputBufferLength.
  03: Call transformer function with valid parameters.
  04: VP: E2E_P01ProtectInit() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  05: Call transformer function with valid parameters, which increments the counter.
  06: VP: E2E_P01Protect() was called, because counter was incremented to 1U in E2E header.
          This verifies that counter is incremented correctly.
  07: VP: E2EXf_P01_OoP_ComXf_Tx1_Init() was called, so that state structures are initialized
          correctly.
  08: VP: E2E_P01Protect() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  09: Manipulate config local data struct
  10: Calling internal API that is wrapped by transformer API with manipulated config data 3U times.
  11: VP: E2E_P01Protect() was called, because counter was increased to 3U and set correctly in E2E
          header.
          This verifies indirectly that E2E_P01Protect() passes the correct pointer to state by
          StatePtr.
          DataId in E2E header is set correctly according configuration.
          This verifies indirectly that E2E_P01Protect() passes the correct pointer to data by
          DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00107.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.Transformer.Init.SR.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07006_RetValProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf.c.m4</sourcefile>
      <sourceline>664</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if E2E_P01Protect() returns E2E_E_OK then
  in-place transformer 'E2EXf_transformerId' for profile 01c returns E_OK,
  otherwise it returns E_SAFETY_HARD_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module.
  02: Call transformer function with valid parameters.
  03: VP: The call was successful and 'E2EXf_transformerId' returns E_OK
  04: Make E2E_P01Protect() return E2E_E_INPUTERR_NULL by calling internal API that is wrapped
      by transformer API with StatePtr set to NULL_PTR. Note: StatePtr is only checked in
      E2E_P01Protect function.
  05: VP: The call was successful and 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00018.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07100_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00133.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07101_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the out-of-place
  function 'E2EXf_Inv_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 01c.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize module

  Case 1
  01: Set inputBuffer to NULL and inputBufferLength different from 0 and call
      out-of-place inverted transformer function.
      Note: The above condition is the only valid scenario for the first precondition check of
            the tested requirement since inputBufferLength cannot have a smaller value than 0U
            (inputBufferLength &lt; headerLength/8U + upperHeaderBitsToShift/8U).
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  03: Set bufferLength to NULL and call out-of-place inverted transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 3
  05: Set buffer equal to NULL and call out-of-place inverted transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00103.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00108.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00051.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07102_InvokeCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c invokes 'E2E_P01Check()' with proper parameters.
  Additionally it is verified that in the scenario 'no new data is available' (InputBuffer == NULL
  and InputBufferLength == 0) the pointer to Data is valid. The size of the variable where it points
  to is not tested, as it cannot be tested and it is considered an implementation detail.

  This test also verfies that state structures are initialized correctly by E2E_P01CheckInit.

  This test verifies that the mandatory interfaces for a check transformer are called:
      API function         Description
      E2E_P01Check         Checks the Data received using the E2E profile 1. This includes CRC
                           calculation, handling of Counter and Data ID.
      E2E_P01CheckInit     Initializes the check state
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Set Buffer to defined values.
  02: Deinitialize module.
  03: VP: Transformer is deinitialized.
  04: Initialize module.
  05: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  06: VP: E2E_P01Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

  07: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  08: VP: E2E_P01Check() returns E2E_P_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.

  09: - Set E2E header to values simulating repeated message (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  10: VP: E2E_P01Check() returns E2E_P_REPEATED.
          Verifies that E2E_P01Check() is called because Counter was checked.

  11: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with valid parameters.
  12: VP: E2E_P01Check() returns E2E_P_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  13: - Set E2E header to correct values (Counter = 4U) except CRC is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  14: VP: E2E_P01Check() returns E2E_P_ERROR.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  15: - Set E2E header to correct values (Counter = 4U).
      - Call inverted transformer function with valid parameters.
  16: VP: E2E_P01Check() returns E2E_P_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  17: - Set E2E header to correct values (Counter = 4U).
      - Call inverted transformer function with InputBuffer == NULL and
        InputBufferLength == 0.
  18: VP: E2E_P01Check() returns E2E_P_NONEWDATA.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  19: Initialize the inverse transform.
  20: - Set E2E header to correct values.
      - Call inverted transformer function with valid parameters.
  21: VP: E2E_P01Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00123.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.Transformer.Init.SR.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07103_NewData</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>608</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the following for an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c:
  - if inputBuffer is equal to NULL and inputBufferLength is equal to 0, then variable
    NewDataAvailable of state object of type E2E_P01CheckStateType associated with 'transformerId'
    is set to FALSE
  - if inputBuffer is equal to NULL the output buffer does not change
  - if inputBufferLength is equal to the configured DataLength, then variable NewDataAvailable
    of state object of type E2E_P01CheckStateType associated with 'transformerId' is set
    to TRUE
  - if the above conditions are not fulfilled then return E_SAFETY_HARD_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits / 2048 bits

Test Execution: 
  01: Set buffer equal to NULL and inputBufferLength equal to 0 and call
      inverted transformer function.
  02: VP: E2E_P_NONEWDATA is set to E2E_P_NONEWDATA.
  03: VP: buffer did not change
  04: Set inputBufferLength equal to the configured DataLength and call inverted
      transformer function.
  05: VP: ProfileStatus is not set to E2E_P_NONEWDATA.
  06: Set inputBufferLength to a value different from dataLength and
      call inverted transformer function.
  07: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00140.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00108.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07104_InvokeMapStatusToSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>732</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c with configuration parameter profileBehavior set to R4_2 invokes
  'E2E_P01MapStatusToSM()' with proper parameters.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_P01MapStatusToSM The function maps the check status of Profile 1 to a generic check
                           status, which can be used by E2E state machine check function.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module
  02: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  03: VP: Inverted transformer function returns E_OK.
          Ensures that states are correct.
  04: - Set E2E header to values simulating a wrong sequence message (Counter = 4U).
        The ConfigPtr-&gt;MaxDeltaCounter value (2U) determines the threshold of a wrong sequence.
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P01MapStatusToSM() is called. Verified by checking the return value of
          E2E_P01MapStatusToSM() which is passed to E2ESM stub. It is expected to be E2E_P_WRONGSEQUENCE.
          Verifies that E2E_P01MapStatusToSM() passes the Status provided by initialization.
  06: - Set E2E header to correct values back again (Counter = 5U) from the wrong sequence value.
      - Call inverted transformer function with valid parameters multiple times until the
        counter value reaches E2EP01_COUNTER_MAX.
  07: - Set E2E header to values provoking E2E_P01STATUS_WRONGSEQUENCE, i.e. set counter to a value
        smaller than the current ConfigPtr-&gt;MaxDeltaCounter value.
      - Call inverted transformer function.
  08: VP: E2E_P01Check() returns E2E_P01STATUS_WRONGSEQUENCE.
  09: - Set E2E header to values provoking E2E_P_ERROR through an overflow of the
        E2EP01_COUNTER_MAX value.
      - Call inverted transformer function.
  10: VP: E2E_P01Check() returns E2E_P_ERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00029.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07105_InvokeSMCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c invokes 'E2E_SMCheck()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_SMCheckInit.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_SMCheck          Checks the communication channel. It determines if the data can be used
                           for safety-related application, based on history of checks performed by
                           a corresponding E2E_P0XCheck() function.
      E2E_SMCheckInit      Initializes the state machine.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module
  02: VP: Init functions are called.
  03: Set E2E header to correct values
      Call inverted transformer function with valid parameters.
  04: VP: E2E_SMCheck() is called.
  05: VP: E2E_SMCheck() passes the correct ProfileStatus
      (the returned value of E2E_P01MapStatusToSM).
  06: VP: E2E_SMCheck() points through ConfigPtr to the static SM configuration
      (provided by initialization module via E2E_SMCheckInit).
  07: VP: E2E_SMCheck() passes the correct pointer to state by StatePtr and state structures
      are initialized correctly (verified within callout).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00028.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07106_SMCheckRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>1012</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c returns E2E_E_OK after a 'E2E_SMCheck()' call, then:
  - the high nibble of the return will be set to the low nibble of the state
    of the state machine (member SMState of object of type E2E_SMStateType that
    is associated with 'transformerId');
  - the low nibble of the return will be set to the low nibble of the profile-independent
    check status of type E2E_PCheckStatusType;
  otherwise the return of the 'E2E_SMCheck()' call is E_SAFETY_SOFT_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Initialize SMState of StatePtr and return a value equal to E2E_E_OK by E2E_SMCheck.
  02: Call out-of-place inverted transformer function with valid parameters.
  03: VP: The high nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the state of the state machine.
  04: VP: The low nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the profile-independent check status of type E2E_PCheckStatusType.

  05: Return a value different to E2E_E_OK by E2E_SMCheck.
  06: VP: E2E_SMCheck() returns E_SAFETY_SOFT_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00027.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07107_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>1106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  out-of-place inverted transformer 'E2EXf_Inv_transformerId' of profile 01c copies inputBuffer to
  buffer starting with the destination offset of headerLength.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Reinitialize module
  01: Call in-place inverted transformer function with inputBuffer different from NULL and
      upperHeaderBitsToShift equal to 0.
  02: VP: In-place 'E2EXf_Inv_transformerId' keeps the buffer unchanged.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00116.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_07108_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_07_E2EXf_OoP_ComXf/source/application/E2EP01_ConTest_07_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>1177</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c sets the BufferLength equal to InputBufferLength minus HeaderLength in bytes.
  Additionally it is verified that BufferLength is set to zero in the case that no new data
  is available (InputBufferLength == 0 and InputBuffer == NULL).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits / 2048 bits

Test Execution: 
  Case 1 (Normal operation: For P01, it works only if inputBufferLength equals the
    configured DataLength)
  00: Reinitialize module
  01: Set InputBufferLength to configured DataLength.
  02: Call in-place inverted transformer function with valid parameters.
  03: VP: BufferLength holds the correct value given by the subtraction of
      E2E transformer HeaderLength in bytes from InputBufferLength.

  Case 2 (No new data available: InputBufferLength equals zero and Buffer equals NULL)
  04: Set InputBufferLength to 0.
  05: Call in-place inverted transformer function with Buffer set to NULL.
  06: VP: BufferLength is 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00114.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_08101_MaxDeltaCounterCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_08_E2EXf_InP_ComXf_PRE_R4_2/source/application/E2EP01_ConTest_08_E2EXf_InP_ComXf_PRE_R4_2_Inv.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if configuration parameter profileBehavior is PRE_R4_2,then
  E2EXf_Inv_&amp;lt;transformerId&amp;gt; () shall set the variable MaxDeltaCounter of the state
  object to the value of variable MaxDeltaCounterInit of the corresponding configuration object.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - EndToEndTransformationDescription.profileBehavior: PRE_R4_2

Test Execution: 
TestRun 1:
  01: Reinitialize module with same data as within the partition
      (mocked through global test config struct).
  02: Call in-place inverted transformer function with valid parameters.
  03: Call in-place inverted transformer function with valid parameters again.
  04: Call in-place inverted transformer function with invalid parameters which
      produces a wrong sequence error if PXXConfig.ProfileBehavior is FALSE.
  05: VP: ProfileStatus is set to E2E_P_WRONGSEQUENCE and E2E_P_WRONGSEQUENCE is
          returned from the in-place inverted transformer function.
  06: Manipulate ProfileBehavior (set to TRUE) for second test iteration.
TestRun 2: (the steps 01 to 05 will be repeated)
  07: VP: ProfileStatus is set to E2E_E_OK and E2E_E_OK is
          returned from the in-place inverted transformer function.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00142.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_08102_ProfileBehaviorParameterCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_08_E2EXf_InP_ComXf_PRE_R4_2/source/application/E2EP01_ConTest_08_E2EXf_InP_ComXf_PRE_R4_2_Inv.c</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01 with configuration parameter profileBehavior set to PRE_R4_2 invokes
  'E2E_P01MapStatusToSM()' with call parameter profileBehavior = 0.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - EndToEndTransformationDescription.profileBehavior: PRE_R4_2

Test Execution: 
TestRun 1:
  01: Reinitialize module with same data as within the partition
      (mocked through global test config struct).
  02: Set valid CRC and counter.
  03: Manipulate WaitForFirstData in a way that E2E_P01STATUS_INITIAL is forced.
  04: Call in-place inverted transformer function with valid parameters.
  05: VP: E2E_P01MapStatusToSM() is invoked with profileBehavior set to 0 - PRE_R4_2.
  06: Set ProfileBehavior to 1 for second test iteration.
TestRun 2: (the steps 01 to 05 will be repeated)
  07: VP: E2E_P01MapStatusToSM() is invoked with profileBehavior set to 1 after manipulation
          of the profileBehavior.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00029.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_09101_MaxDeltaCounterCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_09_E2EXf_OoP_ComXf_PRE_R4_2/source/application/E2EP01_ConTest_09_E2EXf_OoP_ComXf_PRE_R4_2_Inv.c</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if configuration parameter profileBehavior is PRE_R4_2,then
  E2EXf_Inv_&amp;lt;transformerId&amp;gt; shall set the variable MaxDeltaCounter of the state
  object to the value of variable MaxDeltaCounterInit of the corresponding configuration object.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - EndToEndTransformationDescription.profileBehavior: PRE_R4_2

Test Execution: 
TestRun 1:
  01: Reinitialize module with same data as within the partition
      (mocked through global test config struct).
  02: Call out-of-place inverted transformer function with valid parameters.
  03: Call out-of-place inverted transformer function with valid parameters again.
  04: Call out-of-place inverted transformer function with invalid parameters which
      produces a wrong sequence error if PXXConfig.ProfileBehavior is FALSE.
  05: VP: ProfileStatus is set to E2E_P_WRONGSEQUENCE and E2E_P_WRONGSEQUENCE is
          returned from the out-of-place inverted transformer function.
  06: Manipulate ProfileBehavior (set to TRUE) for second test iteration.
TestRun 2: (the steps 01 to 05 will be repeated)
  07: VP: ProfileStatus is set to E2E_E_OK and E2E_E_OK is
          returned from the out-of-place inverted transformer function.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00142.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_09102_ProfileBehaviorParameterCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_09_E2EXf_OoP_ComXf_PRE_R4_2/source/application/E2EP01_ConTest_09_E2EXf_OoP_ComXf_PRE_R4_2_Inv.c</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01 with configuration parameter profileBehavior set to PRE_R4_2 invokes
  'E2E_P01MapStatusToSM()' with call parameter profileBehavior = 0
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - EndToEndTransformationDescription.profileBehavior: PRE_R4_2

Test Execution: 
TestRun 1:
  01: Reinitialize module with same data as within the partition
      (mocked through global test config struct).
  02: Set valid CRC and counter.
  03: Manipulate WaitForFirstData in a way that E2E_P01STATUS_INITIAL is forced.
  04: Call out-of-place inverted transformer function with valid parameters.
  05: VP: E2E_P01MapStatusToSM() is invoked with profileBehavior set to 0 - PRE_R4_2.
  06: Set ProfileBehavior to 1 for second test iteration.
TestRun 2: (the steps 01 to 05 will be repeated)
  07: VP: E2E_P01MapStatusToSM() is invoked with profileBehavior set to 1 after manipulation
          of the profileBehavior.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00029.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_10000_ASCE2EXF516</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_10_E2EXf_OoP_ComXf_ASCE2EXF516/source/application/E2EP01_ConTest_10_E2EXf_OoP_ComXf_ASCE2EXF516.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01A works correctly if dataIdNibbleOffset is not configured.
  This test is a regression test for bug fix ASCE2EXF-516.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - generated files for E2EXf are taken from E2EXf compile test
    "E2EXf_ComTest_36_P01A_OoP_ComXf_ASCE2EXF516" and added to application/stubs
    In that test also the E2EXf is configured, following parameters have to be
    considered:
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 64 bits
  - dataIdMode: all16Bit (Profile 1 variant A)
  - dataIdNibbleOffset: 0 (not configured in system description, E2EXf MCG
                           generates the default value 0)

Test Execution: 
  00: Reinitialize module
  01: Set InputBufferLength to configured DataLength.
  03: Call inverted transformer function with valid parameters.
  04: VP: The call was successful and 'E2EXf_transformerId' returns E_OK.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020018</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_10100_ASCE2EXF516</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_10_E2EXf_OoP_ComXf_ASCE2EXF516/source/application/E2EP01_ConTest_10_E2EXf_OoP_ComXf_ASCE2EXF516_Inv.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01A works correctly if dataIdNibbleOffset is not configured.
  This test is a regression test for bug fix ASCE2EXF-516.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - generated files for E2EXf are taken from E2EXf compile test
    "E2EXf_ComTest_36_P01A_OoP_ComXf_ASCE2EXF516" and added to application/stubs
    In that test also the E2EXf is configured, following parameters have to be
    considered:
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 64 bits
  - dataIdMode: all16Bit (Profile 1 variant A)
  - dataIdNibbleOffset: 0 (not configured in system description, E2EXf MCG
                           generates the default value 0)
  - couterOffset: 52 bits
  - CRCOffset: 56 bits

Test Execution: 
  00: Reinitialize module
  01: Set InputBufferLength to configured DataLength.
  02: Set CRC and counter in buffer.
  03: Call inverted transformer function with valid parameters.
  04: VP: The call was successful and 'E2EXf_transformerId' returns E_OK.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020018</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_11_WaitForFirstData</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_11_WaitForFirstData/source/application/EbTest.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
     This test verifies that the WaitForFirstData parameter is initialized to the 
     same value as is stored in the E2EXF_WAIT_FOR_FIRST_DATA_INIT_VALUE 
     macro generated by the E2EXf MCG.
     
     Permutation   generated WaitForFirstData   asserted initialized value
          p0                 TRUE                           TRUE
          p1                 FALSE                          FALSE
          p2                 NONE                           TRUE (default)
  &lt;/para&gt;
  &lt;para&gt;

     Test that in case State is valid, E2E_P01CheckInit()
     initializes the state structure by setting:
     - LastValidCounter = 0
     - MaxDeltaCounter = 0
     - WaitForFirstData = E2EXF_WAIT_FOR_FIRST_DATA_INIT_VALUE
     - NewDataAvailable = TRUE
     - LostData = 0
     - Status = E2E_P01STATUS_NONEWDATA
     - NoNewOrRepeatedDataCounter = 0
     - SyncCounter = 0

  &lt;/para&gt;
  
Test Object: E2E_P01CheckInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P01CheckInit() with valid parameter.
    02:
        E2E_P01CheckInit() returns E2E_E_OK.
        State structure is initialized by setting:
        - LastValidCounter = 0
        - MaxDeltaCounter = 0
        - WaitForFirstData = E2EXF_WAIT_FOR_FIRST_DATA_INIT_VALUE (as configured for permutation - see description)
        - NewDataAvailable = TRUE
        - LostData = 0
        - Status = E2E_P01STATUS_NONEWDATA
        - NoNewOrRepeatedDataCounter = 0
        - SyncCounter = 0

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to status E2E_E_OK for E2EP01CheckInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020389</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_ConTest_12_P01Forward</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_12_P01Forward/source/application/E2EP01_ConTest_12_P01Foward.c</sourcefile>
      <sourceline>709</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
      The aspects stated below are done on valid input data only.

      1) (ASR_E2EP01020588,ASR_E2EP01020608)
          Test that E2E_P01Forward()
          a) writes the Counter in the Data at the Counter position specified
          in the State data,
          b) writes DataID Nibble in Data (if E2E_P01_DATAID_NIBBLE is used) at the Nibble
          position specified in the configuration data,
          c) computes the CRC over DataID (depending on DataID mode - see
          test aspects 5), 6), and 7)) and Data,
          d) writes the CRC in the Data at the CRC position provided in the configuration data, and
          e) increments the Counter in the State data.

      2) (ASR_E2EP01020075)
          Test that E2E_P01Forward() increments the passed State Counter
          value by 1 up to 14, and then restarts with 0 again.

      3) (ASR_E2EP01020190)
          Test that E2E_P01Forward() calls the SCrc_CalculateCRC8() function

      4) (ASR_E2EP01020070)
          Test that E2E_P01Forward() uses CRC-8-SAE J1850 with 0U as start value for the calculation of
          the CRC (That is,  SCrc_CalculateCRC8() is called with StartValue8=0U).

      5) (ASR_E2EP01020163.1)
          Test that for DataId inclusion Mode E2E_P01_DATAID_BOTH,
          first low byte and then high byte of the DataID are included in the CRC calculation
          step regarding the DataID.

      6) (ASR_E2EP01020163.4)(ASR_E2EP01020640)
          Test that for DataID inclusion Mode E2E_P01_DATAID_NIBBLE,
          the low Nibble of the high byte of the DataID is written to the
          Data(covered by CRC calculation when computing CRC over Data). The high nibble of the
          high byte is left out. The low byte of the DataID is then included in the CRC calculation.
          The high byte is treated as 0.

      7) (ASR_E2EP01020163.2)
          Test that for DataID inclusion Mode E2E_P01_DATAID_ALT,
          the DataID is implicitly transmitted.
          One of the two bytes of the Data ID is included in the CRC calculation,
          alternating high and low byte, depending on parity of the counter.
          For an even counter, the low byte is included. For an odd counter, the high byte is included.

      8) (ASR_E2EP01020163.3)
         Test that for DataID inclusion Mode E2E_P01_DATAID_LOW,
         only low byte of the DataID is included in the CRC calculation
         step regarding the DataID.
  &lt;/para&gt;
  &lt;para&gt;
      Test strategies applied:
      Equivalence Class Partitioning:
      Test execution is done with a permutation of following parameters
      - E2E_P01ProtectStateType.Counter
      - E2E_P01ConfigType.CounterOffset
      - E2E_P01ConfigType.CRCOffset
      - E2E_P01ConfigType.DataIDNibbleOffset
      - E2E_P01ConfigType.DataIDMode
      - E2E_P01ConfigType.DataLength
      - E2E_P01ConfigType.DataID
      Note: The following parameters are not used at sender side and therefore not relevant:
      - MaxDeltaCounter

      Pair wise tests: Tests are executed with a  combination of following parameters / values
      - DataIDMode
      - CRCOffset
      - CounterOffset
      - DataIDNibbleOffset (only relevant for E2E_P01_DATAID_NIBBLE)

      Boundary Value Analysis in combination
      with test-case E2EP01_ConTest_11_P01Forward_InvalidInput (outside bound):
      DataIdMode: [E2E_P01_DATAID_BOTH, E2E_P01_DATAID_LOW, E2E_P01_DATAID_NIBBLE]
      DataLength: MIN=2, MAX=30
      Counter: MIN=0, MAX=14; (First Byte, Last Byte, in between Data)
      DataId: MIN=0, MAX=0xFFFF (E2E_P01_DATAID_BOTH)
      DataId: MIN=0, MAX=0xFFFF (E2E_P01_DATAID_ALT)
                     MAX=0x0FFF (E2E_P01_DATAID_NIBBLE)
                     MAX=0x00FF (E2E_P01_DATAID_LOW)
      DataIDNibbleOffset: MIN=12, MAX=DataLength (low nibble and high nibble)
      CounterOffset: MIN=0, MAX=DataLength
      CRCOffset: MIN=0, MAX=DataLength
  &lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

    01: Prepare CRC stub (SCrc_CalculateCRC8) to return the number of overall Stub calls.

    For each stated TestDataBlock (InputTstCfg), execute the following steps:
    02: call the E2E_Forward function with following parameters:
    - Parameter Config points to following test-data
    Config.DataIDMode       = InputTstCfg.DataIDMode
    Config.DataID           = InputTstCfg.DataID
    Config.DataIDNibbleOffset = InputTstCfg.DataIDNibbleOffset
    Config.CRCOffset        = InputTstCfg.CRCOffset
    Config.CounterOffset    = InputTstCfg.CounterOffset
    Config.DataLength       = InputTstCfg.DataLength
    Config.TstData          = InputTstCfg.TstData
    - Parameter State points to following input data
    State.Counter           = InputTstCfg.Counter
    - Parameter Data points to valid input data
    03: VP (ASR_E2EP01020588):
    E2E_Forward function returns E2E_E_OK
    04: VP (ASR_E2EP01020504,ASR_E2EP01020588,ASR_E2EP01020608)
    State.Counter is updated as follows:
    If InputTstCfg.Counter==MAX(14) =&gt; State.Counter=0
    If InputTstCfg.Counter &lt; MAX(14) =&gt; State.Counter=InputTstCfg.Counter+1
    05: VP (ASR_E2EP01020588,ASR_E2EP01020075)
    TestData at position Config.CounterOffset (4 bits) equals InputTstCfg.Counter
    06: VP (ASR_E2EP01020588,ASR_E2EP01020640)
    If Config.DataIDMode=E2E_P01_DATAID_NIBBLE =&gt;
    TestData at position Config.DataIDNibbleOffset (4 bits) equals
    the low Nibble of the high byte of Config.DataID
    07: VP (ASR_E2EP01020588,ASR_E2EP01020190)
    TestData at position Config.CRCOffset (8 bits) equals
    the number of overall calls to the SCrc_CalculateCRC8 CRC stub
    08: VP (ASR_E2EP01020588,ASR_E2EP01020190)
    Number of SCrc_CalculateCRC8 CRC stub calls equals n where:

    IF InputTstCfg.DataIDMode==E2E_P01_DATAID_BOTH
    and InputTstCfg.CRCOffset is first or last byte in TestData
    =&gt; n=3
    IF InputTstCfg.DataIDMode==E2E_P01_DATAID_BOTH
    and InputTstCfg.CRCOffset is not first and not last byte in TestData
    =&gt; n=4
    IF InputTstCfg.DataIDMode==E2E_P01_DATAID_NIBBLE
    and InputTstCfg.CRCOffset is first or last byte in TestData
    =&gt; n=3
    IF InputTstCfg.DataIDMode==E2E_P01_DATAID_NIBBLE
    and InputTstCfg.CRCOffset is not first and not last byte in TestData
    =&gt; n=4
    IF InputTstCfg.DataIDMode==E2E_P01_DATAID_ALT
    and InputTstCfg.CRCOffset is first or last byte in TestData
    =&gt; n=2
    IF InputTstCfg.DataIDMode==E2E_P01_DATAID_ALT
    and InputTstCfg.CRCOffset is not first and not last byte in TestData
    =&gt; n=3
    09: VP (ASR_E2EP01020070,ASR_E2EP01020190,ASR_E2EP01020075,ASR_E2EP01020076,ASR_E2EP01020163,)
    No other data except CRC / Counter and DataId Nibble is modified in TestData
    10: VP (ASR_E2EP01020588,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020640)
    1st call to SCrc_CalculateCRC8 CRC stub in this test iteration:
    - SCrc_DataPtr points to a value that equals the low byte of InputTstCfg.DataID
    - SCrc_Length equals 1
    - SCrc_StartValue8 equals 0x0U
    - SCrc_IsFirstCall equals FALSE
    11: VP (ASR_E2EP01020588,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020640)
    Next call to SCrc_CalculateCRC8 CRC stub in this test iteration (depends on DataIdMode):
    If InputTstCfg.DataIDMode==E2E_P01_DATAID_BOTH:
    - SCrc_DataPtr points to a value that equals the high byte of InputTstCfg.DataID
    - SCrc_Length equals 1
    - SCrc_StartValue8 equals the SCrc return value from the previous stub call
    - SCrc_IsFirstCall equals FALSE
    If InputTstCfg.DataIDMode==E2E_P01_DATAID_NIBBLE:
    - SCrc_DataPtr points to a value 0
    - SCrc_Length equals 1
    - SCrc_StartValue8 equals the SCrc return value from the previous stub call
    - SCrc_IsFirstCall equals FALSE
    12: VP (ASR_E2EP01020588,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020640)
    Next call to SCrc_CalculateCRC8 CRC stub in this test iteration (depends on CRC position):
    if InputTstCfg.CRCOffset is first byte in TestData
    - SCrc_DataPtr points to 2nd byte of the data passed to E2E_Forward
    - SCrc_Length equals Config.DataLength-1
    - SCrc_StartValue8 equals the SCrc return value from the previous stub call
    (number of overall SCrc stub calls)
    - SCrc_IsFirstCall equals FALSE
    if InputTstCfg.CRCOffset is not first byte in TestData
    - SCrc_DataPtr points to 1st byte of the data passed to E2E_Forward
    - SCrc_Length equals Config.CRCOffset / 8 (excludes CRC value)
    - SCrc_StartValue8 equals the SCrc return value from the previous stub call
    (number of overall SCrc stub calls)
    - SCrc_IsFirstCall equals FALSE
    13: VP (ASR_E2EP01020588,ASR_E2EP01020190,ASR_E2EP01020070,ASR_E2EP01020640)
    Next call to SCrc_CalculateCRC8 CRC stub in this test iteration (depends on CRC position):
    if InputTstCfg.CRCOffset is not first byte and not last byte
    - SCrc_DataPtr points to 1st byte after CRC byte in the TestData
    - SCrc_Length equals Config.DataLength-(Config.CRCOffset/8) (Data after CRC byte)
    - SCrc_StartValue8 equals the SCrc return value from the previous stub call
    (number of overall SCrc stub calls)
    - SCrc_IsFirstCall equals FALSE


Test Input: 

    Note: MAX ... maximum possible counter value =  14

    TestDataBlock 1 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_BOTH
    - CRC at first Byte
    - Counter at second Byte
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             0
    InputTstCfg.CounterOffset:         8
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 1 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different size and values)

    TestDataBlock 2 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_BOTH
    - CRC in the middle of the Data (not first, not last byte)
    - Counter at in the middle of the Data block (not first, not last byte)
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             16
    InputTstCfg.CounterOffset:         28
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 0, 1, 2, 0, 2 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different size and values)

    TestDataBlock 3 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_BOTH
    - CRC in the last byte of the Data
    - Counter at in the next to last byte of the Data
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_BOTH
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             56
    InputTstCfg.CounterOffset:         52
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 6 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different values)


    TestDataBlock 4 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_NIBBLE
    - CRC at first Byte
    - Counter at second Byte
    - DataID Nibble at bit position 12 (High Nibble)
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_NIBBLE
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFFU
    InputTstCfg.DataIDNibbleOffset:    12
    InputTstCfg.CRCOffset:             0
    InputTstCfg.CounterOffset:         8
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 1 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different size and values)

    TestDataBlock 5 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_NIBBLE
    - CRC in the middle of the Data (not first, not last byte)
    - Counter at in the middle of the Data block (not first, not last byte)
    - DataID Nibble at bit position 32  (Low Nibble)
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_NIBBLE
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFFU
    InputTstCfg.DataIDNibbleOffset:    32
    InputTstCfg.CRCOffset:             16
    InputTstCfg.CounterOffset:         28
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 5 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different size and values)

    TestDataBlock 6 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_NIBBLE
    - CRC in the last byte of the Data
    - Counter at in the next to last byte of the Data
    - DataID Nibble at bit position 8 (Low Nibble)
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_NIBBLE
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFFU
    InputTstCfg.DataIDNibbleOffset:    8
    InputTstCfg.CRCOffset:             56
    InputTstCfg.CounterOffset:         52
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 6 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different values)

    TestDataBlock 7 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_NIBBLE
    - CRC at first Byte
    - Counter at second Byte
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_NIBBLE
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFFU
    InputTstCfg.DataIDNibbleOffset:    12
    InputTstCfg.CRCOffset:             0
    InputTstCfg.CounterOffset:         8
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 5, 0, 5, 5, 5 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different size and values)

    TestDataBlock 8 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_NIBBLE
    - CRC in the middle of the Data (not first, not last byte)
    - Counter at in the middle of the Data block (not first, not last byte)
    - DataIDNibble in first byte in low nibble
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_NIBBLE
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             8
    InputTstCfg.CounterOffset:         12
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 8, MAX, 2, 0, MAX }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different size and values)

    TestDataBlock 9 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_NIBBLE
    - CRC in the last byte of the Data
    - Counter at in the next to last byte of the Data
    -- DataIDNibble in the third byte as low nibble
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_NIBBLE
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0x0FFFU
    InputTstCfg.DataIDNibbleOffset:    16
    InputTstCfg.CRCOffset:             56
    InputTstCfg.CounterOffset:         44
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 0, 1, 2, 0, 2 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different values)

    TestDataBlock 10 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_ALT
    - CRC at first Byte
    - Counter at second Byte
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_ALT
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             0
    InputTstCfg.CounterOffset:         8
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    {1,14,1}
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different values)

    TestDataBlock 11 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_ALT
    - CRC in the middle of the Data (not first, not last byte)
    - Counter at in the middle of the Data block (not first, not last byte)
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_ALT
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             16
    InputTstCfg.CounterOffset:         28
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 3,1,3}
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different values)

    TestDataBlock 12 test aspects:
    =============================
    - DataIDMode E2E_P01_DATAID_ALT
    - CRC in the last byte of the Data
    - Counter at in the next to last byte of the Data
    InputTstCfg.DataIDMode:            E2E_P01_DATAID_ALT
    InputTstCfg.DataID:                Different valid values from 0 to maximum 0xFFFFU
    InputTstCfg.DataIDNibbleOffset:    0
    InputTstCfg.CRCOffset:             56
    InputTstCfg.CounterOffset:         52
    InputTstCfg.Counter:               State Counter provided as input for E2EP01_Forward
    { 6 }
    InputTstCfg.DataLength:            correct length of TstData
    InputTstCfg.TstData:               Data passed to E2EP01_Forward (different values)



Test Output: 
    return value for all tests shall be E2E_E_OK
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020588</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020608</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020640</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020163.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_12_P01Forward_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_12_P01Forward/source/application/E2EP01_ConTest_12_P01Foward.c</sourcefile>
      <sourceline>1260</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

1) Check that the E2E-library function E2E_P01Forward()
returns the error codes E2E_E_INPUTERR_NULL if:
- NULL_PTR is passed for configuration data / state data / data to be protected

2) Check that the E2E-library function E2E_P01Forward()
returns the error codes E2E_E_INPUTERR_WRONG if:
- Unsupported Data ID Inclusion Mode does not equal E2E_P01_DATAID_ALT
- invalid counter values in state data (maximum value exceeded)
- invalid data length (not a multiple of 8, maximum value exceeded, value smaller than 16)
- invalid crc offsets (greater than data length, )
- invalid counter offset (greater than data length, )
- invalid DataIDNibbleOffset in case of DataID mode not equal to E2E_P01_DATAID_NIBBLE (!=0)
- invalid DataId value in case of DataID mode E2E_P01_DATAID_NIBBLE (value exceeds 12 bit limit)

See also in the SWS section 7.2.1 Error classification
(End-to-End Communication Protection Library V1.0.0 R4.0 Rev 1).

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 
The input/output parameter(s) shall hold the following
value(s) for calling E2E_P01Forward():
01: set configuration to NULL
02: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_NULL
03: set sender state to NULL
04: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_NULL
05: set data to NULL
06: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_NULL
07: set all input parameters (configuration, sender state
and data) to NULL
08: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_NULL
09: set all input parameters in RAM (sender state and data)
to NULL
10: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_NULL
11: exceed maximum allowed State.Counter
12: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
13: call with a data length which is not a multiple of 8
14: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
15: call with a data length exceeding the maximum number of
specified bits
16: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
17: call with a data length smaller than 16 bits
18: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
19: call with a crc offset greater than the configured data length
20: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047,ASR_E2EP01020153)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
21: call with a counter offset greater than the configured data length
22: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047,ASR_E2EP01020152)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
23: call with data id mode INVALID_DATAIDMODE
24: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
27: call with data id mode E2E_P01_DATAID_BOTH and DataIDNibbleOffset != 0
28 VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
29: call with data id mode E2E_P01_DATAID_ALT and DataIDNibbleOffset != 0
30 VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
31: call with data id mode E2E_P01_DATAID_LOW and DataIDNibbleOffset != 0
32 VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
33: call with data id mode E2E_P01_DATAID_NIBBLE and DataID &gt;
12bit value (0x1000U)
34 VP (ASR_E2EP01020306)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
35: call with data id mode E2E_P01_DATAID_NIBBLE and DataID &gt;
12bit value (0xFFFFU)
36 VP (ASR_E2EP01020306)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
37: call with data id mode E2E_P01_DATAID_LOW and DataID &gt;
8bit value (0x0100U)
38 VP (ASR_E2EP01020169)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
39: call with data id mode E2E_P01_DATAID_LOW and DataID &gt;
8bit value (0xFFFFU)
40 VP (ASR_E2EP01020169)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG
41: call with data id mode E2E_P01_DATAID_NIBBLE and a too high DataIdNibbleOffset)
(i.e. Config-&gt;DataIDNibbleOffset + 4U) &gt; Config-&gt;DataLength)
42: VP (ASR_E2EP01020011,ASR_E2EP01020012,ASR_E2EP01020588,ASR_E2EP01020047)
E2E_P01Forward() returns E2E_E_INPUTERR_WRONG


Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020588</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP01020152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020609</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_12_P01Forward_WriteCounter_FS_Repeated</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_12_P01Forward/source/application/E2EP01_ConTest_12_P01Foward.c</sourcefile>
      <sourceline>1544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that correct Counter is written in the E2E Header in Big Endian format
    tested by iterating among all counter values, wrap around of the counter is considered.

    counter = StatePtr-&gt;Counter - 1U
  &lt;/para&gt;

Test Object: E2E_P01Forward()
Test Precondition: 

Test Execution: 

Iterate the following steps several times:

00: Loop through:
- different positions of P01 header (CRCOffset, CounterOffset and DataIDNibbleOffset)
- different Length values (encoded in header)
- all possible values of state Counter (0U to 14U)

01: Call E2E_P01Forward().
02: VP:E2E_P01Forward() returns E2E_E_OK.
03: VP:The State-&gt;Counter in E2E header
which starts at Offset = E2E_P01Config-&gt;Offset / 8.
04: VP: Expected output data equals to output data returns E2E_E_OK.

Used Test Strategies:
- Pair wise tests:
Different values among the configuration parameters "Offset", "DataLength" and state
parameter "Counter".
- Boundary Value Analysis
Usage of minimum, intermediate and maximum values of state parameter "Counter".
- Equivalence Class Partitioning
Testing only transitions to E2E_E_OK status for E2E_P01Forward() function.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_12_P01Forward_WriteCounter_FS_WrongSeq</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_12_P01Forward/source/application/E2EP01_ConTest_12_P01Foward.c</sourcefile>
      <sourceline>1781</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that correct Counter is written in the E2E Header in Big Endian format
    tested by iterating among all counter values, wrap around of the counter is considered.

    counter = StatePtr-&gt;Counter + ConfigPtr-&gt;MaxDeltaCounter
  &lt;/para&gt;

Test Object: E2E_P01Forward()
Test Precondition: 

Test Execution: 

Iterate the following steps several times:

00: Loop through:
- different positions of P01 header (CRCOffset, CounterOffset and DataIDNibbleOffset)
- different Length values (encoded in header)
- all possible values of state Counter (0U to 14U)

01: Call E2E_P01Forward().
02: VP:E2E_P01Forward() returns E2E_E_OK.
03: VP:The State-&gt;Counter in E2E header
04: VP: Expected output data equals to output data returns E2E_E_OK.

Used Test Strategies:
- Pair wise tests:
Different values among the configuration parameters "Offset", "DataLength" and state
parameter "Counter".
- Boundary Value Analysis
Usage of minimum, intermediate and maximum values of state parameter "Counter".
- Equivalence Class Partitioning
Testing only transitions to E2E_E_OK status for E2E_P01Forward() function.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020611</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_12_P01Forward_WriteDataID_FS_Error</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_12_P01Forward/source/application/E2EP01_ConTest_12_P01Foward.c</sourcefile>
      <sourceline>1993</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that correct DataID incremented by 1 is written
    in the E2E Header in Big Endian format if check status is error.
  &lt;/para&gt;

Test Object: E2E_P01Forward()
Test Precondition: 

Test Execution: 

Iterate the following steps several times:

00: Loop through:
- different positions of P01 header (CRCOffset, CounterOffset and DataIDNibbleOffset)
- different Length values (encoded in header)
- all possible values of state Counter (0U to 14U)

01: Call E2E_P01Forward().
02: VP:E2E_P01Forward() returns E2E_E_OK.
03: VP:The State-&gt;Counter in E2E header
04: VP: Expected output data equals to output data returns E2E_E_OK.

Used Test Strategies:
- Pair wise tests:
Different values among the configuration parameters "Offset", "DataLength" and state
parameter "Counter".
- Boundary Value Analysis
Usage of minimum, intermediate and maximum values of state parameter "Counter".
- Equivalence Class Partitioning
Testing only transitions to E2E_E_OK status for E2E_P01Forward() function.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP01020612</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>TS_E2EP01_ConTest_12_P01Forward_FS_Nonewdata</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_12_P01Forward/source/application/E2EP01_ConTest_12_P01Foward.c</sourcefile>
      <sourceline>2194</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that if forward status is E2E_P_NONEWDATA then
    forward status shall return E2E_E_INPUTERR_WRONG.
  &lt;/para&gt;

Test Object: E2E_P01Forward()
Test Precondition: 

Test Execution: 

01: Call E2E_P01Forward().
02: VP:E2E_P01Forward() returns E2E_E_INPUTERR_WRONG.


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP01020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP010201228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_13000_FWCodeStatusCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_13_E2EXf_InP_ComXf_FWCode/source/application/E2EP01_ConTest_13_InP_ComXf_FWCode.c.m4</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 01c
  invokes 'E2E_P01Protect()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P01ProtectInit.

  This test verifies implicitly that the mandatory interfaces for a protect transformer are called:
      API function         Description
      E2E_P01Protect       Protects the array/buffer to  be transmitted using the E2E profile 1.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P01ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize Buffer with values different to 0U
  01: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P01ProtectInit (Counter set to 0U).
  02: Set correct InputBufferLength.
  03: Call transformer function with valid parameters.
  04: VP: E2E_P01ProtectInit() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  05: Call transformer function with valid parameters, which increments the counter.
  06: VP: E2E_P01Protect() was called, because counter was incremented to 1U in E2E header.
          This verifies that counter is incremented correctly.
  07: VP: E2EXf_P01_InP_ComXf_Tx1_Init() was called, so that state structures are initialized
          correctly.
  08: VP: E2E_P01Protect() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  09: Manipulate config local data struct
  10: Calling internal API that is wrapped by transformer API with manipulated config data 3U times.
  11: VP: E2E_P01Protect() was called, because counter was increased to 3U and set correctly in E2E
          header.
          This verifies indirectly that E2E_P01Protect() passes the correct pointer to state by
          StatePtr.
          DataId in E2E header is set correctly according configuration.
          This verifies indirectly that E2E_P01Protect() passes the correct pointer to data by
          DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00107.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.SWS_E2EXf_00021.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.EB.Transformer.Init.SR.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_14000_FWCodeStatusCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_14_E2EXf_OoP_ComXf_FWCode/source/application/E2EP01_ConTest_14_OoP_ComXf_FWCode.c.m4</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of Profile 01
  invokes 'E2E_P01Forward()' with with different error codes.

  This test also verfies that state structures are initialized correctly by E2E_P01ProtectInit.

  This test verifies implicitly that the mandatory interfaces for a protect transformer are called:
      API function         Description
      E2E_P01Protect       Protects the array/buffer to  be transmitted using the E2E Profile 01.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P01ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 40 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize Buffer with values different to 0U.
  02: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P01ProtectInit (Counter set to 0U).
  03: Call transformer function with valid parameters.
  04: VP: E2E_P01Forward() was called, because transformer function is called with forwardedCode as
          E_OK (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK), counter was set correctly to
          0U in E2E header. The Counter will be incremented which will be used in the next
          invocation of E2E_P01Forward.
  05: Call transformer function with valid parameters.
  06: VP: E2E_P01Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_REP (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_REPEATED), counter
          was decremented and set correctly to 0U in E2E header. The Counter will be incremented
          which will be used in the next invocation of E2E_P01Forward.
  07: Call transformer function with valid parameters.
  08: VP: E2E_P01Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_SEQ (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_WRONGSEQUENCE),
          counter was set to (Counter + MaxDeltaCounterInit)U in E2E header. The Counter will be
          incremented which will be used in the next invocation of E2E_P01Forward.
  09: Call transformer function with valid parameters.
  10: VP: E2E_P01Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_CRC (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_ERROR),
          counter was incremented and set in E2E header. DataId will be incremented by 1U and set
          in E2E header.
  11: VP: Length in E2E header is set correctly (InputbufferLength + E2E header length).
          This verifies indirectly that E2E_P01Forward() passes the correct pointer to data by
          DataPtr.
          This verifies indirectly that E2E_P01Forward() passes the correct length of the data bytes
          by Length.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00107.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00168.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00208.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00047.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_15_E2EXf_InP_ComXf_DisableE2ESM/source/application/E2EP01_ConTest_15_InP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId' of profile 01c
  invokes 'E2E_P01Check()' with disableEndToEndStateMachine TRUE.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Set Buffer to defined values.

  01: Deinitialize and Initialize module.

  02: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  03: VP: E2E_P01Check() returns E_SAFETY_NOSM_OK.
          Verifies that state structures are initialized correctly.

  04: - Set E2E header to values simulating repeated message (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P01Check() returns E_SAFETY_NOSM_REP.
          Verifies that E2E_P01Check() is called because Counter was checked.

  06: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  07: VP: E2E_P01Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  08: - Set E2E header to correct values (Counter = 3U) except CRC is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  09: VP: E2E_P01Check() returns E_SAFETY_NOSM_ERR.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  10: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with valid parameters.
  11: VP: E2E_P01Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  12: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with Buffer == NULL and
        InputBufferLength == 0.
  13: VP: E2E_P01Check() returns E_SAFETY_NOSM_NND.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  14: - Set E2E header to values and set counter to a value smaller than the current
        ConfigPtr-&gt;MaxDeltaCounter value.
      - Call inverted transformer function.
  15: VP: E2E_P01Check() returns E_SAFETY_NOSM_SEQ.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00169.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00032.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP01_E2EXf_CON_16000_InvokeCheck_DisableE2ESM_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP01)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP01/test/ts5/Conformance/IN/E2EP01_ConTest_16_E2EXf_OoP_ComXf_DisableE2ESM/source/application/E2EP01_ConTest_16_OoP_ComXf_Inv.c.m4</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 01c invokes 'E2E_P01Check()' with disableEndToEndStateMachine TRUE.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |    p1  |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  InputBuffer                 |    12U |   256U |
  DataLength                  |    96U |  2048U |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Set Buffer to defined values.

  02: Deinitialize and Initialize module.

  03: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  04: VP: E2E_P01Check() returns E_SAFETY_NOSM_OK.
          Verifies that state structures are initialized correctly.

  05: - Set E2E header to values simulating repeated message (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  06: VP: E2E_P01Check() returns E_SAFETY_NOSM_REP.
          Verifies that E2E_P01Check() is called because Counter was checked.

  07: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  08: VP: E2E_P01Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  09: - Set E2E header to correct values (Counter = 3U) except CRC is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  10: VP: E2E_P01Check() returns E_SAFETY_NOSM_ERR.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

  11: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with valid parameters.
  12: VP: E2E_P01Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P01Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  13: - Set E2E header to correct values, set counter to a value smaller than the current
        ConfigPtr-&gt;MaxDeltaCounter value.
  14: VP: E2E_P01Check() returns E_SAFETY_NOSM_SEQ.

  15: - Set E2E header to correct values (Counter = 4U).
      - Call inverted transformer function with InputBuffer == NULL.
  16: VP: E2E_P01Check() returns E_SAFETY_NOSM_NND.
          Verifies that E2E_P01Check() passes the correct pointer to data by DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00169.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_E2EXf_00037.P01</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EP01.SWS_Xfrm_00032.P01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
