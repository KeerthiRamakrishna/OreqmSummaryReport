<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_EthTSyn_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_AUTOSAR_PRS_TimeSyncOverEthernet.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_AUTOSAR_SWS_TimeSyncOverEthernet.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_EthTSyn_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_EthTSyn_VerificationCriteria.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/common_req/EthTSyn_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_MAN.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:59:14 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_EthTSyn_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_AUTOSAR_PRS_TimeSyncOverEthernet.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_AUTOSAR_SWS_TimeSyncOverEthernet.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_EthTSyn_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_Native/asc_EthTSyn_requirements_EthTSyn_VerificationCriteria.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/common_req/EthTSyn_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_GenericImporter/reqm_MAN.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        The reinitialization process shall not interrupt other module functions.
        If reinitialization of the module is required, the call of
        <code>EthTSyn_Init()</code> shall not interrupt other module functions.
      </description>
      <rationale>
        The reinitialization process resets all internal variables. Continuing an interrupted
        module function after reinitialization can lead to undefined module behavior.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <code>EthTSyn_RxIndication()</code> and
        <code>EthTSyn_TxConfirmation()</code> shall not preempt each other.
        The module functions <code>EthTSyn_RxIndication()</code> and
        <code>EthTSyn_TxConfirmation()</code> shall not preempt each other.
      </description>
      <rationale>
        A preemption of these two function can be easily avoided during integration.
        This limitation allows to reduce the number of interrupt locks to protect shared variables
        and therefore increases the module performance.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <code>EthTSyn_TxConfirmation()</code> shall be non reentrant
        The module functions <code>EthTSyn_TxConfirmation()</code> shall not interrupt
        itself.
      </description>
      <rationale>
        This preemption can be easily avoided during integration. This limitation
        allows to reduce the number of interrupt locks to protect shared variables and therefore
        increases the module performance.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0004</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <code>EthTSyn_MainFunction</code> must not preempt or be preempted by
        <code>EthIf_MainFunctionRx/Tx()</code>.
        The integrator must assure that <code>EthIf_MainFunctionRx/Tx()</code> can not
        preempt <code>EthTSyn_MainFunction()</code>. The
        integrator also must assure that <code>EthTSyn_MainFunction()</code> does not preempt
        <code>EthIf_MainFunctionRx/Tx()</code>.
      </description>
      <rationale>
        This limitation reduces code size and execution time by eliminating the need for extensive
        use of exclusive areas.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0005</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        Invalid value for BufIdx.
        <code>EthTSyn_TxConfirmation()</code> shall not be called parameter BufIdx set to
        0xFFFFFFFFU.
      </description>
      <rationale>
        0xFFFFFFFFU is used as invalid value internally. If Eth_BufIdxType is below uint32, this
        limitation is always fulfilled.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0006</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        VLAN tags in synchronization frames require custom switch behavior to compensate the
        switch processing delay equal to IEEE 802.1AS time aware switches. This is necessary to
        reach the same synchronization accuracy.
      </description>
      <rationale>
        IEEE 802.1AS does not allow the usage of VLAN tags and therefore, time aware switches
        following this standard can not be used. Not time aware switches block the default
        IEEE 802.1AS MAC address and decrease synchronization accuracy if another MAC address is
        used.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0007</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        If bridge is used over switch and TimeSecured Sub-TLV is received from GTM, the slave port
        and all master ports where the Sync Follow-Up frame is forwarded need to have the same
        flags configured in EthTSynCrcFlagsRxValidated as the GTM where the Sync Follow-Up
        originated.
      </description>
      <rationale>
        Not using the same configuration for all ports shall result in different CRC, therefore
        the Sync Follow-Up frame shall be dropped.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0008</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        If the time synchronization over Ethernet is used, there should be maximum one slave per TimeDomain.
      </description>
      <rationale>
        Possible scenarios:
        If a master is configured and no slave -&gt; the master is the GTM for that TimeDomain.
        If a slave and multiple masters are configured for a TimeDomain -&gt; the ECU is a gateway.
        The slave is used to receive the time from the GTM. The masters will send this time to all other nodes
        from that TimeDomain.
        If just slave is configured the TimeDomain shall synchronize with the received time from GTM.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0009</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        If the time synchronization over Ethernet is used with multiple configuration variants,
        EthTSynVariantHandlingIsUsed parameter must be set to TRUE in order to manual update the
        maximum number of slaves(e.g.EthTSyNumberOfConfiguredSlaves please check the description of EthTSyNumberOfConfiguredSlaves
        to see how to configure).
        Also if the Time measurement with Switches feature is used, parameter EthTSynMaxNumberOfSwtPorts
        must be updated as well (please check the description of EthTSyNumberOfConfiguredSlaves
        to see how to configure).
      </description>
      <rationale>
        Is not possible to access values of a different variant.
        In Tresos documentation, chapter 5.7.7:
        By intention, it is not possible to programmatically switch between the different variants.
        It is also not possible to access values of a different variant.
        The reason behind this is the concept that every code always only works on one consistent variant.
        For example a code generator shall always only generate code for one, the currently selected variant.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0010</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        EthTSyn_Init() shall never be called with NULL_PTR.
      </description>
      <rationale>
        EthTSyn uses PostBuild selectable and therefore a valid configuration needs to be provided via EthTSyn_Init() function.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>lim.EthTSyn.EB_INTREQ_EthTSyn_0011</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        If <code>EthTSynEnableDebouncePerPort</code> is enabled the debouncing shall be done on
        each port independently.
      </description>
      <rationale>
        This is an enhancement from AUTOSAR behaviour, where debouncing is done for all ports
        using the same debounce timer.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort_Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EthTSyn.PRS_TS_00002</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master and Time Slave shall use the default configuration
        values as defined by[1,IEEE802.1AS](e.g. MAC destination address or
        Ethernet frame type), if not otherwise specified within this specification.
        (RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01227_OfsNotSecured_Tx</srcid><srcstatus/><internalId>1915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EthTSyn_Cfg.c_39</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00005</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master and Time Slave shall start their protocol
        state machines without Announce message recognition.
        (RS_TS_20048)
      </description>
      <comment>
        Verify that received announce messages are ignored.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01049_Ignore_RxAnnounceMessages</srcid><srcstatus/><internalId>2022</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12752</srcid><srcstatus/><internalId>1386</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13159</srcid><srcstatus/><internalId>1428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00206</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        All messages belonging to the IEEE Rapid Spanning Tree Protocol(PortAnnounceReceive,
        PortAnnounceInformation, PortRoleSelection, PortAnnounceTransmit) shall be ignored
        on the receiver side.(RS_TS_20048)
      </description>
      <comment>
        Note: AUTOSAR implementations shall not send those messages.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01049_Ignore_RxAnnounceMessages</srcid><srcstatus/><internalId>2022</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13160</srcid><srcstatus/><internalId>1429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00163</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If FramePrio exists, a frame format with priority and VLAN tags shall be used. Otherwise
        a frame format without priority and VLAN tags shall be used.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01004_Invalid_EthTSyn_Xdm_Priority_OFF_VlanID_ON</srcid><srcstatus/><internalId>2306</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6273</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00028</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The message format,etc. shall be derived from [1,IEEE802.1AS] chapter 10.
        Media-independent layer specification and chapter 11.
        Media-dependent layer specification for full-duplex, point-to-point
        links, if not otherwise specified. 
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Message Type: the value indicates the type of the message, as defined:
          Message type          Type      Value
          Sync                  Event     0x00
          Pdelay_Req            Event     0x02
          Pdelay_Resp           Event     0x03
          Follow_Up             General   0x08
          Pdelay_Resp_Follow_Up General   0x0A
          Announce              General   0x0B

        Message Length: value is the total number of octets that form the PTP message.
          Message type             Value
          Sync                     44
          Pdelay_Req               54
          Pdelay_Resp              54
          Follow_Up                76
          Pdelay_Resp_Follow_Up    54
          Announce                 76

        Flags:
          Sync and Pdelay_Resp use the two step flag and it's reserved to true.
          Other messages have the flag set to false.

        Control:
          Message type             Value
          Sync                     0x00
          Follow_Up                0x02
          Announce                 0x05
          Pdelay_Req               0x05
          Pdelay_Resp              0x05
          Pdelay_Resp_Follow_Up    0x05

        Log message interval:
          Message type             Value
          Sync                     currentLogSyncInterval
          Follow_Up                currentLogSyncInterval
          Announce                 currentLogSyncInterval
          Pdelay_Req               currentLogPdelayReqInterval
          Pdelay_Resp              0x7F
          Pdelay_Resp_Follow_Up    0x7F
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01130_MasterSendsAnnounceFramesPeriodically</srcid><srcstatus/><internalId>2141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_202</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00181</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The byte order for multibyte values is Big Endian, which is equal to the byte order defined
        by [1, IEEE 802.1 AS].
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8342</srcid><srcstatus/><internalId>1142</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00061</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>2</version>
      <description>
         If MessageCompliance is set to TRUE, Sync and Follow_Up format shall be supported acc.
         to [1, IEEE 802.1 AS].c(RS_TS_20048)
         - The table below gives an overview, how an [1, IEEE 802.1 AS] conformant Sync looks like.
                                       Sync Message Header [IEEE 802.1AS]
        High Nibble        Low Nibble       Octets  Offset    Value
        transportSpecific  messageType        1       0          0x10
        reserved           versionPTP         1       1          2
                messageLength                 2       2          44
                domainNumber                  1       4         (UInteger8)domainNumber = 0
                reserved                      1       5          0
                flags                         2       6          Octet 0: 0x02, Octet 1: 0x08
                correctionField               8       8          0..281474976710655ns
                                                                [1ns = 2^16 = 0x0000 0000 0001 0000]
                reserved                      4      16          0
                sourcePortIdentity           10      20         (PortIdentity)portIdentity
                                                                 from origin Time Aware End Station
                sequenceId                    2      30         (UInteger16)SyncSequenceId =
                                                                (UInteger16)(prevSyncSequenceId+1)
                control                       1      32          0
                logMessageInterval            1      33         (Integer8)currentLogSyncInterval

                            Sync Message Fields [IEEE 802.1AS]
        High Nibble  Low Nibble  Octets  Offset              Value
            PTP Message Header     34      0                    [refer Sync Message Header]
            reserved               10     34                    0
        
        - The table below gives an overview, how an[1,IEEE802.1AS] conformant Follow_Up looks like.
        - Follow_Up Message Header [IEEE 802.1AS]
                                Follow_Up Message Header [IEEE 802.1AS]
        High Nibble        Low Nibble   Octets  Offset  Value
        transportSpecific  messageType     1       0       0x18
        reserved           versionPTP      1       1       0x02
               messageLength               2       2       76
               domainNumber                1       4       (UInteger8)domainNumber=0
               reserved                    1       5       0
               flags                       2       6       Octet 0: 0x00, Octet 1: 0x08
               correctionField             8       8       0..281474976710655ns
                                                           [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                    4       16      0
               sourcePortIdentity          10      20      (PortIdentity)portIdentity
                                                           from origin Time Aware End Station
               sequenceId                  2       30      (UInteger16)SyncSequenceId
               control                     1       32      2
               logMessageInterval          1       33      (Integer8)currentLogSyncInterval
                            Follow_Up Message Fields [IEEE 802.1AS]
        High Nibble  Low Nibble       Octets  Offset              Value
            PTP Message Header        34      0                 [refer Follow_Up Message Header]
            preciseOriginTimestamp    10     34                 (Timestamp) preciseOriginTimestamp
            Follow_Up information TLV 32     44                 refer Follow_Up information TLV

                          Follow_Up information TLV [IEEE 802.1AS]
        High Nibble  Low Nibble          Octets  Offset  Value
                tlvType                     2       0       3
                lengthField                 2       2       28
                organizationId              3       4       0x0080C2 [IEEE 802.1AS]
                organizationSubType         3       7       1
                cumulativeScaledRateOffset  4       10     (Integer32)((RateRatio-1)*2^41)
                gmTimeBaseIndicator         2       14      0
                lastGmPhaseChange           12      16      0
                scaledLastGmFreqChange      4       28      0
      </description>
      <comment>
         Note: This implies one Time Domain (0).
         Replaced and covered by R22-11 requirement.
      </comment>
      <releases>
        <release>R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00061</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00062</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE, the Sync and Follow_Up format shall be supported acc.
        to: Follow_Up Message Header[AUTOSAR] and Sync Message Header [AUTOSAR] depending on configuration.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00063</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE, the Follow_Up shall contain an AUTOSAR TLV,
        depending on configuration.(RS_TS_20048, RS_TS_20061, RS_TS_20062)
                                        Sync Message Header [AUTOSAR]
        High Nibble        Low Nibble       Octets  Offset    Value
        transportSpecific  messageType        1       0          0x10
        reserved           versionPTP         1       1          2
               messageLength                  2       2          44
               domainNumber                   1       4         (UInteger8)domainNumber = 0..15
               reserved                       1       5          0
               flags                          2       6          Octet 0: 0x02, Octet 1: 0x08
               correctionField                8       8          0..281474976710655ns
                                                                [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                       4      16          0
               sourcePortIdentity             10      20         (PortIdentity)portIdentity
                                                                 from origin Time Aware End Station
               sequenceId                     2      30         (UInteger16)SyncSequenceId =
                                                                (UInteger16)(prevSyncSequenceId+1)
               control                        1      32          0
               logMessageInterval             1      33         (Integer8)currentLogSyncInterval

                                        Sync Message Fields [AUTOSAR]
        High Nibble  Low Nibble  Octets  Offset              Value
        PTP Message Header         34      0                    [refer Sync Message Header]
        reserved                   10     34                    0
        
                                        Follow_Up Message Header [AUTOSAR]
        High Nibble        Low Nibble   Octets  Offset  Value
        transportSpecific  messageType     1       0       0x18
        reserved           versionPTP      1       1       0x02
               messageLength               2       2       76+10+Sum(Sub-TLVs)
               domainNumber                1       4       (UInteger8)domainNumber=0..15
               reserved                    1       5       0
               flags                       2       6       Octet 0: 0x00, Octet 1: 0x08
               correctionField             8       8       0..281474976710655ns
                                                           [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                    4       16      0
               sourcePortIdentity          10      20      (PortIdentity)portIdentity
                                                           from origin Time Aware End Station
               sequenceId                  2       30      (UInteger16)SyncSequenceId
               control                     1       32      2
               logMessageInterval          1       33      (Integer8)currentLogSyncInterval

                          Follow_Up Message Fields [AUTOSAR]
        High Nibble   Low Nibble      Octets  Offset  Value
             PTP Message Header         34      0       [refer Follow_Up Message Header]
             preciseOriginTimestamp     10      34      (Timestamp)preciseOriginTimestamp
             Follow_Up information TLV  32+     44      [refer Follow_Up information TLV]
                                        10+
                                        ΣSub-
                                        TLV‘s

                          Follow_Up information TLV [IEEE 802.1AS]
        High Nibble  Low Nibble          Octets  Offset  Value
                tlvType                     2       0       3
                lengthField                 2       2       28
                organizationId              3       4       0x0080C2 [IEEE 802.1AS]
                organizationSubType         3       7       1
                cumulativeScaledRateOffset  4       10     (Integer32)((RateRatio-1)*2^41)
                gmTimeBaseIndicator         2       14      0
                lastGmPhaseChange           12      16      0
                scaledLastGmFreqChange      4       28      0
                                  AUTOSAR TLV Header
        High Nibble  Low Nibble    Octets  Offset  Value
                 tlvType              2       0       3
                 lengthField          2       2       6+ΣSub-TLV‘s
                 organizationId       3       4       0x1A75FB [AUTOSAR]
                 organizationSubType  3       7       0x605676 [BCD coded GlobalTimeEthTSyn]

                          AUTOSAR TLV Sub-TLV: Time Secured
        High Nibble  Low Nibble  Octets  Offset  Value
                Type                1       0       0x28 [Time secured]
                Length              1       1       3
                CRC_Time_Flags      1       2       BitMask 0x01 [messageLength]
                                                    BitMask 0x02 [domainNumber]
                                                    BitMask 0x04 [correctionField]
                                                    BitMask 0x08 [sourcePortIdentity]
                                                    BitMask 0x10 [sequenceId]
                                                    BitMask 0x20 [preciseOriginTimestamp]
                                                    BitMask 0x40 [reserved]
                                                    BitMask 0x80 [reserved]

                CRC_Time_0          1       3       0..255
                CRC_Time_1          1       4       0..255

                     AUTOSAR TLV Sub-TLV: Status Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x50 [Status secured]
                  Length           1       1        2
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                    Status         1       2        BitMask 0x80 [reserved]
                  CRC_Status       1       3        0..255

              AUTOSAR TLV Sub-TLV: Status Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x51 [Status not secured]
                  Length           1       1        2
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                  Status           1       2        BitMask 0x80 [reserved]
                 reserved          1       3        0

              AUTOSAR TLV Sub-TLV: UserData Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x60 [UserData secured]
                 Length            1       1        5
             UserDataLength        1       2        1..3
                UserByte_0         1       3        0..255 (default: 0)
                UserByte_1         1       4        0..255 (default: 0)
                UserByte_2         1       5        0..255 (default: 0)
               CRC_UserData        1       6        0..255

              AUTOSAR TLV Sub-TLV: UserData Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x61 [UserData not secured]
                 Length            1       1        5
             UserDataLength        1       2        1..3
                UserByte_0         1       3        0..255 (default: 0)
                UserByte_1         1       4        0..255 (default: 0)
                UserByte_2         1       5        0..255 (default: 0)
                 reserved          1       6        0

                  AUTOSAR TLV Sub-TLV: OFS Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x44 [OFS secured]
                 Length            1       1        17
              OfsTimeDomain        1       2        16..31
               OfsTimeSec          6       3        0..281474976710655s
               OfsTimeNSec         4       9        0..999999999ns
                                                    BitMask 0x01 [SGW with
                                                         SyncToGTM = 0
                                                         SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                 Status            1      13        BitMask 0x80 [reserved]
              UserDataLength       1      14        0..3 (default: 0)
               UserByte_0          1      15        0..255 (default: 0)
               UserByte_1          1      16        0..255 (default: 0)
               UserByte_2          1      17        0..255 (default: 0)
                CRC_OFS            1      18        0..255

                  AUTOSAR TLV Sub-TLV: OFS Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x34 [OFS not secured]
                 Length            1       1        17
              OfsTimeDomain        1       2        16..31
               OfsTimeSec          6       3        0..281474976710655s
               OfsTimeNSec         4       9        0..999999999ns
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                Status            1       13        BitMask 0x80 [reserved]
              UserDataLength      1       14        0..3 (default: 0)
               UserByte_0         1       15        0..255 (default: 0)
               UserByte_1         1       16        0..255 (default: 0)
               UserByte_2         1       17        0..255 (default: 0)
               reserved           1       18        0
      </description>
      <comment>
        Replaced and covered by R22-11 requirement.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00066</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The messageLength of the Follow_Up Message Header has to be adapted according to the length
        of all existing TLVs.(RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00067</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR TLV Header has a multiplicity of 1.(RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6620</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00068</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If an AUTOSAR TLV Header exists, at least one AUTOSAR SubTLV must exist as well.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01108_UserDataSecuredLength_0</srcid><srcstatus/><internalId>1880</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01118_UserDataNotSecuredLength_0</srcid><srcstatus/><internalId>1891</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_GenTest_01006_Invalid_EthTSyn_Xdm_ComplianceOff_0_SubTlv</srcid><srcstatus/><internalId>2308</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6446</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00069</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If an AUTOSAR TLV Header exists, the lengthField shall be adapted according the number of
        existing AUTOSAR Sub-TLVs.(RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01072_TimeSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01073_TimeSecured_CrcSupported_NoFollowUpTimeSubTlv_Tx</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01115_UserDataNotSecured_Tx</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01121_UserDataNotSecured_Tx_Length0</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6621</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00070</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If an AUTOSAR Sub-TLV exists, it shall be placed after the AUTOSAR TLV Header.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01072_TimeSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6445</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00071</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If more than one AUTOSAR Sub-TLV exists, each Sub-TLV shall be placed after the preceding
        Sub-TLV without gaps.(RS_TS_20048,RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Replaced and covered by R22-11 requirement.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00071</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00072</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If more than one AUTOSAR Sub-TLV exists, the positon of each Sub-TLV is arbitrary.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.RandomSubTLV</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00074</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: Time Secured has a multiplicity of 1 and is only available,
        if CRC protection is required.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01073_TimeSecured_CrcSupported_NoFollowUpTimeSubTlv_Tx</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6451</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00075</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is FALSE and TLVFollowUpTimeSubTLV is set to TRUE, the Time Master
        shall send a Follow_Up, which contains an AUTOSAR Sub-TLV: Time Secured.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00076</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: Status has a multiplicity of 1 and can either be
        CRC protected(StatusSecured) or not(StatusNotSecured).(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00077</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE and TLVFollowUpStatusSubTLV is set to TRUE,
        the Time Master shall send a Follow_Up, which contains an AUTOSAR Sub-TLV: Status.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6479</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.StatusSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00078</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: UserData has a multiplicity of 1 and can either be CRC protected
        (UserData Secured) or not (UserData Not Secured).(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01115_UserDataNotSecured_Tx</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01121_UserDataNotSecured_Tx_Length0</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6505</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6564</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00079</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE and Follow_Up TLV User Data configuration is set to
        TRUE, the Time Master shall send a Follow_Up, which contains an AUTOSAR Sub-TLV: UserData.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01115_UserDataNotSecured_Tx</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01121_UserDataNotSecured_Tx_Length0</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6506</srcid><srcstatus/><internalId>1003</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6565</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00081</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: UserData shall be read from the current incoming message consistently.
        (RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01114_UserDataSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1886</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01116_UserDataNotSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8839</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8857</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8894</srcid><srcstatus/><internalId>1175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00082</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: UserData shall be written to the next outgoing message consistently.
        (RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6507</srcid><srcstatus/><internalId>1004</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6566</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00084</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: OFS has a multiplicity of 16 and can either be
        CRC protected (OFS Secured) or not (OFS Not Secured).(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6742</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00085</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The element OfsTimeDomain of the AUTOSAR Sub-TLV: OFS shall contain the Offset Time Domain
        identifier, which is in a range between 16 and 31.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Note: Compared to CAN and FlexRay, Ethernet does need any optimization on payload bytes
        on bit-level.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6699</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00086</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE and TSynTLVFollowUpOFSSubTLV is set to TRUE, the Time
        Master shall send a Follow_Up, which contains at least one AUTOSAR Sub-TLV: OFS.
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6580</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00088</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The User Data of the AUTOSAR Sub-TLV:OFS shall be read from an incoming message consistently.
        (RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01222_OfsNotSecured_NotValidated</srcid><srcstatus/><internalId>1910</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01229_OfsSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1918</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01229_OfsNotSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1919</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01231_OfsNotSecured_Ignored_Crc</srcid><srcstatus/><internalId>1921</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9491</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00089</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The User Data of the AUTOSAR Sub-TLV: OFS shall be written to an outgoing message
        consistently.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6737</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00003</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Sync module shall use for latency calculation
        • either static Pdelay values (GlobalTimePropagationDelay)
        • or runtime-based values calculated by Pdelay_Req, Pdelay_Resp, Pdelay_Resp_Follow_Up
        according to Figure 5.1, depending on configuration of GlobalTimeTxPdelayReqPeriod
        (RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00140</srcid><srcstatus/><internalId>48</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00141</srcid><srcstatus/><internalId>49</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00154</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxPdelayReqPeriod is not equal to 0 and if the Pdelay latency calculation
        result exceeds PdelayLatencyThreshold, the measured value shall be discarded and the
        previous value shall be kept.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_PdelayEqualsThreshold</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01251_PdelayExceedsThreshold</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11433</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00004</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        A Pdelay_Resp timeout or incomplete Pdelay protocol shall stop the latency
        calculation algorithm. In such cases, the device shall use the latest
        successful calculated latency value.
        (RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
        Note: A timeout is detected, when sending the next subsequent Pdelay_Req before receiving
        the Pdelay_Resp resp. Pdelay_Resp_Follow_Up belonging to the Pdelay_Req before.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_PdelayRespTimeout</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12615</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00164</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time Master and Time Slave shall observe the Pdelay timeout as given by
        PdelayRespAndRespFollowUpTimeout, if a Pdelay_Req has been transmitted
        (waiting for Pdelay_Resp) or if a Pdelay_Resp has been received
        (waiting for Pdelay_Resp_Follow_Up). A value of 0 deactivates this timeout observation.
        (RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
        AUTOSAR 4.3.0: If the reception timeout occurs, any received Pdelay_Resp resp
        Pdelay_Resp_Follow_Up shall be ignored, until a new Pdelay_Req has been
        sent.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00164.PdelayReqTimeout</srcid><srcstatus/><internalId>44</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00164.PdelayRespTimeout</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00164.TimeoutDeactivated</srcid><srcstatus/><internalId>46</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00164.PdelayReqTimeout</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time Master and Time Slave shall observe the Pdelay timeout as given by
        PdelayRespAndRespFollowUpTimeout, if a Pdelay_Req has been transmitted
        (waiting for Pdelay_Resp). A value of 0 deactivates this timeout observation.
        (RS_TS_20048, RS_TS_20051)
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01249_PdelayReqTimeout</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12757</srcid><srcstatus/><internalId>1387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00164.PdelayRespTimeout</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time Master and Time Slave shall observe the Pdelay timeout as given by
        PdelayRespAndRespFollowUpTimeout, if a Pdelay_Resp has been received
        (waiting for Pdelay_Resp_Follow_Up).
        (RS_TS_20048, RS_TS_20051)
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_PdelayRespTimeout</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13037</srcid><srcstatus/><internalId>1413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15818</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00164.TimeoutDeactivated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        A value of 0 deactivates this timeout observation.
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01251_PdelayRespTimeoutDeactivated</srcid><srcstatus/><internalId>2094</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12602</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00210</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If a reception timeout occurs (refer to [PRS_TS_00164]), any received Pdelay_Resp resp
        Pdelay_Resp_Follow_Up shall be ignored, until a new Pdelay_Req has been sent.
        (RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_PdelayRespTimeout</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12614</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00140</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxPdelayReqPeriod equals 0, Time Master and Time Slave shall not measure the
        propagation delay. The Time Slave shall use a static value GlobalTimePropagationDelay
        as propagation delay instead.(RS_TS_20066)
      </description>
      <comment>
        Note: Since GlobalTimeTxPdelayReqPeriod is ECU specific, neither a TimeMaster nor all Time
        Slaves have to measure the propagation delay. Global Time Synchronization in AUTOSAR does
        yet not define dynamic reconfiguration or backup strategies that will reassign the role as
        Time Master, therefore propagation delay measurements make currently no sense for a Time
        Master(although a Time Master shall be able to handle Pdelay_Req initiated by a Time Slave).
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11557</srcid><srcstatus/><internalId>1327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01065_SlaveStaticPdelay</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01066_MasterStaticPdelay</srcid><srcstatus/><internalId>2038</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01067_Slave_IgnorePdelayResp</srcid><srcstatus/><internalId>2039</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01068_Slave_IgnorePdelayFUP</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01069_Slave_UsesStaticPdelay</srcid><srcstatus/><internalId>2041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00141</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If GlobalTimeTxPdelayReqPeriod is greater than 0, Time Master and Time Slave shall
         cyclically measure the propagation delay using Pdelay_Req, Pdelay_Resp,
         Pdelay_Resp_Follow_Up as defined in [1, IEEE802.1 AS] chapter 11.1.2
         "Propagation delay measurement".(RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01040_HW_Enabled_Slave_PdelayReq_Periodically</srcid><srcstatus/><internalId>1984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12716</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00149</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxPdelayReqPeriod is greater than 0, Time Master and Time Slave shall
        cyclically measure the propagation delay only on that Time Domain with the lowest
        Time Domain ID and shall use this value to adjust all corresponding Time Bases.
        (RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
        Note: There is no need to measure the propagation delay for all Time Domains, because the
        same value is expected. This requirement ensures also the usage of Time Domain 0 for Pdelay,
        to be compatible to [1, IEEE 802.1 AS].
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</srcid><srcstatus/><internalId>767</internalId></linkedfrom><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnLowestTDid</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00142</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxPdelayReqPeriod is greater than 0, GlobalTimePropagationDelay shall be
        used as default value for the propagation delay, until first valid propagation delay has
        been measured.(RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11559</srcid><srcstatus/><internalId>1329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00011</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxPdelayReqPeriod: is greater than 0, Time Master and Time Slave
        shall periodically transmit Pdelay_Req for latency calculation with the cycle
        GlobalTimeTxPdelayReqPeriod as defined in [1, IEEE 802.1 AS] chapter 11.1.2
        "Propagation delay measurement".
        (RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
        GlobalTimePdelayRespEnable allows disabling of Pdelay_Resp and Pdelay_Resp_Follow_Up,
        if no Pdelay_Req is expected to be received, i.e. for the Time Master,
        if all Time Slaves have set GlobalTimeTxPdelayReqPeriod to 0 or
        for any Time Slave if the Time Master has set GlobalTimeTxPdelayReqPeriod to 0.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01040_HW_Enabled_Slave_PdelayReq_Periodically</srcid><srcstatus/><internalId>1984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12715</srcid><srcstatus/><internalId>1380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00012</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimePdelayRespEnable: is set to TRUE, TimeMaster and TimeSlave
        shall react to Pdelay_Req by transmitting Pdelay_Resp for latency
        calculation as defined in [1, IEEE 802.1 AS] chapter 11.1.2
        "Propagation delay measurement".
        (RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
        For that, the following sequence shall be applied:
        1. Get a free transmission buffer via EthIf_ProvideTxBuffer()
        2. Activate the time stamping via EthIf_EnableEgressTimeStamp() if
           EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018 : ) is set to TRUE
        3. Trigger transmit request via EthIf_Transmit()
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master_2</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5987</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6102</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14865</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15007</srcid><srcstatus/><internalId>1537</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00143</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimePdelayRespEnable is set to FALSE, Pdelay_Resp and Pdelay_Resp_Follow_Up
        shall be omitted.(RS_TS_20066)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01985_MasterReceiveSwtPdelayReqFrames_PdelayRespDisabled</srcid><srcstatus/><internalId>1963</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01217_PdelayRespDisabled</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13014</srcid><srcstatus/><internalId>1409</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13055</srcid><srcstatus/><internalId>1415</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16584</srcid><srcstatus/><internalId>1627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00050</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall support the transmission of Sync and Follow_Up
        according as well as the transmission and reception of Pdelay_Req,
        Pdelay_Resp and Pdelay_Resp_Follow_Up.
        (RS_TS_20047, RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</srcid><srcstatus/><internalId>767</internalId></linkedfrom><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00141</srcid><srcstatus/><internalId>49</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00012</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00018</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_000104</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00200</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Master.SendSyncFU</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00016</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall periodically transmit Sync with the cycle GlobalTimeTxPeriod
        as defined in [1, IEEE 802.1 AS] chapter 11.1.3 "Transport of time-synchronization
        information", if the GLOBAL_TIME_BASE bit within the timeBaseStatus,
        which is read from the corresponding Time Base, is set and GlobalTimeTxPeriod is not 0.
        (RS_TS_20047, RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00016_TxPeriodZero</srcid><srcstatus/><internalId>57</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01082_GlobalTimeBaseBitNotSet_Tx</srcid><srcstatus/><internalId>1856</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01204_MasterSendsSyncWithCorrectPeriod</srcid><srcstatus/><internalId>2055</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01207_SecHi</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01208</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01209</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01209_NOK</srcid><srcstatus/><internalId>2061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12306</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00016_TxPeriodZero</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall periodically not transmit Sync with the cycle GlobalTimeTxPeriod
        as defined in [1, IEEE 802.1 AS] chapter 11.1.3 "Transport of time-synchronization
        information", if GlobalTimeTxPeriod is 0 or if the GLOBAL_TIME_BASE bit withing
        the timeBaseStatus is set.
        (RS_TS_20047, RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01083_GetCurrentTimeFailed_Tx</srcid><srcstatus/><internalId>1857</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01095_StatusNotSecured_CrcNotSupported_TxPeriodZero</srcid><srcstatus/><internalId>1869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12305</srcid><srcstatus/><internalId>1348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00018</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The preciseOriginTimestamp as calculated above, shall be used in the transmission of the
        Follow_Up as defined in [1, IEEE 802.1 AS] chapter 11.1.3
        "Transport of time-synchronization information".(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5563</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00186</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If multiple frames are triggered at the same time, the frames shall be sent in the
        following order:
          1. Sync
          2. Follow_Up
          3. Pdelay_Req
          4. Pdelay_Resp, Pdelay_Resp_Follow_Up
        (RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12873</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15485</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01993_MasterReceiveSwtPdelayReqFrames</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01256_SwtTransmit_FrameOrder</srcid><srcstatus/><internalId>2109</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00092</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If MessageCompliance is set to FALSE, a Time Master shall add an AUTOSAR TLV to the
         Follow_Up frame.(RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00091</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If MessageCompliance is set to FALSE, CRC_SUPPORT shall be considered.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00093</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured

        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
        Replaced and covered by R22-11 requirement.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00094</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The SGW value(Time Gateway synchronization status) shall be mapped to the Status element
        of the AUTOSAR Sub-TLV: Status resp. the AUTOSAR Sub-TLV: OFS. If the SYNC_TO_GATEWAY
        is set, the SGW value shall be SyncToSubDomain. Otherwise, it shall be SyncToGTM.
        (RS_TS_20052, RS_TS_20054)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00094_SyncToGatewaySet</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00094_SyncToGatewayNOTSet</srcid><srcstatus/><internalId>65</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6729</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00094_SyncToGatewaySet</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The SGW value(Time Gateway synchronization status) shall be mapped to the Status element
        of the AUTOSAR Sub-TLV: Status resp. the AUTOSAR Sub-TLV: OFS. If the SYNC_TO_GATEWAY
        is set, the SGW value shall be SyncToSubDomain.
        (RS_TS_20052, RS_TS_20054)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</srcid><srcstatus/><internalId>1851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6776</srcid><srcstatus/><internalId>1034</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00094_SyncToGatewayNOTSet</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The SGW value(Time Gateway synchronization status) shall be mapped to the Status element
        of the AUTOSAR Sub-TLV: Status resp. the AUTOSAR Sub-TLV: OFS. If the SYNC_TO_GATEWAY
        is not set, the SGW value shall be SyncToGTM.
        (RS_TS_20052, RS_TS_20054)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01080_StatusNotSecured_SyncToGatewayBitNotSet_Tx</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6781</srcid><srcstatus/><internalId>1035</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00095</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master of an Offset Time Base shall send the "second" part of the Offset Time Base
        value via the OfsTimeSec element of the corresponding AUTOSAR Sub-TLV: OFS and the
        "nanosecond" part of the Offset Time Base value via the OfsTimeNSec element of the
        corresponding AUTOSAR Sub-TLV: OFS
        (RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6682</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00097</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The DataID shall be calculated as: DataID = DataIDList[Follow_Up.sequenceId mod 16],
        where DataIDList is given by configuration for the Follow_Up.(RS_TS_20061)
      </description>
      <comment>
        Note: A specific DataID out of a predefined DataIDList ensures the identification of data
        elements of Time Synchronization messages.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00099</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00100</srcid><srcstatus/><internalId>72</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00182</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If applying the CRC calculation on multibyte values, the byte order shall be such,
        that the byte containing the most significant bit of the value shall be used first.
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7981</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00184</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If applying the CRC calculation on multibyte message data, the byte order shall be in
        ascending order of the octets, i.e., the octet with the lowest offset shall be used first.
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7982</srcid><srcstatus/><internalId>1128</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00098</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxCrcSecured is CRC_SUPPORTED, the Time Master shall write the contents of
        CrcTimeFlagsTxSecured to CRC_Time_Flags acc. to the following rule.
        (RS_TS_20061)

                                        EthTSynCrcTimeFlagsTxSecured contents:
        CRC_Time_Flags            Follow_Up                                 Follow_Up
                                  Message Header                            Message Field

        BitMask 0x01              EthTSynCrcMessageLength                   N.A.
                                  (ECUC_EthTSyn_00040 : )
        BitMask 0x02              EthTSynCrcDomainNumber                    N.A.
                                  (ECUC_EthTSyn_00041 : )
        BitMask 0x04              EthTSynCrcCorrectionField                 N.A.
                                  (ECUC_EthTSyn_00042 : )
        BitMask 0x08              EthTSynCrcSourcePortIdentity              N.A.
                                  (ECUC_EthTSyn_00043 : )
        BitMask 0x10              EthTSynCrcSequenceId                      N.A.
                                  (ECUC_EthTSyn_00044 : )
        BitMask 0x20              N.A.                             EthTSynCrcPreciseOriginTimestamp
                                                                   (ECUC_EthTSyn_00045 : )
        BitMask 0x40              N.A.                                      N.A.
        BitMask 0x80              N.A.                                      N.A.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00099</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00100</srcid><srcstatus/><internalId>72</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00099</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If CrcTimeFlagsTxSecured is supported, the Time Master shall calculate the CRC for
        CRC_Time_0 by considering the contents of CRC_Time_Flags itself, the contents of the
        dependent fields as defined in CrcTimeFlagsTxSecured acc. to the rule in the table below
        and the DataID. The data elements used for the calculation of the CRC shall apply the
        following order:
          1. the value of CRC_Time_Flags
          2. the domainNumber inside the Follow_Up Message Header, if CRC_Time_Flags contains BitMask 0x02
          3. the sourcePortIdentity inside the Follow_Up Message Header, if CRC_Time_Flags contains BitMask 0x08
          4. the preciseOriginTimestamp inside the Follow_Up Message Field, if CRC_Time_Flags contains BitMask 0x20
          5. the DataID
          (RS_TS_20061)
      </description>
      <comment>
        Note: CRC_Time_Flags is having the same value like the configuration item
        CrcTimeFlagsTxSecured, whereas the resulting CRC of the dependent items remains network
        wide unchanged.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01072_TimeSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0050_ICV_SWT_No_ICV</srcid><srcstatus/><internalId>2293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9566</srcid><srcstatus/><internalId>1232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00100</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxCrcSecured is set to CRC_SUPPORTED, the Time Master shall calculate the CRC
        for CRC_Time_1 by considering the contents of CRC_Time_Flags itself, the contents of the
        dependent fields as defined in CrcTimeFlagsTxSecured acc. to the rule in the table below
        and the DataID. The data elements used for the calculation of the CRC shall apply the
        following order:
          1. the value of CRC_Time_Flags
          2. the messageLength inside the Follow_Up Message Header, if CRC_Time_Flags contains BitMask 0x01
          3. the correctionField inside the Follow_Up Message Header, if CRC_Time_Flags contains BitMask 0x04
          4. the sequenceId inside the Follow_Up Message Header, if CRC_Time_Flags contains BitMask 0x10
          5. the DataID
        (RS_TS_20061)
      </description>
      <comment>
        Note: CRC_Time_Flags has the same value as the configuration item CrcTimeFlagsTxSecured.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01072_TimeSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9591</srcid><srcstatus/><internalId>1234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00101</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxCrcSecured is set to CRC_SUPPORTED, the Time Master shall calculate the CRC
        for CRC_STATUS by considering the contents of Status and DataID(in this order).(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01073_TimeSecured_CrcSupported_NoFollowUpTimeSubTlv_Tx</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9749</srcid><srcstatus/><internalId>1242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00102</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxCrcSecured is set to CRC_SUPPORTED, the Time Master shall calculate the CRC
        for CRC_UserData by considering the contents of UserDataLength, UserByte_0, UserByte_1,
        UserByte_2 and DataID (in this order).(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9632</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00103</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeTxCrcSecured is set to CRC_SUPPORTED, the Time Master shall calculate the CRC
        for CRC_OFS by considering the contents of OfsTimeDomain, OfsTimeSec, OfsTimeNSec, Status,
        UserDataLength, UserByte_0, UserByte_1, UserByte_2 and DataID(in this order).
        (RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6748</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00187</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter (sequenceId) of a Sync and Pdelay_Req
        message shall be initialized with 0.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00187_Sync</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00187_PdelayReq</srcid><srcstatus/><internalId>78</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00187_Sync</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter (sequenceId) of a Sync message shall be initialized with 0.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01260_MasterSendsIncrementedSC</srcid><srcstatus/><internalId>2102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12323</srcid><srcstatus/><internalId>1351</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12440</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00187_PdelayReq</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter (sequenceId) of a Pdelay_Req message shall be initialized with 0.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5731</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14558</srcid><srcstatus/><internalId>1509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00188</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Peer Delay Initiator shall increment the Sequence Counter of
        a Pdelay_Req message by 1 on each transmission request for a Pdelay_Req message.
        The Sequence Counter shall wrap around at 65535 to 0 again.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01261_SlaveSendsIncrementedSC</srcid><srcstatus/><internalId>2103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5727</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14554</srcid><srcstatus/><internalId>1508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00189</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall increment the Sequence Counter of a Sync
        message by 1 on each transmission request for a Sync message of a given Time
        Domain. The Sequence Counter shall wrap around at 65535 to 0 again.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01260_MasterSendsIncrementedSC</srcid><srcstatus/><internalId>2102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5345</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12319</srcid><srcstatus/><internalId>1350</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12436</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13918</srcid><srcstatus/><internalId>1466</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14168</srcid><srcstatus/><internalId>1479</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00190</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall set the Sequence Counter (sequenceId)
        value for a Follow_Up message to the Sequence Counter (sequenceId) value of the
        corresponding Sync message.c(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5478</srcid><srcstatus/><internalId>933</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14351</srcid><srcstatus/><internalId>1492</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00191</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Peer Delay Responder shall set the Sequence Counter (sequenceId)
        value for a Pdelay_Resp and Pdelay_Resp_Follow_Up message to
        the Sequence Counter (sequenceId) value of the corresponding Pdelay_Req message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00191_PdelayResp</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00191_PdelayRespFup</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00191_PdelayResp</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Peer Delay Responder shall set the Sequence Counter (sequenceId)
        value for a Pdelay_Resp message to the Sequence Counter (sequenceId) 
        value of the corresponding Pdelay_Req message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5944</srcid><srcstatus/><internalId>957</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14783</srcid><srcstatus/><internalId>1521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00191_PdelayRespFup</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Peer Delay Responder shall set the Sequence Counter (sequenceId)
        value for a Pdelay_Resp_Follow_Up message to the Sequence Counter (sequenceId) 
        value of the corresponding Pdelay_Req message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6160</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14963</srcid><srcstatus/><internalId>1534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_000104</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message, the Time Synchronization module
        shall assemble the message as follows:
          1. If Sync: Calculate Message Header
          2. If Follow_Up: Calculate Follow_Up.preciseOriginTimestamp and Message Header inclusive correctionField
          3. If Follow_Up: Calculate IEEE TLV
          4. If Follow_Up: Calculate AUTOSAR TLV (configuration dependent)
        For 4: Calculate CRC (configuration dependent) and copy all data to the appropriate position
        within the related message(RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_000104</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00023</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Slave shall support the reception of Sync and Follow_Up
        according [1, IEEE 802.1 AS] as well as the transmission and
        reception of Pdelay_Req, Pdelay_Resp and Pdelay_Resp_Follow_Up,
        [PRS_TS_00140],[PRS_TS_00141],[PRS_TS_00004].
        (RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00200</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00128</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00138</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00025</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>2</version>
      <description>
        For each configured Time Slave the Ethernet module shall observe the reception timeout
        GlobalTimeFollowUpTimeout between the Sync and its Follow_Up. If no Follow_Up received
        before the reception timeout expires, the Time Slave shall
        reset the sequence (i.e. waiting for a new Sync).
        A value of 0 deactivates this timeout observation.(RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
        Note: A timeout is detected when receiving the next subsequent Sync before receiving the
        Follow_Up belonging to the Sync before. The general timeout monitoring for the Time Base
        update is located in the Implementation of Time Synchronization and not in the provider modules.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_Slave_GlobalTimeFollowUpTimeout</srcid><srcstatus/><internalId>1972</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12566</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00105</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE, RxCrcValidated shall be considered.
        (RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00105</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00106</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE, a Time Slave shall check if an AUTOSAR TLV in the
        Follow_Up frame exists.(RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01078_StatusNotSecured_CrcNotValidated_Rx</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8724</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00107</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured

        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00108</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured

        EthTSynRxCrcValidated             CRC_IGNORED
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00109</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall be validated
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured

        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall not be validated
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00211</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to TRUE the SYNC_TO_GATEWAY bit
        within timeBaseStatus shall be set to zero.(RS_TS_20054)
      </description>
      <comment/>
      <releases>
       <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9784</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00156</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        For a Synchronized Time Base and if MessageCompliance is set to FALSE the SGW value
        (Time Gateway synchronization status) shall be retrieved from the Status element of the
        AUTOSAR Sub-TLV: Status if an AUTOSAR TLV in the Follow_Up message exists and if this
        Sub-TLV is part of the AUTOSAR TLV. If the SGW value is set to SyncToSubDomain,
        the SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to one. Otherwise,
        it shall be set to zero.(RS_TS_20052)
      </description>
      <comment>
        Note: Since a Global Time Master will not set the Time Gateway synchronization status to
        SYNC_TO_GATEWAY it is superfluous to transmit an AUTOSAR Sub-TLV: Status in this case.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00156_SgwIsSyncToSubDomain</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00156_SgwIsNOTSyncToSubDomain</srcid><srcstatus/><internalId>96</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00156_SgwIsSyncToSubDomain</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        For a Synchronized Time Base and if MessageCompliance is set to FALSE the SGW value
        (Time Gateway synchronization status) shall be retrieved from the Status element of the
        AUTOSAR Sub-TLV: Status if an AUTOSAR TLV in the Follow_Up message exists and if this
        Sub-TLV is part of the AUTOSAR TLV. If the SGW value is set to SyncToSubDomain,
        the SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to one(RS_TS_20052)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01085_TimeStatusUserDataSecured_CrcValidated_EqualCrcRx</srcid><srcstatus/><internalId>1859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9078</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9156</srcid><srcstatus/><internalId>1201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00156_SgwIsNOTSyncToSubDomain</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        For a Synchronized Time Base and if MessageCompliance is set to FALSE the SGW value
        (Time Gateway synchronization status) shall be retrieved from the Status element of the
        AUTOSAR Sub-TLV: Status if an AUTOSAR TLV in the Follow_Up message exists and if this
        Sub-TLV is part of the AUTOSAR TLV. If the SGW value is not set to SyncToSubDomain,
        the SYNC_TO_GATEWAY bit within timeBaseStatus shall be zero.(RS_TS_20052)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01079_StatusNotSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1853</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9070</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9147</srcid><srcstatus/><internalId>1200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00212</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE and if an AUTOSAR Sub-TLV: Status in the Follow_Up message does not exist,
        the SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to zero.(RS_TS_20054)
      </description>
      <comment/>
      <releases>
       <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9787</srcid><srcstatus/><internalId>1246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00213</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE and if an AUTOSAR TLV in the Follow_Up message exists the SGW value
        (Time Gateway synchronization status) shall be retrieved from the Status element of each
        AUTOSAR Sub-TLV: OFS that is part of the AUTOSAR TLV. If the SGW value is set to SyncToSubDomain, the
        SYNC_TO_GATEWAY bit within timeBaseStatus shall be set to one. Otherwise, it
        shall be set to zero.(RS_TS_20054)
      </description>
      <comment/>
      <releases>
       <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9516</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00110</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Time Slave of an Offset Time Base shall calculate the Offset
        Time Base from the OfsTimeSec element of the corresponding AUTOSAR Sub-TLV:
        OFS and the OfsTimeNSec element of the corresponding AUTOSAR Sub-TLV: OFS.
        (RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9442</srcid><srcstatus/><internalId>1222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00112</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The DataID shall be calculated as: DataID = DataIDList[Follow_Up.sequenceId mod 16],
        where DataIDList is given by configuration for the Follow_Up.(RS_TS_20061)
      </description>
      <comment>
        Note: A specific DataID out of a predefined DataIDList ensures the identification of data
        elements of Time Synchronization messages.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00113</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00114</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00183</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If applying the CRC calculation on multibyte values, the byte order shall be such that the
        byte containing the most significant bit of the value shall be used first.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01075_TimeSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL_NoSubTLV</srcid><srcstatus/><internalId>2251</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9723</srcid><srcstatus/><internalId>1240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00185</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If applying the CRC calculation on multibyte message data, the byte order shall be in
        ascending order of the octets, i.e., the octet with the lowest offset shall be used first.
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01075_TimeSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL_NoSubTLV</srcid><srcstatus/><internalId>2251</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9724</srcid><srcstatus/><internalId>1241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00157</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
         the CRC as defined in CrcFlagsRxValidated acc. to the following rule.(RS_TS_20061)
                                          Validate if EthTSynCrcFlagsRxValidated element is set to TRUE:
        Element                           Follow_Up Message Header          Follow_Up Message Field
        EthTSynCrcMessageLength           messageLength                     N.A.
        (ECUC_EthTSyn_00051 : )
        EthTSynCrcDomainNumber            domainNumber                      N.A.
        (ECUC_EthTSyn_00052 : )
        EthTSynCrcCorrectionField         correctionField                   N.A.
        (ECUC_EthTSyn_00053 : )
        EthTSynCrcSourcePortIdentity      sourcePortIdentity                N.A.
        (ECUC_EthTSyn_00054 : )
        EthTSynCrcSequenceId              sequenceId                        N.A.
        (ECUC_EthTSyn_00055 : )
        EthTSynCrcPreciseOriginTimestamp  N.A.                              preciseOriginTimestamp
        (ECUC_EthTSyn_00056 : )
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00113</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00114</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00113</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
         the CRC for CRC_Time_0 by considering the contents of CRC_Time_Flags itself, the contents
         of the dependent fields as defined in CrcFlagsRxValidated acc. to the rule in the table
         below and the DataID. The data elements used for the calculation and thus validation of
         the CRC shall apply the following order:
           1. the value of CRC_Time_Flags
           2. the domainNumber inside the Follow_Up Message Header, if CrcDomainNumber is set to TRUE
           3. the preciseOriginTimestamp inside the Follow_Up Message Field, if CrcPreciseOriginTimestamp is set to TRUE
           4. the DataID (refer to [PRS_TS_00112])
           5. the sourcePortIdentity inside the Follow_Up Message Header, if CrcSourcePortIdentity is set to TRUE
         (RS_TS_20061)
                                            For CRC_Time_0 verification required contents:
        If EthTSynCrcFlagsRxValidated       Follow_Up                                 Follow_Up
        element is set to TRUE:             Message Header                            Message Field

        EthTSynCrcMessageLength             N.A.                                      N.A.
        (ECUC_EthTSyn_00051 : )
        EthTSynCrcDomainNumber              domainNumber                              N.A.
        (ECUC_EthTSyn_00052 : )
        EthTSynCrcCorrectionField           N.A.                                      N.A.
        (ECUC_EthTSyn_00053 : )
        EthTSynCrcSourcePortIdentity        sourcePortIdentity                        N.A.
        (ECUC_EthTSyn_00054 : )
        EthTSynCrcSequenceId                N.A.                                      N.A.
        (ECUC_EthTSyn_00055 : )
        EthTSynCrcPreciseOriginTimestamp    N.A.                             preciseOriginTimestamp
        (ECUC_EthTSyn_00056 : )
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01075_TimeSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01076_TimeSecured_CrcValidated_ThreeFlags_Rx</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01099_TimeSecured_CrcValidated_CrcFlagsFalse_Rx</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01121_InvalidSeqNr_SyncFUp</srcid><srcstatus/><internalId>1894</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL_NoSubTLV</srcid><srcstatus/><internalId>2251</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED_NoSubTLV</srcid><srcstatus/><internalId>2255</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9567</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9710</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00114</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
        the CRC for CRC_Time_1 by considering the contents of CRC_Time_Flags itself, the contents
        of the dependent fields as defined in CrcFlagsRxValidated acc. to the rule in the table
        below and the DataID. The data elements used for the calculation and thus validation of
        the CRC shall apply the following order:
          1. the value of CRC_Time_Flags
          2. the messageLength inside the Follow_Up Message Header, if CrcMessageLength is set to TRUE
          3. the correctionField inside the Follow_Up Message Header, if CrcCorrectionField is set to TRUE
          4. the sequenceId inside the Follow_Up Message Field, if CrcSequenceId is set to TRUE
          5. the DataID (refer to [PRS_TS_00112])
        (RS_TS_20061)
                                            For CRC_Time_1 verification required contents:
        If EthTSynCrcFlagsRxValidated       Follow_Up                                 Follow_Up
        element is set to TRUE:             Message Header                            Message Field

        EthTSynCrcMessageLength             messageLength                             N.A.
        (ECUC_EthTSyn_00051 : )
        EthTSynCrcDomainNumber              N.A.                                      N.A.
        (ECUC_EthTSyn_00052 : )
        EthTSynCrcCorrectionField           correctionField                           N.A.
        (ECUC_EthTSyn_00053 : )
        EthTSynCrcSourcePortIdentity        N.A.                                      N.A.
        (ECUC_EthTSyn_00054 : )
        EthTSynCrcSequenceId                sequenceId                                N.A.
        (ECUC_EthTSyn_00055 : )
        EthTSynCrcPreciseOriginTimestamp    N.A.                                      N.A.
        (ECUC_EthTSyn_00056 : )
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01075_TimeSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01076_TimeSecured_CrcValidated_ThreeFlags_Rx</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01099_TimeSecured_CrcValidated_CrcFlagsFalse_Rx</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL_NoSubTLV</srcid><srcstatus/><internalId>2251</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9592</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9711</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00115</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
        the CRC for CRC_Status by considering the contents of Status and DataID (in this order).
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01085_TimeStatusUserDataSecured_CrcValidated_EqualCrcRx</srcid><srcstatus/><internalId>1859</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01087_StatusSecured_CrcValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1861</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9750</srcid><srcstatus/><internalId>1243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00116</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
        the CRC for CRC_UserData by considering the contents of UserDataLength, UserByte_0,
        UserByte_1, UserByte_2 and DataID (in this order).
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00116_Validated</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00116_Optional</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00116_Validated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
        the CRC for CRC_UserData by considering the contents of UserDataLength, UserByte_0,
        UserByte_1, UserByte_2 and DataID (in this order).
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01109_UserDataSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9201</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00116</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00116_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
        (TimeSecured, StatusSecured, UserDataSecured and OFSSecured SubTlvs)
        the CRC for CRC_UserData by considering the contents of UserDataLength, UserByte_0,
        UserByte_1, UserByte_2 and DataID (in this order).
        (RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_UserDataSecured_Optional</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00116</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00117</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, the Time Slave shall validate
        the CRC for CRC_OFS by considering the contents of OfsTimeDomain, OfsTimeSec, OfsTimeNSec,
        Status, UserDataLength, UserByte_0, UserByte_1, UserByte_2 and DataID (in this order).
        (RS_TS_20061, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00117_Validated</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00117_Optional</srcid><srcstatus/><internalId>112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00117_Validated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_VALIDATED, the Time Slave shall validate
        the CRC for CRC_OFS by considering the contents of OfsTimeDomain, OfsTimeSec, OfsTimeNSec,
        Status, UserDataLength, UserByte_0, UserByte_1, UserByte_2 and DataID (in this order).
        (RS_TS_20061, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9385</srcid><srcstatus/><internalId>1218</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01234_OfsSecured_Validated_NotEqualCrc</srcid><srcstatus/><internalId>1924</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00117</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00117_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If RxCrcValidated is set to CRC_OPTIONAL, the Time Slave shall validate(TimeSecured,
        StatusSecured, UserDataSecured and OFSSecured SubTlvs)
        the CRC for CRC_OFS by considering the contents of OfsTimeDomain, OfsTimeSec, OfsTimeNSec,
        Status, UserDataLength, UserByte_0, UserByte_1, UserByte_2 and DataID (in this order).
        (RS_TS_20061, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9386</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01235_OfsSecured_Optional_EqualCrc</srcid><srcstatus/><internalId>1925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00117</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00192</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the Sequence Counter (sequenceId) of a received Pdelay_Resp message does not match
        the Sequence Counter (sequenceId) of the corresponding Pdelay_Req message,
        the Peer Delay Initiator shall ignore the Pdelay_Resp message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01054_SlaveLostPdelayResp</srcid><srcstatus/><internalId>2027</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9881</srcid><srcstatus/><internalId>1252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00193</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Peer Delay Initiator shall ignore a Pdelay_Resp message, if
        the Pdelay_Resp message has not been received within the timeout interval
        GlobalTimePdelayRespAndRespFollowUpTimeout.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01249_PdelayReqTimeout</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12616</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00194</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the Sequence Counter (sequenceId) of a received Pdelay_Resp_Follow_Up
        message does not match the Sequence Counter (sequenceId)
        of the transmitted Pdelay_Req message, the Peer Delay Initiator shall ignore the received
        Pdelay_Resp_Follow_Up message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01055_SlaveLostPdelayRespFUP</srcid><srcstatus/><internalId>2028</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10078</srcid><srcstatus/><internalId>1260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00195</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Peer Delay Initiator shall discard the content of a Pdelay_Resp message,
        if no Pdelay_Resp_Follow_Up message with a matching Sequence Counter (sequenceId)
        has been received within the timeout interval GlobalTimePdelayRespAndRespFollowUpTimeout.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_PdelayRespTimeout</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12617</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00196</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the Sequence Counter (sequenceId) of a received Follow_Up
        message does not match the Sequence Counter (sequenceId) of the previously received
        Sync message of the same Time Domain (domainNumber), the Time Slave
        shall ignore the Follow_Up message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01044_SyncFU_After_SyncFU</srcid><srcstatus/><internalId>2017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9790</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16038</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00197</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If no Follow_Up message with a matching Sequence Counter (sequenceId)
        and Time Domain (domainNumber) has been received within the timeout
        interval GlobalTimeFollowUpTimeout, the Time Slave shall discard the contents
        of the already received Sync message.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_Slave_GlobalTimeFollowUpTimeout</srcid><srcstatus/><internalId>1972</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12567</srcid><srcstatus/><internalId>1369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00198</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The Sequence Counter Jump Width between two consecutive Sync messages of the same Time Domain
        ((domainNumber) shall be greater than 0 and smaller than or equal to GlobalTimeSequenceCounterJumpWidth.
        Otherwise the Time Slave shall discard the Sync message.
        If GlobalTimeSequenceCounterJumpWidth is set to 0, the Time Slave shall not check the Sequence
        Counter Jump Width.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.SequenceCounter</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00199</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        A Time Slave shall check the Sequence Counter (sequenceId)
        of a received Sync message per Time Domain (domainNumber) against the configured
        value of GlobalTimeSequenceCounterJumpWidth, unless:
          * GlobalTimeSequenceCounterJumpWidth is configured to 0
          * or it is the first Sync message after Initialization
          * or it is the first Sync message after a Synchronization Timeout.(RS_TS_20061)
      </description>
      <comment>
      Note: A Synchronization Timeout means, that a Time Slave could not (re-)synchronize
            within a given timeout interval due to missing or invalid Sync or Follow_up messages.
      Note: There are scenarios when it makes sense to skip the check of the Sequence
            Counter Jump Width, e.g. at startup (Time Slaves start asynchronously to
            the Time Master) or after a message timeout to allow for Sequence Counter
            (re-)synchronization. In case of a timeout the error has been detected already by the
            timeout monitoring, there is no benefit in generating a subsequent error by the jump
            width check.
      Note: During Time Base update timeout the Sequence Counter validation will still discard
            messages with a Sequence Counter Jump Width being zero (i.e., stuck Sequence Counter).
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.SequenceCounter</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00200</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        While a Time Base Timeout is present (TIMEOUT bit set in Time Base synchronization status
        timeBaseStatus), Sync/Follow_up messages shall be discarded unless they are successfully
        validated (refer to [PRS_TS_00198]) in n consecutive Sync/Follow_up messagepairs
        (n is given by the parameter GlobalTimeSequenceCounterHysteresis).
        In such a scenario any valid message pair would cause the Time Slave to leave the Timeout state
        (refer to [PRS_TS_00199]) although the sequence counter is not incremented correctly.
        An additional hysteresis avoids this.(RS_TS_20061)
      </description>
      <comment>
        Note: [PRS_TS_00200] improves robustness against a scenario with a buggy master
        implementation or injection of invalid Time Master messages (Sequence Counter
        increments greater than GlobalTimeSequenceCounterJumpWidth).
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.SequenceCounter</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00118</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the Type of a Sub-TLV cannot be recognized at the receiver side, it shall be ignored and
        the next subsequent Sub-TLV shall be evaluated.(RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
        Note: The Length field of each Sub-TLV is always at the same position within each Sub-TLV.
        It will be used to jump over the unknown Sub-TLV to the next Type field.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01103_TimeSecuredAndStatusSecured_CrcValid_InvalidSubTlvType</srcid><srcstatus/><internalId>1874</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8956</srcid><srcstatus/><internalId>1184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00119</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If any of the following conditions is not met, a Time Slave shall
        discard a received Sync or Follow_Up message:
        1. Validation of Sequence Counter (sequenceId) is successful (refer to:
           [PRS_TS_00196], [PRS_TS_00197], [PRS_TS_00198], [PRS_TS_00199]).
        2. If Follow_Up: Follow_Up.TLV[AUTOSAR].Sub-TLV.Type matches depending
           on configuration of RxCrcValidated
        3. The Time Domain matches to the defined Time Domain range for each domainNumber resp.
           to the element OfsTimeDomain of the AUTOSAR Sub-TLV: OFS(configuration dependent)
        4. The Time Domain matches to one of the configured Time Domains
        5. If Follow_Up: The element OfsTimeNSec of the AUTOSAR Sub-TLV: OFS is
           within the allowed range of 0..999999999.
        6. If Follow_Up: All CRCs are successfully validated depending on the configuration
           of RxCrcValidated and CrcFlagsRxValidated
        (RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
        Replaced and covered by R22-11 requirement.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00119</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00120</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        For each received Time Synchronization message, the Time synchronization protocol shall
        disassemble the message after successful validation.
        (RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8235</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10222</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12949</srcid><srcstatus/><internalId>1403</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13033</srcid><srcstatus/><internalId>1411</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13075</srcid><srcstatus/><internalId>1417</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13109</srcid><srcstatus/><internalId>1422</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00053</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time measurement with Switches supports the use case "Time Aware Bridge with GTM as
        Management CPU" like shown in Figure Figure 5.4.(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</srcid><srcstatus/><internalId>1693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00054</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time measurement with Switches supports the use case "Time Aware Bridge with GTM not as
        Management CPU" like shown in Figure Figure 5.3.(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.BridgeWithGTMnotMgmCPU</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00055</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The path delay measurement will be done always as Port-to-Port measurement like specified
        in [1, IEEE 802.1 AS] chapter 11.1.2 Propagation delay measurement for the device external
        Ethernet path.(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.TransparentClock_PdelayReqTransmission</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.TransparentClock_PdelayCalculation</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00056</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        The inner delay of the Ethernet path (Residence Time) is determined at the time where Sync
        is received and transmitted, by using the message specific ingress and egress timestamps.
        (RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
        Note: This belongs to the fact, that the Residence Time might be discontinuous, depending on
        the current busload, while Sync messages are transmitted / received, the Switch HW
        architecture and the message forwarding method. A static delay measurement method for this
        part of the communication path might lead to an unprecise time measurement. Nevertheless,
        static Residence Time parameters are considered by this specification, to increase the
        performance while calculating the Global Time resp. the correctionField and the flexibility
        to support different Switch devices, such as Switches, which do not support time stamping
        on each ingress or egress port.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_UpdateCorrectionField</srcid><srcstatus/><internalId>1714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00057</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time measurement with Switches supporting the use case "Time Aware Bridge with GTM as
        Management CPU" following the given timestamping points like shown in Figure Figure 5.4
        and Figure Figure 5.5.(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_Transmit</srcid><srcstatus/><internalId>1703</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayRespFup_Transmit</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00058</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time measurement with Switches supporting the use case "Time Aware Bridge with GTM as
        Management CPU" considers the inner Switch delay by a modification of the correctionField
        as well as Pdelay timestamping for requestReceiptTimestamp and responseOriginTimestamp
        like shown in Figure 5.6. c(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
        Note: The calculation in Figure 5.6 shows an example Port selection as simplification.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayReq_SaveIngressTS</srcid><srcstatus/><internalId>1702</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveEgressTS</srcid><srcstatus/><internalId>1706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00166</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeUplinkToTxSwitchResidenceTime is set to 0, the Ethernet module shall ignore
        this parameter and measure the inner delay of the Switch egress Ethernet path
        (Uplink to Tx Residence Time (T3 - T2)) by using always the ingress (T2) and egress (T3)
        timestamp as given in 5.6.(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00167</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If GlobalTimeUplinkToTxSwitchResidenceTime isgreater than 0, the Ethernet module shall
        use this parameter as value for the inner delay of the Switch egress Ethernet path
        (Uplink to Tx Residence Time (T3 - T2)) instead of using the measurement method described
        in [PRS_TS_00166].(RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00059</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time measurement with Switches supporting the use case Time Aware Bridge with GTM not as
        Management CPU following the given timestamping points like shown in Figure 5.7 and Figure 5.8.
        (RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11303</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0047_PdelayBridge_Validation</srcid><srcstatus/><internalId>2194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00060</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        Time measurement with Switches supporting the use case Time Aware Bridge with GTM not as
        Management CPU considers the inner Switch delay by a modification of the correctionField
        as well as Pdelay timestamping for requestReceiptTimestamp and responseOriginTimestamp.
        (RS_TS_20048, RS_TS_20059) 
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11492</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0047_PdelayBridge_Validation</srcid><srcstatus/><internalId>2194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00207</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the Follow_Up message contains an AUTOSAR TLV, which contains a Sub-TLV:
        Time Secured it shall be checked, if the element CRC_Time_Flags contains BitMask 0x04
        (i.e., the content of correctionField is CRC protected). If this bit is set then
        the validation of the CRC_Time_1 element shall be done as follows:
        The CRC Validation shall be done as specified in section 5.6.3.2.3.
        The data elements used for the calculation and thus validation of the CRC shall
        be applied with the following order:
          1. the value of CRC_Time_Flags
          2. the length of the message inside the Follow_Up Message Header,
            if the element CRC_Time_Flags contains BitMask 0x01
          3. the correctionField inside the Follow_Up Message Header
          4. the CRCsequenceId inside the Follow_Up Message Header,
            if the element CRC_Time_Flags contains BitMask 0x10
          5. the DataID
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8699</srcid><srcstatus/><internalId>1163</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0003_ReceiveOnBridge_CRC</srcid><srcstatus/><internalId>2150</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0007_ReceiveOnBridge_CorrectionNotSet</srcid><srcstatus/><internalId>2154</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0008_ReceiveOnBridge_CorrectionSet_FlagsNotSet</srcid><srcstatus/><internalId>2155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00208</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the validation CRC validation of an AUTOSAR TLV fails,
        the Follow_Up message shall be dropped instead of being forwarded.
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16051</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0004_ReceiveOnBridge_CRC_NotEqual</srcid><srcstatus/><internalId>2152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.PRS_TS_00209</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If the validation CRC validation of an AUTOSAR TLV is successful,
        the correctionField shall be modified and the element CRC_Time inside the Sub-TLV:
        Time Secured shall be calculated according to the content of the CRC_Time_Flags element.
      </description>
      <comment>
        Since no validation is done for Crc_Time_0, it shall be just copied and forwarded
        Crc_Time_1 shall be recalculated based on the received SyncFUp frame and on the updated correction.
      </comment>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16126</srcid><srcstatus/><internalId>1599</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16758</srcid><srcstatus/><internalId>1635</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0003_ReceiveOnBridge_CRC</srcid><srcstatus/><internalId>2150</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0008_ReceiveOnBridge_CorrectionSet_FlagsNotSet</srcid><srcstatus/><internalId>2155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00168</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If rx_residence_time is set to 0, the Time Synchronization over Ethernet shall
        ignore this parameter and measure the inner delay of the Switch ingress
        Ethernet path(Rx to Uplink Residence Time (T5 - T4)) by using always
        the ingress (T4) and egress (T5) timestamp.
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage><needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov><containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
        If rx_residence_time is greater than 0, the Time Synchronization over Ethernet
        shall use this parameter as value for the inner delay of the Switch ingress
        Ethernet path(Rx to Uplink Residence Time (T5 - T4)) instead of using the
        measurement method.
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage><needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov><containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00169</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If rx_residence_time and tx_residence_time are set to 0, the Ethernet module
         shall ignore both parameter and measure the inner delay of the Switch
         ingress and egress Ethernet path(Rx to Uplink and Uplink to Tx Residence Time
         (T7 to T4)) by using always the ingress (T4) and egress (T7) timestamp.
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage><needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov><containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>EthTSyn.PRS_TS_00170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R21-11</source>
      <version>1</version>
      <description>
         If rx_residence_time and tx_residence_time are greater than 0, the Ethernet module
         shall use the sum of both parameter for the value of the inner delay of the Switch
         ingress and egress Ethernet path (Rx to Uplink and Uplink to Tx Residence Time
         (T7 to T4)) instead of using the measurement method
         Note: A separate Uplink to Tx Residence Time (T7 to TUplinkMmCpu) replacement
         by using tx_residence_time might be also possible,
         but is not considered by the scenario.
      </description>
      <releases>
        <release>AUTOSAR PRS R21-11</release>
      </releases>
      <needscoverage><needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov><containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

<!-- R22-11 ====================================================================== -->

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00220</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        All AUTOSAR Sub-TLVs shall have a Type field of length
        1 (byte) and a Length field of length 1 (byte).c(RS_TS_20072)
      </description>
      <comment>
        Rationale:
        Length field has been limited to 1 byte for resource efficiency.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00221</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV:Time Authenticated shall have a multiplicity of 5.c(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00222</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV:Time Authenticated shall not be CRC protected.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcNotSupported</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcSupported</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00223</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE and TLVFollowUpICVSubTLV is set to TRUE,
        the Time Master shall send a Follow_Up, which contains the
        AUTOSAR Sub-TLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5609</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16735</srcid><srcstatus/><internalId>1634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0042_MasterTransmitICV_FV0</srcid><srcstatus/><internalId>2284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00224</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        The length of the FV field of AUTOSAR Sub-TLV:Time
        Authenticated shall be configurable (GlobalTimeIcvFvLength).(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6801</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0042_MasterTransmitICV_FV0</srcid><srcstatus/><internalId>2284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00225</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        The length of the ICV field of AUTOSAR Sub-TLV:Time
        Authenticated shall be configurable (GlobalTimeIcvLength).(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6806</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0042_MasterTransmitICV_FV0</srcid><srcstatus/><internalId>2284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00226</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When ICV value does not fit within one AUTOSAR SubTLV:Time Authenticated, the Follow_Up message
        shall contain multiple AUTOSAR Sub-TLV:Time Authenticated with fragmented ICV value in
        each AUTOSAR SubTLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
        Rationale:
        Fragmentation of the ICV allows for bigger ICV value, because the length of the value
        field of a single AUTOSAR Sub-TLV is limited to 255 bytes (refer to [PRS_TS_00220]).
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7283</srcid><srcstatus/><internalId>1081</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00227</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,
        the Time Master shall fragment the ICV value into n (n is less than or equal to 5)
        fragments.
        • The length of first fragment shall not exceed (MAXLEN_SUBTLV_TIMEAUTH -
        LEN_SUBTLV_TIMEAUTH_PCI - LEN_FVL - FVL) bytes.
        • The length of the following fragments shall not exceed
        (MAXLEN_SUBTLV_TIMEAUTH - LEN_SUBTLV_TIMEAUTH_PCI) bytes.
        With MAXLEN_SUBTLV_TIMEAUTH = 216 (refer to the ’length’ field of
        AUTOSAR SubTLV:Time Authenticated in [PRS_TS_00063])
        LEN_SUBTLV_TIMEAUTH_PCI = 2 (length of ’ICV_Flags’ field + length of ’SequceNumber’ field)
        LEN_FVL (length of the optional ’FVL’ field) = 1, if bit [ICV with FV] of ICV_Flags is set.
        Otherwise set to 0.(RS_TS_20072)
      </description>
      <comment>
        Note: Follow_Up message (with 1500 bytes of payload) would allow for an ICV length
        of up to 1061 bytes.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6969</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7303</srcid><srcstatus/><internalId>1084</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00228</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,
        the Time Master shall put the ICV fragments according to their significance in
        ascending order into the AUTOSAR Sub-TLV:Time Authenticated, i.e.,
        the most significant fragment is contained in AUTOSAR Sub-TLV:Time
        Authenticated with sequence number 0.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7307</srcid><srcstatus/><internalId>1086</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00229</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        The Time Master shall set the sequence number of the first
        AUTOSAR Sub-TLV:Time Authenticated in Follow_Up message to 0. When
        Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated, the
        Time Master shall increment the sequence number by 1 in the consecutive AUTOSAR
        Sub-TLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7304</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00230</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,
        the Time Master shall reset the bit ’ICV in multiple SubTLV’ in ICV_Flags in
        AUTOSAR Sub-TLV:Time Authenticated with the last fragmented ICV value.
        All other AUTOSAR Sub-TLV:Time Authenticated in that Follow_Up message
        shall have the bit ’ICV in multiple Sub-TLV’ in ICV_Flags set.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7315</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7349</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00231</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,
        • AUTOSAR Sub-TLV:Time Authenticated with the sequence number equal to 0
        shall have the FV field included and the FVL field accordingly filled
        • AUTOSAR Sub-TLV:Time Authenticated with the sequence number not equal to
         shall not include the FV and FVL field(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00231_Seq0</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00231_SeqNot0</srcid><srcstatus/><internalId>155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00231_Seq0</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,
        • AUTOSAR Sub-TLV:Time Authenticated with the sequence number equal to 0
        shall have the FV field included and the FVL field accordingly filled
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7319</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00231_SeqNot0</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When Follow_Up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,
        • AUTOSAR Sub-TLV:Time Authenticated with the sequence number not equal to
         shall not include the FV and FVL field(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7334</srcid><srcstatus/><internalId>1089</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7346</srcid><srcstatus/><internalId>1090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00232</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        In the below cases,
        • Time Aware Bridge with GTM not as Management CPU
        • Time Aware Bridge with switch device running a firmware which provides the
        Switch Management and Global Time support
        the Time Master shall add the AUTOSAR Sub-TLV:Time Authenticated with
        correctionField having value ’0’. And the Time Aware Bridge shall update
        the AUTOSAR SubTLV:Time Authenticated with the updated value of correctionField.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11NotSupp</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00233</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        In the case of cascaded Time Aware Bridges, each bridge shall verify the ICV in
        the received AUTOSAR Sub-TLV:Time Authenticated. If ICV verification is successful,
        the bridge shall update the AUTOSAR Sub-TLV:Time Authenticated after updating the
        correctionField and CrcCorrectionField in received Follow_Up message.
        If ICV verification fails, the bridge shall discard the received Follow_Up message.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11NotSupp</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00234</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When (GlobalTimeIcvFvLength) is configured greater than 0, then the Time Master shall
        derive the FV and include the FV in the ICV generation.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6840</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6871</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7292</srcid><srcstatus/><internalId>1083</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00235</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When (GlobalTimeIcvFvLength) is configured greater than 0, then the Time Master
        shall add the FV, the length of FV (FVL) and set the ’FV in ICV’ flag of
        ICV_Flags in AUTOSAR Sub-TLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7067</srcid><srcstatus/><internalId>1062</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7070</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00236</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When (GlobalTimeIcvFvLength) is configured to 0, then the Time Master shall
        not add the FV, set the length of FV (FVL) to 0 and reset the ’FV in ICV’
        flag of ICV_Flags in AUTOSAR Sub-TLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7063</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0007_TxIcv_CRC_NOT_SUPPORTED</srcid><srcstatus/><internalId>2246</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0042_MasterTransmitICV_FV0</srcid><srcstatus/><internalId>2284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00237</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When (GlobalTimeIcvFvLength) is configured greater than 0 and the Time Master
        fails to derive the FV, then the ICV generation shall be considered as failed.
        In this case, the Time Master shall reset the ’FV in ICV’ and set the
        ’ICV generation failed’ flags of ICV_Flags in AUTOSAR Sub-TLV:Time Authenticated.
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7222</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0003_GetFreshness_NOK</srcid><srcstatus/><internalId>2242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00238</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If TLVFollowUpICVSubTLV is set to TRUE, the TimeMaster shall generate the ICV
        value by applying the cryptographic primitive (GlobalTimeIcvCryptoPrimitive)
        to the content of the Follow_Up message (i.e., the header, the message fields
        and all TLVs - except for the ICV value itself in the AUTOSAR Sub-TLV:Time Authenticated).
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6965</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00239</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV generation (including deriving the FV) fails or takes longer than the
        timeout IcvGenerationTimeout, the Time Master shall set flag ’ICV Generation Failed’
        in the ICV_Flags field of AUTOSAR Sub-TLV:Time Authenticatedc(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7221</srcid><srcstatus/><internalId>1070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0008_TxIcv_TimeoutExpire</srcid><srcstatus/><internalId>2247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00240</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When ICV value does not fit within one AUTOSAR SubTLV:Time Authenticated,
        the Time Master shall fragment the ICV value correctly into multiple AUTOSAR
        Sub-TLV:Time Authenticated (refer to [PRS_TS_00227], [PRS_TS_00228], [PRS_TS_00229],
        [PRS_TS_00230], [PRS_TS_00231]).(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7284</srcid><srcstatus/><internalId>1082</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00241</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        While GlobalTimeFollowUpTimeout is running, if the Sync message is received,
        the Time Slave shall discard the Sync and shall reset the sequence
        (i.e. waiting for a new Sync).(RS_TS_20072)
      </description>
      <comment>
        Note: A timeout is detected when receiving the next subsequent Sync before receiving
        the Follow_Up belonging to the Sync before. The general timeout monitoring for the
        Time Base update is located in the Implementation of Time Synchronization and not in
        the provider modules.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12970</srcid><srcstatus/><internalId>1404</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0036_SlaveReceives_2ndSync_RxDebounce</srcid><srcstatus/><internalId>2278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00242</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        During rx_debounce_time any Sync or Follow_Up
        message received shall be discarded and the sequence shall be reset (i.e., waiting
        for a new Sync).(RS_TS_20047, RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12971</srcid><srcstatus/><internalId>1405</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0034_SlaveReceives_RxDebounce</srcid><srcstatus/><internalId>2276</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0035_SlaveReceives_RxDebounce_Elapse</srcid><srcstatus/><internalId>2277</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0036_SlaveReceives_2ndSync_RxDebounce</srcid><srcstatus/><internalId>2278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00243</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If RxIcvVerification is set to ICV_IGNORED, the Time Slave shall not perform the ICV
        verification. If the received Follow_up message contains the AUTOSAR Sub-TLV:Time Authenticated,
        then the Time Slave shall ignore it.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8918</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8928</srcid><srcstatus/><internalId>1182</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0012_SlaveReceives_ICVSubTLV_IGNORED</srcid><srcstatus/><internalId>2253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00244</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If RxIcvVerification is set to ICV_OPTIONAL, the Time Slave shall not perform the ICV
        verification, when the received Follow_up message does not contain the
        AUTOSAR Sub-TLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8919</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL_NoSubTLV</srcid><srcstatus/><internalId>2251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00245</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If RxIcvVerification is set to ICV_OPTIONAL, the Time Slave shall perform the ICV verification,
        when the received Follow_up message contains the AUTOSAR Sub-TLV:Time Authenticated.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8920</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</srcid><srcstatus/><internalId>2249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00246</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If RxIcvVerification is set to ICV_VERIFIED, the Time Slave shall perform the ICV verification.
        If the received Follow_up message does not contain the AUTOSAR Sub-TLV:Time Authenticated,
        then the ICV verification shall be assessed as unsuccessful.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8921</srcid><srcstatus/><internalId>1181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED</srcid><srcstatus/><internalId>2254</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED_NoSubTLV</srcid><srcstatus/><internalId>2255</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0053_SlaveReceives_IncorrectLength</srcid><srcstatus/><internalId>2296</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0054_SlaveReceives_IncorrectLength_Segment</srcid><srcstatus/><internalId>2297</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0055_SlaveReceives_IncorrectLength_2</srcid><srcstatus/><internalId>2298</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0056_SlaveReceives_IncorrectLength_3</srcid><srcstatus/><internalId>2299</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0057_SlaveReceives_IncorrectLength_4</srcid><srcstatus/><internalId>2300</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0058_SlaveReceives_IncorrectLength_5</srcid><srcstatus/><internalId>2301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00247</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If RxIcvVerification is set to ICV_NOT_VERIFIED, the Time Slave shall not perform the
        ICV verification and the received Follow_up message shall not contain the
        AUTOSAR Sub-TLV:Time Authenticated. If the received Follow_up message contains
        the AUTOSAR Sub-TLV:Time Authenticated, then the Time Slave shall not perform the
        ICV verification and ICV verification shall be assessed as unsuccessful.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8936</srcid><srcstatus/><internalId>1183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0011_SlaveReceives_ICVSubTLV_NOT_VERIFIED</srcid><srcstatus/><internalId>2252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00248</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        As initial step of ICV verification process, if FVL is greater
        than 0 and ’ICV with FV’ bit is set in ICV_Flags of the received Follow_Up message,
        then the Time Slave shall derive the FV and perform the FV verification. If the Time
        Slave fails to derive the FV and FV verification is unsuccessful, then the ICV verification
        is unsuccessful.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7624</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_FVlength_Incorrect</srcid><srcstatus/><internalId>2250</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00249</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        During the ICV verification process if ’ICV with FV’ bit is not set in ICV_Flags
        of received Follow_Up message, the Time Slave shall not include the FV in the
        ICV verification.(RS_TS_00039, RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7442</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0020_SlaveReceives_FVFlagNotSet</srcid><srcstatus/><internalId>2263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00250</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        During the ICV verification process if FVL is equal to 0 and ’ICV with FV’ bit is set
        in ICV_Flags of received Follow_Up message, the Time Slave shall not derive the
        FV and the ICV verification is unsuccessful.(RS_TS_00039, RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7462</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0023_SlaveReceives_FVL0_FVbitSet</srcid><srcstatus/><internalId>2266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00251</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the received Follow_up message contains multiple AUTOSAR Sub-TLV:Time Authenticated,\
        the Time Slave shall aggregate the ICV value correctly(refer to [PRS_TS_00227],
        [PRS_TS_00228], [PRS_TS_00229], [PRS_TS_00230], [PRS_TS_00231]). If the Time Slave cannot
        aggregate the ICV value correctly(e.g., incorrect sequence numbers, length),
        then ICV verification is unsuccessful.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7392</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0018_SlaveReceives_IncorrectSeqNr</srcid><srcstatus/><internalId>2261</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0031_SlaveReceives_IncorrectLen</srcid><srcstatus/><internalId>2273</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0032_SlaveReceives_DiffLen_Config_Received</srcid><srcstatus/><internalId>2274</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0040_SlaveReceives_InvalidSegmentType</srcid><srcstatus/><internalId>2282</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0051_HeaderLengthInsufficient</srcid><srcstatus/><internalId>2294</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0059_SlaveReceives_IncorrectLength_6</srcid><srcstatus/><internalId>2302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00252</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification (Inclusive of FV verification time) takes longer than the timeout
        IcvVerificationTimeout, then ICV verification is unsuccessful.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7724</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0019_SlaveReceives_VerificationTimeout</srcid><srcstatus/><internalId>2262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00253</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the Follow_Up message contains an AUTOSAR TLV, which contains AUTOSAR
        Sub-TLV:Time Authenticated, then the Time Aware Bridge shall verify the ICV.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11NotSupp</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00254</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification of the Follow_Up message fails, then the Follow_Up
        message shall be dropped instead of being forwarded.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11NotSupp</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00255</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification of the Follow_Up message is successful,
        then the following shall be done:
        1. CrcCorrectionField shall be modified inside the Sub-TLV:Time Secured
        2. the new AUTOSAR Sub-TLV:Time Authenticated is constructed for the updated Follow_Up
        3. the old AUTOSAR Sub-TLV:Time Authenticated is replaced with the new
        AUTOSAR Sub-TLV:Time Authenticated in the Follow_Up message(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11NotSupp</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    
        <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00061</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>2</version>
      <description>
         If MessageCompliance is set to TRUE, Sync and Follow_Up format shall be supported acc.
         to [1, IEEE 802.1 AS].c(RS_TS_20048)
         - The table below gives an overview, how an [1, IEEE 802.1 AS] conformant Sync looks like.
                                       Sync Message Header [IEEE 802.1AS]
        High Nibble        Low Nibble       Octets  Offset    Value
        transportSpecific  messageType        1       0          0x10
        reserved           versionPTP         1       1          2
                messageLength                 2       2          44
                domainNumber                  1       4         (UInteger8)domainNumber = 0
                reserved                      1       5          0
                flags                         2       6          Octet 0: 0x02, Octet 1: 0x08
                correctionField               8       8          0..281474976710655ns
                                                                [1ns = 2^16 = 0x0000 0000 0001 0000]
                reserved                      4      16          0
                sourcePortIdentity           10      20         (PortIdentity)portIdentity
                                                                 from origin Time Aware End Station
                sequenceId                    2      30         (UInteger16)SyncSequenceId =
                                                                (UInteger16)(prevSyncSequenceId+1)
                control                       1      32          0
                logMessageInterval            1      33         (Integer8)currentLogSyncInterval

                            Sync Message Fields [IEEE 802.1AS]
        High Nibble  Low Nibble  Octets  Offset              Value
            PTP Message Header     34      0                    [refer Sync Message Header]
            reserved               10     34                    0
        
        - The table below gives an overview, how an[1,IEEE802.1AS] conformant Follow_Up looks like.
        - Follow_Up Message Header [IEEE 802.1AS]
                                Follow_Up Message Header [IEEE 802.1AS]
        High Nibble        Low Nibble   Octets  Offset  Value
        transportSpecific  messageType     1       0       0x18
        reserved           versionPTP      1       1       0x02
               messageLength               2       2       76
               domainNumber                1       4       (UInteger8)domainNumber=0
               reserved                    1       5       0
               flags                       2       6       Octet 0: 0x00, Octet 1: 0x08
               correctionField             8       8       0..281474976710655ns
                                                           [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                    4       16      0
               sourcePortIdentity          10      20      (PortIdentity)portIdentity
                                                           from origin Time Aware End Station
               sequenceId                  2       30      (UInteger16)SyncSequenceId
               control                     1       32      2
               logMessageInterval          1       33      (Integer8)currentLogSyncInterval
                            Follow_Up Message Fields [IEEE 802.1AS]
        High Nibble  Low Nibble       Octets  Offset              Value
            PTP Message Header        34      0                 [refer Follow_Up Message Header]
            preciseOriginTimestamp    10     34                 (Timestamp) preciseOriginTimestamp
            Follow_Up information TLV 32     44                 refer Follow_Up information TLV

                          Follow_Up information TLV [IEEE 802.1AS]
        High Nibble  Low Nibble          Octets  Offset  Value
                tlvType                     2       0       3
                lengthField                 2       2       28
                organizationId              3       4       0x0080C2 [IEEE 802.1AS]
                organizationSubType         3       7       1
                cumulativeScaledRateOffset  4       10     (Integer32)((RateRatio-1)*2^41)
                gmTimeBaseIndicator         2       14      0
                lastGmPhaseChange           12      16      0
                scaledLastGmFreqChange      4       28      0
      </description>
      <comment>
         Note: This implies one Time Domain (0).
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5332</srcid><srcstatus/><internalId>920</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5462</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.MultipleTD</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE, the Follow_Up shall contain an AUTOSAR TLV,
        depending on configuration.(RS_TS_20048, RS_TS_20061, RS_TS_20062)
                                        Sync Message Header [AUTOSAR]
        High Nibble        Low Nibble       Octets  Offset    Value
        transportSpecific  messageType        1       0          0x10
        reserved           versionPTP         1       1          2
               messageLength                  2       2          44
               domainNumber                   1       4         (UInteger8)domainNumber = 0..15
               reserved                       1       5          0
               flags                          2       6          Octet 0: 0x02, Octet 1: 0x08
               correctionField                8       8          0..281474976710655ns
                                                                [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                       4      16          0
               sourcePortIdentity             10      20         (PortIdentity)portIdentity
                                                                 from origin Time Aware End Station
               sequenceId                     2      30         (UInteger16)SyncSequenceId =
                                                                (UInteger16)(prevSyncSequenceId+1)
               control                        1      32          0
               logMessageInterval             1      33         (Integer8)currentLogSyncInterval

                                        Sync Message Fields [AUTOSAR]
        High Nibble  Low Nibble  Octets  Offset              Value
        PTP Message Header         34      0                    [refer Sync Message Header]
        reserved                   10     34                    0
        
                                        Follow_Up Message Header [AUTOSAR]
        High Nibble        Low Nibble   Octets  Offset  Value
        transportSpecific  messageType     1       0       0x18
        reserved           versionPTP      1       1       0x02
               messageLength               2       2       76+10+Sum(Sub-TLVs)
               domainNumber                1       4       (UInteger8)domainNumber=0..15
               reserved                    1       5       0
               flags                       2       6       Octet 0: 0x00, Octet 1: 0x08
               correctionField             8       8       0..281474976710655ns
                                                           [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                    4       16      0
               sourcePortIdentity          10      20      (PortIdentity)portIdentity
                                                           from origin Time Aware End Station
               sequenceId                  2       30      (UInteger16)SyncSequenceId
               control                     1       32      2
               logMessageInterval          1       33      (Integer8)currentLogSyncInterval

                          Follow_Up Message Fields [AUTOSAR]
        High Nibble   Low Nibble      Octets  Offset  Value
             PTP Message Header         34      0       [refer Follow_Up Message Header]
             preciseOriginTimestamp     10      34      (Timestamp)preciseOriginTimestamp
             Follow_Up information TLV  32+     44      [refer Follow_Up information TLV]
                                        10+
                                        ΣSub-
                                        TLV‘s

                          Follow_Up information TLV [IEEE 802.1AS]
        High Nibble  Low Nibble          Octets  Offset  Value
                tlvType                     2       0       3
                lengthField                 2       2       28
                organizationId              3       4       0x0080C2 [IEEE 802.1AS]
                organizationSubType         3       7       1
                cumulativeScaledRateOffset  4       10     (Integer32)((RateRatio-1)*2^41)
                gmTimeBaseIndicator         2       14      0
                lastGmPhaseChange           12      16      0
                scaledLastGmFreqChange      4       28      0
                                  AUTOSAR TLV Header
        High Nibble  Low Nibble    Octets  Offset  Value
                 tlvType              2       0       3
                 lengthField          2       2       6+ΣSub-TLV‘s
                 organizationId       3       4       0x1A75FB [AUTOSAR]
                 organizationSubType  3       7       0x605676 [BCD coded GlobalTimeEthTSyn]

                          AUTOSAR TLV Sub-TLV: Time Secured
        High Nibble  Low Nibble  Octets  Offset  Value
                Type                1       0       0x28 [Time secured]
                Length              1       1       3
                CRC_Time_Flags      1       2       BitMask 0x01 [messageLength]
                                                    BitMask 0x02 [domainNumber]
                                                    BitMask 0x04 [correctionField]
                                                    BitMask 0x08 [sourcePortIdentity]
                                                    BitMask 0x10 [sequenceId]
                                                    BitMask 0x20 [preciseOriginTimestamp]
                                                    BitMask 0x40 [reserved]
                                                    BitMask 0x80 [reserved]

                CRC_Time_0          1       3       0..255
                CRC_Time_1          1       4       0..255

                     AUTOSAR TLV Sub-TLV: Status Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x50 [Status secured]
                  Length           1       1        2
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                    Status         1       2        BitMask 0x80 [reserved]
                  CRC_Status       1       3        0..255

              AUTOSAR TLV Sub-TLV: Status Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x51 [Status not secured]
                  Length           1       1        2
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                  Status           1       2        BitMask 0x80 [reserved]
                 reserved          1       3        0

              AUTOSAR TLV Sub-TLV: UserData Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x60 [UserData secured]
                 Length            1       1        5
             UserDataLength        1       2        1..3
                UserByte_0         1       3        0..255 (default: 0)
                UserByte_1         1       4        0..255 (default: 0)
                UserByte_2         1       5        0..255 (default: 0)
               CRC_UserData        1       6        0..255

              AUTOSAR TLV Sub-TLV: UserData Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x61 [UserData not secured]
                 Length            1       1        5
             UserDataLength        1       2        1..3
                UserByte_0         1       3        0..255 (default: 0)
                UserByte_1         1       4        0..255 (default: 0)
                UserByte_2         1       5        0..255 (default: 0)
                 reserved          1       6        0

                  AUTOSAR TLV Sub-TLV: OFS Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x44 [OFS secured]
                 Length            1       1        17
              OfsTimeDomain        1       2        16..31
               OfsTimeSec          6       3        0..281474976710655s
               OfsTimeNSec         4       9        0..999999999ns
                                                    BitMask 0x01 [SGW with
                                                         SyncToGTM = 0
                                                         SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                 Status            1      13        BitMask 0x80 [reserved]
              UserDataLength       1      14        0..3 (default: 0)
               UserByte_0          1      15        0..255 (default: 0)
               UserByte_1          1      16        0..255 (default: 0)
               UserByte_2          1      17        0..255 (default: 0)
                CRC_OFS            1      18        0..255

                  AUTOSAR TLV Sub-TLV: OFS Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x34 [OFS not secured]
                 Length            1       1        17
              OfsTimeDomain        1       2        16..31
               OfsTimeSec          6       3        0..281474976710655s
               OfsTimeNSec         4       9        0..999999999ns
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                Status            1       13        BitMask 0x80 [reserved]
              UserDataLength      1       14        0..3 (default: 0)
               UserByte_0         1       15        0..255 (default: 0)
               UserByte_1         1       16        0..255 (default: 0)
               UserByte_2         1       17        0..255 (default: 0)
               reserved           1       18        0

                  AUTOSAR TLV Sub-TLV:Time Authenticated
        High Nibble  Low Nibble       Octets  Offset            Value
               Type                     1       0               0x70 [Time Authenticated]
               Length                   1       1               2..216
               ICV_Flags                1       2               BitMask 0x01 [ICV with FV]
                                                                BitMask 0x02 [ICV generation failed]
                                                                BitMask 0x04 [ICV in multiple Sub-TLV]
                                                                BitMask 0x08 [reserved]
                                                                BitMask 0x10 [reserved]
                                                                BitMask 0x20 [reserved]
                                                                BitMask 0x40 [reserved]
                                                                BitMask 0x80 [reserved]
               SequenceNumber           6       3               0..4 Sequence number of
                                                                Sub-TLV:Time Authenticated
               FreshnessValueLength     4       4               This field is optional.
                                                                If not present, then bit [ICV
                                                                with FV] in ICV_Flags is 0. 0..64 Bits
               FV                       1       5               This field is optional.
                                                                If not present, then bit [ICV
                                                                with FV] in ICV_Flags is 0.
               ICV                      1       4+1+FVL         0..205 Bytes (SequenceNumber is 0)
                                                (in Bytes)      1..214 Bytes (SequenceNumber is greater than 0)
                                                                The value of I shall represent the number of
                                                                octets in the field. If the ICV calculation failed,
                                                                then it shall have the value of 0 octets.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_FUp</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_AutosarTLVHeader</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_UserDataSecured</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_UserDataNotSecured</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_OFSSecured</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_OFSNotSecured</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_TimeAuthNotSecured</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest04_0000_MasterTransmitSyncPair</srcid><srcstatus/><internalId>2214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6294</srcid><srcstatus/><internalId>988</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00062</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00063</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.dsn.Func.StatusSubTLV</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
                <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_CorrectLengthField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>733</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_CorrectTotalLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_FUp</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
                                Follow_Up Message Header [AUTOSAR]
        High Nibble        Low Nibble   Octets  Offset  Value
        transportSpecific  messageType     1       0       0x18
        reserved           versionPTP      1       1       0x02
               messageLength               2       2       76+10+Sum(Sub-TLVs)
               domainNumber                1       4       (UInteger8)domainNumber=0..15
               reserved                    1       5       0
               flags                       2       6       Octet 0: 0x00, Octet 1: 0x08
               correctionField             8       8       0..281474976710655ns
                                                           [1ns = 2^16 = 0x0000 0000 0001 0000]
               reserved                    4       16      0
               sourcePortIdentity          10      20      (PortIdentity)portIdentity
                                                           from origin Time Aware End Station
               sequenceId                  2       30      (UInteger16)SyncSequenceId
               control                     1       32      2
               logMessageInterval          1       33      (Integer8)currentLogSyncInterval

                          Follow_Up Message Fields [AUTOSAR]
        High Nibble   Low Nibble      Octets  Offset  Value
             PTP Message Header         34      0       [refer Follow_Up Message Header]
             preciseOriginTimestamp     10      34      (Timestamp)preciseOriginTimestamp
             Follow_Up information TLV  32+     44      [refer Follow_Up information TLV]
                                        10+
                                        ΣSub-
                                        TLV‘s

                          Follow_Up information TLV [IEEE 802.1AS]
        High Nibble  Low Nibble          Octets  Offset  Value
                tlvType                     2       0       3
                lengthField                 2       2       28
                organizationId              3       4       0x0080C2 [IEEE 802.1AS]
                organizationSubType         3       7       1
                cumulativeScaledRateOffset  4       10     (Integer32)((RateRatio-1)*2^41)
                gmTimeBaseIndicator         2       14      0
                lastGmPhaseChange           12      16      0
                scaledLastGmFreqChange      4       28      0
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6295</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_AutosarTLVHeader</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>      
                                  AUTOSAR TLV Header
        High Nibble  Low Nibble    Octets  Offset  Value
                 tlvType              2       0       3
                 lengthField          2       2       6+ΣSub-TLV‘s
                 organizationId       3       4       0x1A75FB [AUTOSAR]
                 organizationSubType  3       7       0x605676 [BCD coded GlobalTimeEthTSyn]
        (RS_TS_20048, RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6416</srcid><srcstatus/><internalId>990</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>      
                          AUTOSAR TLV Sub-TLV: Time Secured
        High Nibble  Low Nibble  Octets  Offset  Value
                Type                1       0       0x28 [Time secured]
                Length              1       1       3
                CRC_Time_Flags      1       2       BitMask 0x01 [messageLength]
                                                    BitMask 0x02 [domainNumber]
                                                    BitMask 0x04 [correctionField]
                                                    BitMask 0x08 [sourcePortIdentity]
                                                    BitMask 0x10 [sequenceId]
                                                    BitMask 0x20 [preciseOriginTimestamp]
                                                    BitMask 0x40 [reserved]
                                                    BitMask 0x80 [reserved]

                CRC_Time_0          1       3       0..255
                CRC_Time_1          1       4       0..255
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01100_TimeSecured_InvalidMsgLength_Rx</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01101_TimeSecured_CrcValidated_InvalidSubTlvLength_Rx</srcid><srcstatus/><internalId>1872</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01125_Crc_Swt_TimeOffsetSubTLV</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6450</srcid><srcstatus/><internalId>994</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
                     AUTOSAR TLV Sub-TLV: Status Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x50 [Status secured]
                  Length           1       1        2
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                    Status         1       2        BitMask 0x80 [reserved]
                  CRC_Status       1       3        0..255
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01073_TimeSecured_CrcSupported_NoFollowUpTimeSubTlv_Tx</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01088_StatusSecured_CrcValid_InvalidMsgLength_Rx</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01125_Crc_Swt</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01125_Crc_Swt_UserDataLength_0</srcid><srcstatus/><internalId>1905</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6471</srcid><srcstatus/><internalId>997</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_StatusSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
              AUTOSAR TLV Sub-TLV: Status Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x51 [Status not secured]
                  Length           1       1        2
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                  Status           1       2        BitMask 0x80 [reserved]
                 reserved          1       3        0
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01081_StatusNotSecured_InvalidMsgLength_Rx</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6524</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_StatusNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_UserDataSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
              AUTOSAR TLV Sub-TLV: UserData Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x60 [UserData secured]
                 Length            1       1        5
             UserDataLength        1       2        1..3
                UserByte_0         1       3        0..255 (default: 0)
                UserByte_1         1       4        0..255 (default: 0)
                UserByte_2         1       5        0..255 (default: 0)
               CRC_UserData        1       6        0..255
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01113_UserDataSecured_CrcValidated_InvalidMsgLength_Rx</srcid><srcstatus/><internalId>1885</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6492</srcid><srcstatus/><internalId>1000</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_UserDataNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
              AUTOSAR TLV Sub-TLV: UserData Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x61 [UserData not secured]
                 Length            1       1        5
             UserDataLength        1       2        1..3
                UserByte_0         1       3        0..255 (default: 0)
                UserByte_1         1       4        0..255 (default: 0)
                UserByte_2         1       5        0..255 (default: 0)
                 reserved          1       6        0
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01115_UserDataNotSecured_Tx</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01121_UserDataNotSecured_Tx_Length0</srcid><srcstatus/><internalId>1888</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01120_UserDataNotSecured_CrcIgnored_InvalidMsgLength_Rx</srcid><srcstatus/><internalId>1893</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6547</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_OFSSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
                  AUTOSAR TLV Sub-TLV: OFS Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x44 [OFS secured]
                 Length            1       1        17
              OfsTimeDomain        1       2        16..31
               OfsTimeSec          6       3        0..281474976710655s
               OfsTimeNSec         4       9        0..999999999ns
                                                    BitMask 0x01 [SGW with
                                                         SyncToGTM = 0
                                                         SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                 Status            1      13        BitMask 0x80 [reserved]
              UserDataLength       1      14        0..3 (default: 0)
               UserByte_0          1      15        0..255 (default: 0)
               UserByte_1          1      16        0..255 (default: 0)
               UserByte_2          1      17        0..255 (default: 0)
                CRC_OFS            1      18        0..255
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01125_Crc_Swt_TimeOffsetSubTLV</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6746</srcid><srcstatus/><internalId>1030</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_OFSNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
                  AUTOSAR TLV Sub-TLV: OFS Not Secured
        High Nibble  Low Nibble  Octets  Offset   Value
                  Type             1       0        0x34 [OFS not secured]
                 Length            1       1        17
              OfsTimeDomain        1       2        16..31
               OfsTimeSec          6       3        0..281474976710655s
               OfsTimeNSec         4       9        0..999999999ns
                                                    BitMask 0x01 [SGW with
                                                                 SyncToGTM = 0
                                                                 SyncToSubDomain = 1]
                                                    BitMask 0x02 [reserved]
                                                    BitMask 0x04 [reserved]
                                                    BitMask 0x08 [reserved]
                                                    BitMask 0x10 [reserved]
                                                    BitMask 0x20 [reserved]
                                                    BitMask 0x40 [reserved]
                Status            1       13        BitMask 0x80 [reserved]
              UserDataLength      1       14        0..3 (default: 0)
               UserByte_0         1       15        0..255 (default: 0)
               UserByte_1         1       16        0..255 (default: 0)
               UserByte_2         1       17        0..255 (default: 0)
               reserved           1       18        0
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01222_OfsNotSecured_NotValidated</srcid><srcstatus/><internalId>1910</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01227_OfsNotSecured_Tx</srcid><srcstatus/><internalId>1915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6754</srcid><srcstatus/><internalId>1032</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00063_TimeAuthNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
                      AUTOSAR TLV Sub-TLV:Time Authenticated

        High Nibble  Low Nibble       Octets  Offset            Value
               Type                     1       0               0x70 [Time Authenticated]
               Length                   1       1               2..216
               ICV_Flags                1       2               BitMask 0x01 [ICV with FV]
                                                                BitMask 0x02 [ICV generation failed]
                                                                BitMask 0x04 [ICV in multiple Sub-TLV]
                                                                BitMask 0x08 [reserved]
                                                                BitMask 0x10 [reserved]
                                                                BitMask 0x20 [reserved]
                                                                BitMask 0x40 [reserved]
                                                                BitMask 0x80 [reserved]
               SequenceNumber           6       3               0..4 Sequence number of
                                                                Sub-TLV:Time Authenticated
               FreshnessValueLength     4       4               This field is optional.
                                                                If not present, then bit [ICV
                                                                with FV] in ICV_Flags is 0. 0..64 Bits
               FV                       1       5               This field is optional.
                                                                If not present, then bit [ICV
                                                                with FV] in ICV_Flags is 0.
               ICV                      1       4+1+FVL         0..205 Bytes (SequenceNumber is 0)
                                                (in Bytes)      1..214 Bytes (SequenceNumber is greater than 0)
                                                                The value of I shall represent the number of
                                                                octets in the field. If the ICV calculation failed,
                                                                then it shall have the value of 0 octets.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6893</srcid><srcstatus/><internalId>1043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00071</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        If more than one AUTOSAR Sub-TLV exists, each Sub-TLV shall be placed after the preceding
        Sub-TLV without gaps.(RS_TS_20048,RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Note: If more than one AUTOSAR Sub-TLV exists, the position of each Sub-TLV is
        arbitrary except Sub-TLV:Time Authenticated. Sub-TLV:Time Authenticated shall be
        the last Sub-TLV. It is assumed that the order of the Sub-TLVs does not change during
        runtime for a given configuration.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6466</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6487</srcid><srcstatus/><internalId>999</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6515</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6535</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6542</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6574</srcid><srcstatus/><internalId>1015</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6589</srcid><srcstatus/><internalId>1018</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6600</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured
                                          0x70: Sub-TLV:  TimeAuthenticated is not CRC secured

        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
                                          0x70: Sub-TLV:  TimeAuthenticated is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeSecured</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_StatusSecured</srcid><srcstatus/><internalId>195</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_UserDataSecured</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_OFSSecured</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeNotSecured</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_StatusNotSecured</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_UserDataNotSecured</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_OFSnotSecured</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcNotSupported</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcSupported</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00091</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_TimeSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x28: Sub-TLV: Time Secured is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_StatusSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x50: Sub-TLV: Status is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_UserDataSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x60: Sub-TLV: UserData is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6493</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_OFSSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x44: Sub-TLV: OFS is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6581</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_TimeNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          Time: N.A.
      </description>
      <comment>
        Shall be covered by a generic test which will verify that the time not secured sub TLV
        is not supported.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01007_Invalid_EthTSyn_Xdm_TimeNotSecured</srcid><srcstatus/><internalId>2309</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6423</srcid><srcstatus/><internalId>991</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00109_TimeNotSecured_Optional</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108_TimeNotSecured_Ignored</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_StatusNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          0x51: Sub-TLV: Status is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_UserDataNotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          0x61: Sub-TLV: UserData is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01115_UserDataNotSecured_Tx</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01121_UserDataNotSecured_Tx_Length0</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6548</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_OFSnotSecured</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01227_OfsNotSecured_Tx</srcid><srcstatus/><internalId>1915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6755</srcid><srcstatus/><internalId>1033</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcNotSupported</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_NOT_SUPPORTED
                                          0x70: Sub-TLV:  TimeAuthenticated is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0007_TxIcv_CRC_NOT_SUPPORTED</srcid><srcstatus/><internalId>2246</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7050</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00222</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcSupported</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        Depending on EthTSynGlobalTimeTxCrcSecured (ECUC_EthTSyn_00039 : ) the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type shall be:

                                          Sub-TLV.Type
        EthTSynGlobalTimeTxCrcSecured     CRC_SUPPORTED
                                          0x70: Sub-TLV:  TimeAuthenticated is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6894</srcid><srcstatus/><internalId>1044</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00093</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00222</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_000104</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message, the Time Synchronization module
        shall assemble the message as follows:
          1. If Sync: Calculate Message Header
          2. If Follow_Up: Calculate Follow_Up.preciseOriginTimestamp and Message Header inclusive correctionField
          3. If Follow_Up: Calculate IEEE TLV
          4. If Follow_Up: Calculate AUTOSAR TLV (configuration dependent)
          5. If Follow_Up: Assemble AUTOSAR Sub-TLV:Time Authenticated (if configured;
             refer to section 4.6.2.2.5).
          (RS_TS_20048, RS_TS_20061, RS_TS_20062, RS_TS_20063, RS_TS_20072)

        For 4: Calculate CRC (configuration dependent) and copy all data to the appropriate position
        within the related message(RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceON</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_000104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>EthTSyn.SWS_EthTSyn_00104</ffbSrcId><ffbSrcType>swurs</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>290</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceON</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message, the EthTSyn module shall assemble
        the message as follows:
          1. If Sync: Calculate Message Header
          2. If Follow_Up: Calculate Follow_Up.preciseOriginTimestamp and Message Header inclusive
             correctionField
          3. If Follow_Up: Calculate IEEE TLV
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00061</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00202</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00203</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message, the EthTSyn module shall assemble
        the message as follows:
          4. If Follow_Up: Calculate AUTOSAR TLV (configuration dependent)
          a. Calculate CRC (configuration dependent)
          (RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        For each transmission of a Time Synchronization message, the EthTSyn module shall assemble
        the message as follows:
          5. If Follow_Up: Assemble AUTOSAR Sub-TLV:Time Authenticated (if configured;
             refer to section 4.6.2.2.5).
          (RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0041_MasterTransmitICV</srcid><srcstatus/><internalId>2283</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6895</srcid><srcstatus/><internalId>1045</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00105</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        If MessageCompliance is set to FALSE, RxCrcValidated, RxIcvVerification shall be considered.
        (RS_TS_20061, RS_TS_20062, RS_TS_20063, RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured

        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_TimeSecuredValidated</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_StatusValidated</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_OFSValidated</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_TimeNotValidated</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_UsrDataNotValidated</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_OFSNotValidated</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_TimeAutenticatedNotCrcValidated</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107_TimeAutenticatedCrcNotValidated</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00105</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.StatusSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_TimeSecuredValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x28: Sub-TLV: Time Secured is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01099_TimeSecured_CrcValidated_CrcFlagsFalse_Rx</srcid><srcstatus/><internalId>1848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8994</srcid><srcstatus/><internalId>1186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_StatusValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x50: Sub-TLV: Status is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01085_TimeStatusUserDataSecured_CrcValidated_EqualCrcRx</srcid><srcstatus/><internalId>1859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9054</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x60: Sub-TLV: UserData is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01085_TimeStatusUserDataSecured_CrcValidated_EqualCrcRx</srcid><srcstatus/><internalId>1859</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01109_UserDataSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1881</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01110_UserDataSecured_CrcValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1882</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01111_UserDataSecured_CrcNotValidated_Rx</srcid><srcstatus/><internalId>1883</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9199</srcid><srcstatus/><internalId>1203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_OFSValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x44: Sub-TLV: OFS is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9380</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_TimeNotValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          Time: N.A.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01092_TimeSecured_CrcNotValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1866</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9017</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          0x51: Sub-TLV: Status is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01078_StatusNotSecured_CrcNotValidated_Rx</srcid><srcstatus/><internalId>1852</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01089_StatusSecured_CrcNotValidated_EqualCrc_Rx</srcid><srcstatus/><internalId>1863</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01091_StatusSecured_CrcNotValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1865</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01102_StatusNotSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1873</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9138</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_UsrDataNotValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          0x61: Sub-TLV: UserData is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01116_UserDataNotSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1889</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01117_UserDataNotSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9279</srcid><srcstatus/><internalId>1208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_OFSNotValidated</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01222_OfsNotSecured_NotValidated</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9334</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_TimeAutenticatedNotCrcValidated</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_VALIDATED
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00107_TimeAutenticatedCrcNotValidated</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be validated, depending on RxCrcValidated : and the
        Follow_Up.TLV[AUTOSAR].Sub-TLV.Type acc. to:(RS_TS_20061)
                                                  Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_NOT_VALIDATED
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00107</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured

        EthTSynRxCrcValidated             CRC_IGNORED
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_TimeSecured_Ignored</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_StatusSecured_Ignored</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_UserDataSecured_Ignored</srcid><srcstatus/><internalId>223</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_OFSSecured_Ignored</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_TimeNotSecured_Ignored</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_StatusNotSecured_Ignored</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_UserDataNotSecured_Ignored</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_OFSNotSecured_Ignored</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108_TimeAutenticated_Ignored</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00105</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.StatusSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
        <provcov>
         <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
         <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_TimeSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x28: Sub-TLV: Time Secured is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01098_TimeSecured_CrcIgnored_EqualCrc_Rx</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01094_TimeSecured_CrcIgnored_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9009</srcid><srcstatus/><internalId>1188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_StatusSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x50: Sub-TLV: Status is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01086_StatusSecured_CrcIgnored_EqualCrc_Rx</srcid><srcstatus/><internalId>1860</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01093_StatusSecured_CrcIgnored_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1867</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9085</srcid><srcstatus/><internalId>1195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_UserDataSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x60: Sub-TLV: UserData is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01114_UserDataSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1886</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9226</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_OFSSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x44: Sub-TLV: OFS is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01229_OfsSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1918</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9401</srcid><srcstatus/><internalId>1220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_TimeNotSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          Time: N.A.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeNotSecured</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_StatusNotSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x51: Sub-TLV: Status is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01079_StatusNotSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1853</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9139</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_UserDataNotSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x61: Sub-TLV: UserData is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01116_UserDataNotSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9280</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_OFSNotSecured_Ignored</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01229_OfsNotSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9335</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00108_TimeAutenticated_Ignored</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_IGNORED and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_IGNORED
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00108</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall be validated
                                          0x28: Sub-TLV: Time Secured is CRC secured
                                          0x50: Sub-TLV: Status is CRC secured
                                          0x60: Sub-TLV: UserData is CRC secured
                                          0x44: Sub-TLV: OFS is CRC secured
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured

        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall not be validated
                                          Time: N.A.
                                          0x51: Sub-TLV: Status is not CRC secured
                                          0x61: Sub-TLV: UserData is not CRC secured
                                          0x34: Sub-TLV: OFS is not CRC secured
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_TimeSecured_Optional</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_StatusSecured_Optional</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_UserDataSecured_Optional</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_OFSSecured_Optional</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_TimeNotSecured_Optional</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_StatusNotSecured_Optional</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_UserDataNotSecured_Optional</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_OFSNotSecured_Optional</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109_TimeAutenticated_Optional</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.TimeSecuredSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.StatusSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
        <provcov>
         <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
         <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00105</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
           <linksto>EthTSyn.PRS_TS_00109</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_TimeSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall be validated
                                          0x28: Sub-TLV: Time Secured is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8995</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01240_TimeSecured_Optional</srcid><srcstatus/><internalId>1930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_StatusSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall be validated
                                          0x50: Sub-TLV: Status is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9055</srcid><srcstatus/><internalId>1192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01239_StatusSecured_Optional</srcid><srcstatus/><internalId>1929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_UserDataSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall be validated
                                          0x60: Sub-TLV: UserData is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9200</srcid><srcstatus/><internalId>1204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01241_UserDataSecured_Optional</srcid><srcstatus/><internalId>1931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00116_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_OFSSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall be validated
                                          0x44: Sub-TLV: OFS is CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9381</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01235_OfsSecured_Optional_EqualCrc</srcid><srcstatus/><internalId>1925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_TimeNotSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall not be validated
                                          Time: N.A.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_TimeNotSecured</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_StatusNotSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall not be validated
                                          0x51: Sub-TLV: Status is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9140</srcid><srcstatus/><internalId>1199</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01237_StatusNotSecured_Optional</srcid><srcstatus/><internalId>1927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_UserDataNotSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall not be validated
                                          0x61: Sub-TLV: UserData is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9281</srcid><srcstatus/><internalId>1210</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01238_UserDataNotSecured_Optional</srcid><srcstatus/><internalId>1928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_OFSNotSecured_Optional</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be either validated or not validated, if RxCrcValidated
        is set to CRC_OPTIONAL and the Follow_Up.TLV[AUTOSAR].Sub-TLV.Type contains any of the
        following defined values:(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL - CRC shall not be validated
                                          0x34: Sub-TLV: OFS is not CRC secured
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9336</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01236_OfsNotSecured_Optional</srcid><srcstatus/><internalId>1926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00109_TimeAutenticated_Optional</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        The CRC of the Follow_Up TLV shall be ignored, if RxCrcValidated is set to CRC_OPTIONAL and
        the Follow_Up.TLV[AUTOSAR].SubTLV.Type contains any of the following defined values: c(RS_TS_20061)

                                          Sub-TLV.Type
        EthTSynRxCrcValidated             CRC_OPTIONAL
                                          0x70: Sub-TLV: TimeAuthenticated is not CRC secured
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.R22-11.PRS_TS_00109</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.PRS_TS_00119</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_TimeSyncProtocol, R22-11</source>
      <version>1</version>
      <description>
        If any of the following conditions is not met, a Time Slave shall
        discard a received Sync or Follow_Up message:
        1. Validation of Sequence Counter (sequenceId) is successful (refer to:
           [PRS_TS_00196], [PRS_TS_00197], [PRS_TS_00198], [PRS_TS_00199]).
        2. If Follow_Up: Follow_Up.TLV[AUTOSAR].Sub-TLV.Type matches depending
           on configuration of RxCrcValidated
        3. The Time Domain matches to the defined Time Domain range for each domainNumber resp.
           to the element OfsTimeDomain of the AUTOSAR Sub-TLV: OFS(configuration dependent)
        4. The Time Domain matches to one of the configured Time Domains
        5. If Follow_Up: All CRCs are successfully validated depending on the configuration
           of RxCrcValidated and CrcFlagsRxValidated
        6. If Follow_Up: The Length field for every "known", i.e., specified in 4.3.1.2,
           SubTLV that is contained in the AUTOSAR TLV matches the specified value for
           this Sub-TLV.
        7. If Follow_Up: The AUTOSAR TLV Header’s lengthField is equal to the accumulated
           length of all Sub-TLVs plus 6.
        8. If Follow_Up: The ICV is successfully verified depending on the configuration
           of RxIcvVerification
        (RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR PRS R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.SequenceCounter</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    
    
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the parameter EthTSynFramePrio(ECUC_EthTSyn_00034) exists, the
        EthTSynGlobalTimeEthIfRef(ECUC_EthTSyn_00065) shall refer to a Virtual Ethernet Controller
        representing a VLAN.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01003_Invalid_EthTSyn_Xdm_Priority_ON_VlanID_OFF</srcid><srcstatus/><internalId>2305</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6274</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Time Slave and Time Master shall use the EthTSynFramePrio(ECUC_EthTSyn_00034) value as
        priority parameter when calling EthIf_ProvideTxBuffer().(RS_TS_20048)
      </description>
      <comment>
        Refer to chapter 5.2 VLAN Support in [1, PRS Time Synchronization Protocol] for additional requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01063_Master_EthTSynFramePriority</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01064_Slave_EthTSynFramePriority</srcid><srcstatus/><internalId>2036</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6272</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        A call to EthTSyn_Init() initializes all internal variables and sets the EthTSyn
        module to the initialized state.
        (SRS_BSW_00101)
      </description>
      <comment>
        Note: Unless specified otherwise EthTSyn uses default values as given in [4, IEEE 802.1 AS].
        With black box testing the check of the internal variables is not possible.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01050_InitStateAndInternalVariables</srcid><srcstatus/><internalId>2023</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3809</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11555</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall discard a timestamp derived from the Ethernet Controller HW (e.g., via
        EthIf_GetCurrentTime(),EthIf_GetIngressTimeStamp() or
        EthIf_GetEgressTimeStamp()), if the quality of the timestamp (refer to
        Eth_TimeStampQualType) is indicated as ETH_INVALID or ETH_UNCERTAIN.(RS_TS_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.Master.SyncEgress</srcid><srcstatus/><internalId>581</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.Master.GetCurrentTime</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.Slave.SyncIngress</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.PdelayReqEgress</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.PdelayReqIngress</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.PdelayRespEgress</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.InvTimeQuality.PdelayRespIngress</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.TransparentClock_SynchronizeFailIngress</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.TransparentClock_InvalidTimeStamp</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynGlobalTimeDebounceTime(ECUC_EthTSyn_00048) is set to 0,
        EthTSyn shall ignore any debouncing.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3866</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12817</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynGlobalTimeDebounceTime(ECUC_EthTSyn_00048) is greater than 0,
        EthTSyn shall always consider debouncing for all Timesync PDUs
        (Sync, Follow_Up, Pdelay_Req, Pdelay_Resp and Pdelay_Resp_Follow_Up)
        as described below.(RS_TS_20047)
      </description>
      <comment>
        Note: The Debouncing avoids misassignment of time stamps to false event message.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01202</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01201</srcid><srcstatus/><internalId>2046</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01240_DebounceElapseOnAllSwtPorts</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01205</srcid><srcstatus/><internalId>2052</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01206</srcid><srcstatus/><internalId>2053</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01203</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01244_SyncOnlyOnHostAndDebounceEnabled</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4710</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12813</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSynGlobalTimeDebounceTime(ECUC_EthTSyn_00048) represents the reload value of a
        debounceCounter that will be reloaded at that point in time, where a Timesync PDU
        has been sent and that will be decremented on each EthTSyn_MainFunction()
        call if no Timesync PDU is transmitted.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01200</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01202</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01201</srcid><srcstatus/><internalId>2046</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01240_DebounceElapseOnAllSwtPorts</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01242_DebounceCalculation</srcid><srcstatus/><internalId>2050</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01205</srcid><srcstatus/><internalId>2052</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01206</srcid><srcstatus/><internalId>2053</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01203</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01244_SyncOnlyOnHostAndDebounceEnabled</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4741</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12835</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort_Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        A new Timesync PDU shall only be sent, if the corresponding debounceCounter has reached 0.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01202</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01201</srcid><srcstatus/><internalId>2046</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01240_DebounceElapseOnAllSwtPorts</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01205</srcid><srcstatus/><internalId>2052</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01206</srcid><srcstatus/><internalId>2053</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01203</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01244_SyncOnlyOnHostAndDebounceEnabled</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3877</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12810</srcid><srcstatus/><internalId>1391</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12814</srcid><srcstatus/><internalId>1393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Each port of a EthTSynGlobalTimeDomain shall have its own debounceCounter.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.DebounceOnPort</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If Master and Time Slave transmit Pdelay_Req for latency calculation with the cycle
        (refer to PRS_TS_00011 in [1, PRS Time Synchronization Protocol]), the following sequence shall be applied:
          1) Get a free transmission buffer via EthIf_ProvideTxBuffer().
          2) Activate the time stamping via EthIf_EnableEgressTimeStamp() if
          EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018:) is set to TRUE.
          3) Trigger transmit request via EthIf_Transmit()
          (RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01040_HW_Enabled_Slave_PdelayReq_Periodically</srcid><srcstatus/><internalId>1984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5770</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8308</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8320</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If Time Master and Time Slave transmit Pdelay_Resp for latency calculation cycle
         (refer to PRS_TS_00012 in [1, PRS Time Synchronization Protocol]) the following sequence shall be applied:
          1. Get a free transmission buffer via EthIf_ProvideTxBuffer()
          2. Activate the time stamping via EthIf_EnableEgressTimeStamp() if
          EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE
          3. Trigger transmit request via EthIf_Transmit()
          (RS_TS_20048, RS_TS_20066)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5932</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_TxConfirmation() with parameter 'Result' equal to E_OK
        the egress time stamp shall be retrieved for t1 from the EthIf via EthIf_GetEgressTimeStamp()
        on egress of the Pdelay_Req message according to Figure 6, if EthTSynHardwareTimestampSupport
        (ECUC_EthTSyn_00018 : ) is set to TRUE.
      </description>
      <comment>
        If the StbM does not use the Ethernet controller as source for the Virtual Local Time
        (refer to parameter StbMLocalTimeHardware, ECUC_StbM_00053, in [4]), the
        EthTSyn shall convert the egress time stamp to the Virtual Local Time as used in the StbM.
        (RS_TS_20048
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8379</srcid><srcstatus/><internalId>1143</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01037_HW_Enabled_Slave</srcid><srcstatus/><internalId>1982</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01258_TxConf_PdelayReq</srcid><srcstatus/><internalId>2136</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01262_PdelayReqReliableTxConfirmation</srcid><srcstatus/><internalId>2210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_TxConfirmation() with parameter 'Result' equal to E_OK the egress time stamp
        shall be retrieved for t1 from the StbM via StbM_GetCurrentVirtualLocalTime()on egress of the
        Pdelay_Req message, if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018 : )
        is set to FALSE.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8380</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01031_HW_Disabled_SyncFrame_Egress</srcid><srcstatus/><internalId>1977</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01210</srcid><srcstatus/><internalId>2062</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01211</srcid><srcstatus/><internalId>2063</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01262_PdelayReqReliableTxConfirmation</srcid><srcstatus/><internalId>2210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_TxConfirmation() with parameter 'Result' equal to E_OK the
        egress timestamp shall be retrieved for t3 from the EthIf via EthIf_GetEgressTimeStamp()
        on egress of the Pdelay_Resp message according to Figure 6, if EthTSynHardwareTimestampSupport
        (ECUC_EthTSyn_00018 : ) is set to TRUE.
      </description>
      <comment>
        If the StbM does not use the Ethernet controller as source for the Virtual Local Time
        (refer to parameter StbMLocalTimeHardware, ECUC_StbM_00053, in [4]), the
        EthTSyn shall convert the egress time stamp to the Virtual Local Time as used in the
        StbM.(RS_TS_20048)
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4188</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01260_PdelayReliableTxConfirmation</srcid><srcstatus/><internalId>2208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_TxConfirmation() with parameter 'Result' equal to 
        E_OK the egress timestamp shall be retrieved for t3 from the StbM via 
        StbM_GetCurrentVirtualLocalTime() on egress of Pdelay_Resp message,
        EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018 : ) is set to FALSE.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4203</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master_2</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01260_PdelayReliableTxConfirmation</srcid><srcstatus/><internalId>2208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall set responseOriginTimestamp (for the Pdelay_Resp_Follow_Up message) to t3.(RS_TS_00034)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00221.vc01</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00225.vc01</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15027</srcid><srcstatus/><internalId>1540</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynGlobalTimePdelayRespEnable is set to TRUE, Time Master and Time Slave shall transmit
        Pdelay_Resp_Follow_Up with the transmission timestamp of that messages as defined in [SWS_EthTSyn_00159]
        as well as defined in [1, PRS Time Synchronization Protocol] chapter 11.1.2 "Propagation delay measurement"
        considering debounceCounter which represents a time offset between Pdelay_Resp and Pdelay_Resp_Follow_Up.
        For that, the following sequence shall be applied:
        1. Get a free transmission buffer via EthIf_ProvideTxBuffer
        2. Trigger transmit request with the transmission timestamp of [SWS_EthTSyn_00159]
           via EthIf_Transmit.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Master.SendPdelayResponseFU</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() the ingress timestamp t2 shall be
        retrieved from the EthIf via EthIf_GetIngressTimeStamp() on ingress of the
        Pdelay_Req message, if EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018 : ) is set to TRUE.
        If the StbM does not use the Ethernet controller as source for the Virtual Local Time
        (refer to parameter StbMLocalTimeHardware, ECUC_StbM_00053, in [2]), the
        EthTSyn shall convert the ingress time stamp to the Virtual Local Time as used in the
        StbM.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10174</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() the ingress timestamp shall be
        retrieved for t2 from the StbM via StbM_GetCurrentVirtualLocalTime() on
        ingress of Pdelay_Req message, if
        EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018 : ) is set to FALSE.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10270</srcid><srcstatus/><internalId>1272</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master_2</srcid><srcstatus/><internalId>1980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall set requestReceiptTimestamp (to be used in the Pdelay_Resp message) to t2.⌋(RS_TS_00034)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00221.vc01</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00224.vc01</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10411</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() the ingress time stamp shall be
        retrieved for t4 from the EthIf via EthIf_GetIngressTimeStamp() on ingress of
        the Pdelay_Resp message according to Figure 7, if
        EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018 : ) is set to TRUE.
        If the StbM does not use the Ethernet controller as source for the Virtual Local Time
        (refer to parameter StbMLocalTimeHardware in [4]), the
        EthTSyn shall convert the ingress time stamp to the Virtual Local Time as used in the StbM.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9928</srcid><srcstatus/><internalId>1253</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01037_HW_Enabled_Slave</srcid><srcstatus/><internalId>1982</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() the ingress time stamp shall be
        retrieved for t4 on ingress of the Pdelay_Resp message from the StbM via
        StbM_GetCurrentVirtualLocalTime(), if
        EthTSynHardwareTimestampSupport (ECUC_EthTSyn_00018 : ) is set to FALSE.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9929</srcid><srcstatus/><internalId>1254</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01210</srcid><srcstatus/><internalId>2062</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01211</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The AUTOSAR Sub-TLV: UserData shall be mapped to the StbM_UserDataType, whereas the User Byte
        number given in the message and by the StbM_UserDataType shall match
        (UserByte_0 mapped to StbM_UserDataType.userByte0 etc.).
        The UserDataLength shall be mapped to
        StbM_UserDataType.userDataLength and vice versa.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01107_UserDataSecured_Tx</srcid><srcstatus/><internalId>1879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13474</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16241</srcid><srcstatus/><internalId>1602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If StbM_UserDataType.userDataLength is set to 0 the complete AUTOSAR Sub-TLV:
        UserData shall be excluded from the message.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Refer to chapter 5.3.1.8 AUTOSAR TLV Sub-TLV:
        UserData Secured/Not Secured in [12] for additional requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01079_NOT_SECURED_Status_UserDataLen0</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01108_UserDataSecuredLength_0</srcid><srcstatus/><internalId>1880</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01118_UserDataNotSecuredLength_0</srcid><srcstatus/><internalId>1891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6558</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.UserDataSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If a Offset Time Domain on Ethernet references a Synchronized Time Domain
        on Ethernet (refer to parameter StbMOffsetTimeBase in the StbM), the
        corresponding AUTOSAR TLV Sub-TLV: OFS shall be mapped to the Follow_Up
        Message of that Synchronized Time Domain.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Refer to chapter 5.3.1.9 AUTOSAR TLV Sub-TLV:
        OFS Secured/Not Secured in [12] for additional requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00085</srcid><srcstatus/><internalId>36</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The User Data of the AUTOSAR Sub-TLV: OFS shall be mapped to the StbM_UserDataType,
        whereas the byte number given in the message and by the StbM_UserDataType shall match
        (UserByte_0 mapped to StbM_UserDataType.userByte0 etc.).
        The UserDataLength shall be mapped to
        StbM_UserDataType.userDataLength and vice versa.(RS_TS_20061, RS_TS_20062)
      </description>
      <comment>
        Refer to chapter 5.3.1.9 AUTOSAR TLV Sub-TLV:
        OFS Secured/Not Secured in [12] for additional requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01227_OfsNotSecured_Tx</srcid><srcstatus/><internalId>1915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6733</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the Time Master transmits a Sync message (refer to[PRS_ TS_00016] in [1]),
        the following sequence shall be applied:
          1. The Global Time Tuple [T0;T0VLT] shall be retrieved from the StbM via StbM_BusGetCurrentTime()
             according to EthTSyn Egress Time Stamping.
          2. Get a free transmission buffer via EthIf_ProvideTxBuffer()
          3. Activate the time stamping via EthIf_EnableEgressTimeStamp() if
          EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE
          4. Trigger transmit request via EthIf_Transmit()
          (RS_TS_20047, RS_TS_20048)
      </description>
      <comment>
        The timeBaseStatus can be read from StbM by StbM_GetTimeBaseStatus(),
        StbM_BusGetCurrentTime() or StbM_GetCurrentTime().
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01082_GlobalTimeBaseBitNotSet_Tx</srcid><srcstatus/><internalId>1856</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1858</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01204_MasterSendsSyncWithCorrectPeriod</srcid><srcstatus/><internalId>2055</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01207_SecHi</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01208</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01209</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01209_NOK</srcid><srcstatus/><internalId>2061</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest04_0000_MasterTransmitSyncPair</srcid><srcstatus/><internalId>2214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5352</srcid><srcstatus/><internalId>922</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6271</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8309</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8321</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12294</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12332</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12449</srcid><srcstatus/><internalId>1359</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15160</srcid><srcstatus/><internalId>1552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00211</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall start cyclic transmission of Sync messages in the earliest
        possible EthTSyn_MainFunction() call once the protocol requirement
        [PRS_TS_00016] is fulfilled.(RS_TS_20047)
        Note: “earliest possible” means:
         In the next EthTSyn_MainFunction(), because GLOBAL_TIME_BASE is
        set outside the EthTSyn_MainFunction().
         In the current EthTSyn_MainFunction(), when switching from immediate
        to cyclic transmission (because this decision is made inside the
        EthTSyn_MainFunction()).
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00016</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00135</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_TxConfirmation() with parameter 'Result' equal to
        E_OK the egress time stamp of the Sync message shall be retrieved via
        EthIf_GetEgressTimeStamp() from the EthIf and converted to the Virtual Local
        Time T2VLT according to EthTSyn_Egress_Time_Stamping, if EthTSynHardwareTimestampSupport
        (ECUC_EthTSyn_00018 : ) is set to TRUE.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4101</srcid><srcstatus/><internalId>841</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4124</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01999_MasterSendsSwtSyncFrames</srcid><srcstatus/><internalId>1949</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01258_SyncReliableTxConfirmation</srcid><srcstatus/><internalId>2206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM
        does not use the Ethernet hardware counter as Virtual Local Time Source for the Time Base,
        the following sequence shall be applied on invocation of EthTSyn_TxConfirmation()with parameter 'Result' equal to E_OK
        or in the following EthTSyn_MainFunction() call:
          1. Protect the following two steps against interruptions:
          2. the current time of the Ethernet hardware counter shall be retrieved via EthIf_GetCurrentTime()
            from the EthIf and converted to the Virtual Local Time T3VLT.
          3. the current value of the Virtual Local Time of the Time Base shall be retrieved as T4VLT via
            StbM_GetCurrentVirtualLocalTime()
          4. the preciseOriginTimestamp shall be calculated as T0 – (T3VLT – T2VLT) + (T4VLT – T0VLT)
        (RS_TS_20048)
      </description>
      <comment>
        Note: When using interrupt mode with interrupt nesting disabled,
        the EthTSyn does not need to explicitly establish a protection against interruptions in
        EthTSyn_TxConfirmation(), because this is implicitly done by the controller.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13259</srcid><srcstatus/><internalId>1432</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13265</srcid><srcstatus/><internalId>1433</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13279</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13287</srcid><srcstatus/><internalId>1435</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01258_SyncReliableTxConfirmation</srcid><srcstatus/><internalId>2206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM does
        use the Ethernet hardware counter as Virtual Local Time Source for the Time Base,
        the preciseOriginTimestamp shall be calculated as T0 – (T0VLT – T2VLT).(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13230</srcid><srcstatus/><internalId>1430</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</srcid><srcstatus/><internalId>1851</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to FALSE,
        the preciseOriginTimestamp shall be calculated as T0 + (T4VLT - T0VLT).(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.T0PreciceOrigin</srcid><srcstatus/><internalId>774</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall consider the debounceCounter, which represents a time offset between
        Sync and Follow_Up message, before transmitting the Follow_Up message.(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00132</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The following parameters provided by the invocation of EthTSyn_SetProtocolParam()in argument
        protocolParam, shall be used by EthTSyn for the next Follow_Up information TLV message:
         cumulativeScaledRateOffset
         gmTimeBaseIndicator
         lastGmPhaseChange
         scaledLastGmFreqChange
        ⌋(RS_TS_20069)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5046</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01016_SetProtocolParam</srcid><srcstatus/><internalId>2113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the Time Master transmits a Follow_Up message (refer to [PRS_TS_00018] in [1]),
        the following sequence shall be applied:
          1. Get a free transmission buffer via EthIf_ProvideTxBuffer()
          2. Trigger transmit request with the transmission timestamp of
          [SWS_EthTSyn_00017] via EthIf_Transmit()
          (RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5512</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16846</srcid><srcstatus/><internalId>1637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>2</version>
      <description>
        If EthTSynMasterSlaveConflictDetection(ECUC_EthTSyn_00075) is set to TRUE and if the
        Time Master receives a Sync message from another Time Master, it shall report a
        runtime error by calling Det_ReportRuntimeError(ETHTSYN_E_TMCONFLICT) and
        discard the received Sync message.(RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01014_Master_ReceiveSyncFrame</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01014_Master_ReceiveSwtSyncFrame</srcid><srcstatus/><internalId>2110</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8266</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15694</srcid><srcstatus/><internalId>1576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynImmediateTimeSync(ECUC_EthTSyn_00046) is set to TRUE, EthTSyn shall check
        within each EthTSyn_MainFunction() call by calling StbM_GetTimeBaseUpdateCounter()
        if the returned timeBaseUpdateCounter has been changed.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01122_ImmediateTimeSync</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01123_ImmediateTimeSync_CounterNotUpdated</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01128_ImmediateSwtTimeSync</srcid><srcstatus/><internalId>1902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12657</srcid><srcstatus/><internalId>1378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If
          - EthTSynImmediateTimeSync (ECUC_EthTSyn_00046 : ) is set to TRUE
          - and the timeBaseUpdateCounter[timeBaseId] for the updated Time Base resp. timeBaseId has been changed
          - and the GLOBAL_TIME_BASE bit within the timeBaseStatus, which is read from StbM, is set,
        EthTSyn shall trigger an immediate transmission of Time Synchronization messages belonging to this Time Base.(RS_TS_20047)
      </description>
      <comment>
        Note: The timeBaseStatus can be read from StbM by StbM_GetTimeBaseStatus(),
          StbM_BusGetCurrentTime() or StbM_GetCurrentTime().
          The debounceCounter as described in 7.4 has always to be considered.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01122_ImmediateTimeSync</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01124_ImmediateTimeSync_StatusNotSet</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01128_ImmediateSwtTimeSync</srcid><srcstatus/><internalId>1902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12271</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12469</srcid><srcstatus/><internalId>1361</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12729</srcid><srcstatus/><internalId>1384</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSynImmediateTimeSync(ECUC_EthTSyn_00046) is set to TRUE, EthTSynCyclicMsgResumeTime
        (ECUC_EthTSyn_00047) shall be considered.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01122_ImmediateTimeSync</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01128_ImmediateSwtTimeSync</srcid><srcstatus/><internalId>1902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12490</srcid><srcstatus/><internalId>1362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSynCyclicMsgResumeTime(ECUC_EthTSyn_00047) represents the timeout value of a
        cyclicMsgResumeCounter that shall be started when a Sync has been sent immediately,
        asynchronous to the cyclic transmission. The cyclicMsgResumeCounter shall be decremented
        on each invocation of EthTSyn_MainFunction() if no Timesync PDU
        is transmitted asynchronously.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00137.1</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00137.2</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00137.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf 4.4.0</source>
      <version>1</version>
      <description>
        EthTSynCyclicMsgResumeTime (ECUC_EthTSyn_00047 : ) represents the
        timeout value of a cyclicMsgResumeCounter that shall be started when a Sync
        has been sent immediately, asynchronous to the cyclic transmission.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01122_ImmediateTimeSync</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01128_ImmediateSwtTimeSync</srcid><srcstatus/><internalId>1902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12491</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00137</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00137.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf 4.4.0</source>
      <version>1</version>
      <description>
        The cyclicMsgResumeCounter shall be decremented on each invocation of
        EthTSyn_MainFunction() if no Timesync PDU is transmitted asynchronously.
        (RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01122_ImmediateTimeSync</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01128_ImmediateSwtTimeSync</srcid><srcstatus/><internalId>1902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12284</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12492</srcid><srcstatus/><internalId>1364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00137</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the cyclicMsgResumeCounter has reached a value equal or less than 0,
        EthTSyn shall resume cyclic Timesync message transmission by sending a Sync.(RS_TS_20047)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01122_ImmediateTimeSync</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01123_ImmediateTimeSync_CounterNotUpdated</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01124_ImmediateTimeSync_StatusNotSet</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01128_ImmediateSwtTimeSync</srcid><srcstatus/><internalId>1902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12288</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        A transceiver link state change (notification call of EthTSyn_TrcvLinkStateChg()) from
        ETHTRCV_LINK_STATE_ACTIVE to ETHTRCV_LINK_STATE_DOWN resets the state machines for
        transmission and reception of Time Synchronization messages.(RS_TS_20048, RS_TS_20051) 
      </description>
      <comment>
        Transmission of sync and Pdelay requests are stopped. Received frames will be processed.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01002_ResetSyncFrames</srcid><srcstatus/><internalId>1964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12766</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        A transceiver link state change (notification call of EthTSyn_TrcvLinkStateChg()) from
        ETHTRCV_LINK_STATE_DOWN to ETHTRCV_LINK_STATE_ACTIVE (re-)starts the transmission
        and reception of Time Synchronization messages.(RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01002_ResetSyncFrames</srcid><srcstatus/><internalId>1964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12654</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSyn_SetTransmissionMode() is called and the parameter Mode equals ETHTSYN_TX_OFF,
        all transmit request from EthTSyn shall be omitted on this Ethernet controller.(RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01003_TransmissionMode_OFF</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12646</srcid><srcstatus/><internalId>1375</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12801</srcid><srcstatus/><internalId>1389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If EthTSyn_SetTransmissionMode() is called and the parameter Mode equals ETHTSYN_TX_ON,
        all transmit request from EthTSyn on this Ethernet controller shall be able to be transmitted.(RS_TS_20048, RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12647</srcid><srcstatus/><internalId>1376</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12802</srcid><srcstatus/><internalId>1390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Master shall get the Offset Time Base value from the StbM via StbM_GetOffset().(RS_TS_20063)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01219_OfsSecured_Tx</srcid><srcstatus/><internalId>1906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6684</srcid><srcstatus/><internalId>1024</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC8H2F() as defined in [7] shall be used to calculate the CRC
        if configured.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01072_TimeSecured_CrcSupported_Tx</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0050_ICV_SWT_No_ICV</srcid><srcstatus/><internalId>2293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9562</srcid><srcstatus/><internalId>1231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>2</version>
      <description>
        For each transmission of a Time Synchronization message, the EthTSyn module shall
        assemble the message as follows:
          1. If Sync: Calculate Message Header
          2. If Follow_Up: Calculate Follow_Up.preciseOriginTimestamp and Message Header inclusive correctionField
          3. If Follow_Up: Calculate IEEE TLV
          4. If Follow_Up: Calculate AUTOSAR TLV (configuration dependent)
             a. Calculate CRC (configuration dependent)
          5. Copy all data to the appropriate position within the related message(RS_TS_20048)
      </description>
      <comment>
        Refer to chapter 5.6.2.2.5 Message Assembling in
        [1].c(RS_TS_20048, RS_TS_20072)
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
        <ffbId>EthTSyn.R22-11.PRS_TS_000104</ffbId>
        <ffbType>swurs</ffbType>
        <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>204</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() the ingress time stamp shall be
        retrieved for Sync via EthIf_GetIngressTimeStamp() from the EthIf and
        converted to the Virtual Local Time T1VLT according to EthTSyn Ingress Time Stamping,
        if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE.(RS_TS_20048)
      </description>
      <comment>
        Note: EthTSyn Ingress Time Stamping is shown in Figure 9.5 and Figure 9.6
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_SyncWithOverflow</srcid><srcstatus/><internalId>1971</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8476</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10249</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16438</srcid><srcstatus/><internalId>1621</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16451</srcid><srcstatus/><internalId>1622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() for the Sync message and if EthTSynHardwareTimestampSupport
        is set to TRUE and if the StbM does use the Ethernet hardware counter as Virtual Local Time Source
        for the Time Base:
        • The T2V LT part of the Rx Time Tuple shall be set to the value of T1VLT (i.e., T2VLT = T1VLT)
        • The Sync reception delay TSRD shall be set to 0.
        (RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01238_Slave_VltStbMIsEthFreerunningCounter</srcid><srcstatus/><internalId>2075</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0043_EgressAfterSyncFUP</srcid><srcstatus/><internalId>2190</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10348</srcid><srcstatus/><internalId>1282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() and if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018)
        is set to FALSE the following sequence shall be applied:
        1. Immediately establish a protection against interruptions and run the next step directly afterwards:
        2. Retrieve the reference time T1VLT for the Sync message via StbM_GetCurrentVirtualLocalTime() from the StbM
        3. The protection against interruptions may be removed now(RS_TS_20048)
        The T2V LT part of the Rx Time Tuple shall be set to the value of T1VLT (i.e., T2V LT = T1V LT).
        The Sync reception delay TSRD shall be set to 0. 
      </description>
      <comment>
        Note: Immediately protecting against interruptions means that there shall be no frame checks before.
        If called in context of the Rx interrupt with interrupt nesting disabled, protection against interruptions
        is implicitly done by the controller. Once the interrupts are locked, it is ok to check whether the received
        message is a Sync message for which a snapshot of the Virtual Local Time shall be taken,
        but no other frame checks (e.g., SC validation) shall be done before taking the snapshot.
        Once the snapshot has been taken it is ok to remove the protection against interruptions and
        to make the necessary validations. This means that a snapshot of the Virtual Local Time shall be taken
        even if the succeeding validations fail and thus making the snapshot superfluous.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00180_Protection</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</srcid><srcstatus/><internalId>295</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00180_SRD</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00180_Protection</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() and if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018)
        is set to FALSE the following sequence shall be applied:
        1. Immediately establish a protection against interruptions and run the next step directly afterwards:
      </description>
      <comment>
        Stop protection as soon as StbM_GetCurrentVirtualLocalTime() was called.
        Can not be tested with unit test, only be linked to implementation.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12922</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12943</srcid><srcstatus/><internalId>1402</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() and if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018)
        is set to FALSE the following sequence shall be applied:
        2. Retrieve the reference time T1VLT for the Sync message via StbM_GetCurrentVirtualLocalTime() from the StbM
      </description>
      <comment>
        While being protected against interruptions.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01231_OfsNotSecured_Ignored_Crc</srcid><srcstatus/><internalId>1921</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01032_HW_Disabled_SyncFrame_Ingress</srcid><srcstatus/><internalId>1978</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01039_SlaveUsesCalculatedPdelay</srcid><srcstatus/><internalId>1983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12932</srcid><srcstatus/><internalId>1399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
       <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00180_SRD</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() and if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018)
        is set to FALSE the following sequence shall be applied:
        The T2V LT part of the Rx Time Tuple shall be set to the value of T1VLT (i.e., T2V LT = T1V LT).
        The Sync reception delay TSRD shall be set to 0. 
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01231_OfsNotSecured_Ignored_Crc</srcid><srcstatus/><internalId>1921</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01039_SlaveUsesCalculatedPdelay</srcid><srcstatus/><internalId>1983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10367</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication(), a reference time shall be retrieved on reception of the Sync message if
        EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM does not use
        the Ethernet hardware counter as Virtual Local Time Source for the Time Base by applying the following sequence:
          1. Protect the following two steps against interruptions:
          2. the current time of the Ethernet hardware counter shall be retrieved via EthIf_GetCurrentTime()
            from the EthIf and converted to the Virtual Local Time T3VLT
          3. the current value of the Virtual Local Time of the Time Base shall be retrieved as T2VLT
            via StbM_GetCurrentVirtualLocalTime()
          4. the sync reception delay shall be calculated as T3VLT – T1VLT(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00190_Protection</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00190_GetCurrentTime</srcid><srcstatus/><internalId>299</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00190_GetCurrentVirtual</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00190_SRD</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00190_Protection</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication(), a reference time shall be retrieved on reception of the Sync message if
        EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM does not use
        the Ethernet hardware counter as Virtual Local Time Source for the Time Base by applying the following sequence:
          1. Protect the following two steps against interruptions:
      </description>
      <comment>
        Can not be tested with unit test, only be linked to implementation.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10303</srcid><srcstatus/><internalId>1276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00190_GetCurrentTime</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication(), a reference time shall be retrieved on reception of the Sync message if
        EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM does not use
        the Ethernet hardware counter as Virtual Local Time Source for the Time Base by applying the following sequence:
          2. the current time of the Ethernet hardware counter shall be retrieved via EthIf_GetCurrentTime()
            from the EthIf and converted to the Virtual Local Time T3VLT
      </description>
      <comment>
        While being protected from interruptions.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10306</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00190_GetCurrentVirtual</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication(), a reference time shall be retrieved on reception of the Sync message if
        EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM does not use
        the Ethernet hardware counter as Virtual Local Time Source for the Time Base by applying the following sequence:
          3. the current value of the Virtual Local Time of the Time Base shall be retrieved as T2VLT
            via StbM_GetCurrentVirtualLocalTime()
      </description>
      <comment>
        While being protected from interruptions.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10317</srcid><srcstatus/><internalId>1280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00190_SRD</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication(), a reference time shall be retrieved on reception of the Sync message if
        EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018) is set to TRUE and if the StbM does not use
        the Ethernet hardware counter as Virtual Local Time Source for the Time Base by applying the following sequence:
          4. the sync reception delay shall be calculated as T3VLT – T1VLT(RS_TS_20048)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10330</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        For a valid Follow_Up message a new Time Tuple [T2;T2VLT] shall be calculated and forwarded
        to the StbM module via StbM_BusSetGlobalTime(), according to EthTSyn Ingress Time Stamping, where T2 is the sum of:
        - preciseOriginTimestamp,
        - correctionField,
        - Pdelay
        - the Sync reception delay TSRD.(RS_TS_20048)
      </description>
      <comment>
        Note: The Pdelay value is not influenced by a RateRatio acc to [13] Note-2 of chapter 11.2.15.2.4 “computePropTime():”.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_SyncWithOverflow</srcid><srcstatus/><internalId>1971</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01012_Slave_NegativeSync</srcid><srcstatus/><internalId>1976</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01238_Slave_VltStbMIsEthFreerunningCounter</srcid><srcstatus/><internalId>2075</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0039_SlaveReceives_ICV_NotConfig</srcid><srcstatus/><internalId>2281</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13110</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13523</srcid><srcstatus/><internalId>1451</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16271</srcid><srcstatus/><internalId>1606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On an invocation of StbM_BusSetGlobalTime() the current Pdelay value shall be
        passed by the parameter measureDataPtr-&gt;PathDelay.(RS_TS_20058)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01039_SlaveUsesCalculatedPdelay</srcid><srcstatus/><internalId>1983</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01053_SlavePdelayFilter_Enabled</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01069_Slave_UsesStaticPdelay</srcid><srcstatus/><internalId>2041</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13434</srcid><srcstatus/><internalId>1443</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16228</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        When providing a new Global Time tuple to the StbM via StbM_BusSetGlobalTime(),
        EthTSyn shall set the SYNC_TO_GATEWAY bit in timeBaseStatus
        (structure member, which is referenced by the parameter timeStampPtr),
        according to the SGW value (refer to [PRS_TS_00156]).
        The remaining status bits shall be set to 0.(RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01078_StatusNotSecured_CrcNotValidated_Rx</srcid><srcstatus/><internalId>1852</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01079_StatusNotSecured_CrcIgnored_Rx</srcid><srcstatus/><internalId>1853</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01085_TimeStatusUserDataSecured_CrcValidated_EqualCrcRx</srcid><srcstatus/><internalId>1859</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01086_StatusSecured_CrcIgnored_EqualCrc_Rx</srcid><srcstatus/><internalId>1860</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01087_StatusSecured_CrcValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1861</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01089_StatusSecured_CrcNotValidated_EqualCrc_Rx</srcid><srcstatus/><internalId>1863</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01090_TimeSecured_CrcValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1864</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01091_StatusSecured_CrcNotValidated_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1865</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01093_StatusSecured_CrcIgnored_NotEqualCrc_Rx</srcid><srcstatus/><internalId>1867</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01096_StatusSecured_CrcValidated_SyncToGatewayNotSet</srcid><srcstatus/><internalId>1870</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01097_StatusSecured_CrcIgnored_SyncToGatewayNotSet</srcid><srcstatus/><internalId>1871</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01102_StatusNotSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1873</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13520</srcid><srcstatus/><internalId>1448</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16268</srcid><srcstatus/><internalId>1603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00227</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_GetProtocolParam() EthTSyn shall return the following
        values received in the latest Follow_Up information TLV via argument protocolParam:
         cumulativeScaledRateOffset
         gmTimeBaseIndicator
         lastGmPhaseChange
         scaledLastGmFreqChange
        Member protocolType of argument protocolParam shall be set to STBM_TIMESYNC_ETHERNET
        ⌋(RS_TS_20069)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5113</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01015_GetProtocolParam</srcid><srcstatus/><internalId>2112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>2</version>
      <description>
        If EthTSynMasterSlaveConflictDetection(ECUC_EthTSyn_00075) is set to TRUE
        and if the Time Slave receives a Sync frame with different sourcePortIdentity
        (i.e., different MAC addresses), it shall report a runtime error by calling
        Det_ReportRuntimeError(ETHTSYN_E_TSCONFLICT) and discard the received Sync frame.
        (RS_TS_20051)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01210_Receive_Diff_SrcPortID</srcid><srcstatus/><internalId>2064</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7911</srcid><srcstatus/><internalId>1123</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8241</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15674</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Time Slave shall forward the new Offset Time to the StbM via StbM_BusSetGlobalTime()
        as calculated according to [PRS_TS_00110]), if successfully validated.(RS_TS_20063)
      </description>
      <comment>
        Refer to chapter 5.6.3.2.2 OFS Calculation in [1] for additional requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</srcid><srcstatus/><internalId>1936</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED_NoSubTLV</srcid><srcstatus/><internalId>2255</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13609</srcid><srcstatus/><internalId>1452</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function Crc_CalculateCRC8H2F() as defined in [7] shall be used to calculate the CRC if configured.
        (RS_TS_20061)
      </description>
      <comment>
        Refer to chapter 5.6.3.2.3 CRC Calculation in [1] for additional requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01076_TimeSecured_CrcValidated_ThreeFlags_Rx</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01074_TimeSecured_CrcValidated_InvalidTlvType_Rx</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9549</srcid><srcstatus/><internalId>1230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The EthTSyn shall support Time Validation, if EthTSynTimeValidationSupport
        (ECUC_EthTSyn_00081) is set to TRUE.(RS_TS_00034)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.TimeValidation_MasterTransmit.vc01</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00215.vc01</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.TimeValidation_SlaveReceive.vc01</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_130</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00213</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
       If
        • EthTSynTimeValidationSupport is enabled and
        • EthTSynEnableTimeValidation for the Time Domain is enabled,
          EthTSyn shall do time recording for Time Validation for that Time Domain.
          (RS_TS_00034)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.TimeValidation_MasterTransmit.vc01</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00215.vc01</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.TimeValidation_SlaveReceive.vc01</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4167</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5373</srcid><srcstatus/><internalId>926</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5798</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6013</srcid><srcstatus/><internalId>964</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6194</srcid><srcstatus/><internalId>976</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8516</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9947</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10099</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10177</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10377</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10507</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10827</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10944</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11499</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13345</srcid><srcstatus/><internalId>1436</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13496</srcid><srcstatus/><internalId>1447</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13632</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14594</srcid><srcstatus/><internalId>1511</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16282</srcid><srcstatus/><internalId>1608</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16286</srcid><srcstatus/><internalId>1609</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16406</srcid><srcstatus/><internalId>1618</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16511</srcid><srcstatus/><internalId>1625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If time recording for Time Validation is enabled for a Master Port Domain of a Time Domain
        (refer to [SWS_EthTSyn_00212] and [SWS_EthTSyn_00213]) the EthTSyn shall call
        StbM_EthSetMasterTimingData() upon successful transmission of a Sync message
        (refer to EthTSyn TimesyncSequence.(RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.TimeValidation_MasterTransmit.vc01</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00215.vc01</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4169</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_EthSetMasterTimingData() (refer to [SWS_EthTSyn_00214]) the EthTSyn shall pass the following parameters
        • the sequenceId of the sent Sync message,
        • the sourcePortIdentity as sent in the Sync message
        • the Virtual Local Time T2VLT sampled on egress of the Sync message (refer to [SWS_EthTSyn_00127]),
        • the preciseOriginTimestamp as copied to the Sync message (refer to [SWS_EthTSyn_00188])
        • the correctionField as copied to the FollowUp message.
          by the parameter measureDataPtr.(RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00215.vc01</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4178</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16827</srcid><srcstatus/><internalId>1636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If
          • time recording for Time Validation is enabled for a Time Domain (refer to [SWS_EthTSyn_00212] and [SWS_EthTSyn_00213]) and
          • EthTSyn is configured as Time Slave for that Time Domain
        EthTSyn shall call StbM_EthSetSlaveTimingData() upon successful reception of a Follow_Up message (refer to EthTSyn TimesyncSequence) .
        Note: StbM_BusSetGlobalTime() shall be called first, because it updates the Synclocal Time Tuple (refer to [2]),
        which is required by StbM_EthSetSlaveTimingData().
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.TimeValidation_SlaveReceive.vc01</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13636</srcid><srcstatus/><internalId>1454</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16289</srcid><srcstatus/><internalId>1610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Upon invocation of StbM_EthSetSlaveTimingData() EthTSyn shall pass following values
        • the sequenceId received in the Follow_Up message,
        • the sourcePortIdentity received in the Follow_Up message and
        • the Virtual Local Time T1VLT sampled on ingress of the Sync message
          (refer to [SWS_EthTSyn_00128]),
        • the preciseOriginTimestamp received in the Sync message
        • the correctionField received in the Sync message and 
        • the current value of the Pdelay to the function by the parameter measureDataPtr.

        The struct members
        • measureDataPtr-&gt;referenceLocalTimestamp and
        • measureDataPtr-&gt;referenceGlobalTimestamp
        shall be passed as 0.
        (RS_TS_00034)
        Note: The EthTSyn passes 0 to avoid undefined values. The StbM will calculate the
        structure members referenceLocalTimestamp and referenceGlobalTimestamp
        based on the Synclocal Time Tuple (refer to SWS_StbM_00471 in [6]).
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00217.vc01</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13640</srcid><srcstatus/><internalId>1455</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16293</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If
        • time recording for Time Validation is enabled for a Time Domain
           (refer to [SWS_EthTSyn_00212] and [SWS_EthTSyn_00213]) and
        • EthTSyn is configured as Time Master for that Time Domain
        EthTSyn shall call StbM_BusGetCurrentTime() to retrieve a Time Tuple
          [T_refPDResponder; TVLT_refPDResponder] before sending the pDelay_Resp message
          (refer to EthTSyn PdelaySequence).
        (RS_TS_00034)
        Note:
        The Time Tuple [T_refPDResponder; TVLT_refPDResponder] will be used for coherent
          conversion of t2 to requestReceiptTimestamp and t3 to responseOriginTimestamp,
          i.e., of instances in Virtual Local Time values into instances in Global Time.
      </description>
      <comment>
        Note: EthTSyn PdelaySequence is shown in Figure 9.3 
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00218.vc01</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6023</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        If
        • time recording for Time Validation is enabled for the Time Domain
          (refer to [SWS_EthTSyn_00212] and [SWS_EthTSyn_00213]) and
        • EthTSyn is configured as Time Master for that Time Domain
        EthTSyn shall call StbM_EthSetPdelayResponderData() after the current
        Pdelay measurement is finished, i.e., upon transmission of the
        Pdelay_Resp_Follow_Up message (refer to EthTSyn PdelaySequence).
        (RS_TS_00034)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00219.vc01</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4239</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4272</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R19-11</source>
      <version>1</version>
      <description>
        The Time Master shall pass the following parameters
        • the sequenceId of the received Pdelay_Req message and
        • the sourcePortIdentity of the received Pdelay_Req message,
        • the sourcePortIdentity of the sent Pdelay_Resp message
        • t2 (refer to [SWS_EthTSyn_00160], [SWS_EthTSyn_00124]),
        • t3 (refer to [SWS_EthTSyn_00159], [SWS_EthTSyn_00122]) and
        • the sampled reference Time Tuple [T_refPDResponder; TVLT_refPDResponder]
          (refer to [SWS_EthTSyn_00218]) to StbM_EthSetPdelayResponderData()
          upon invocation by the parameter measureDataPtr.
        (RS_TS_00034)
      </description>
      <comment/>
      <releases>
       <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00219.vc01</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4243</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4276</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15034</srcid><srcstatus/><internalId>1541</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R19-11</source>
      <version>1</version>
      <description>
        If time recording for Time Validation is enabled for the Time Domain
        (refer to [SWS_EthTSyn_00212] and [SWS_EthTSyn_00213]),
        the Time Slave shall call StbM_BusGetCurrentTime()
        to retrieve a Time Tuple [T_refPdInitiator; TVLT_refPDInitiator] before sending the
        pDelay_Req message (refer to EthTSyn PdelaySequence).(RS_TS_00034).
        Note: The Time Tuple Tuple [T_refPDInitiator; TVLT_refPDInitiator] will be used for
          coherent conversion of t1 and t4 from Virtual Local Time values into Global Time values. 
      </description>
      <comment>
        Note: EthTSyn PdelaySequence is shown in Figure 9.3
      </comment>
      <releases>
       <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00223.vc01</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5808</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14607</srcid><srcstatus/><internalId>1512</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R19-11</source>
      <version>1</version>
      <description>
        If
          • time recording for Time Validation is enabled for the Time Domain
          (refer to [SWS_EthTSyn_00212] and [SWS_EthTSyn_00213]) and
          • EthTSyn is configured as Time Slave for that Time Domain
          EthTSyn shall call StbM_EthSetPdelayInitiatorData() after the current
          Pdelay measurement is finished, i.e., upon reception of the
          Pdelay_Resp_Follow_Up message (refer to Figure 5).
          (RS_TS_00034)
      </description>
      <comment/>
      <releases>
       <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00221.vc01</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11480</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11509</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00222</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R19-11</source>
      <version>1</version>
      <description>
        The Time Slave shall pass the following parameters
        • the sequenceId of the sent Pdelay_Req message,
        • the sourcePortIdentity of the sent Pdelay_Req message,
        • the sourcePortIdentity of the received Pdelay_Resp message
        • t1 (refer to [SWS_EthTSyn_00013]),
        • t4 (refer to [SWS_EthTSyn_00049]),
        • the requestReceiptTimestamp from the Pdelay_Resp message,
        • the responseOriginTimestamp from the Pdelay_Resp_Follow_Up message,
        • the sampled reference Time Tuple [T_refPDInitiator;TVLT_refPDInitiator]
        (refer [SWS_EthTSyn_00223])
        to StbM_EthSetPdelayInitiatorData() upon invocation by the parameter measureDataPtr.
        (RS_TS_00034)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SWS_EthTSyn_00221.vc01</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11484</srcid><srcstatus/><internalId>1320</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11513</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00029</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On errors and exceptions, the EthTSyn module shall not modify its current module
        state but shall simply report the error event.
        (SRS_StbM_20051, SRS_BSW_00323)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement is too general and therefore not suitable to be tested. Error
        cases are described by more detailed requirements.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following errors:
        Type or error                    Related error code            Value [hex]
        API service used in              ETHTSYN_E_UNINIT              0x20
        un-initialized state
        EthTSyn initialization failed    ETHTSYN_E_INIT_FAILED         0x21
        API called with invalid          ETHTSYN_E_CTRL_IDX            0x22
        controller index 
        API call with                    ETHTSYN_E_PARAM_POINTER       0x23
        invalid pointer
        API call with                    ETHTSYN_E_PARAM               0x24
        invalid parameter
        (SRS_BSW_00337, SRS_BSW_00385, SRS_BSW_00323)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_UNINIT</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_CTRL_IDX</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM_POINTER</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM</srcid><srcstatus/><internalId>326</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    
        <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_UNINIT</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following errors:
        Type or error                    Related error code            Value [hex]
        API service used in              ETHTSYN_E_UNINIT              0x20
        un-initialized state
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_126</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_CTRL_IDX</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following errors:
        Type or error                    Related error code            Value [hex]
        API called with invalid          ETHTSYN_E_CTRL_IDX            0x22
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_138</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM_POINTER</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following errors:
        Type or error                    Related error code            Value [hex]
        API call with                    ETHTSYN_E_PARAM_POINTER       0x23
        invalid pointer
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_145</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following errors:
        Type or error                    Related error code            Value [hex]
        API call with                    ETHTSYN_E_PARAM               0x24
        invalid parameter
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_151</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following errors:
        Type or error                    Related error code            Value [hex]
        EthTSyn initialization failed    ETHTSYN_E_INIT_FAILED         0x21
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc01</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc02</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc03</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_132</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3815</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following runtime errors:
        Type or error                    Related error code            Value [hex]
        Time Master conflict             ETHTSYN_E_TMCONFLICT          0x01
        Time Slave conflict              ETHTSYN_E_TSCONFLICT          0x02
        (SRS_BSW_00385)
      </description>
      <comment>
        Replaced and covered by R22-11 requirement.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00144</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.R22-11Update</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00031</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Module              Header File           Imported Type
        ComStack_Types      ComStack_Types.h      BufReq_ReturnType
        EthSwt              EthSwt.h              EthSwt_MgmtInfoType
        EthTrcv             Eth_GeneralTypes.h    EthTrcv_LinkStateType
        Eth_GeneralTypes    Eth_GeneralTypes.h    Eth_BufIdxType
                                                  Eth_DataType
                                                  Eth_FrameType
                                                  Eth_TimeStampQualType
                                                  Eth_TimeStampType
        StbM                Rte_StbM_Type.h       StbM_EthTimeMasterMeasurementType
                                                  StbM_EthTimeSlaveMeasurementType
                                                  StbM_PdelayInitiatorMeasurementType
                                                  StbM_PdelayResponderMeasurementType
                                                  StbM_PortIdType
                                                  StbM_ProtocolParamType
                                                  StbM_SynchronizedTimeBaseType
                                                  StbM_TimeBaseStatusType
                                                  StbM_TimeStampShortType
                                                  StbM_TimeStampType
                                                  StbM_TimeSyncType
                                                  StbM_UserDataType
                            StbM.h                StbM_MeasurementType
                                                  StbM_VirtualLocalTimeType
        Std_Types           StandardTypes.h       Std_ReturnType
                                                  Std_VersionInfoType
        (RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the types provided by other modules.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSyn_ConfigType
        Type: Structure
        Element: void implementation specific --
        Description: This is the base type for the configuration of the Global Time Synchronization
                     over Ethernet.
                     A pointer to an instance of this structure will be used in the initialization
                     of the Global Time Synchronization over Ethernet.
                     The content of this structure is defined in chapter 10 Configuration
                     specification.
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment>
        Verify that EthTSyn_ConfigType is available for other modules.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_656</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSyn_TransmissionModeType
        Type: --
        Range: ETHTSYN_TX_OFF 0x00 Transmission Disabled
               ETHTSYN_TX_ON  0x01 Transmission Enabled
        Description: Handles the enabling and disabling of the transmission mode
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn_Types.h_67</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_Init
        Syntax: void EthTSyn_Init(
                                   const EthTSyn_ConfigType* configPtr
                                 )
        Service ID[hex]: 0x01
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): configPtr Pointer to selected configuration structure
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: This function initializes the Time Synchronization over Ethernet.
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00035.ServiceId</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3795</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00035.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_INIT shall have the value: Service ID[hex]: 0x01.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_36</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00035</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_GetVersionInfo
        Syntax: void EthTSyn_GetVersionInfo(
                                             Std_VersionInfoType* versioninfo
                                           )
        Service ID[hex]: 0x02
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): None
        Parameters (inout): None
        Parameters (out): versioninfo Pointer to where to store the version information of this
                                      module.
        Return value: None
        Description: Returns the version information of this module.
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00036.ServiceId</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3765</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00036.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_GETVERSIONINFO shall have the value: Service ID[hex]: 0x02.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_43</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00036</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_SetTransmissionMode
        Syntax: void EthTSyn_SetTransmissionMode(
                                                            uint8 CtrlIdx,
                                                            EthTSyn_TransmissionModeType Mode
                                                          )
        Service ID[hex]: 0x05
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): CtrlIdx Index of the Ethernet controller
                         Mode ETHTSYN_TX_OFF
                              ETHTSYN_TX_ON
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: This API is used to turn on and off the TX capabilities of the EthTSyn.
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00039.ServiceId</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4417</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00039.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_SETTRANSMISSIONMODE shall have the value: Service ID[hex]: 0x05.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_50</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00039</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_SetTransmissionMode() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if function call has failed because of the following reasons:
        - CtrlIdx is invalid (ETHTSYN_E_CTRL_IDX)
        - Mode is invalid (ETHTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00172_CtrlIdx</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00172_Mode</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00172_CtrlIdx</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_SetTransmissionMode() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if function call has failed because of the following reasons:
        - CtrlIdx is invalid (ETHTSYN_E_CTRL_IDX)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01024_SetTransmissionMode_InvalidCtrlID</srcid><srcstatus/><internalId>1995</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4478</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00172</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00172_Mode</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_SetTransmissionMode() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if function call has failed because of the following reasons:
        - Mode is invalid (ETHTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det007_SetTransmissionMode_InvalidParam</srcid><srcstatus/><internalId>1943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4434</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00172</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00330</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_SetProtocolParam
        Syntax: Std_ReturnType EthTSyn_SetProtocolParam(
                                            StbM_SynchronizedTimeBaseType timeBaseId,
                                            const StbM_ProtocolParamType* protocolParam
                                          )
        Service ID[hex]: 0xA
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): timeBaseId - ID of the synchronized time base
                         protocolParam - structure with Follow_Up information TLV parameters
        Parameters (inout): None
        Parameters (out): None
        Return value: E_OK: successful
                      E_NOT_OK: failed
        Description: This API is used to set FollowUp information TLV parameters of a Follow_Up 
                     message prior transmission. The API is called within StbM_SetBusProtocolParam 
                     which provides the content of the structure protocolParam.
        Available via: EthTSyn.h
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00330.ServiceId</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5007</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00330.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_SETPROTOCOLPARAM shall have the value: Service ID[hex]: 0xA.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_97</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00330</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_SetProtocolParam() shall inform the DET, if development 
        error detection is enabled (EthTSynDevErrorDetect (ECUC_EthTSyn_00002 : )
        is set to TRUE) and if function call has failed because of the following reasons:
         timeBaseId does not belong to a Time Base, which is mapped to a Time
        Domain with ID 0 ..15 in EthTSyn (Development Error: ETHTSYN_E_PARAM)
         protocolParam is NULL (Development Error:ETHTSYN_E_PARAM_POINTER)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5030</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5065</srcid><srcstatus/><internalId>905</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det009_SetProtocolParam_InvalidParam</srcid><srcstatus/><internalId>1945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00331</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_GetProtocolParam
        Syntax: Std_ReturnType EthTSyn_GetProtocolParam(
                                            StbM_SynchronizedTimeBaseType timeBaseId,
                                            StbM_ProtocolParamType* protocolParam
                                          )
        Service ID[hex]: 0xB
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): timeBaseId - ID of the synchronized time base
        Parameters (inout): None
        Parameters (out): protocolParam - structure to store received Follow_Up information TLV parameters
        Return value: E_OK: successful
                      E_NOT_OK: failed
        Description: This API is used to read FollowUp information TLV parameters from received 
                     Follow_Up message.
        Available via: EthTSyn.h
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00331.ServiceId</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00331.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_GETPROTOCOLPARAM shall have the value: Service ID[hex]: 0xB.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_104</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00331</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_GetProtocolParam() shall inform the DET, if development
        error detection is enabled (EthTSynDevErrorDetect (ECUC_EthTSyn_00002 : )
        is set to TRUE) and if function call has failed because of the following reasons:
         timeBaseId does not belong to a Time Base, which is mapped to a Time
        Domain with ID 0 ..15 in EthTSyn (Development Error: ETHTSYN_E_PARAM)
         protocolParam is NULL (Development Error: ETHTSYN_E_PARAM_POINTER)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5095</srcid><srcstatus/><internalId>907</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5130</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det008_GetProtocolParam_InvalidParam</srcid><srcstatus/><internalId>1944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>2</version>
      <description>
        Service name: EthTSyn_RxIndication
        Syntax: void EthTSyn_RxIndication(
                                            uint8 CtrlIdx,
                                            Eth_FrameType FrameType,
                                            boolean IsBroadcast,
                                            const uint8* PhysAddrPtr,
                                            const uint8* DataPtr,
                                            uint16 LenByte
                                          )
        Service ID[hex]: 0x06
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): CtrlIdx Index of the Ethernet controller
                         FrameType frame type of received Ethernet frame
                         IsBroadcast Parameter to indicate a broadcast frame which can be ignored as
                                     gPTP works over Multicast domain 
                         PhysAddrPtr pointer to Physical source address (MAC address in network byte
                                     order) of received Ethernet frame
                         DataPtr Pointer to payload of the received Ethernet frame (i.e. Ethernet
                                 header is not provided).
                         LenByte Length of received data.
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: By this API service the EthTSyn gets an indication and the data of a received
                     frame.
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00040.ServiceId</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3939</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00040.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_RXINDICATION shall have the value: Service ID[hex]: 0x06.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_64</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00040</linksto>
           <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function EthTSyn_RxIndication() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if the function call has failed because of the following reasons:
        - CtrlIdx is invalid (ETHTSYN_E_CTRL_IDX)
        - DataPtr or PhysAddrPtr is invalid (ETHTSYN_E_PARAM_POINTER)
        (SRS_BSW_00337, SRS_BSW_00323)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00041_CTRLIDX</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00041_PARAMPTR</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00041_CTRLIDX</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function EthTSyn_RxIndication() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if the function call has failed because of the following reasons:
        - CtrlIdx is invalid (ETHTSYN_E_CTRL_IDX)
        (SRS_BSW_00337, SRS_BSW_00323)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01021_RxIndication_InvalidID</srcid><srcstatus/><internalId>1992</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4022</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00041_PARAMPTR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The callback function EthTSyn_RxIndication() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if the function call has failed because of the following reasons:
        - DataPtr or PhysAddrPtr is invalid (ETHTSYN_E_PARAM_POINTER)
        (SRS_BSW_00337, SRS_BSW_00323)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det006_RxIndication_InvalidParam</srcid><srcstatus/><internalId>1942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3958</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3963</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_TxConfirmation
        Syntax: void EthTSyn_TxConfirmation(
                                             uint8 CtrlIdx,
                                             uint8 BufIdx,
                                             Std_ReturnType Result
                                           )
        Service ID[hex]: 0x07
        Sync/Async: Synchronous
        Reentrancy: Dont care
        Parameters (in): CtrlIdx Index of the Ethernet controller within the context of the Ethernet
                                 Interface
                         BufIdx Index of the buffer resource
                         Result E_OK: The transmission was successful, E_NOT_OK: The transmission failed
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: Confirms the transmission of an Ethernet frame
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00042.ServiceId</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.EthTSynTxConfirmation_BufIdxType</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest05_ReliableTxConf</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_SyncReliableTxConfirmation_NOT_OK</srcid><srcstatus/><internalId>2207</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4040</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00042.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_TXCONFIRMATION shall have the value: Service ID[hex]: 0x07.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_71</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00042</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_TxConfirmation() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if function call has failed because of the following reasons:
        - CtrlIdx is invalid (ETHTSYN_E_CTRL_IDX)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
        Not DET shall be reported. No action shall be performed.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ETHTSYN_E_CTRL_IDX</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4076</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01022_TxConfirmation_InvalidID</srcid><srcstatus/><internalId>1993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_TxConfirmation() with parameter 'Result' equal to
        E_NOT_OK the process of collection of synchronized time distribution shall be
        aborted and all intermediate result variables shall be reset to default value.
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01259_SyncReliableTxConfirmation_NOT_OK</srcid><srcstatus/><internalId>2207</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01261_PdelayReliableTxConfirmation_NOT_OK</srcid><srcstatus/><internalId>2209</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01263_PdelayReqReliableTxConfirmation_NOT_OK</srcid><srcstatus/><internalId>2211</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01264_InvCtrBuIdxReliableTxConfirmation_NOT_OK</srcid><srcstatus/><internalId>2212</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01265_MasterPdelayReqTxConfirmationNOK</srcid><srcstatus/><internalId>2213</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0028_TxConf_BufIDx</srcid><srcstatus/><internalId>2271</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0029_TxConf_NOK</srcid><srcstatus/><internalId>2272</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4311</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_TrcvLinkStateChg
        Syntax: Std_ReturnType EthTSyn_TrcvLinkStateChg(
                                                         uint8 CtrlIdx,
                                                         EthTrcv_LinkStateType TrcvLinkState
                                                       )
        Service ID[hex]: 0x08
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): CtrlIdx Index of the Ethernet controller
                         TrcvLinkState ETHTRCV_LINK_STATE_DOWN
                                       ETHTRCV_LINK_STATE_ACTIVE
        Parameters (inout): None
        Parameters (out): None
        Return value: Std_ReturnType E_OK: successful
                                     E_NOT_OK: failed
        Description: Allows resetting state machine in case of unexpected Link loss to avoid
                     inconsistent Sync and Follow_Up sequences
        Available via: EthTSyn.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00043.ServiceId</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4327</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00043.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_TRCVLINKSTATECHG shall have the value: Service ID[hex]: 0x08.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_78</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00043</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_TrcvLinkStateChg() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect(ECUC_EthTSyn_00002)
        is set to TRUE) and if function call has failed because of the following reasons:
        - CtrlIdx is invalid (ETHTSYN_E_CTRL_IDX)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ETHTSYN_E_CTRL_IDX</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4343</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01023_TrcvLinkStateChg_InvalidID</srcid><srcstatus/><internalId>1994</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service name: EthTSyn_MainFunction
        Syntax: void EthTSyn_MainFunction(
                                           void
                                         )
        Service ID[hex]: 0x09
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): None
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: Main function for cyclic call / resp. Sync, Follow_Up and Pdelay_Req
                     transmissions
        Available via: SchM.h
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00044.ServiceId</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3855</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00044.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_MAINFUNCTION shall have the value: Service ID[hex]: 0x09.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_APISyntax</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_57</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00044</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The frequency of invocations of EthTSyn_MainFunction() is determined
        by the configuration parameter EthTSynMainFunctionPeriod(ECUC_EthTSyn_00012).
        (RS_TS_20048)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Master.SendPeriodicSync</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00047</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        API function                Header File  Description
        Crc_CalculateCRC8H2F        Crc.h        This service makes a CRC8 calculation with
                                                 the Polynomial 0x2F on Crc_Length.
        Csm_MacGenerate             Csm.h        Uses the given data to perform a MAC generation
                                                 and stores the MAC in the memory location pointed
                                                 to by the MAC pointer.
        Csm_MacVerify               Csm.h        Verifies the given MAC by comparing if the MAC is
                                                 generated with the given data.
        Csm_SignatureGenerate       Csm.h        Uses the given data to perform the signature
                                                 calculation and stores the signature in the memory
                                                 location pointed by the result pointer
        Csm_SignatureVerify         Csm.h        Verifies the given MAC by comparing if the signature
                                                 is generated with the given data.
        Det_ReportError             Det.h        Service to report development errors.
        Det_ReportRuntimeError      Det.h        Service to report runtime errors. If a callout has
                                                 been configured then this callout shall be called.
        EthIf_EnableEgressTimeStamp EthIf.h      Activates egress time stamping on a dedicated message object.
                                                 Some HW does store once the egress time stamp marker and some
                                                 HW needs it always before transmission. There will be no "disable"
                                                 functionality, due to the fact, that the message type is always
                                                 "time stamped" by network design.
        EthIf_GetCurrentTime        EthIf.h      Returns a time value out of the HW registers according to the
                                                 capability of the HW. Is the HW resolution is lower than the
                                                 Eth_TimeStampType resolution resp. range, the remaining bits
                                                 will be filled with 0.
                                                 Important Note: EthIf_GetCurrentTime may be called within an exclusive area.
        EthIf_GetEgressTimeStamp    EthIf.h      Reads back the egress time stamp on a dedicated message object.
                                                 It must be called within the TxConfirmation() function.
        EthIf_GetIngressTimeStamp   EthIf.h      Reads back the ingress time stamp on a dedicated message object.
                                                 It must be called within the RxIndication() function.
        EthIf_ProvideTxBuffer       EthIf.h      Provides access to a transmit buffer of the specified Ethernet controller.
        EthIf_SetSwitchMgmtInfo     EthIf.h      Provides additional management information along to an Ethernet frame that
                                                 requires special treatment within the Switch. It has to be called between
                                                 EthIf_ProvideTxBuffer() and EthIf_Transmit() of the related frame.
        EthIf_SwitchEnableTimeStamping EthIf.h   Activates egress time stamping on a dedicated message object,
                                                 addressed by CtrlIdx and BufIdx.
        EthIf_Transmit              EthIf.h      Triggers transmission of a previously filled transmit buffer.
        IdsM_SetSecurityEventWithContextData IdsM.h This API is the application interface to report
                                                    security events with context data to the IdsM.
        StbM_BusGetCurrentTime      StbM.h       Returns the current Time Tuple, status and User Data of the Time Base.
        StbM_BusSetGlobalTime       StbM.h       Allows the Time Base Provider Modules to forward a new Global Time tuple
                                                 (i.e., the Received Time Tuple) to the StbM. 
        StbM_EthSetMasterTimingData     StbM_EthTSyn.h       Provides Ethernet Timesyn module specific data for a Time Master to the StbM.
        StbM_EthSetPdelayInitiatorData  StbM_EthTSyn.h
        StbM_EthSetPdelayResponderData  StbM_EthTSyn.h
        StbM_EthSetSlaveTimingData      StbM_EthTSyn.h       Allows the EthTSyn Module to forward Ethernet specific details to the StbM.
        StbM_GetCurrentTime         StbM.h       Returns a time value (Local Time Base derived from Global Time Base)
                                                 in standard format. 
                                                 Note: This API shall be called with locked interrupts/within an Exclusive Area
                                                 to prevent interruption (i.e., the risk that the time stamp is outdated
                                                 on return of the function call).
        StbM_GetCurrentVirtualLocalTime StbM.h   Returns the Virtual Local Time of the referenced Time Base.
        StbM_GetOffset              StbM.h       Allows the Timesync Modules to get the current Offset Time and User Data.
        StbM_GetRxFreshness         StbM.h       This interface is used by the StbM to query the
                                                 current freshness value.
        StbM_GetTimeBaseStatus      StbM.h       Returns detailed status information for a Synchronized (or Pure Local) Time Base and,
                                                 if called for an Offset Time Base, for the Offset Time Base and the
                                                 underlying Synchronized Time Base.
        StbM_GetTimeBaseUpdateCounter StbM.h     Allows the Timesync Modules to detect, whether a Time Base should be transmitted
                                                 immediately in the subsequent Bus_TSyn_MainFunction() cycle.
        StbM_GetTxFreshness           StbM.h     This API returns the freshness value from the Most Significant Bits in the
                                                 first byte, of the Freshness array, in big endian format.
        StbM_GetTxFreshnessTruncData  StbM.h     This interface is used by the StbM to obtain the current freshness value.
                                                 The interface function provides also the truncated freshness transmitted in
                                                 the secured PDU.

        StbM_SPduTxConfirmation       StbM.h     This interface is used by the StbM to indicate that the Secured Time Synchronization
                                                 Message has been initiated for transmission.
        (RS_TS_20048, RS_TS_20059)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00051</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        The EthTSyn module shall support the configuration for Time Master, Time Slave and Time Gateway.
        (RS_TS_20052, RS_TS_20053, RS_TS_20054)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: The ability for this configuration is given by the configuration parameters and
        the existence is checked via VSMD
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

<!-- R22-11 ====================================================================== -->

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        EthTSyn shall use following runtime errors:
        Type or error                    Related error code            Value [hex]
        Time Master conflict             ETHTSYN_E_TMCONFLICT          0x01
        Time Slave conflict              ETHTSYN_E_TSCONFLICT          0x02
        No FV available from the FVM     ETHTSYN_E_FRESHNESSFAILURE    0x03
        (SRS_BSW_00385)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest02_NoSlaveConfigured</srcid><srcstatus/><internalId>1829</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_96</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_102</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_108</srcid><srcstatus/><internalId>785</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is referenced(refer EthTSynIcvGenerationFvIdRef) and the configured
        truncated FV length (StbMFreshnessValueTruncLength) is equal to FV length
        (StbMFreshnessValueLength) in StbM, the Time Master shall call the
        StbM_GetTxFreshness Api in order to obtain the full FV by using the
        StbMFreshnessValueId.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6854</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00247</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is referenced (refer EthTSynIcvGenerationFvIdRef) and the configured
        truncated FV length (StbMFreshnessValueTruncLength) is less than FV length
        (StbMFreshnessValueLength) in StbM, the Time Master shall call the
        StbM_GetTxFreshnessTruncData Api in order to obtain the full FV and the truncated
        FV by using the StbMFreshnessValueId.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6826</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0041_MasterTransmitICV</srcid><srcstatus/><internalId>2283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00248</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_OK, the Time Master shall construct of the
        AUTOSAR TLV Sub-TLV: Time Authenticated with FV and use the full FV in ICV generation.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6892</srcid><srcstatus/><internalId>1042</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6917</srcid><srcstatus/><internalId>1047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00249</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_OK, the Time Master shall construct of the
        AUTOSAR TLV Sub-TLV: Time Authenticated with truncated FV and use the full FV in ICV
        generation.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6906</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0041_MasterTransmitICV</srcid><srcstatus/><internalId>2283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness or StbM_GetTxFreshnessTruncData returns E_NOT_OK,
        the Time Master shall:
        • stop the ICV generation(refer Chapter 7.7.3.5 ICV Generation) and accordingly
        set the ICV_Flags in AUTOSAR TLV Sub-TLV: Time Authenticated of Follow_Up message,
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE
        (refer [SWS_EthTSyn_00144]),
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE (refer [SWS_EthTSyn_00261])
       (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation(refer Chapter 7.7.3.5 ICV Generation) and accordingly
        set the ICV_Flags in AUTOSAR TLV Sub-TLV: Time Authenticated of Follow_Up message,
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE
        (refer [SWS_EthTSyn_00144]),
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE (refer [SWS_EthTSyn_00261])
       (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_StopIcv</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallDet</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallIdsM</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation(refer Chapter 7.7.3.5 ICV Generation) and accordingly
        set the ICV_Flags in AUTOSAR TLV Sub-TLV: Time Authenticated of Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0003_GetFreshness_NOK</srcid><srcstatus/><internalId>2242</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7215</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallDet</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_NOT_OK, the Time Master shall:
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE
        (refer [SWS_EthTSyn_00144]),
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0003_GetFreshness_NOK</srcid><srcstatus/><internalId>2242</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7033</srcid><srcstatus/><internalId>1058</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshness returns E_NOT_OK, the Time Master shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE (refer [SWS_EthTSyn_00261])
       (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0003_GetFreshness_NOK</srcid><srcstatus/><internalId>2242</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7262</srcid><srcstatus/><internalId>1080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation(refer Chapter 7.7.3.5 ICV Generation) and accordingly
        set the ICV_Flags in AUTOSAR TLV Sub-TLV: Time Authenticated of Follow_Up message,
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE
        (refer [SWS_EthTSyn_00144]),
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE (refer [SWS_EthTSyn_00261])
       (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation(refer Chapter 7.7.3.5 ICV Generation) and accordingly
        set the ICV_Flags in AUTOSAR TLV Sub-TLV: Time Authenticated of Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0004_GetTxFreshnessTruncData_NOK</srcid><srcstatus/><internalId>2243</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0025_NopFV</srcid><srcstatus/><internalId>2268</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0026_GenerationIndication_NOK</srcid><srcstatus/><internalId>2269</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0027_Tx_NOK</srcid><srcstatus/><internalId>2270</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7216</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall:
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE
        (refer [SWS_EthTSyn_00144]),
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0004_GetTxFreshnessTruncData_NOK</srcid><srcstatus/><internalId>2243</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0025_NopFV</srcid><srcstatus/><internalId>2268</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0026_GenerationIndication_NOK</srcid><srcstatus/><internalId>2269</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0027_Tx_NOK</srcid><srcstatus/><internalId>2270</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7034</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetTxFreshnessTruncData returns E_NOT_OK, the Time Master shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE (refer [SWS_EthTSyn_00261])
       (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0004_GetTxFreshnessTruncData_NOK</srcid><srcstatus/><internalId>2243</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0025_NopFV</srcid><srcstatus/><internalId>2268</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0026_GenerationIndication_NOK</srcid><srcstatus/><internalId>2269</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0027_Tx_NOK</srcid><srcstatus/><internalId>2270</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7261</srcid><srcstatus/><internalId>1079</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00251</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvGenerationBase for the Time Domain is configured to ICV_MAC,
        the Time Master shall call Csm_MacGenerate to generate the ICV value.c(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6931</srcid><srcstatus/><internalId>1048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00252</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvGenerationBase for the Time Domain is configured to ICV_SIGNATURE,
        the Time Master shall call Csm_SignatureGenerate to generate the ICV value.(RS_TS_20072)
      </description>
      <comment>
        Note: The mode parameter is intentionally left open for the implementer to choose (
          i.e. CRYPTO_OPERATIONMODE_SINGLECALL would possibly be the best option since
          it does not require further calls to Csm).
        The CSM job used to generate the ICV can be configured to synchronous or asynchronous behaviour.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6947</srcid><srcstatus/><internalId>1049</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0041_MasterTransmitICV</srcid><srcstatus/><internalId>2283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00253</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the CSM job used to generate ICV is configured in synchronous behaviour, the Time
        Master shall disable ICV generation timeout monitoring.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6968</srcid><srcstatus/><internalId>1052</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00254</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate or Csm_SignatureGenerate returns E_OK, the Time Master shall
        start the EthTSynIcvGenerationTimeout.c(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00254_MacGenerate</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00254_SignatureGenerate</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00254_MacGenerate</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate returns E_OK, the Time Master shall
        start the EthTSynIcvGenerationTimeout.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6997</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0008_TxIcv_TimeoutExpire</srcid><srcstatus/><internalId>2247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00254_SignatureGenerate</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_SignatureGenerate returns E_OK, the Time Master shall
        start the EthTSynIcvGenerationTimeout.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6998</srcid><srcstatus/><internalId>1055</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00255</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the EthTSyn_IcvGenerationIndication callback is called, the Time Master shall
        stop the running ICV generation timeout timer (EthTSynIcvGenerationTimeout).(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5198</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate/Csm_SignatureGenerate returns E_NOT_OK or
        EthTSynIcvGenerationTimeout expires before the notification of the
        EthTSyn_IcvGenerationIndication callback, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261] )
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261] )
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_StopIcv</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_CallIdsM</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7019</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0005_MacGenerate_NOK</srcid><srcstatus/><internalId>2244</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0048_ICV_SWT_Generate_Failed</srcid><srcstatus/><internalId>2291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacGenerate returns E_NOT_OK, the Time Master shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261] )
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7246</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0005_MacGenerate_NOK</srcid><srcstatus/><internalId>2244</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0048_ICV_SWT_Generate_Failed</srcid><srcstatus/><internalId>2291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_SignatureGenerate returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261] )
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_StopIcv</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_CallIdsM</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_SignatureGenerate returns E_NOT_OK, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7020</srcid><srcstatus/><internalId>1057</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0006_SignatureGenerate_NOK</srcid><srcstatus/><internalId>2245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_SignatureGenerate returns E_NOT_OK, the Time Master shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261] )
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7245</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0006_SignatureGenerate_NOK</srcid><srcstatus/><internalId>2245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvGenerationTimeout expires before the notification of the
        EthTSyn_IcvGenerationIndication callback, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261])
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_StopIcv</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_CallIdsM</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvGenerationTimeout expires before the notification of the
        EthTSyn_IcvGenerationIndication callback, the Time Master shall:
        • stop the ICV generation and accordingly set the ICV_Flags in AUTOSAR TLV
        Sub-TLV: Time Authenticated of Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12670</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0008_TxIcv_TimeoutExpire</srcid><srcstatus/><internalId>2247</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0046_ICV_SWT_Timeout</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvGenerationTimeout expires before the notification of the
        EthTSyn_IcvGenerationIndication callback, the Time Master shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters
        EventId := ETHTSYN_SEV_ICV_GENERATION_FAILED (refer to [SWS_EthTSyn_00261])
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7247</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0008_TxIcv_TimeoutExpire</srcid><srcstatus/><internalId>2247</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0046_ICV_SWT_Timeout</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00257</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        With the notification of the EthTSyn_IcvGenerationIndication callback,
        the Time Master shall add the generated ICV to AUTOSAR TLV Sub-TLV:
        Time Authenticated and transmit the Follow_Up message.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7158</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0047_ICV_SWT_Indication</srcid><srcstatus/><internalId>2289</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0047_ICV_SWT_Indication_NOK_Transmit</srcid><srcstatus/><internalId>2290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The Time Master shall notify the successful transmission of the Follow_Up
        message to FVM by calling StbM_SPduTxConfirmation.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4290</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0001_Icv1</srcid><srcstatus/><internalId>2240</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0002_Icv_Async</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0024_Icv</srcid><srcstatus/><internalId>2267</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0041_MasterTransmitICV</srcid><srcstatus/><internalId>2283</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0042_MasterTransmitICV_FV0</srcid><srcstatus/><internalId>2284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        During the EthTSynGlobalTimeRxDebounceTime, if the sequence is reset,
        then the Time Slave shall call IdsM_SetSecurityEventWithContextData with the
        parameters EventId := ETHTSYN_SEV_SYNC_FOLLOWUP_SEQUENCE_ERROR
        (refer to [SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12990</srcid><srcstatus/><internalId>1407</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13123</srcid><srcstatus/><internalId>1425</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0034_SlaveReceives_RxDebounce</srcid><srcstatus/><internalId>2276</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0035_SlaveReceives_RxDebounce_Elapse</srcid><srcstatus/><internalId>2277</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0036_SlaveReceives_2ndSync_RxDebounce</srcid><srcstatus/><internalId>2278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the FV is referenced (refer EthTSynIcvVerificationFvIdRef),
        FVL is greater than 0 and ’ICV with FV’ bit is set in
        ICV_Flags of received Follow_Up message, the Time Slave shall call the StbM_GetRxFreshness
        Api in order to obtain the Freshness Value by using
        • the StbMFreshnessValueId from the reference EthTSynIcvVerificationFvIdRef
        • the StbMTruncatedFreshnessValue as received in the FV field of the Follow_Up message
        • the StbMTruncatedFreshnessValueLength as received in the FVL field of
        the Follow_Up message
        • the StbMAuthVerifyAttempts as the number of failed verification attempt
        counts for the current message (ICV verification attempt counter)
        • the StbMFreshnessValueLength from the reference EthTSynIcvVerificationFvIdRef
        (RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7833</srcid><srcstatus/><internalId>1117</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED</srcid><srcstatus/><internalId>2254</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0051_HeaderLengthInsufficient</srcid><srcstatus/><internalId>2294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_OK, the Time Slave shall use the FV in ICV verification.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7932</srcid><srcstatus/><internalId>1126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</srcid><srcstatus/><internalId>2249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00235</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_NOT_OK, the current verification of received
        Follow_Up message is considered to be failed and the Time Slave shall
        • retry calling StbM_GetRxFreshness in the next Main Function
        • increment the ICV verification attempt counter for this Follow_Up message.
        (RS_TS_20072
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00235_RetryGetRxFreshness</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00235_IncrementIcvVerificationAttempt</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00235_RetryGetRxFreshness</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_NOT_OK, the current verification of received
        Follow_Up message is considered to be failed and the Time Slave shall
        • retry calling StbM_GetRxFreshness in the next Main Function
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7849</srcid><srcstatus/><internalId>1118</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK_Recover</srcid><srcstatus/><internalId>2257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00235_IncrementIcvVerificationAttempt</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If StbM_GetRxFreshness returns E_NOT_OK, the current verification of received
        Follow_Up message is considered to be failed and the Time Slave shall
        • increment the ICV verification attempt counter for this Follow_Up message.
        (RS_TS_20072
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7850</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK_Recover</srcid><srcstatus/><internalId>2257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached EthTSynIcvVerificationAttempts
        due to FV failure or FVL == 0 and ’ICV with FV’ bit is set in ICV_Flags of received
        Follow_Up message, the Time Slave shall:
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE(refer [SWS_EthTSyn_00144]),
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE
        (refer to[SWS_EthTSyn_00261])
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00236_StopIcv</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</srcid><srcstatus/><internalId>406</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00236_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached EthTSynIcvVerificationAttempts
        due to FV failure or FVL == 0 and ’ICV with FV’ bit is set in ICV_Flags of received
        Follow_Up message, the Time Slave shall:
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7868</srcid><srcstatus/><internalId>1120</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0037_SlaveReceives_VerifAttempts_0</srcid><srcstatus/><internalId>2279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached EthTSynIcvVerificationAttempts
        due to FV failure or FVL == 0 and ’ICV with FV’ bit is set in ICV_Flags of received
        Follow_Up message, the Time Slave shall:
        • call Det_ReportRuntimeError with the parameter ErrorId := ETHTSYN_E_FRESHNESSFAILURE(refer [SWS_EthTSyn_00144]),
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7875</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7912</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0023_SlaveReceives_FVL0_FVbitSet</srcid><srcstatus/><internalId>2266</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0037_SlaveReceives_VerifAttempts_0</srcid><srcstatus/><internalId>2279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached EthTSynIcvVerificationAttempts
        due to FV failure or FVL == 0 and ’ICV with FV’ bit is set in ICV_Flags of received
        Follow_Up message, the Time Slave shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId := ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE
        (refer to[SWS_EthTSyn_00261])
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7473</srcid><srcstatus/><internalId>1095</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7774</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7791</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7880</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7917</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11938</srcid><srcstatus/><internalId>1335</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0023_SlaveReceives_FVL0_FVbitSet</srcid><srcstatus/><internalId>2266</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0037_SlaveReceives_VerifAttempts_0</srcid><srcstatus/><internalId>2279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvVerificationBase for the Time Domain is configured to ICV_MAC,
        the Time Slave shall call Csm_MacVerify to verify the ICV value.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7673</srcid><srcstatus/><internalId>1097</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</srcid><srcstatus/><internalId>2249</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED</srcid><srcstatus/><internalId>2254</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK_Recover</srcid><srcstatus/><internalId>2257</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0033_SlaveReceives_VerificationResult_NOK</srcid><srcstatus/><internalId>2275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00238</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If EthTSynIcvVerificationBase for the Time Domain is configured to ICV_SIGNATURE,
        the Time Slave shall call Csm_SignatureVerify to verify the ICV value.(RS_TS_20072)
      </description>
      <comment>
        Note: The mode parameter is intentionally left open for the implementer to choose
        (i.e. CRYPTO_OPERATIONMODE_SINGLECALL would possibly be the best option since
        it does not require further calls to Csm).
        The CSM job used to generate the ICV can be configured to synchronous or asynchronous behaviour.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6964</srcid><srcstatus/><internalId>1050</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0020_SlaveReceives_FVFlagNotSet</srcid><srcstatus/><internalId>2263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00239</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The ICV verification timeout observation is disabled, when the CSM job to verify
        ICV is configured in synchronous behaviour. In this case, the
        EthTSynIcvVerificationTimeout shall be set to 0.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7709</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</srcid><srcstatus/><internalId>2249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00240</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacVerify or Csm_SignatureVerify returns E_OK, the Time Slave shall
        start the EthTSynIcvVerificationTimeout.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00240_MacVerify</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00240_SignatureVerify</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00240_MacVerify</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacVerify returns E_OK, the Time Slave shall
        start the EthTSynIcvVerificationTimeout.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7736</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</srcid><srcstatus/><internalId>2249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00240_SignatureVerify</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_SignatureVerify returns E_OK, the Time Slave shall
        start the EthTSynIcvVerificationTimeout.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7737</srcid><srcstatus/><internalId>1101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0020_SlaveReceives_FVFlagNotSet</srcid><srcstatus/><internalId>2263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacVerify or Csm_SignatureVerify returns recoverable error code
       (e.g., CRYPTO_E_BUSY), the current verification of received Follow_Up message
       is considered to be failed and the verification attempt counter for this
       Follow_Up shall be incremented.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00241_MacVerify</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00241_SignatureVerify</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00241_MacVerify</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_MacVerify returns recoverable error code(e.g., CRYPTO_E_BUSY),
        the current verification of received Follow_Up message is considered to
        be failed and the verification attempt counter for this Follow_Up shall
        be incremented.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7750</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0016_SlaveReceives_MacVerify_BUSY</srcid><srcstatus/><internalId>2259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00241_SignatureVerify</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If Csm_SignatureVerify returns recoverable error code (e.g., CRYPTO_E_BUSY),
        the current verification of received Follow_Up message is considered to be failed and
        the verification attempt counter for this Follow_Up shall be incremented.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7751</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0019_SlaveReceives_VerificationTimeout</srcid><srcstatus/><internalId>2262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The EthTSynIcvVerificationTimeout shall be stopped with the notification of
        the EthTSyn_IcvVerificationIndication callback.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5279</srcid><srcstatus/><internalId>918</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13102</srcid><srcstatus/><internalId>1420</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0020_SlaveReceives_FVFlagNotSet</srcid><srcstatus/><internalId>2263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached
        the configuration value EthTSynIcvVerificationAttempts or the verification of
        the ICV has returned a non-recoverable error such as returning E_NOT_OK or KEY_FAILURE
        or EthTSynIcvVerificationTimeout expires before the notification of
        the EthTSyn_IcvVerificationIndication callback, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts</srcid><srcstatus/><internalId>418</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK</srcid><srcstatus/><internalId>421</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached
        the configuration value EthTSynIcvVerificationAttempts, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_StopIcv</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_CallIdsM</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached
        the configuration value EthTSynIcvVerificationAttempts, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7765</srcid><srcstatus/><internalId>1104</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0016_SlaveReceives_MacVerify_BUSY</srcid><srcstatus/><internalId>2259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the ICV verification attempt counter has reached
        the configuration value EthTSynIcvVerificationAttempts, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7775</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0016_SlaveReceives_MacVerify_BUSY</srcid><srcstatus/><internalId>2259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the verification of the ICV has returned a non-recoverable error such as
        returning E_NOT_OK, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_StopIcv</srcid><srcstatus/><internalId>422</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_CallIdsM</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the verification of the ICV has returned a non-recoverable error such as
        returning E_NOT_OK, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7789</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0015_SlaveReceives_MacVerify_NOK</srcid><srcstatus/><internalId>2258</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0033_SlaveReceives_VerificationResult_NOK</srcid><srcstatus/><internalId>2275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the verification of the ICV has returned a non-recoverable error such as
        returning E_NOT_OK, the Time Slave shall :
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7792</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11939</srcid><srcstatus/><internalId>1336</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0015_SlaveReceives_MacVerify_NOK</srcid><srcstatus/><internalId>2258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the verification of the ICV has returned a non-recoverable error such as
        returning KEY_FAILURE, the Time Slave shall:
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_StopIcv</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_CallIdsM</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the verification of the ICV has returned a non-recoverable error such as
        returning KEY_FAILURE, the Time Slave shall:
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7790</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0017_SlaveReceives_MacVerify_KEY_FAIL</srcid><srcstatus/><internalId>2260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the verification of the ICV has returned a non-recoverable error such as
        returning KEY_FAILURE, the Time Slave shall:
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7793</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11940</srcid><srcstatus/><internalId>1337</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0017_SlaveReceives_MacVerify_KEY_FAIL</srcid><srcstatus/><internalId>2260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the EthTSynIcvVerificationTimeout expires before the notification of
        the EthTSyn_IcvVerificationIndication callback, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_StopIcv</srcid><srcstatus/><internalId>428</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_CallIdsM</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_StopIcv</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the EthTSynIcvVerificationTimeout expires before the notification of
        the EthTSyn_IcvVerificationIndication callback, the Time Slave shall :
        • stop the ICV verification (refer Chapter 7.8.2.5 ICV Verification) and discard the
        received Follow_Up message,
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7766</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0019_SlaveReceives_VerificationTimeout</srcid><srcstatus/><internalId>2262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_CallIdsM</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If the EthTSynIcvVerificationTimeout expires before the notification of
        the EthTSyn_IcvVerificationIndication callback, the Time Slave shall :
        • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED (refer to[SWS_EthTSyn_00261])(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0019_SlaveReceives_VerificationTimeout</srcid><srcstatus/><internalId>2262</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7776</srcid><srcstatus/><internalId>1108</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00244</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the EthTSyn_IcvVerificationIndication callback is called and ICV verification
        result is successful, the Time Slave shall accept the Follow_Up message and call
        StbM_BusSetGlobalTime to forward the global time to StbM.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5254</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0020_SlaveReceives_FVFlagNotSet</srcid><srcstatus/><internalId>2263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00245</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        When the EthTSyn_IcvVerificationIndication callback is called and ICV verification
        result is unsuccessful, the Time Slave shall discard the Follow_Up message.(RS_TS_20072)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5266</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11875</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0022_SlaveReceives_VerificationIndication_NOK</srcid><srcstatus/><internalId>2265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        If security event reporting has been enabled for the EthTSyn module
        (EthTSynEnableSecurityEventReporting is set to true) the respective security events
        shall be reported to the IdsM [9] via the interfaces defined in BSWGeneral [3].(RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00261</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00261</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The following table lists the security events which are standardized for the EthTSyn
        together with their trigger conditions.
        Name                                      Description                                      ID
        ETHTSYN_SEV_ICV_GENERATION_FAILED         ICV generation for a
                                                  Follow_Up message failed.                        73
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED       ICV verification of a received
                                                  Follow_Up messagefailed.                         74
        ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE       Failed to get freshness value from FvM.          75
        ETHTSYN_SEV_SYNC_FOLLOWUP_SEQUENCE_ERROR  Failed to receive correct sequence of
                                                  SYNC and Follow_Up from the TimeMaster within
                                                  (EthTSynGlobalTimeFollowUpTimeout).              76
        (RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00261_GENERATION_FAILED</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</srcid><srcstatus/><internalId>435</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00261_FRESHNESS_NOT_AVAILABLE</srcid><srcstatus/><internalId>436</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_00261_SYNC_FOLLOWUP_SEQUENCE_ERROR</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00261_GENERATION_FAILED</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The following table lists the security events which are standardized for the EthTSyn
        together with their trigger conditions.
        Name                                      Description                                      ID
        ETHTSYN_SEV_ICV_GENERATION_FAILED         ICV generation for a
                                                  Follow_Up message failed.                        73
        (RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7243</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0008_TxIcv_TimeoutExpire</srcid><srcstatus/><internalId>2247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The following table lists the security events which are standardized for the EthTSyn
        together with their trigger conditions.
        Name                                      Description                                      ID
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED       ICV verification of a received
                                                  Follow_Up messagefailed.                         74
        (RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7777</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7794</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11941</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_FVlength_Incorrect</srcid><srcstatus/><internalId>2250</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00261_FRESHNESS_NOT_AVAILABLE</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The following table lists the security events which are standardized for the EthTSyn
        together with their trigger conditions.
        Name                                      Description                                      ID
        ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE       Failed to get freshness value from FvM.          75
        (RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7259</srcid><srcstatus/><internalId>1077</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0003_GetFreshness_NOK</srcid><srcstatus/><internalId>2242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00261_SYNC_FOLLOWUP_SEQUENCE_ERROR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The following table lists the security events which are standardized for the EthTSyn
        together with their trigger conditions.
        Name                                      Description                                      ID
        ETHTSYN_SEV_SYNC_FOLLOWUP_SEQUENCE_ERROR  Failed to receive correct sequence of
                                                  SYNC and Follow_Up from the TimeMaster within
                                                  (EthTSynGlobalTimeFollowUpTimeout).              76
        (RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0034_SlaveReceives_RxDebounce</srcid><srcstatus/><internalId>2276</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0036_SlaveReceives_2ndSync_RxDebounce</srcid><srcstatus/><internalId>2278</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12989</srcid><srcstatus/><internalId>1406</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13122</srcid><srcstatus/><internalId>1424</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00262</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The following table describes the context data which shall be reported for the respective
        security events:
        Security Event                            Context Data
        ETHTSYN_SEV_ICV_GENERATION_FAILED         Context Data (1 Byte) - GlobalTimeDomainId
        ETHTSYN_SEV_ICV_VERIFICATION_FAILED       Context Data (1 Byte) - GlobalTimeDomainId
        ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE       Context Data (1 Byte) - GlobalTimeDomainId
        ETHTSYN_SEV_SYNC_FOLLOWUP_SEQUENCE_ERROR  Context Data (1 Byte) - GlobalTimeDomainId
        (RS_Ids_00810)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0015_SlaveReceives_MacVerify_NOK</srcid><srcstatus/><internalId>2258</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0032_SlaveReceives_DiffLen_Config_Received</srcid><srcstatus/><internalId>2274</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7244</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7260</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Service Name       EthTSyn_IcvGenerationIndication
        Syntax             void EthTSyn_IcvGenerationIndication (
                                                                  uint32 jobId,
                                                                  Crypto_ResultType result
                                                                )
        Service ID [hex]   0xc
        Sync/Async         Synchronous
        Reentrancy         Reentrant
        Parameters (in)    jobId    JobID of the operation that caused the callback.
                           result   Contains the result of the cryptographic operation.
        Parameters (inout) None
        Parameters (out)   None
        Return value       None
        Description        By this API service the EthTSyn gets an indication and the
                           result of ICV generation.
        Available via EthTSyn.h
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_91001.ServiceId</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest06</srcid><srcstatus/><internalId>1834</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest07</srcid><srcstatus/><internalId>1835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5142</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_91001.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_ICVGENERATIONINDICATION shall have the value: Service ID[hex]: 0xc.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest06</srcid><srcstatus/><internalId>1834</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest07</srcid><srcstatus/><internalId>1835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_111</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00259</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_IcvGenerationIndication() shall inform the DET,
        if development error detection is enabled(EthTSynDevErrorDetect is set to TRUE)
        and if function call has failed because of the following reasons:
        • jobId is invalid (ETHTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0009_Invalid_JobId</srcid><srcstatus/><internalId>2248</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5208</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Service Name        EthTSyn_IcvVerificationIndication (draft)
        Syntax              void EthTSyn_IcvVerificationIndication(
                                                                    uint32 jobId,
                                                                    Crypto_ResultType result
                                                                  )
        Service ID [hex]    0xd
        Sync/Async          Synchronous
        Reentrancy          Reentrant
        Parameters (in)     jobId JobID of the operation that caused the callback.
                            result Contains the result of the cryptographic operation.
        Parameters (inout)  None
        Parameters (out)    None
        Return value        None
        Description         By this API service the EthTSyn gets an indication and the result
                            of ICV verification.
        Available via EthTSyn.h
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.SWS_EthTSyn_91002.ServiceId</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest06</srcid><srcstatus/><internalId>1834</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest07</srcid><srcstatus/><internalId>1835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5217</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_91002.ServiceId</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The macro ETHTSYN_SID_ICVVERIFICATIONINDICATION shall have the value: Service ID[hex]: 0xd.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest06</srcid><srcstatus/><internalId>1834</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest07</srcid><srcstatus/><internalId>1835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EthTSyn.h_118</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.SWS_EthTSyn_00260</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        The function EthTSyn_IcvVerificationIndication() shall inform the DET,
        if development error detection is enabled (EthTSynDevErrorDetect is set to TRUE)
        and if function call has failed because of the following reasons:
        • jobId is invalid (ETHTSYN_E_PARAM)
        (SRS_BSW_00323, SRS_BSW_00337)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0021_SlaveReceives_InvalidJobId</srcid><srcstatus/><internalId>2264</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5290</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

<!-- CONSTRAINTS ====================================================================== -->
    <specobject>
      <id>EthTSyn.R23-11.CONSTR_0001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R23-11</source>
      <version>1</version>
      <description>
        The EthTSynPortConfig container exists for Synchronized Time Domains (EthTSynGlobalTimeDomain 0 .. 127) only.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.PortConfigTimeDomainId</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R23-11.CONSTR_0002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R23-11</source>
      <version>1</version>
      <description>
        If the CSM job used to generate ICV is configured in synchronous behaviour,
        the EthTSynIcvGenerationTimeout shall be set to 0.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_846</srcid><srcstatus/><internalId>1666</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01038_Invalid_EthTSyn_Xdm_GenerationTimeout_Sync</srcid><srcstatus/><internalId>2336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.R23-11.CONSTR_0003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R23-11</source>
      <version>1</version>
      <description>
        If the CSM job used to verify ICV is configured in synchronous behavior,
        the EthTSynIcvVerificationTimeout shall be set to 0.
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R23-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1009</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01039_Invalid_EthTSyn_Xdm_VerificationTimeout_Sync</srcid><srcstatus/><internalId>2337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>


<!-- Configuration Parameters ====================================================================== -->
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00001_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Module Name: EthTSyn
        Module Description: Configuration of the Synchronized Time-base Manager (StbM) module with
                           respect to global time handling on Ethe
                           rnet.
        Post-Build Variant Support: true
        Supported Config Variants: VARIANT-PRE-COMPILE
        Included Containers
        Container Name            Multiplicity     Scope / Dependency
        EthTSynGeneral            1                This container holds the general parameters of the Ethernet-specific
                                                   Synchronized Time-base Manager
        EthTSynGlobalTimeDomain   1..*             This represents the existence of a global time domain on Ethernet.
                                                   The EthTSyn module can administrate several global time domains at the same
                                                   time that in itself form a hierarchy of domains and sub-domains.
                                                   If the EthTSyn exists it is assumed that at least one global time domain exists.

      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00003_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynGeneral
        Description: This container holds the general parameters of the Ethernet-specific
                    Synchronized Time-base Manager
        Configuration Parameters:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00058_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynDestPhyAddr
        Parent Container: EthTSynGeneral
        Description: Destination Physical Address (MAC-Address). Destination Physical Hardware Address
                    (MAC-Address) of EthTSyn-gPTP Frames. Input format has to match xx:xx:xx:xx:xx:xx,
                    where x stands for a hex value between 0 and F.
        Multiplicity: 1
        Type: EcucStringParamDef
        Default value: 01:80:C2:00:00:0E
        maxLength: --
        minLength: --
        regularExpression: --
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
        Configuration Parameters:
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01031_HW_Disabled_SyncFrame_Egress</srcid><srcstatus/><internalId>1977</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01057_Master_SendPdelayRequestFrame</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01204</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8302</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15154</srcid><srcstatus/><internalId>1551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00002_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynDevErrorDetect
        Parent Container: EthTSynGeneral
        Description: Switches the development error detection and notification on or off.
                      - true: detection and notification is enabled.
                      - false: detection and notification is disabled.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00060_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeRxToUplinkSwitchResidenceTime
        Parent Container: EthTSynGeneral
        Description: This parameter is specifying the default value used for the residence time of
                     the Ethernet Switch [Ingress to Uplink]. This value is used by the EthTSyn if
                     the calculation of the residence time failed. Unit: seconds
        Multiplicity: 0..1
        Type: EcucFloatParamDef
        Range: [0..4]
        Default value: 0
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00061_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeUplinkToTxSwitchResidenceTime
        Parent Container: EthTSynGeneral
        Description: This parameter is specifying the default value used for the residence time
                     of the Ethernet Switch [Uplink to Egress]. This value is used by the EthTSyn
                     if the calculation of the residence time failed. Unit: seconds
        Multiplicity: 0..1
        Type: EcucFloatParamDef
        Range: [0..4]
        Default value: 0
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.ResidenceTime</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00018_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynHardwareTimestampSupport
        Parent Container: EthTSynGeneral
        Description: Activate/Deactivate the hardware time stamping functionality of the
                    Ethernet hardware.
                    True: Timestamp is retrieved from the Ethernet hardware
                    False: Timestamp is retrieved from the StbM
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: false
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00012_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynMainFunctionPeriod
        Parent Container: EthTSynGeneral
        Description: Schedule period of the main function EthTSyn_MainFunction. Unit: [s].
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0 .. INF]
        Default value: --
        Post-Build Variant Value: false
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00075_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynMasterSlaveConflictDetection
        Parent Container: EthTSynGeneral
        Description: Enables master/slave conflict detection and notification.
                      - true: detection and notification is enabled.
                      - false: detection and notification is disabled.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: false
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00029_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynMessageCompliance
        Parent Container: EthTSynGeneral
        Description: true: IEEE 802.1AS compliant message format will be used.
                     false: IEEE 802.1AS message format with AUTOSAR extension will be used.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: false
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00059_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynSwitchMgmtRxMessageBufferCount
        Parent Container: EthTSynGeneral
        Description: This parameter is used to determine the amount of Rx message buffers
                     available in the EthTSyn when EthTSyn is used in a Bridge configuration.
        Multiplicity: 0..1
        Type: EcucIntegerParamDef
        Range: 1..254
        Default value: 10
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.RxMessageBufferCount</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:                 EthTSynTimeValidationSupport
        Parent Container:     EthTSynGeneral
        Description:          Switches support for time validation on or off.
                             • true: time validation is enabled.
                             • false: time validation is disabled
        Multiplicity:         1
        Type:                 EcucBooleanParamDef
        Default value:        false
        Post-Build Variant Value:
                             false
        Value Configuration Class:
                             Pre-Compile time   x   All Variants
                             Link time          -   -
                             Post-build Time    -   -
        Scope / Dependency:   scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
       <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00015_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name EthTSynVersionInfoApi
        Parent Container: EthTSynGeneral
        Description Activate/Deactivate the version information API (EthTSyn_GetVersionInfo).
                    True: version information API activated
                    False: version information API deactivated.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: false
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00062_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynEthIfFrameType
        Parent Container: EthTSynGeneral
        Description: The chosen frame owner determines which frames (in respect to ethertype) are received.
        Multiplicity: 1
        Type: Reference to [EthIfFrameOwnerConfig]
        Post-Build Variant Value: false
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00004_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name EthTSynGlobalTimeDomain
        This represents the existence of a global time domain on Ethernet. The
        EthTSyn module can administrate several global time domains at the same
        Description time that in itself form a hierarchy of domains and sub-domains.
        If the EthTSyn exists it is assumed that at least one global time domain
        exists.
        Configuration Parameters
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00034_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynFramePrio
        Parent Container: EthTSynGlobalTimeDomain
        Description
          This optional parameter, if present, indicates the priority of outgoing
          EthTSyn messages, if sent via VLAN (used for the 3-bit PCP field of the
          VLAN tag). If this optional parameter is not present, frames are sent
          without a priority and VLAN field.
        Multiplicity: 0..1
        Type: EcucIntegerParamDef
        Range: 0 .. 7
        Default value: --
        Post-Build Variant Multiplicity: true
        Post-Build Variant Value: true
        Multiplicity Configuration Class
          Pre-compile time   X   All Variants
          Link time         --
          Post-build time   --
        Value Configuration Class
          Pre-compile time   X   All Variants
          Link time   --
          Post-build time   --
        Scope / Dependency
          scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00048_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeDebounceTime
        Parent Container: EthTSynGlobalTimeDomain
        Description
          This represents the configuration of a TX debounce time for Sync and
          Follow_Up messages compared to a message before with the same PDU.
          Unit: seconds
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0 .. 4]
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time   X   All Variants
          Link time   --
          Post-build time   --
        Scope / Dependency:
          scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00005_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeDomainId
        Parent Container: EthTSynGlobalTimeDomain
        Description: The global time domain ID.
        Multiplicity: 1
        Type: EcucIntegerParamDef
        Range: 0 .. 31
        Default value: --
        Post-Build Variant Value: false
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00065_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeEthIfRef
        Patent Container: EthTSynGlobalTimeDomain
        Description: This represents the reference to the Ethernet interface taken to fetch the
                    global time information.
        Multiplicity: 0..*
        Type: Symbolic name reference to  [ EthIfController ]
        Post-Build Variant Value: false
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00013_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynSynchronizedTimeBaseRef
        Parent Container: EthTSynGlobalTimeDomain
        Description: Mandatory reference to the required synchronized time-base.
        Multiplicity: 1
        Type: Symbolic name reference to [ StbMSynchronizedTimeBase ]
        Post-Build Variant Value: false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00030_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeFollowUpDataIDList
        Description: The DataIDList for Follow_Up message ensures the identification of
                     data elements due to CRC calculation and message authentication process.
        Post-Build Variant Multiplicity: false
        Multiplicity Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00031_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynGlobalTimeFollowUpDataIDListElement
        Description: Element of the DataIDList for Follow_Up message ensures the identification
                     of data elements due to CRC calculation and message authentication process.
        Configuration Parameters
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00032_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeFollowUpDataIDListIndex
        Parent Container: EthTSynGlobalTimeFollowUpDataIDListElement
        Description: Index of the DataIDList for Follow_Up message ensures the identification of data
                     elements due to CRC calculation and message authentication process.
        Multiplicity: 1
        Type: EcucIntegerParamDef
        Range: 0 .. 15
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00033_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeFollowUpDataIDListValue
        Parent Container: EthTSynGlobalTimeFollowUpDataIDListElement
        Description: Value of the DataIDList for Follow_Up message ensures the identification of data
                     elements due to CRC calculation and message authentication process.
        Multiplicity: 1
        Type: EcucIntegerParamDef
        Range: 0 .. 255
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00063_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynPortConfig
        Description
          Configuration of the EthTSyn-Ports within the TimeDomain.
        Post-Build Variant Multiplicity   true
        Multiplicity Configuration Class
          Pre-compile time   X   All Variants
          Link time         --
          Post-build time   --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:                 EthTSynEnableTimeValidation
        Parent Container:     EthTSynPortConfig
        Description:          Enables/disables time recording for time validation for
                              a specific Time Domain
                              • true: time validation is enabled.
                              • false: time validation is disabled
        Multiplicity:         0 .. 1
        Type:                 EcucBooleanParamDef
        Default value:        false
        Post-Build Variant Value:
                              false
        Value Configuration Class:
                              Pre-Compile time   x   All Variants
                              Link time          -   -
                              Post-build Time    -   -
        Scope / Dependency:   scope: local
                              dependency: Only valid if EthTSynTimeValidationSupport is TRUE.
                               Value set according to parameter StbMEnableTimeValidation of
                             the referenced Time Base in the StbM.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00078_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeMinMsgGap
        Parent Container: EthTSynPortConfig
        Description:
          This parameter represents the configuration of a minimum message gap time for received
          Timesync messages compared to a message before with the same PDU.
          If PDUs are received more often in between than this parameter allows,
          they shall be ignored. Unit: seconds 
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0 .. INF]
        Default value: 0
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time   X   All Variants
          Link time   --
          Post-build time   --
        Scope / Dependency:
          scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.unspecifiedRequirements</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00066_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynSwitchManagementEthSwitchPortRef
        Patent Container: EthTSynPortConfig
        Description: In an AVB-Bridge config, this reference is used to assign the EthTSyn-Port
                     to an Ethernet Switch-Port.
        Multiplicity: 0..1
        Type: Symbolic name reference to  [ EthSwtPort ]
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Choice container Name: EthTSynPortRole
        Parent Container: EthTSynGlobalTimeDomain
        Description: Specifying the Role of the EthTSyn-Port (Master or Slave).
        Post-Build Variant Multiplicity: true
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --

        Container Choices
        Container Name: EthTSynGlobalTimeMaster
        Multiplicity    0..1
        Scope / Dependency
          Configuration of the global time master. Each global time
          domain is required to have exactly one global time master.
          This master may or may not exist on the configured ECU.
        Container Name: EthTSynGlobalTimeSlave
        Multiplicity    0..1
        Scope / Dependency
          Configuration of a time slave. Each global time domain is
          required to have at least one time slave. The configured ECU
          may or may not represent a time slave.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00068_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Choice container Name: EthTSynPdelayConfig
        Description: Configuration of cyclic propagation delay measurement.
        Post-Build Variant Multiplicity: true
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00069_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimePdelayRespEnable
        Parent Container: EthTSynPdelayConfig
        Description: This parameter allows disabling Pdelay_Resp/Pdelay_Resp_Follow_Up transmission,
                     if no Pdelay_Req messages are expected.
                     - FALSE: No Pdelay requests expected. Pdelay_Resp/Pdelay_Resp_Follow_Up
                              transmission is disabled. 
                     - TRUE: Pdelay requests expected. Pdelay_Resp/Pdelay_Resp_Follow_Up
                              transmission is enabled. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: true
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00070_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimePropagationDelay
        Parent Container: EthTSynPdelayConfig
        Description: If cyclic propagation delay measurement is enabled, this parameter represents the
                     default value of the propagation delay until the first actually measured propagation
                     delay is available. If cyclic propagation delay measurement is disabled, this parameter
                     replaces a measured propagation delay by a fixed value.
                     Unit: seconds 
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0..4]
        Default value: 0
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00071_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeTxPdelayReqPeriod
        Parent Container: EthTSynPdelayConfig
        Description: This represents configuration of the TX period for Pdelay_Req messages.
                     A value of 0 disables the cyclic Pdelay measurement.
                     Unit: second
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0..INF]
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00076_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynPdelayLatencyThreshold
        Parent Container: EthTSynPdelayConfig
        Description: Threshold for calculated Pdelay. If a measured Pdelay exceeds EthTSynPdelayLatencyThreshold,
                     this value is discarded.
                     Unit: seconds
        Multiplicity: 0..1
        Type: EcucFloatParamDef
        Range: [0..INF]
        Default value: 1E-5
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00074_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynPdelayRespAndRespFollowUpTimeout
        Parent Container: EthTSynPdelayConfig
        Description: Timeout value for Pdelay_Resp and Pdelay_Resp_Follow_Up after a Pdelay_Req has been transmitted
                     resp. a Pdelay_Resp has been received. A value of 0 deactivates this timeout observation.
                     Unit: second
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0..4]
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00008_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynGlobalTimeMaster
        Description: Configuration of the global time master. Each global time domain is
                     required to have exactly one global time master. This master may or may
                     not exist on the configured ECU.
        Post-Build Variant Multiplicity: true
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Configuration Parameters
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00047_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCyclicMsgResumeTime
        Parent Container: EthTSynGlobalTimeMaster
        Description: Defines the time where the 1st regular cycle time based message transmission
                     takes place, after an immediate transmission before.
                     Unit: seconds
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0..INF]
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00039_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeTxCrcSecured
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the configuration of whether or not CRC is supported.
        Multiplicity: 1
        Type: EcucEnumerationParamDef
        Range:
              CRC_NOT_SUPPORTED   This represents a configuration where CRC is not supported.
              CRC_SUPPORTED       This represents a configuration where CRC is supported.
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00010_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeTxPeriod
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents configuration of the TX period.
                     Unit: seconds
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0..INF]
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00046_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynImmediateTimeSync
        Parent Container: EthTSynGlobalTimeMaster
        Description: Enables/Disables the cyclic polling of StbM_GetTimeBaseUpdateCounter()
                     within EthTSyn_MainFunction().
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00038_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynTLVFollowUpOFSSubTLV
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the configuration of whether an AUTOSAR Follow_Up TLV OFS Sub-TLV is used or not
                    - true: This represents a configuration where an AUTOSAR Follow_Up TLV OFS Sub-TLV is used.
                    - false: This represents a configuration where an AUTOSAR Follow_Up TLV OFS Sub-TLV is not used. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00036_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynTLVFollowUpStatusSubTLV
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the configuration of whether an AUTOSAR Follow_Up TLV Status Sub-TLV is used or not
                    - true: This represents a configuration where an AUTOSAR Follow_Up TLV Status Sub-TLV is used.
                    - false: This represents a configuration where an AUTOSAR Follow_Up TLV Status Sub-TLV is not used. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00035_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynTLVFollowUpTimeSubTLV
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the configuration of whether an AUTOSAR Follow_Up TLV Time Sub-TLV is used or not
                    - true: This represents a configuration where an AUTOSAR Follow_Up TLV Time Sub-TLV is used.
                    - false: This represents a configuration where an AUTOSAR Follow_Up TLV Time Sub-TLV is not used. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00037_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynTLVFollowUpUserDataSubTLV
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the configuration of whether an AUTOSAR Follow_Up TLV UserData Sub-TLV is used or not
                    - true: This represents a configuration where an AUTOSAR Follow_Up TLV UserData Sub-TLV is used.
                    - false: This represents a configuration where an AUTOSAR Follow_Up TLV UserData Sub-TLV is not used. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00057_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynCrcTimeFlagsTxSecured
        Description: This container collects definitions which parts of the Follow_Up message
                     elements shall be used for CRC calculation.
        Post-Build Variant Multiplicity: true
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Configuration Parameters
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00042_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcCorrectionField
        Parent Container: EthTSynCrcTimeFlagsTxSecured
        Description: correctionField from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00041_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcDomainNumber
        Parent Container: EthTSynCrcTimeFlagsTxSecured
        Descriptionf: domainNumber from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00040_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcMessageLength
        Parent Container: EthTSynCrcTimeFlagsTxSecured
        Description: messageLength from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00045_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcPreciseOriginTimestamp
        Parent Container: EthTSynCrcTimeFlagsTxSecured
        Description: preciseOriginTimestamp from the Follow_Up Message Field shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00044_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcSequenceId
        Parent Container: EthTSynCrcTimeFlagsTxSecured
        Description: sequenceId from the Follow_Up Message Header shall be included in CRC calculation. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00043_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcSourcePortIdentity
        Parent Container: EthTSynCrcTimeFlagsTxSecured
        Description: sourcePortIdentity from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00009_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynGlobalTimeSlave
        Description: Configuration of a time slave. Each global time domain is required to have at
                     least one time slave. The configured ECU may or may not represent a time slave.
        Post-Build Variant Multiplicity: true
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Configuration Parameters
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00007_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeFollowUpTimeout
        Parent Container: EthTSynGlobalTimeSlave
        Description: Timeout value of the Follow_Up message (of the subsequent Sync message).
                     A value of 0 deactivates this timeout observation. 
                     Unit: seconds
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: [0..4]
        Default value: --
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:                 EthTSynGlobalTimeSequenceCounterJumpWidth
        Parent Container:     EthTSynGlobalTimeSlave
        Description:          The SequenceCounterJumpWidth specifies the maximum allowed jump
                              of the Sequence Counter between two consecutive Sync messages.
        Multiplicity:         1
        Type:                 EcucIntegerParamDef
        Range:                0 .. 65535
        Default value:        0
        Post-Build Variant Value:
                              true
        Value Configuration Class:
                              Pre-Compile time   x   All Variants
                              Link time          -   -
                              Post-build Time    -   -
        Scope / Dependency:   scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:                 EthTSynGlobalTimeSequenceCounterHysteresis
        Parent Container:     EthTSynGlobalTimeSlave
        Description:          The SequenceCounterJumpWidth specifies the maximum allowed jump
                              of the Sequence Counter between two consecutive Sync messages.
        Multiplicity:         1
        Type:                 EcucIntegerParamDef
        Range:                0 .. 15
        Default value:        0
        Post-Build Variant Value:
                              true
        Value Configuration Class:
                              Pre-Compile time   x   All Variants
                              Link time          -   -
                              Post-build Time    -   -
        Scope / Dependency:   scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00049_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynRxCrcValidated
        Parent Container: EthTSynGlobalTimeSlave
        Description: Definition of whether or not validation of the CRC takes place. 
        Multiplicity: 1
        Type: EcucEnumerationParamDef
        Range:
              CRC_IGNORED         EthTSyn ignores any CRC inside the SubTLVs.
              CRC_NOT_VALIDATED   If EthTSynMessageCompliance is set to FALSE:
                                  EthTSyn discards Follow_Up messages with Sub-TLVs of Type
                                  0x28, 0x44, 0x50 or 0x60.
              CRC_OPTIONAL        If EthTSynMessageCompliance is set to FALSE:
                                  EthTSyn discards Follow_Up messages with Sub-TLVs of Type
                                  0x28, 0x44, 0x50 or 0x60, that contain an incorrect CRC value.
              VALIDATED           If EthTSynMessageCompliance is set to FALSE:
                                    EthTSyn discards Follow_Up messages with Sub-TLVs of Type
                                    0x28, 0x44, 0x50 or 0x60, that contain an incorrect CRC value.
                                  EthTSyn rejects Follow_Up messages with Sub-TLVs of Type 0x34, 0x51 or 0x61.
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00050_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Container Name: EthTSynCrcFlagsRxValidated
        Description: This container collects definitions which parts of the Follow_Up message
                     elements shall be included in CRC validation.
        Post-Build Variant Multiplicity: true
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Configuration Parameters
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00053_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcCorrectionField
        Parent Container: EthTSynCrcFlagsRxValidated
        Description: correctionField from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00052_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcDomainNumber
        Parent Container: EthTSynCrcFlagsRxValidated
        Description: domainNumber from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00051_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcMessageLength
        Parent Container: EthTSynCrcFlagsRxValidated
        Description: messageLength from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00056_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcPreciseOriginTimestamp
        Parent Container: EthTSynCrcFlagsRxValidated
        Description: preciseOriginTimestamp from the Follow_Up Message Field shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00055_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcSequenceId
        Parent Container: EthTSynCrcFlagsRxValidated
        Description: sequenceId from the Follow_Up Message Header shall be included in CRC calculation. 
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>EthTSyn.ECUC_EthTSyn_00054_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name: EthTSynCrcSourcePortIdentity
        Parent Container: EthTSynCrcFlagsRxValidated
        Description: sourcePortIdentity from the Follow_Up Message Header shall be included in CRC calculation.
        Multiplicity: 1
        Type: EcucBooleanParamDef
        Default value: false
        Post-Build Variant Value: true
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <!-- R22-11 ====================================================================== -->
    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00089_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynEnableSecurityEventReporting
        Parent Container: EthTSynGeneral
        Description: Switches the reporting of security events to the IdsM:
                    - true: reporting is enabled.
                    - false: reporting is disabled.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00090_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynSecurityEventRefs
        Parent Container: EthTSynGeneral
        Description: Container for the references to IdsMEvent elements representing the security events
                     that the EthTSyn module shall report to the IdsM in case the coresponding security
                     related event occurs (and if EthTSynEnableSecurityEventReportings set to "true"). The
                     standardized security events in this container can be extended by vendor-specific
                     security events.
        Post-Build Variant Multiplicity false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00093_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE
        Parent Container: EthTSynSecurityEventRefs
        Description: FV not available from FVM. Context data provides the respective domain ID
        Multiplicity 0..1
        Type Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00091_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: ETHTSYN_SEV_ICV_GENERATION_FAILED
        Parent Container: EthTSynSecurityEventRefs
        Description: ICV generation for Follow_Up message failed. Context data provides the respective domain ID
        Multiplicity 0..1
        Type Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00092_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: ETHTSYN_SEV_ICV_VERIFICATION_FAILED
        Parent Container: EthTSynSecurityEventRefs
        Description: ICV verification for Follow_Up message failed. Context data provides the respective domain ID.
        Multiplicity 0..1
        Type Symbolic name reference to IdsMEvent
        Post-Build Variant Multiplicity false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00094_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeRxDebounceTime
        Parent Container: EthTSynGlobalTimeDomain
        Description: This represents the configuration of a RX debounce time for Sync and Follow_Up. Unit: seconds
        Multiplicity 0..1
        Type Float
        Range 0..4
        Default -
        Post-Build Variant Multiplicity false
        Post-Build Variant Value true
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00095_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynTLVFollowUpICVSubTLV
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the configuration of whether an AUTOSAR Follow_Up TLV ICV
                     Sub-TLV is used or not.
                     - true: This represents a configuration where an AUTOSAR
                             Follow_Up TLV ICV Sub-TLV is used.
                     - false: This represents a configuration where an
                            AUTOSAR Follow_Up TLV ICV Sub-TLV is not used.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default -
        Post-Build Variant Value true
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00096_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeTxIcvGeneration
        Parent Container: EthTSynGlobalTimeMaster
        Description: This container collects configuration that shall be used for ICV generation.
                     Sub-TLV is used or not.
                     - true: This represents a configuration where an AUTOSAR
                             Follow_Up TLV ICV Sub-TLV is used.
                     - false: This represents a configuration where an
                            AUTOSAR Follow_Up TLV ICV Sub-TLV is not used.
        Post-Build Variant Multiplicity false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00098_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvGenerationBase
        Parent Container: EthTSynGlobalTimeMaster
        Description: Symmetric or asymmetric cryptography selection for the ICV generation.
        Multiplicity 1
        Type EcucEnumerationParamDef
        Range   ICV_MAC Symmetric cryptography selection for the ICV generation.
                ICV_SIGNATURE Asymmetric cryptography selection for the ICV generation.
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00101_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvGenerationTimeout
        Parent Container: EthTSynGlobalTimeMaster
        Description: Timeout of ICV generation (respective CSM job completion in asynchronous
                     behaviour). Unit: Seconds
        Multiplicity 1
        Type EcucFloatParamDef
        Range   0..INF
        Default -
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00099_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvTxLength
        Parent Container: EthTSynGlobalTimeMaster
        Description: Length of ICV to be transmitted within Follow_Up Message on the bus (in bytes)
        Multiplicity 1
        Type EcucIntegerParamDef
        Range   0..1061
        Default -
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00097_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvGenerationFvIdRef
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the reference to the FV taken to generate the ICV generation
        Multiplicity 0..1
        Type Symbolic name reference to StbMFreshnessValue
        Post-Build Variant Multiplicity false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00100_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvGenerationJobRef
        Parent Container: EthTSynGlobalTimeMaster
        Description: This represents the reference to the CSM job to fetch the CSM job ID.
        Multiplicity 1
        Type Symbolic name reference to CsmJob
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00103_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynRxIcvVerificationType
        Parent Container: EthTSynGlobalTimeSlave
        Description: This parameter controls whether or not ICV verification shall be supported.
        Multiplicity 1
        Type EcucEnumerationParamDef
        Range     ICV_IGNORED         The Timesync module shall not verify the ICV.
                  ICV_NOT_VERIFIED    The Timesync module accepts only Time
                                      Synchronization messages, which are not ICV
                                      secured. All other Time Synchronization
                                      messages are ignored.
                  ICV_OPTIONAL        The Timesync module accepts only Time
                                      Synchronization messages which are not ICV
                                      secured and Time Synchronization messages
                                      which are ICV secured and have the correct ICV.
                                      All other Time Synchronization messages are
                                      ignored.
                  ICV_VERIFIED        The Timesync module accepts only Time
                                      Synchronization messages, which are ICV
                                      secured and have the correct ICV. All other Time
                                      Synchronization messages are ignored.
        Post-Build Variant Value true
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00104_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynGlobalTimeRxIcvVerification
        Parent Container: EthTSynGlobalTimeSlave
        Description: This container collects configuration that shall be used for ICV verification.
        Post-Build Variant Multiplicity false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00107_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvRxLength
        Parent Container: EthTSynGlobalTimeRxIcvVerification
        Description: This parameter specifies the number of ICV verification attempts that are to be carried
                     out when the verification of the ICV failed for a given secured Follow_Up message. If
                     zero is set, then only one ICV verification attempt is done
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0..65535
        Default 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00110_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvVerificationAttempts
        Parent Container: EthTSynGlobalTimeRxIcvVerification
        Description: This parameter specifies the number of ICV verification attempts that are to be carried
                     out when the verification of the ICV failed for a given secured Follow_Up message. If
                     zero is set, then only one ICV verification attempt is done.
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0..65535
        Default 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00106_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvVerificationBase
        Parent Container: EthTSynGlobalTimeRxIcvVerification
        Description: Symmetric or asymmetric cryptography selection for the ICV generation.
        Multiplicity 1
        Type EcucEnumerationParamDef
        Range     ICV_MAC          Symmetric cryptography selection for the ICV generation.
                  ICV_SIGNATURE    Asymmetric cryptography selection for the ICV generation.
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00109_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvVerificationTimeout
        Parent Container: EthTSynGlobalTimeRxIcvVerification
        Description: Timeout of ICV generation (respective CSM job completion in asynchronous
                     behaviour). Unit: Seconds
        Multiplicity 1
        Type EcucFloatParamDef
        Range 0..INF
        Default -
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00105_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvVerificationFvIdRef
        Parent Container: EthTSynGlobalTimeRxIcvVerification
        Description: This represents the reference to the FV taken to verify the ICV.
        Multiplicity 0..1
        Type Symbolic name reference to StbMFreshnessValue
        Post-Build Variant Multiplicity false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>

    <specobject>
      <id>EthTSyn.R22-11.ECUC_EthTSyn_00108_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeSyncOverEthernet.pdf, R22-11</source>
      <version>1</version>
      <description>
        Name: EthTSynIcvVerificationJobRef
        Parent Container: EthTSynGlobalTimeRxIcvVerification
        Description: This represents the reference to the CSM job to fetch the CSM job ID.
        Multiplicity 1
        Type Symbolic name reference to CsmJob
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

<!-- EB specific features ====================================================================== -->

    <specobject>
      <id>EthTSyn.EB.ECUC_AnnounceFrameSupport_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynAnnounceFrameSupport
        Description Activate/Deactivate the functionality to send announce frames.
                    True: EthTSyn master send announce frame in the same period as sync frames.
                    False: EthTSyn master does not send any announce frames.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynReliableTxConfirmationSupport_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynReliableTxConfirmationSupport
        Description Selects between different syntaxes for EthTSyn_TxConfirmation().
                    True: EthTSyn shall support EthTSyn_TxConfirmation() according to AUTOSAR R20-11(contains the result parameter).
                    False: EthTSyn shall support EthTSyn_TxConfirmation() according to AUTOSAR 4.4.
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

   <specobject>
      <id>EthTSyn.EB.EthTSynEnableDebouncePerPort_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynEnableDebouncePerPort
        Description Enables or disables debouncing per port.
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynSwitchPortDebounceTime_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynSwitchPortDebounceTime
        Description This represents the configuration of a TX debounce time for all Timesync PDUs over
                    EthSwitchPort.
        Type EcucBooleanParamDef
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynMaxNumberOfTransmitRetries
        Description This represents the number of retries EthTSyn will perform in case a
                    transmission fails.
        Type EcucIntegerParamDef
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynSwitchPortHostDebounceTime_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynSwitchPortHostDebounceTime
        Description This represents the configuration of a TX debounce time for all Timesync PDUs over
                    EthSwitchPortHost.
        Type EcucBooleanParamDef
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynPBGeneratedFilesCompilation_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynPBGeneratedFilesCompilation
        Description - Switch will allow PBcfg.c files to be compiled by EthTSyn rules
              or by the build environment rules.
        Type EcucBooleanParamDef
        Default value TRUE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynPBGeneratedFilesCompilation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynPBGeneratedFilesCompilation is enabled, EthTSyn will compile PBcfg.c files.
        If EthTSynPBGeneratedFilesCompilation is disabled, EthTSyn will not compile PBcfg.c files.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>test/ts5/Manual/IN/EthTSyn_ManTest_Optimisation/source/application/EthTSyn_ManTest_Optimisation.c_30</srcid><srcstatus/><internalId>1681</internalId></linkedfrom><linkedfrom><srcid>test/ts5/Manual/IN/EthTSyn_ManTest_Optimisation_PB/source/application/EthTSyn_ManTest_Optimisation_PB.c_31</srcid><srcstatus/><internalId>1682</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest_Optimisation</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest_Optimisation_PB</srcid><srcstatus/><internalId>1838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.DebouncePerPort</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynEnableDebouncePerPort is enabled EthTSynSwitchPortDebounceTime and EthTSynSwitchPortHostDebounceTime
        shall be considered. If it is set to false, debounce shall be done on controller.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DebouncePerPort_Enabled</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DebouncePerPort_Disabled</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.DebouncePerPort_Enabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynEnableDebouncePerPort is enabled EthTSynSwitchPortDebounceTime and EthTSynSwitchPortHostDebounceTime
        shall be considered and debounce shall be done on each port.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest06_0000_DebounceOnPort</srcid><srcstatus/><internalId>2238</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14049</srcid><srcstatus/><internalId>1474</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.EthTSyn.EB_INTREQ_EthTSyn_0011</srcid><srcstatus/><internalId>10</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.DebouncePerPort_Disabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynEnableDebouncePerPort is disabled debounce shall be done on controller.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00130</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00131</srcid><srcstatus/><internalId>246</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00132</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master.SendPeriodicAnnounce</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynAnnounceFrameSupport is true, the EthTSyn master shall
        periodically send announce frames in the context of EthTSyn_MainFunction() with the same
        interval as the sync frames.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01130_MasterSendsAnnounceFramesPeriodically</srcid><srcstatus/><internalId>2141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12354</srcid><srcstatus/><internalId>1355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master.DisableAnnounce</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynAnnounceFrameSupport is false, the EthTSyn master shall
        not send any announce frames in the context of EthTSyn_MainFunction().
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12352</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_PdelayFilter_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynPdelayFilter
        Description Filters the measured Pdelay based on the formula:
                    Pdelay = PdelayOld + [(PdelayOld - PdelayNew) / 2^EthTSynPdelayFilter]
                    Filtering makes the Pdelay steady and wrong values have less impact.
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0 .. 31
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.PdelayFilter.Disabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynPdelayFilter has the value zero, then a EthTSyn slave
        shall always use the last measured Pdelay for the next correction time calculation.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01039_SlaveUsesCalculatedPdelay</srcid><srcstatus/><internalId>1983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11462</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.PdelayFilter.Enabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynPdelayFilter has a value greater zero, then a EthTSyn
        slave shall use the formula
        Pdelay = PdelayOld + [(PdelayOld - PdelayNew) / 2^EthTSynPdelayFilter]
        on the last measured Pdelay to get the Pdelay for the next correction time calculation.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01053_SlavePdelayFilter_Enabled</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01239_ActualPdelay</srcid><srcstatus/><internalId>2076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11468</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.HWTimpStamp.GatewaySync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE, a EthTSyn slave
        shall inform the StbM after each time correction. In this case EthIf_GetCurrentTime()
        shall be called to get the new time and StbM_BusSetGlobalTime() to pass it to the StbM.
      </description>
      <comment>
        Note: This trigger is required for time gateways. Every time a time
              correction occurs at the slave, the StbM needs to inform all masters which
              are using HW time stamping and are connected to the same time base.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01008_Slave_PositiveSync</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest04_0001_SlaveSync</srcid><srcstatus/><internalId>2215</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13521</srcid><srcstatus/><internalId>1449</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16269</srcid><srcstatus/><internalId>1604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE and a EthTSyn slave
        performs a time correction:
        If the call of EthIf_GetCurrentTime() was not successful (either return value or quality was
        not okay), no further action shall take place.
      </description>
      <comment>
        Note: This trigger is required for time gateways. Every time a time
              correction occurs at the slave, the StbM needs to inform all masters which
              are using HW time stamping and are connected to the same time base.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01009_Slave_InvalidQuality</srcid><srcstatus/><internalId>1973</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01010_Slave_UncertainQuality</srcid><srcstatus/><internalId>1974</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01011_Slave_GetCurrentTime_NOT_OK</srcid><srcstatus/><internalId>1975</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10313</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.StbMSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is FALSE and a valid pair of
        sync frame and sync follow up frame is received, a EthTSyn slave shall call
        StbM_GetCurrentVirtualLocalTime() to get the current time, add the synchronization offset and call
        StbM_BusSetGlobalTime() to pass the new time to the StbM.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01036_HW_Disabled_Slave</srcid><srcstatus/><internalId>1981</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13522</srcid><srcstatus/><internalId>1450</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16270</srcid><srcstatus/><internalId>1605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.StbMSync.GetCurrentTime.NotOk</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is FALSE and a EthTSyn slave
        performs a time correction:
        If the call of StbM_GetCurrentVirtualLocalTime() returned a value other
        than E_OK, no further action shall take place.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01038_HW_Disabled_TxConfirmation_NOTOK</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8388</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.GetTimeBaseStatus.NotOk</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the call of StbM_GetTimeBaseStatus() returned a value other
        than E_OK, no further action shall take place.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01205_GetTimeBaseStatus_NOK</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12298</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

<!-- Missing SWS requirements ================================================================== -->

    <specobject>
      <id>EthTSyn.EB.EthIf_Transmit_NotOk</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthIf_Transmit() returns E_NOT_OK, while transmitting a sync frame, the next call of
        EthTSyn_MainFunction() shall trigger the sync frame transmission again.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01202_EthIf_NOT_OK_Transmit_Sync</srcid><srcstatus/><internalId>2143</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5411</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthIf_Return_NotOk</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If any call towards EthIf returns other value than E_OK or BUFREQ_OK, no further action
        shall take place.
      </description>
      <comment>
        EthIf_Transmit().
        EthIf_ProvideTxBuffer() while transmitting a sync, sync FUP, announcement, Pdelay response,
        Pdelay response FUP or Pdelay request.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01000_Fup_EthIf_Return_NotOk</srcid><srcstatus/><internalId>1948</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01025_PdelayReqFrame_ProvideTxBuffer_NOTOK</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01027_PdelayReqFrame_ProvideTxBuffer_NOTOK</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01028_PdelayReqFrame_Transmit_NOTOK</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01029_PdelayRespFUFrame_ProvideTxBuffer_NOTOK</srcid><srcstatus/><internalId>2001</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01201_EthIf_NOT_OK_ProvideTxBuffer</srcid><srcstatus/><internalId>2142</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01203_EthIf_NOT_OK_Transmit_SyncFU</srcid><srcstatus/><internalId>2144</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01131_AnnouncementFrame_TxBuffer_NOTOK</srcid><srcstatus/><internalId>2146</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0043_GetBuf_NOK</srcid><srcstatus/><internalId>2285</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0044_GetBuf_NOK</srcid><srcstatus/><internalId>2286</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5355</srcid><srcstatus/><internalId>923</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5645</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5699</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5773</srcid><srcstatus/><internalId>946</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5990</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6182</srcid><srcstatus/><internalId>975</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7141</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7172</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7201</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14438</srcid><srcstatus/><internalId>1497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.GetVersionInfo</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The call of EthTSyn_GetVersionInfo() shall return the module version independent if the
        module is initialized or not.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Uninit_GetVersionInfo</srcid><srcstatus/><internalId>2139</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3783</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master.SendPeriodicSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The synchronization time master shall periodically send synchronization frames.
      </description>
      <comment>
        Main function ticks to wait = EthTSynGlobalTimeTxPeriod / EthTSynMainFunctionPeriod
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01004_MasterSendsSyncFramesPeriodicaly</srcid><srcstatus/><internalId>1966</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12358</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master.SendSyncFU</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_TxConfirmation() is called for a synchronization frame, the master shall call
        EthIf_GetEgressTimeStamp() for the sync frame and shall send a sync follow up frame in the next
        EthTSyn_MainFunction() call.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01999_MasterSendsSwtSyncFrames</srcid><srcstatus/><internalId>1949</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest04_0000_MasterTransmitSyncPair</srcid><srcstatus/><internalId>2214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4100</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master.SendPdelayResponseFU</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_TxConfirmation() is called for a Pdelay response frame, the master shall call
        EthIf_GetEgressTimeStamp() for the Pdelay response frame and shall send a Pdelay response
        follow up frame in the next EthTSyn_MainFunction() call.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01005_MasterSendPdelayResponse</srcid><srcstatus/><internalId>1967</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01035_HW_Disabled_Master_2</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01259_TxConf_PdelayResp</srcid><srcstatus/><internalId>2137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4187</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6179</srcid><srcstatus/><internalId>974</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6215</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.Master.FrameType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Ethertype of Sync, Follow_Up, Pdelay_Req, Pdelay_Resp, and Pdelay_Resp_Follow_Up messages
        shall be the ETHTSYN_PTP_FRAMETYPE 0x88F7 (See 802.1AS-2011 Ch 11.3.5).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6275</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8322</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15115</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15174</srcid><srcstatus/><internalId>1553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.GetVersionInfo.NullPtr</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        versioninfo is not a NULL_PTR. If the check fails the function shall raise the
        development error ETHTSYN_E_PARAM_POINTER.
      </description>
      <comment>EthTSyn_GetVersionInfo()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det002_GetVersionInfo_InvalidParam</srcid><srcstatus/><internalId>1938</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3776</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.MainFunction.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EthTSyn_MainFunction() shall check that the service EthTSyn_Init() was previously
        called. If the module is not initialized, EthTSyn_MainFunction() return with performing
        any action.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Uninit_MainFunction</srcid><srcstatus/><internalId>2140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3860</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_EthSwtPtpTimeStampIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4499</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_EthSwtPtpRxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4551</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_IcvGenerationIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_IcvGenerationIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0000_UNINT</srcid><srcstatus/><internalId>2239</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5156</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_IcvVerificationIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_IcvVerificationIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0000_UNINT</srcid><srcstatus/><internalId>2239</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5231</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_VerifyAttempts_StbM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If a SyncFUP message that contains an ICV sub-TLV is received and EthTSynIcvVerificationAttempts is
        configured to a value greater than 0, StbM_GetRxFreshenss() shall be first called with StbMAuthVerifyAttempts
        set to 0, incrementing each verification retry.
      </description>
      <comment>EthTSyn_IcvVerificationIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0016_SlaveReceives_MacVerify_BUSY</srcid><srcstatus/><internalId>2259</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11842</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that if MgmtInfoPtr,
        DataPtr or IngressTimeStampPtr are NULL_PTR. If the check fails, the function shall raise the
        development error ETHTSYN_E_PARAM_POINTER.
      </description>
      <comment>EthTSyn_EthSwtPtpRxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01126_Swt_NULL_PTR</srcid><srcstatus/><internalId>2042</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4556</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4561</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4566</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.NULL_PTR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that if
        PortTimeStampPtr is NULL_PTR. If the check fails, the function shall raise the
        development error ETHTSYN_E_PARAM_POINTER.
      </description>
      <comment>EthTSyn_EthSwtPtpRxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01126_Swt_NULL_PTR</srcid><srcstatus/><internalId>2042</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4504</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwt_ProvideTxBuffer.NULL_PTR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthSwt_ProvideTxBuffer() returns the transmission buffer as NULL_PTR, the transmission
        shall stop and no further functions shall be called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01130_SwtProvideTxBuffer_NULLPTR</srcid><srcstatus/><internalId>1904</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15127</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RxIndication.InvalidFrameType_DetON</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the FrameType is
        valid( ETHTSYN_PTP_FRAMETYPE 0x88F7 ). If the check fails the function shall raise the
        development error ETHTSYN_E_PARAM and drop the frame.
      </description>
      <comment>EthTSyn_RxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det006_RxIndication_InvalidParam</srcid><srcstatus/><internalId>1942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4031</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RxIndication.InvalidFrameType_DetOFF</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is disabled: The function shall check if the FrameType is
        valid( ETHTSYN_PTP_FRAMETYPE 0x88F7 ). If the check fails the function shall drop the frame.
      </description>
      <comment>EthTSyn_RxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01252_InvalidFrameType</srcid><srcstatus/><internalId>2104</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3976</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RxIndication.InvalidHeaderSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the LenByte is
        valid(its value is greater than PTP header size = 34 bytes). If the check fails the
        function shall raise the development error ETHTSYN_E_PARAM.
      </description>
      <comment>EthTSyn_RxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det006_RxIndication_InvalidParam</srcid><srcstatus/><internalId>1942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3968</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidDomainNumber</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If a frame is received via EthTSyn_EthSwtPtpRxIndication() and has the byte 4(DomainNumber) different
        than the configured EthTSynTimeDomainId, it shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0013_ReceiveOnBridge_InvalidDomainNo</srcid><srcstatus/><internalId>2160</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0017_ReceiveOnBridge_InvalidDomainNoCRC</srcid><srcstatus/><internalId>2164</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4583</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidHeaderSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the LenByte is
        valid(its value is greater than PTP header size = 34 bytes). If the check fails the
        function shall raise the development error ETHTSYN_E_PARAM.
      </description>
      <comment>EthTSyn_EthSwtPtpRxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0012_ReceiveOnBridge_InvalidLen</srcid><srcstatus/><internalId>2159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4569</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RxIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_RxIndication()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3953</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TxConfirmation.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_TxConfirmation()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4070</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TrcvLinkStateChg.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_TrcvLinkStateChg()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4337</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SetTransmissionMode.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_SetTransmissionMode()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4429</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.GetProtocolParam.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_GetProtocolParam()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5088</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SetProtocolParam.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check that the service
        EthTSyn_Init() was previously called. If the check fails, the function shall raise the
        development error ETHTSYN_E_UNINIT.
      </description>
      <comment>EthTSyn_SetProtocolParam()</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5023</srcid><srcstatus/><internalId>902</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.Master.SyncEgress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If in the context of Tx confirmation of a sync frame the EthIf_GetEgressTimeStamp()
        returns a time stamp quality other than ETH_VALID, then the master shall not send
        any sync follow up frame.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01006_Quality_Invalid</srcid><srcstatus/><internalId>1968</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01007_Quality_Uncertain</srcid><srcstatus/><internalId>1969</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10480</srcid><srcstatus/><internalId>1286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.Master.GetCurrentTime</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If in the context of Tx confirmation of a sync frame the EthIf_GetCurrentTime()
        returns a time stamp quality other than ETH_VALID, then the master shall not send
        any sync follow up frame.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01206_INVALID_TIME_QUAL</srcid><srcstatus/><internalId>2057</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13258</srcid><srcstatus/><internalId>1431</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.Slave.SyncIngress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If a sync frame was received and the EthIf_GetIngressTimeStamp()
        returns a time stamp quality other than ETH_VALID, then the frame shall be discarded
        processed. Any related sync follow up frames shall  be ignored.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01030_Slave_Receive_SyncFrame_GetIngress_INVALID</srcid><srcstatus/><internalId>2002</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10259</srcid><srcstatus/><internalId>1270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.PdelayReqEgress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If in the context of Tx confirmation of a Pdelay request frame the
        EthIf_GetEgressTimeStamp() returns a time stamp quality other than ETH_VALID,
        then the Pdelay measurement shall be stopped for this cycle. Any received Pdelay responses
        and Pdelay follow up frames shall be discarded until next Pdelay request sent cycle.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01046_PdelayReq_INVALID</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01047_PdelayReq_UNCERTAIN</srcid><srcstatus/><internalId>2020</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4189</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.PdelayReqIngress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If a Pdelay request frame was received and the EthIf_GetIngressTimeStamp()
        returns a time stamp quality other than ETH_VALID, then the frame shall be discarded.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01204_EthIf_NOT_OK_Transmit_PdelayReq</srcid><srcstatus/><internalId>2145</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10260</srcid><srcstatus/><internalId>1271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeStamp.PdelayReqIngress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If a Pdelay request frame was received and the EthIf_GetIngressTimeStamp()
        returns a time stamp with nanoseconds more than 1 second, the frame shall be discarded.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01204_EthIf_NOT_OK_Transmit_PdelayReq</srcid><srcstatus/><internalId>2145</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10271</srcid><srcstatus/><internalId>1273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.PdelayRespEgress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If in the context of Tx confirmation of a Pdelay response frame the
        EthIf_GetEgressTimeStamp() returns a time stamp quality other than ETH_VALID,
        then no Pdelay response follow up frame shall be sent.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01026_PdelayRespFUFrame_Invalid_TimeQuality</srcid><srcstatus/><internalId>1998</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10481</srcid><srcstatus/><internalId>1287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.InvTimeQuality.PdelayRespIngress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter EthTSynHardwareTimestampSupport is TRUE:
        If a Pdelay response frame was received and the EthIf_GetIngressTimeStamp()
        returns a time stamp quality other than ETH_VALID, then the frame shall be discarded.
        Any received Pdelay follow up frames shall be discarded.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01045_Pdelay_InvalidIngress</srcid><srcstatus/><internalId>2018</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10258</srcid><srcstatus/><internalId>1269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.UnexpectedFrames</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If an unexpected frame was received it shall be discarded.
        Unexpected frames are:
        * Frames with unspecified message type.
        * Frames with wrong length.
        * Sync frames or sync follow up frames for a master.
        * Sync follow up frame without preceding sync frame (lost sync frame).
        * Expected frames with wrong sequence numbers (out of order).
        * Pdelay response frames or Pdelay response follow up frame for a master.
        * Pdelay response follow up frame without preceding Pdelay response frame. (lost frame).
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01031_ReceiveUnknownMessage</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01044_SyncFU_After_SyncFU</srcid><srcstatus/><internalId>2017</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0016_RxDelayResp_IncorrectSize</srcid><srcstatus/><internalId>2234</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13158</srcid><srcstatus/><internalId>1427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.LostSyncFUPFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If a slaves receives a sync frame but no sync follow up frame before next sync frame
        arrives, then the slave shall forget the old sync frame and shall process the new sync
        frame.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01048_LostSync</srcid><srcstatus/><internalId>2021</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8504</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9814</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13034</srcid><srcstatus/><internalId>1412</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13076</srcid><srcstatus/><internalId>1418</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16110</srcid><srcstatus/><internalId>1595</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16503</srcid><srcstatus/><internalId>1624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.LostPdelayResp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A lost Pdelay response shall not block the next Pdelay measurement.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01054_SlaveLostPdelayResp</srcid><srcstatus/><internalId>2027</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9854</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.LostPdelayRespFUP</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A lost Pdelay response follow up shall not block the next Pdelay measurement.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01055_SlaveLostPdelayRespFUP</srcid><srcstatus/><internalId>2028</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9772</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.NoConfirmationForPdelayReq</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_MainFunction() is called to process the Pdelay calculation, after receiving a
        PdelayResp and PdelayRespFUp frame, without EthTSyn_TxConfirmation() for the PdelayReq frame,
        no Pdelay shall be calculated.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01244_PdelayResp_WithoutConfirmationPdelayReq</srcid><srcstatus/><internalId>2087</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8427</srcid><srcstatus/><internalId>1147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master.RxIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_RxIndication() is called using a configured master, instead of a slave and the frameType
        is Sync, SyncFUp, PdelayResp or PdelayRespFUp no further action shall take place.
      </description>
      <comment>
        Exception: If EthTSyn_RxIndication() is using a master and EthTSynMasterSlaveConflictDetection is enabled
        a DET shall be reported.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01015_Master_ReceivePdelayResp</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01017_Master_ReceiveSyncFU</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01019_Master_ReceivePdelayFU</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0014_MasterReceivesDelayRespFrame</srcid><srcstatus/><internalId>2232</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8234</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13032</srcid><srcstatus/><internalId>1410</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13074</srcid><srcstatus/><internalId>1416</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13108</srcid><srcstatus/><internalId>1421</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13149</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15847</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00145</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RxIndication.InvalidFrameLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_RxIndication() is called with a frame that has an invalid length, no further
        action shall take place.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01225_OfsSecured_IncorrectFUpLength</srcid><srcstatus/><internalId>1913</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01226_OfsNotSecured_IncorrectFUpLength</srcid><srcstatus/><internalId>1914</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01016_Slave_ReceivePdelayResp_InvalidLength</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01018_Slave_ReceiveSyncFU_InvalidLength</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01020_Slave_ReceivePdelayFU_InvalidLength</srcid><srcstatus/><internalId>1991</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8680</srcid><srcstatus/><internalId>1160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RxIndication.ProcessSubTlvLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case EthTSyn_RxIndication() is called with a length which is grater than length defined
        in Follow_Up message header, EthTSyn will check SUB TLVs in Follow_Up, up until length
        received in AUTOSAR TLV header. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01237_ProcessedTLVs_Rx</srcid><srcstatus/><internalId>1932</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8688</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PdelayResp_NegativeTimeOffset</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In EthTSyn_MainFunction() while calculating the Pdelay, if T4-T1 time difference
        has a negative value, Pdelay will not be calculated.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01035_PdelayResp_Negative</srcid><srcstatus/><internalId>2008</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11373</srcid><srcstatus/><internalId>1310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PdelayRespFU_NegativeTimeOffset</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In EthTSyn_MainFunction() while calculating the Pdelay, if ((t4 - t1) - (t3 - t2))
        time difference has a negative value, Pdelay will not be updated.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01041_NegativePdelay</srcid><srcstatus/><internalId>2014</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11437</srcid><srcstatus/><internalId>1316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Nanoseconds</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If, after calling EthTSyn_RxIndication(), any of EthIf_GetEgressTimeStamp(),
        EthIf_GetIngressTimeStamp(), StbM_GetCurrentVirtualLocalTime(), EthTSyn_EthSwtPtpRxIndication()
        or EthTSyn_EthSwtPtpTimeStampIndication() returns a
        time stamp that has the nanoseconds value greater or equal to 1 second,
        no further action shall take place.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01032_GetEgressTimeStamp_Nanoseconds</srcid><srcstatus/><internalId>2004</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01023_HW_Disabled_Nanoseconds</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01033_SyncFUFrame_Nanosec</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01038_TimeDiff_Nanoseconds</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01039_PdelayResp_Nanoseconds</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01040_PdelayRespFu_Nanoseconds</srcid><srcstatus/><internalId>2013</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01258_InvalidTsRxPdelayReq</srcid><srcstatus/><internalId>2111</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0053_InvalidTsRxInd</srcid><srcstatus/><internalId>2200</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0054_InvalidTsRxTSInd</srcid><srcstatus/><internalId>2201</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0055_InvalidTsRxPdelayReqsp</srcid><srcstatus/><internalId>2202</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4799</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9822</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10274</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10493</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15627</srcid><srcstatus/><internalId>1572</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15767</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15863</srcid><srcstatus/><internalId>1588</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16363</srcid><srcstatus/><internalId>1616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If, in any of the following circumstances:
          - T4-T1 at Pdelay calculation
          - T3, when processing the PdelayRespFUp frame
          - T2, when processing the PdelayRest frame
          - T4, taken via EthTSyn_GetIngressTimeStamp() after receiving a PdelayResp frame
          - TimeStamp inside the OFS Sub-TLV
          - OriginTimeStamp of the SyncFUp frame
          - EgressTimeStamp when the master tries to sync
        the nanoseconds value is equal to the maximum value allowed(999.999.999), frame processing
        shall continue as expected.
      </description>
      <comment>Requirement added for boundary tests</comment>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc01</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc02</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc03</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc04</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc05</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc06</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NanosecondsLimit.vc07</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9523</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9827</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9946</srcid><srcstatus/><internalId>1255</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10098</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10277</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10496</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11388</srcid><srcstatus/><internalId>1313</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16368</srcid><srcstatus/><internalId>1617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Nanoseconds.CorrectionTime</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the byte correction field from a sync follow up frame has the nanoseconds value
        greater or equal to 1 second, no action shall take place during EthTSyn_RxIndication().
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01034_SyncFUFrame_TransferCorrTime_Nanosec</srcid><srcstatus/><internalId>2007</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10900</srcid><srcstatus/><internalId>1298</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11004</srcid><srcstatus/><internalId>1303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TimeDiff_InvalidTime</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In EthTSyn_MainFunction() while calculating the Pdelay, if (t4 - t1) or (t3 - t2) has the
        value seconds or secondsHi greater than 0, Pdelay will not be updated.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01036_TimeDiff_SecondHi</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01037_TimeDiff_Seconds</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01042_Pdelay_Seconds</srcid><srcstatus/><internalId>2015</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01043_Pdelay_SecondsHi</srcid><srcstatus/><internalId>2016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11378</srcid><srcstatus/><internalId>1311</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11383</srcid><srcstatus/><internalId>1312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave_OverflowDetection</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An overflow shall be detected if the value of the origin time stamp in seconds exceedes the
        32 bits memory storage space. For the overflow detection to take place the actual value of
        the 32 bits origin time stamp in seconds shall be 0xFFFFFFFF. EthTSyn must increment this
        value and the content of the memory for the origin time stamp in seconds shall overflow to
        ZERO, this change must be detected by the EthTSyn module.
      </description>
      <comment>
        This applies in the case in which ETHTSYN_HW_TIMESTAMP_SUPPORT is OFF.
        How to test:
        - create a sync frame and receive the sync frame by calling EthTSyn_RxIndication();
        - set the origin time stamp in seconds to 0xFFFFFFFF and the origin time stamp secondsHi
          to 1;
        - set the StbM get current time stub time stamp pointer_out value to 0xFFFFFFFF;
        - create a sync follow up frame and receive the sync follow up frame by calling
          EthTSyn_RxIndication();
        - at receive time EthTSyn_RxIndication() will process the RxSync_FollowUp_Frame;
        - while the RxSync_FollowUp_Frame is processed the overflow is detected
          (the origin time stamp in seconds overflows to ZERO) and the origin time stamp secondsHi
          is incremented to 2.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01056_Slave_OverflowDetection</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01239_ActualPdelay</srcid><srcstatus/><internalId>2076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10766</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10773</srcid><srcstatus/><internalId>1292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Master_TransmitPdelayRequestFrame</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configured master node must be able to transmit Pdelay request frames.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01057_Master_SendPdelayRequestFrame</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01255_Master_SendPdelayRequestFrame_Retry</srcid><srcstatus/><internalId>2108</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12720</srcid><srcstatus/><internalId>1382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.UpdatePhysAddrFilter_AddToFilter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_TrcvLinkStateChg() is called with LinkState = ETHTRCV_LINK_STATE_ACTIVE, the
        module shall add the destination MAC address to the Eth filter by calling
        EthIf_UpdatePhysAddrFilter() with ETH_ADD_TO_FILTER.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01002_ResetSyncFrames</srcid><srcstatus/><internalId>1964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4393</srcid><srcstatus/><internalId>865</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.UpdatePhysAddrFilter_RemoveFromFilter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_TrcvLinkStateChg() is called with LinkState != ETHTRCV_LINK_STATE_ACTIVE, the
        module shall remove the destination MAC address from the Eth filter by calling
        EthIf_UpdatePhysAddrFilter() with ETH_REMOVE_FROM_FILTER.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01002_ResetSyncFrames</srcid><srcstatus/><internalId>1964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4403</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EthTSyn module's generator shall generate a basic software
        module description (BSWMD) based on the EthTSyn module's
        configuration containing information on the exclusive areas
        required by the EthTSyn module's implementation.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EthTSyn_CompileTest_SchM</srcid><srcstatus/><internalId>1839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4_41</srcid><srcstatus/><internalId>1679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EthTSyn module's generator shall generate a basic software
        module description (BSWMD) based on the EthTSyn module's
        configuration containing information on the scheduled
        MainFunctions together with the scheduling period.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EthTSyn_CompileTest_SchM</srcid><srcstatus/><internalId>1839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4_70</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EthTSyn module's BSWMD shall be generated using a generator
        mode named "generate_swcd".
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EthTSyn_CompileTest_SchM</srcid><srcstatus/><internalId>1839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4_10</srcid><srcstatus/><internalId>1678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoSlaveConfigured</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EthTSyn must compile without slave configured.
      </description>
      <comment>
        The test implemented will not change (or remove) in any way the configuration.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.NoSlaveConfigured.vc01</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoSlaveConfigured.vc02</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoSlaveConfigured.vc03</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoSlaveConfigured.vc04</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoSlaveConfigured.vc05</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_224</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoMasterConfigured</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EthTSyn must compile without master configured.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.NoMasterConfigured.vc01</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoMasterConfigured.vc02</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoMasterConfigured.vc03</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.NoMasterConfigured.vc04</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_217</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SwitchConfigured</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EthTSyn must compile with switch configured.
      </description>
      <comment>
        The test implemented will not change (or remove) in any way the configuration.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest01_SwitchConfigured</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_62</srcid><srcstatus/><internalId>809</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BusGetCurrentTime_NOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If StbM_BusGetCurrentTime() returns E_NOT_OK while the master tries to transmit a sync
        frame, no further action shall take place.
      </description>
      <comment>
        The master shall try and transmit the sync frame again in the next EthTSyn_MainFunction().
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01123_ImmediateTimeSync_BusGetCurrentTime_NOK</srcid><srcstatus/><internalId>1897</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames_BusGetCurrentTime_NOK</srcid><srcstatus/><internalId>1946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12341</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12458</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

<!-- Correction field checks =================================================================== -->

    <specobject>
      <id>EthTSyn.EB.SyncFUP.CorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        An EthTSyn slave shall add the correction field to the origin time stamp during the
        calculation of the sync offset between master and slave.
      </description>
      <comment>
        * EthTSyn shall process the full 48 bit range of the correction field. This is a
        requirement stated in "AVENU Automotive Ethernet AVB Functional and Interoperability
        Specification rev 1.4 line 600"
        * The 16 bit reserved for fractional ns are ignored due to the min resolution of 1 ns in the
        time stamp type.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Slave.AddCorrField_NegativeCorrectionField</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Slave.AddCorrField_MaxValues_NsTimeStamp_CorrFieldHi</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Slave.AddCorrField_RemainingCorrFieldHi_Ns_NotZero</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Slave.NegativeCorrectionField</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.AddCorrField_NegativeCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In the case of a sync follow up frame received with a negative correction field no
        action is performed.
      </description>
      <comment>
        How to test:
        - set the ingress timestamp;
        - for a slave node receive a sync frame and set the origin timestamp;
        - create a sync follow up frame and set the curent time;
        - set the first bit in the first address of the correction field so that the negative
          correction field is detected;
        - call EthTSyn_RxIndication() and verify that after this function is called no action is
          taken (no other functions were called).
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01059_Slave_NegativeCorrectionField</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0034_NegativeCorrField</srcid><srcstatus/><internalId>2182</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10844</srcid><srcstatus/><internalId>1294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFUP.CorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.AddCorrField_MaxValues_NsTimeStamp_CorrFieldHi</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the bytes 0 to 5 in the representation of the correction field have invalid values
        no action shall be taken.
      </description>
      <comment>
        How to test:
        - set the ingress timestamp;
        - for a slave node receive a sync frame and set the origin timestamp;
        - create a sync follow up frame and set the curent time;
        - set the correction field to values high enough for the correction to be too big to
          be represented;
        - call EthTSyn_RxIndication() and verify that after this function is called no action is
          taken (no other functions were called).
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01060_Slave_NsTimeStampMax_CorrFieldHiMax</srcid><srcstatus/><internalId>2032</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10847</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10964</srcid><srcstatus/><internalId>1300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFUP.CorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.AddCorrField_RemainingCorrFieldHi_Ns_NotZero</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the byte 0 of the correction field array contains a valid value and the bytes 1 to 5
        contain the default value 0 it shall be verified that the correction time and bus set global
        time are correct.
      </description>
      <comment>
        How to test:
        - set the ingress time stamp;
        - receive a sync frame;
        - set the origin time stamp and create a sync follow up frame;
        - set the current time stamp;
        - set the byte 0 of the correction field to a valid value (the bytes 1 to 5 are left
          unchanged, they will contain the default value 0);
        - call EthTSyn_RxIndication() to receive the SyncFUFrame;
        - verify that after EthTSyn_RxIndication() EthIf_GetCurrentTime() and
        StbM_BusSetGlobalTime() are called for the current time stamp.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01061_Slave_RemainingCorrFieldHiNs_NotZero</srcid><srcstatus/><internalId>2033</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10874</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10983</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFUP.CorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Time sync shall handle the lower 32 bytes of the correction field (bytes 2 to 5)
        with the nanoseconds part set to the maximum value.
      </description>
      <comment>
        How to test:
        - set the ingress time stamp;
        - receive a sync frame;
        - set the origin time stamp and create a sync follow up frame;
        - set the current time stamp;
        - set the byte 0 in the representation of the correction field to a valid value
          and the bytes 2 to 5 to the max. value 255 for the calculated time stamp to be higher
          than 999999999;
        - call EthTSyn_RxIndication() to receive the SyncFUFrame and calculate the time stamp
          for the correction time in nanoseconds to be used for verifications;
        - verify that after EthTSyn_RxIndication() EthIf_GetCurrentTime() and
          StbM_BusSetGlobalTime() are called for the current time stamp.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01062_Slave_CorrField_NsPart</srcid><srcstatus/><internalId>2034</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10899</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11003</srcid><srcstatus/><internalId>1302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFUP.CorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMessageCompliance is set to false, EthTSynRxCrcValidated is set to
        CRC_NOT_VALIDATED and the slave receives one of the following unexpected Sub-TLVs:
          - Time Secured(0x28)
          - Status Secured(0x50)
          - OFS Secured(0x44)
          - UserData Secured(0x60)
        the message processing shall stop and message will be dropped.
      </description>
      <comment>
        Added for RcF 77619.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01111_UserDataSecured_CrcNotValidated_Rx</srcid><srcstatus/><internalId>1883</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9018</srcid><srcstatus/><internalId>1190</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9104</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9243</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9409</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.AutosarSubTLV.UnknownSubTLVType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMessageCompliance is set to false, and the slave receives a message
        that contains a SubTLV with unknown SubTLV Type, that SubTLV will be ignored and the
        next one will be processed.
      </description>
      <comment>
        Added for RcF 77619.
        EthTSynRxCrcValidated can be CRC_IGNORED, CRC_NOT_VALIDATED, CRC_OPTIONAL or CRC_VALIDATED.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01103_TimeSecuredAndStatusSecured_CrcValid_InvalidSubTlvType</srcid><srcstatus/><internalId>1874</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01122_UnknownSubTLVType_Combined</srcid><srcstatus/><internalId>1875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8957</srcid><srcstatus/><internalId>1185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMessageCompliance is set to false, EthTSynRxCrcValidated is set to
        CRC_VALIDATED and the slave receives one of the following unexpected Sub-TLVs:
          - Status Not Secured(0x51)
          - OFS Not Secured(0x34)
          - UserData Not Secured(0x61)
        the message processing shall stop and message will be dropped.
      </description>
      <comment>
        Added for RcF 77619.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01117_UserDataNotSecured_CrcValidated_Rx</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01221_OfsSecured_NotValidated</srcid><srcstatus/><internalId>1909</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01232_OfsNotSecured_Validated</srcid><srcstatus/><internalId>1922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9166</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9300</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9346</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.AutosarSubTLV.IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMessageCompliance is set to false, and one Sub-TLV has an invalid length
        the message processing shall stop and the message shall be dropped.
      </description>
      <comment>
        Added for RcF 77619.
        See correct length values: EthTSyn.ASR43.SWS_EthTSyn_00065.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01104_TimeSecured_CrcValidated_InvalidSubTlvLengthRx</srcid><srcstatus/><internalId>1876</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01105_StatusSecured_CrcValidated_InvalidSubTlvLengthRx</srcid><srcstatus/><internalId>1877</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01106_StatusNotSecured_CrcNotValidated_InvalidSubTlvLengthRx</srcid><srcstatus/><internalId>1878</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01112_UserDataSecured_CrcValidated_InvalidLength_Rx</srcid><srcstatus/><internalId>1884</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01119_UserDataNotSecured_CrcIgnored_InvalidLength_Rx</srcid><srcstatus/><internalId>1892</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01223_OfsSecured_WrongTLVLength</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01224_OfsNotSecured_WrongTLVLength</srcid><srcstatus/><internalId>1912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8788</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8803</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8819</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8835</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8853</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8871</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8890</srcid><srcstatus/><internalId>1174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Sync_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If EthTSyn_RxIndication() is called for a Sync frame, and LenByte is less than
        44(size of a Sync frame), it shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01253_IncorrectSyncFrameSize</srcid><srcstatus/><internalId>2105</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01254_BiggerSyncFrameSize</srcid><srcstatus/><internalId>2106</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8205</srcid><srcstatus/><internalId>1129</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PdelayReq_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_RxIndication() is called for a PdelayReq frame, and LenByte is smaller
        than the PdelayReq size, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.PdelayReq_IncorrectLength.vc01</srcid><srcstatus/><internalId>736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13011</srcid><srcstatus/><internalId>1408</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_Sync_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a Sync frame, and Len is less than
        44(size of a Sync frame), it shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0009_ReceiveOnBridge_IncorrectSyncLength</srcid><srcstatus/><internalId>2156</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0051_ReceiveOnBridge_IncorrectSyncLength</srcid><srcstatus/><internalId>2198</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15609</srcid><srcstatus/><internalId>1569</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SyncFrame_IncorrectLenBytes</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If a sync frame is received and messageLength is not equal to the defined value in
        EthTSyn.PRS_TS_00063, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01257_SyncLenbyteNOK</srcid><srcstatus/><internalId>2107</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0052_ReceiveOnBridge_IncorrectSyncLenBytes</srcid><srcstatus/><internalId>2199</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8472</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15610</srcid><srcstatus/><internalId>1570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_SyncFUp_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a SyncFUp frame, and Len is smaller
        than the SyncFUp size, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0010_ReceiveOnBridge_IncorrectSyncFUpLength</srcid><srcstatus/><internalId>2157</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0020_ReceiveFUp_IncorrectSize</srcid><srcstatus/><internalId>2167</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15719</srcid><srcstatus/><internalId>1578</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_SyncFUpSubTLV_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a SyncFUp frame that contains an AUTOSAR SubTLV
        and Len is smaller than the total size needed, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0056_InvalidLength</srcid><srcstatus/><internalId>2203</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8691</srcid><srcstatus/><internalId>1162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_SyncFUp_MaxLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a SyncFUp and Len parameter is greater than
        131 bytes(maximum size of a SyncFUp frame that contains all 4 supported AUTOSAR Sub-TLVs),
        only those first 131 bytes will be processed, remaining will be ignored.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0057_MaxSyncFUpSize</srcid><srcstatus/><internalId>2204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16115</srcid><srcstatus/><internalId>1596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_PdelayReq_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a PdelayReq frame, and Len is smaller
        than the PdelayReq size, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01990_MasterReceiveSwtPdelayReqFrames_IncorrectLen</srcid><srcstatus/><internalId>1958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15856</srcid><srcstatus/><internalId>1587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_PdelayResp_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a PdelayResp frame, and Len is smaller
        than the PdelayResp size, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15747</srcid><srcstatus/><internalId>1580</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0025_PdelayBridge_InvalidPdelayRespLen</srcid><srcstatus/><internalId>2171</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthSwtRx_PdelayRespFUp_IncorrectLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for a PdelayRespFUp frame, and Len is smaller
        than the PdelayRespFUp size, the frame shall be dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15827</srcid><srcstatus/><internalId>1584</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0027_PdelayBridge_InvalidPdelayRespFUpLen</srcid><srcstatus/><internalId>2173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.OffsetSubTlv_GetOffset_NOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If StbM_GetOffset() returns E_NOT_OK while filling out the Offset Sub-TLV for tranmission,
        the SyncFUFrame shall be transmitted without the Offset Sub-TLV.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01220_GetOffset_NOK</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01254_GetOffset_NOK_All</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6683</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.GetVirtualProtection_PdelayReq</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() and if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018)
        is set to FALSE the following sequence shall be applied:
        1. Immediately establish a protection against interruptions and run the next step directly afterwards:
        2. Retrieve the reference time T2VLT for the PdelayReq message via StbM_GetCurrentVirtualLocalTime() from the StbM
        3. The protection against interruptions may be removed now(RS_TS_20048)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01242_SafeCar_MasterPdelayResp</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12933</srcid><srcstatus/><internalId>1400</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.GetVirtualProtection_PdelayResp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On invocation of EthTSyn_RxIndication() and if EthTSynHardwareTimestampSupport(ECUC_EthTSyn_00018)
        is set to FALSE the following sequence shall be applied:
        1. Immediately establish a protection against interruptions and run the next step directly afterwards:
        2. Retrieve the IngressTimeStamp via StbM_GetCurrentVirtualLocalTime() for the PdelayResp frame.
        3. The protection against interruptions may be removed now(RS_TS_20048)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01242_SafeCar_MasterPdelayResp</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12934</srcid><srcstatus/><internalId>1401</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
     <specobject>
      <id>EthTSyn.EB.PBSelectable.FileName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration file names shall be changed in the following way:
        &lt;Mod&gt;[_*]_PBcfg.* to &lt;Mod&gt;_&lt;postBuildVariant&gt;[_*]_PBcfg.*
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest_PostBuildSelectable</srcid><srcstatus/><internalId>1836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>

    <specobject>
     <id>EthTSyn.EB.PBSelectable.TypeName</id>
     <status>approved</status>
     <source>EB</source>
     <version>1</version>
     <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration type/variable names shall be changed in the following way:
        - EthTSyn_[Const]ConfigLayoutType to EthTSyn_&lt;postBuildVariant&gt;_[Const]ConfigLayoutType
     </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest_PostBuildSelectable</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ImplTest0300_CheckPostbuildConfig</srcid><srcstatus/><internalId>2341</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>

    <specobject>
     <id>EthTSyn.EB.PdelayReqTransmit_Retry</id>
     <status>approved</status>
     <source>EB</source>
     <version>1</version>
     <description>
        If EthTSynGlobalTimeTxPdelayReqPeriod reached 0 and the transmission of the PdelayReq failed,
        in the next EthTSyn_MainFunction() call the module shall retry the transmission.
     </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01255_Master_SendPdelayRequestFrame_Retry</srcid><srcstatus/><internalId>2108</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12726</srcid><srcstatus/><internalId>1383</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.DebounceCalculation_MaxValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If, during debounce calculation, the configured debounce value + the EthTSyn_MainFunction() general counter
        equals the max value 0xFFFFFFFFU, the frame shall be transmitted one EthTSyn_MainFunction() call earlier.
      </description>
      <comment>
        0xFFFFFFFFU is used to hold the invalid debounce value - a new debounce will be calculated and the one with
        invalid value will be ignored, thus losing the frame transmission,
        if debounce is calculated to the invalid value.
        Requirement added for robustness - Highly unlikely case.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01201_DebounceMaxValue</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01241_EthTSynCtrl_MaxDebounce</srcid><srcstatus/><internalId>2049</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4644</srcid><srcstatus/><internalId>881</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4733</srcid><srcstatus/><internalId>884</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12828</srcid><srcstatus/><internalId>1395</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14069</srcid><srcstatus/><internalId>1475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynInitialGlobalTimeTxPdelayReqPeriod_First</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynInitialGlobalTimeTxPdelayReqPeriod is configured to a value greater than 0, the first PdelayReq shall
        be transmitted after that period elapsed.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01272_InitialPdelayTxPeriod</srcid><srcstatus/><internalId>2138</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12064</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynInitialGlobalTimeTxPdelayReqPeriod_Subsequent</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynInitialGlobalTimeTxPdelayReqPeriod is configured to a value greater than 0 and the first
        PdelayReq frame was transmitted, any subsequent one will be transmitted only after EthTSynGlobalTimeTxPdelayReqPeriod elapses.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01272_InitialPdelayTxPeriod</srcid><srcstatus/><internalId>2138</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5881</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.Csm_BUSY_0_Attempts</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         If Csm_MacVerify or Csm_SignatureVerify returns recoverable error code
         (e.g., CRYPTO_E_BUSY) and EthTSynIcvVerificationAttempts is configured to 0,
         EthTSyn shall:
         • stop the ICV verification and discard the received Follow_Up message,
         • call IdsM_SetSecurityEventWithContextData with the parameters EventId :=
         ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0038_SlaveReceives_VerifAttempts_0_Busy</srcid><srcstatus/><internalId>2280</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0052_BUSY_Attempts_0</srcid><srcstatus/><internalId>2295</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_7783</srcid><srcstatus/><internalId>1110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_EthTSynInitialGlobalTimeTxPdelayReqPeriod_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynInitialGlobalTimeTxPdelayReqPeriod
        Description Represents the period until first PdelayReq frame is transmitted.
                    If configured, the first PdelayReq frame will be transmitted in the specified time and
                    the following PdelayReq frames will be transmitted using the configured EthTSynGlobalTimeTxPdelayReqPeriod.
                    If not configured, the first PdelayReq frame will also be transmitted using EthTSynGlobalTimeTxPdelayReqPeriod.
        Multiplicity 1
        Type EcucFloatParamDef
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_SimpleBridge_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynSimpleBridge
        Description Switches between transparent and boundary clock.
                      - true: Time Aware Bridge will act as a transparent clock.
                      - false: Time Aware Bridge will act as a boundary clock.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value true
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_SynchronizeSimpleBridge_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynSynchronizeSimpleBridge
        Description Switches the synchronization over the Time Aware Bridge on or off.
                      - true: synchronization is enabled.
                      - false: synchronization is disabled.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_SimpleBridgeValidateSync_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynSimpleBridgeValidateSync
        Description Activates/deactivates the checks AUTOSAR does on the received Sync frame.
                      - true: AUTOSAR checks enabled.
                      - false: AUTOSAR checks disabled.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_SimpleBridgeTSynSendSync_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynSimpleBridgeTSynSendSync
        Description Parameter that choses between EthTSyn and EthSwt to forward the received Sync frame.
                      - true: EthTSyn will handle the fowarding of the sync frame to the connected ports.
                      - false: EthSwt will handle the fowarding of the sync frame to the connected ports.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value false
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_PortNumber_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynPortNumber
        Description Unique port ID that shall be included in the source port identity in the PTP header.
        Multiplicity 1
        Type EcucIntegerParamDef
        Range 0 .. 65534
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ECUC_BridgeTxPeriod_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynBridgeTxPeriod
        Description This period is used by the boundary clock, to transmit the synchronization frames
                    to the connected slaves.
        Multiplicity 1
        Type EcucFloatParamDef
        Range 0 .. 1000
        Default value 0
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Swt_InvalidCorrection_Calculated</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EthTSyn shall forward the SyncFUp frame only on SwtPorts that have the calculated
        correction valid.
        Invalid corrections:
          - nanoseconds greater than 1 second
          - SecondsHi not equal to 0
          - Seconds greater or equal than 4
          - Negative correction
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0003_ReceiveOnBridge_CRC_IncorrectCorrections</srcid><srcstatus/><internalId>2151</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14373</srcid><srcstatus/><internalId>1493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_Synchronize</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSynchronizeSimpleBridge is set to true, if a valid pair of Sync and SyncFUp frames
        is received, EthTSyn shall perform the synchronization in the context of
        EthTSyn_EthSwtPtpRxIndication()(during the reception of the SyncFUp frame) and shall call
        StbM_BusSetGlobalTime() to pass the result of the TimeStamp
        calculation(OriginTimeStamp + correctionField + Pdelay + SRD + (T5 - T4))
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0014_ReceiveAndSynchronize</srcid><srcstatus/><internalId>2161</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0021_ReceiveFUpOnMaster</srcid><srcstatus/><internalId>2168</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0029_ReceiveAndSynchronize_ValidationOn</srcid><srcstatus/><internalId>2175</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0046_SyncBridge_Validation</srcid><srcstatus/><internalId>2193</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0057_MaxSyncFUpSize</srcid><srcstatus/><internalId>2204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16272</srcid><srcstatus/><internalId>1607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_SynchronizeFailIngress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSynchronizeSimpleBridge is set to true and during receptio of the Sync frame,
        EthIf_GetIngressTimeStamp() returns an invalid TimeQuality(no valid T6), no synchronization shall take place
        when the SyncFUp frame is received.
        This will not affect the frame forwarding - the received SyncFUp frame shall be forwarded with updated
        CorrectionField for all MasterPorts that have received a valid EgressTimeStamp.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0015_ReceiveAndSynchronize_GetIngressFail</srcid><srcstatus/><internalId>2162</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16452</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_SynchronizeT5T4_Invalid</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSynchronizeSimpleBridge is set to true and the IngressTimeStamp_T4 from the received Sync frame
        is greater than the HostEgressTimeStamp received from EthSwt, resulting in a negative T5-T4 value, no synchronization
        shall take place when SyncFUp frame is received.
        This will not affect the frame forwarding - the received SyncFUp frame shall be forwarded with updated
        CorrectionField for all MasterPorts that have received a valid EgressTimeStamp.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0016_T5T4_Invalid</srcid><srcstatus/><internalId>2163</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4832</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSynchronizeSimpleBridge is set to true and the EgressTimeStamp for the HostPort is received via
        EthTSyn_EthSwtPtpTimeStampIndication() only after the pair Sync/SyncFUp frame was received, the synchronization
        shall take place in the next EthTSyn_MainFunction() call.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0018_ReceiveAndSynchronize_EgressAfterFUp</srcid><srcstatus/><internalId>2165</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15406</srcid><srcstatus/><internalId>1563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUpFW</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSynchronizeSimpleBridge is set to true and the EgressTimeStamp for the HostPort is received via
        EthTSyn_EthSwtPtpTimeStampIndication() only after the SyncFUp with updated CorrectionField was forwarded
        to each configured master port, the synchronization shall take place in the next EthTSyn_MainFunction() call.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0019_ReceiveAndSynchronize_EgressAfterFwFUp</srcid><srcstatus/><internalId>2166</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15407</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_PdelayReqTransmission</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridge is set to true and EthTSyn_MainFunction() is called enough times that
        EthTSynGlobalTimeTxPdelayReqPeriod(for the slave port) elapses, a PdelayRequest frame shall be sent
        on that respective port(SwitchIdx and PortIdx) via and EthSwt_PtpTransmit().
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0022_PdelayBridge</srcid><srcstatus/><internalId>2169</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0047_PdelayBridge_Validation</srcid><srcstatus/><internalId>2194</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12738</srcid><srcstatus/><internalId>1385</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_PdelayCalculation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Pdelay is calculated over a Time Aware Bridge with GTM not as Management CPU using the following:
        - The received T1, via EthTSyn_EthSwtPtpTimeStampIndication(), after succesfull transmission of the PdelayReq frame.
        - T2 from the received PdelayResp frame(EthTSyn_EthSwtPtpRxIndication()).
        - T3 from the received PdelayRespFUp frame(EthTSyn_EthSwtPtpRxIndication()).
        - T4 from EthSwt while receiving the PdelayResp frame.
        - The calculation shall take place during EthTSyn_MainFunction().
      </description>
      <comment>
        ((t4 - t1) - (t3 - t2)) / 2
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0022_PdelayBridge</srcid><srcstatus/><internalId>2169</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0047_PdelayBridge_Validation</srcid><srcstatus/><internalId>2194</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11431</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_PdelayReqTransmission_FailedBuffer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK while transmitting a PdelayReq frame on the
        slave port, the frame shall be dropped and nothing else shall be called.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0023_PdelayBridge_TxBuffer_NOK</srcid><srcstatus/><internalId>2170</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14581</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_InvalidPdelayRespMgmtInfo</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayResp frame and MgmtInfo parameter is 
        not the PortIdx/SwitchIdx of the SlavePort, the frame shall not be processed(T4 and T2 shall not be received so Pdelay calculation shal fail).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0026_PdelayBridge_PdelayResp_InvalidMgmt</srcid><srcstatus/><internalId>2172</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15750</srcid><srcstatus/><internalId>1581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_InvalidPdelayRespFUpMgmtInfo</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayRespFUp frame and MgmtInfo parameter is 
        not the PortIdx/SwitchIdx of the SlavePort, the frame shall not be processed(T3 shall not be received so Pdelay calculation shal fail).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0028_PdelayBridge_PdelayRespFUp_InvalidMgmt</srcid><srcstatus/><internalId>2174</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15830</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_EthTSynSendSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridgeTSynSendSync is set to true and if a valid sync frame is received,
        EthTSyn shall forward it to all configured switch ports, in the context of
        EthTSyn_EthSwtPtpRxIndication().
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0029_ReceiveAndSynchronize_ValidationOn</srcid><srcstatus/><internalId>2175</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15944</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_EthTSynSendSync_FailedFw</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridgeTSynSendSync is set to true and EthTSyn encounters any issues
        while forwarding the sync frame to a port(during EthSwt_ProvideTxBuffer() or EthSwt_PtpTransmit())
        the transmission shall stop for the respective port and continue with the rest.
        Consequently, the SyncFUp, with updated correction field, shall only be forwarded on switch
        ports where the sync frame was transmitted successfully.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0038_ReceiveAndSynchronize_FailedFw</srcid><srcstatus/><internalId>2176</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14190</srcid><srcstatus/><internalId>1481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.TransparentClock_ValidateSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridgeValidateSync is set to true the slave shall check the Sequence Counter
        (sequenceId) of the received Sync message against the configured
        value of GlobalTimeSequenceCounterJumpWidth.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0029_ReceiveAndSynchronize_ValidationOn</srcid><srcstatus/><internalId>2175</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0030_Receive_IncorrectSC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16434</srcid><srcstatus/><internalId>1619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_ValidateSync_ScrPortId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridgeValidateSync is set to true the slave shall save the first sync frame's
        SrcPortID and use it to check further received Sync frames. If frames with different SrcPortId are received
        they shall be dropped and DET shall be reported with ETHTSYN_E_TSCONFLICT
        (EthTSynMasterSlaveConflictDetection and EthTSynDevErrorDetect are enabled).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0031_Receive_IncorrectSrcPortId</srcid><srcstatus/><internalId>2178</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15675</srcid><srcstatus/><internalId>1574</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_DebounceValueSet</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridge is set to true and EthTSynGlobalTimeDebounceTime is configured, in
        the first EthTSyn_MainFunction() call after succesfully receiving a Sync frame, the debounce counter
        shall be set and the Sync frame forwarded to the master ports.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0030_Debounce</srcid><srcstatus/><internalId>2179</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4726</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_DebounceValueElapse</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridge is set to true and EthTSynGlobalTimeDebounceTime is configured, after succesfully
        receiving a SyncFUp frame, the debounce counter shall be decreased with each EthTSyn_MainFunction() call
        and as soon as it reaches 0, the SyncFUp frame shall be forwarded to all master ports that had a valid Sync frame
        and EgressTimeStamp received.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0030_Debounce</srcid><srcstatus/><internalId>2179</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0032_SyncOnlyOnHost</srcid><srcstatus/><internalId>2180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3878</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_SyncOnHost</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridge and EthTSynSendSyncFrameOnlyOnHostPort are set to true,
        after receiving a Sync frame via EthTSyn_EthSwtPtpRxIndication(), the sync frame shall be forwarded
        only to the HostPort.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0032_SyncOnlyOnHost</srcid><srcstatus/><internalId>2180</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0050_SyncOnlyOnHost_Validation</srcid><srcstatus/><internalId>2197</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15967</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_SyncFUp_NanoSecMax</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridge and EthTSynSynchronizeSimpleBridge are set to true and a SyncFUp with
        OriginTimeStamp greater or equal with 1s is received, no synchronization shall take place. The SyncFUp frame shall
        be forwarded to masterPorts with updated correctionField.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0033_OriginTS_NS_Max</srcid><srcstatus/><internalId>2181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16362</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TransparentClock_InvalidTimeStamp</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If EthTSynSimpleBridge and EthTSynSynchronizeSimpleBridge are set to true and EthIf_GetCurrentTime()
        returns TimeStampQuality as ETH_INVALID, no synchronization shall take place when SyncFUp is received.
        This will not affect the frame forwarding - the received SyncFUp frame shall be forwarded with updated
        CorrectionField for all MasterPorts that have received a valid EgressTimeStamp.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0035_InvalidTS</srcid><srcstatus/><internalId>2183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10314</srcid><srcstatus/><internalId>1279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TimeAwareBridge_MasterReceivePdelayReq</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If a PdelayReq frame is received on a MasterPort via EthTSyn_EthSwtPtpRxIndication(), in the next
        EthTSyn_MainFunction() call, the MasterPort shall transmit a PdelayResp frame.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0036_MasterPortReceivePdelayReq</srcid><srcstatus/><internalId>2184</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0048_MasterPortReceivePdelayReq_Validation</srcid><srcstatus/><internalId>2195</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16612</srcid><srcstatus/><internalId>1631</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TimeAwareBridge_MasterTransmitPdelayRespFUp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the MasterPort transmitted a PdelayResp frame and EthTSyn_EthSwtPtpTimeStampIndication() was called
        to receive the EgressTimeStamp of the PdelayResp, the MasterPort shall transmit a PdelayRespFUp frame in
        the next EthTSyn_MainFunction().
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0036_MasterPortReceivePdelayReq</srcid><srcstatus/><internalId>2184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4968</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If on a TimeDomain that's configured as Time Aware Bridge with GTM not as Management CPU
        there is a mismatch between received Sync/SyncFUp SeqCounter,
        the frame procesing shall stop and Dem_ReportErrorStatus() shall be called with EventId EBTEST_EVENTID_SYNCFAILED
        and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0037_DEM_FailedSync</srcid><srcstatus/><internalId>2185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13375</srcid><srcstatus/><internalId>1438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If on a TimeDomain that's configured as Time Aware Bridge with GTM not as Management CPU
        EthIf_GetIngressTimeStamp() returns a TimeQuality as ETH_INVALID during a Sync frame
        reception, the frame processing shall stop and Dem_ReportErrorStatus() shall be called with EventId EBTEST_EVENTID_SYNCFAILED
        and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0045_DEM_FailedSyncGetIngress_Boundary</srcid><srcstatus/><internalId>2192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13376</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>

      <specobject>
      <id>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress_SC</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridgeValidateSync is true and the SequenceCounter jump between two Sync frames is grater than the configured
        SequenceJumpWitdh, the frame procesing shall stop and Dem_ReportErrorStatus() shall be called with EventId
        EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0044_DEM_FailedSync_Boundary</srcid><srcstatus/><internalId>2191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16435</srcid><srcstatus/><internalId>1620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynSimpleBridge is false the GTM shall behave as a BoundaryClock. In the first EthTSyn_MainFunction()
        call after a successfull sync, EthTSyn shall transmit a Sync frame on the HostPort, if no Sync frame was transmitted prior.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0039_ReceiveOnBoundaryClock</srcid><srcstatus/><internalId>2186</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0043_EgressAfterSyncFUP</srcid><srcstatus/><internalId>2190</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16317</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_SecondTx_Less</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Using a TimeDomain that's a BoundaryClock, after the first valid pair of Sync/SyncFUp frames were received(synchronization took place),
        EthTSynBridgeTxPeriod shall be taken into consideration.
        After the synchronization, EthTSyn shall check and if the current time - last transmission of the sync frames is less 0.5 * EthTSynBridgeTxPeriod
        EthTSyn shall begin sync transmission as soon as EthTSynBridgeTxPeriod expires.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0041_ReceiveOnBoundaryClock_BeforeHalfPeriod</srcid><srcstatus/><internalId>2188</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16318</srcid><srcstatus/><internalId>1613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_SecondTx_More</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Using a TimeDomain that's a BoundaryClock, after the first valid pair of Sync/SyncFUp frames were received(synchronization took place),
        EthTSynBridgeTxPeriod shall be taken into consideration.
        After the synchronization, EthTSyn shall check and if the current time - last transmission of the sync frames is greater or equal than 0.5 * EthTSynBridgeTxPeriod
        EthTSyn shall begin sync transmission in the next EthTSyn_MainFunction() call.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0042_ReceiveOnBoundaryClock_AfterHalfPeriod</srcid><srcstatus/><internalId>2189</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16319</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_NoSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynTimeDomain is a BoundaryClock and no synchronization took place
        (valid pair of Sync/SyncFUp received on the SlavePort), a Sync frame shall be transmitted on the HostPort
        as soon as EthTSynBridgeTxPeriod elapses, via EthTSyn_MainFunction().
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0040_ReceiveOnBoundaryClock_BeforeRxSyncFUp</srcid><srcstatus/><internalId>2187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.BoundaryClock_TransmitSyncOnMasterPorts</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynTimeDomain is a BoundaryClock, after the transmitted Sync on the HostPort is confirmed,
        EthTSyn(if EthTSynSendSyncFrameOnlyOnHostPort is false) shall transmit Sync frames to remaining configured MasterPorts(during EthTSyn_MainFunction()).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0039_ReceiveOnBoundaryClock</srcid><srcstatus/><internalId>2186</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4141</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.BoundaryClock_TransmitSyncFUpOnMasterPorts</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynTimeDomain is a BoundaryClock, EthTSyn shall transmit a SyncFUp frame, in the context of EthTSyn_MainFunctin()
        on all MasterPorts that had a Sync transmitted and also received EgressTimeStamp from EthSwt.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0039_ReceiveOnBoundaryClock</srcid><srcstatus/><internalId>2186</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15386</srcid><srcstatus/><internalId>1562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <!-- ========================== E2E mechanism ================================= -->
    <specobject>
      <id>EthTSyn.EB.checkMajorVersionPTP</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EthTSyn shall check the PTP version when a message is received.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0003_RxSync_IncorrectVersionPTP</srcid><srcstatus/><internalId>2220</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4010</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.VersionPTP_NOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the received versionPTP is not the same with the majorVersionPTP(0x02), the
        message shall be dropped.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0003_RxSync_IncorrectVersionPTP</srcid><srcstatus/><internalId>2220</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4016</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EsaveSyncEgress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as master,
        the egressTimeStamp of the transmitted sync frame shall be saved, in order to be
        transmitted in the Fup frame as preciseOriginTimestamp.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0001_EgressTS_SyncFUp</srcid><srcstatus/><internalId>2218</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4119</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.IncorrectdelayReqFrameLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured and EthTSyn_RxIndication() is called to receive
        a delayReq frame, and LenByte is smaller than 44 bytes,the frame shall be dropped.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0013_MasterReceiveDelayReq_IncorrectLen</srcid><srcstatus/><internalId>2231</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13048</srcid><srcstatus/><internalId>1414</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.FillE2EversionPTP</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain,
        the minor versionPTP field shall be updated accordingly (0x01).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection</srcid><srcstatus/><internalId>2216</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection_2</srcid><srcstatus/><internalId>2217</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0001_EgressTS_SyncFUp</srcid><srcstatus/><internalId>2218</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0002_NegativeCorr</srcid><srcstatus/><internalId>2219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5367</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5540</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5787</srcid><srcstatus/><internalId>948</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6004</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PTPE2EcalculateCorrection</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as master,
        on the transmission of the Fup message, the correctionField shall be update with
        the difference between calculated OTS and the EgressTimeStamp of the Sync frame.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0001_EgressTS_SyncFUp</srcid><srcstatus/><internalId>2218</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11068</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EnegativeCorrection</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the difference between calculated OTS and the EgressTimeStamp of the Sync frame is negative
        the MSB bit in the correctionField will be set (negative correction will be accepted).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0002_NegativeCorr</srcid><srcstatus/><internalId>2219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11078</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EcorrectedMasterEventTimestamp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid pair Sync\Fup is received, the ocorrectedMasterEventTimestamp shall be calculated as following(IEEE_1588_V2 Ch 12.2.2):
        correctedMasterEventTimestamp = preciseOriginTimestamp + meanDelay + correctedSyncCorrectionField + correctionField
        of Follow_Up message.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.PTPE2EcorrectedSyncCorrectionField</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EInvalidCorrectionRx</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EFupCorrectionField</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2ECalculatedMeanDelay</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PTPE2EcorrectedSyncCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Sync frame is received, the correctionField will be saved (correctedSyncCorrectionField, as per IEEE_1588_V2 Ch12.2.2)
        and used to calculate the global time and the meanPathDelay(if configured).
      </description>
      <comment>
        As per IEEE_1588_V2 correctedSyncCorrectionField = correctionSync + DelayAsym. In the current implemntation DelayAsym is equal to 0.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0004_RxSync_SyncFUp</srcid><srcstatus/><internalId>2221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8482</srcid><srcstatus/><internalId>1150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcorrectedMasterEventTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EInvalidCorrectionRx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If correction contains an invalid value e.g. bigger than 0x7FFFFFFFFFFF, EthTSyn shall
        not perform the synchronization.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0007_RxSync_SyncFUp_GreaterCorrection</srcid><srcstatus/><internalId>2225</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13488</srcid><srcstatus/><internalId>1446</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcorrectedMasterEventTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EInvalidCorrectionTx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the calculated correction contains an invalid value e.g. bigger than 0x7FFFFFFFFFFF, EthTSyn shall
        not perform the transmission of the Fup frame.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection</srcid><srcstatus/><internalId>2216</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection_2</srcid><srcstatus/><internalId>2217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5557</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EFupCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Fup frame is received, the correctionField will be saved
        and used to calculate the global time and the meanPathDelay(if configured).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0004_RxSync_SyncFUp</srcid><srcstatus/><internalId>2221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13439</srcid><srcstatus/><internalId>1444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcorrectedMasterEventTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2ECalculatedMeanDelay</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Fup frame is received, the last calculated value of the meanPathDelay
        shall be used to calculate the global time.
      </description>
      <comment>
        If no meanPathDelay was calculated, the configured static value shall be used.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0004_RxSync_SyncFUp</srcid><srcstatus/><internalId>2221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13433</srcid><srcstatus/><internalId>1442</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcorrectedMasterEventTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.Slave.NegativeCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave, and a sync follow up frame received
        with a negative correction field the message shall be processed accordingly.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0005_RxSync_SyncFUp_NegativeCorr</srcid><srcstatus/><internalId>2222</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0005_RxSync_SyncFUp_NegativeCorr_2</srcid><srcstatus/><internalId>2223</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0006_RxSync_SyncFUp_NegativeGlobalTime</srcid><srcstatus/><internalId>2224</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0010_RxSync_GlobalTime_NotUpdated</srcid><srcstatus/><internalId>2228</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0011_RxSyncFUp_GlobalTime_NotUpdated</srcid><srcstatus/><internalId>2229</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11012</srcid><srcstatus/><internalId>1304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFUP.CorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EEthTSynDelayReqFrameTx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On the transmission of the Delay_Req the header shall be updated accordingly (as specified in IEEE_1588_V2).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5752</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EEthTSynDelayRespFrameTx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On the transmission of the Delay_Resp the header shall be updated accordingly (as specified in IEEE_1588_V2).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0009_MasterReceiveDelayReq</srcid><srcstatus/><internalId>2227</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0012_MasterReceiveDelayReq_ValidationON</srcid><srcstatus/><internalId>2230</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5962</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupTRUE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave, a valid Sync\Fup pair is received, 
        and the configuration parameter EthTSynDelayReqAfterFup is set to TRUE, EthTSyn shall send the Delay_Req frame on the next
        mainfunction.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0017_CalcMeanDelay_SyncCorr</srcid><srcstatus/><internalId>2235</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0018_CalcMeanDelay_SyncFUpCorr</srcid><srcstatus/><internalId>2236</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13664</srcid><srcstatus/><internalId>1458</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupFALSE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave, a valid Sync\Fup pair is received, 
        and the configuration parameter EthTSynDelayReqAfterFup is set to FALSE, EthTSyn shall send the Delay_Req frame when the
        configured EthTSynGlobalTimeTxDelayE2EReqPeriod expires.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0015_delayReq_MF</srcid><srcstatus/><internalId>2233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13668</srcid><srcstatus/><internalId>1459</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EMeanDelayCalculation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and the calculation of the path Delay is enabled, the meanPathDelay shall be calculated as following (IEEE_1588_V2 Ch 11.3.2):
        meanPathDelay = [(t2 - t3) + (receiveTimestamp of Delay_Resp message(T4)
        – preciseOriginTimestamp of Follow_Up message(T1)) – correctedSyncCorrectionField – correctionField of Follow_Up message –
        correctionField of Delay_Resp message]/2.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.PTPE2EcorrectedSyncCorrectionField</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EFupCorrectionField</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EDelaySyncFupSaveT1T2</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EDelayReqpSaveT3</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EDelayRespSaveT4</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2EDelayRespCorrectionField</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PTPE2ECalculateMeanDelay</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SaveBackupValues</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.UseBackupValues</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.MeanDelayAfterValidFrames</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EDelaySyncFupSaveT1T2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Sync\Fup pair is received, after the calculated global time is passed to the StbM,
        EthTSyn shall save the preciseOriginTimestamp of Follow_Up message(T1)
        and the ingress timestamp of the Sync Frame(T2). This values shall be used to calculate the meanPathDelay.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11134</srcid><srcstatus/><internalId>1307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EDelayReqpSaveT3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Delay_Req frame was transmitted, the EgressTimeStamp(T3) shall be saved on the
        call of the EthTSyn_TxConfirmation() and used to calculate the meanPathDelay.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8404</srcid><srcstatus/><internalId>1146</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EDelayRespSaveT4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Delay_Resp frame is received, the receiveTimestamp of Delay_Resp message will be saved
        and used to calculate the meanPathDelay.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9986</srcid><srcstatus/><internalId>1257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2EDelayRespCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Delay_Resp frame is received, the correctionField will be saved
        and used to calculate the meanPathDelay.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9992</srcid><srcstatus/><internalId>1258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PTPE2ECalculateMeanDelay</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Delay_Resp frame is received, the meanPathDelay shall be calculated
        on the next EthTSyn_MainFunction().
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0008_Calc_MeanDelay</srcid><srcstatus/><internalId>2226</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0017_CalcMeanDelay_SyncCorr</srcid><srcstatus/><internalId>2235</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0018_CalcMeanDelay_SyncFUpCorr</srcid><srcstatus/><internalId>2236</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10009</srcid><srcstatus/><internalId>1259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SaveBackupValues</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and a valid Sync\Fup is received, EthTSyn shall save the previous values of T1, T2,
        correction recieved in the Sync and Fup frames.
      </description>
      <comment>
        Rationale: If a Delay_Req is sent before receiving a valid Sync\Fup pair, T4 will be greater than T1,
        and T2 than T3 resulting in not calculating the meanPathDelay.
        In order to not miss a calculation of a Delay, EthTSyn will use the last valid values for (T1, T2 and
        corrections.)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0015_delayReq_MF</srcid><srcstatus/><internalId>2233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13654</srcid><srcstatus/><internalId>1456</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.UseBackupValues</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PTP with E2E mechanism is configured for a time domain with port role as slave,
        and Delay calculation is started, EthTSyn shall check if the timestamps (T1, T2) are valid.
        If are not valid, the previous timestamps shall be used.
      </description>
      <comment>
        Rationale: If a Delay_Req is sent before receiving a valid Sync\Fup pair, T4 will be greater than T1,
        and T2 than T3 resulting in not calculating the meanPathDelay.
        In order to not miss a calculation of a Delay, EthTSyn will use the last valid values for (T1, T2 and
        corrections.)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0015_delayReq_MF</srcid><srcstatus/><internalId>2233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11348</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.MeanDelayAfterValidFrames</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The meanPathDelay shall be calculated and updated only if a valid Sync\Fup pair was
        received.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0019_PdelayReq_NoFUP</srcid><srcstatus/><internalId>2237</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13657</srcid><srcstatus/><internalId>1457</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EMeanDelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.ManyPtpProfiles</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         EthTSyn shall support PTP Instances operating under many PTP Profiles in case EthTSynEnablePTPCalculation is enabled.
      </description>
      <comment>
         Isolation in the 2008 edition is achieved by scoping based on user-configured values of the domainNumber
         and two values, 0 and 1, of the majorSdoId, that is, the transportSpecific field of the 2008 edition. The
         value 0 can be used by any PTP Profile specified by any organization, while the value 1 is restricted to the
         PTP Profiles developed by the IEEE 802.1 Working Group (see Table 2 of 7.1.4).Value 0 there
         can be PTP Instances operating under many PTP Profiles with only the user configurable domainNumber
         available for isolation. (IEEE std 1588-2019).
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection</srcid><srcstatus/><internalId>2216</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection_2</srcid><srcstatus/><internalId>2217</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0001_EgressTS_SyncFUp</srcid><srcstatus/><internalId>2218</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0002_NegativeCorr</srcid><srcstatus/><internalId>2219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5365</srcid><srcstatus/><internalId>924</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5538</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5785</srcid><srcstatus/><internalId>947</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6002</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.IEEE1588FupLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
         When a Fup is received and the EthTSynEnablePTPCalculation parameter is enabled on this time domain,
         check the length against the size specified in the IEEE1588 standard (44).
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest05_0000_InvalidCorrection</srcid><srcstatus/><internalId>2216</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest05_0002_NegativeCorr</srcid><srcstatus/><internalId>2219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13091</srcid><srcstatus/><internalId>1419</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMaxNumberOfTransmitRetries is equal to 0 and a frame transmission fails
        (EthIf_Transmit() or EthSwt_PtpTransmit() does not return E_OK) no re-transmission shall take place.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01202_EthIf_NOT_OK_Transmit_Sync</srcid><srcstatus/><internalId>2143</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5438</srcid><srcstatus/><internalId>931</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5911</srcid><srcstatus/><internalId>955</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6126</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6241</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14122</srcid><srcstatus/><internalId>1478</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14279</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14473</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14702</srcid><srcstatus/><internalId>1517</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14896</srcid><srcstatus/><internalId>1530</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15052</srcid><srcstatus/><internalId>1545</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16900</srcid><srcstatus/><internalId>1641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>710</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMaxNumberOfTransmitRetries is not equal to 0 and a frame transmission fails
        (EthIf_Transmit() or EthSwt_PtpTransmit() does not return E_OK) in the context of next EthTSyn_MainFunctin()
        EthTSyn shall retry to transmit the respective frame.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01260_Retransmit_SyncFrame</srcid><srcstatus/><internalId>2119</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01261_Retransmit_SyncFUpFrame</srcid><srcstatus/><internalId>2120</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01262_Retransmit_PdelayRespFrame</srcid><srcstatus/><internalId>2121</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01263_Retransmit_PdelayRespFUpFrame</srcid><srcstatus/><internalId>2122</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01264_Retransmit_PdelayReqFrame</srcid><srcstatus/><internalId>2123</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01265_Retransmit_PdelayRespFrameFail</srcid><srcstatus/><internalId>2124</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01267_Retransmit_SWT_SyncFrameFail</srcid><srcstatus/><internalId>2125</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01266_Retransmit_SWT_PdelayRespFrameFail</srcid><srcstatus/><internalId>2126</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01267_Retransmit_SWT_PdelayRespFUpFrameFail</srcid><srcstatus/><internalId>2127</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01268_Retransmit_SWT_SyncFrame</srcid><srcstatus/><internalId>2128</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01269_Retransmit_SWT_SyncFUpFrame</srcid><srcstatus/><internalId>2129</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0058_RetryPdelayReq</srcid><srcstatus/><internalId>2205</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5432</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5905</srcid><srcstatus/><internalId>953</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6120</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6235</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14116</srcid><srcstatus/><internalId>1476</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14273</srcid><srcstatus/><internalId>1487</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14467</srcid><srcstatus/><internalId>1502</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14696</srcid><srcstatus/><internalId>1515</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14890</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15046</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16894</srcid><srcstatus/><internalId>1639</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>711</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMaxNumberOfTransmitRetries is different than 0 and EthTSyn did not succesfully
        transmit the frame before EthTSynMaxNumberOfTransmitRetries was reached, no retry will be
        performed in next EthTSyn_MainFunction().
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01260_Retransmit_SyncFrame</srcid><srcstatus/><internalId>2119</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01261_Retransmit_SyncFUpFrame</srcid><srcstatus/><internalId>2120</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01263_Retransmit_PdelayRespFUpFrame</srcid><srcstatus/><internalId>2122</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01265_Retransmit_PdelayRespFrameFail</srcid><srcstatus/><internalId>2124</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01267_Retransmit_SWT_SyncFrameFail</srcid><srcstatus/><internalId>2125</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01266_Retransmit_SWT_PdelayRespFrameFail</srcid><srcstatus/><internalId>2126</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01267_Retransmit_SWT_PdelayRespFUpFrameFail</srcid><srcstatus/><internalId>2127</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01268_Retransmit_SWT_SyncFrame</srcid><srcstatus/><internalId>2128</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01269_Retransmit_SWT_SyncFUpFrame</srcid><srcstatus/><internalId>2129</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0047_ICV_SWT_Indication_NOK_Transmit</srcid><srcstatus/><internalId>2290</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5437</srcid><srcstatus/><internalId>930</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5910</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6125</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6240</srcid><srcstatus/><internalId>981</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14121</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14278</srcid><srcstatus/><internalId>1488</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14472</srcid><srcstatus/><internalId>1503</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14701</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14895</srcid><srcstatus/><internalId>1529</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15051</srcid><srcstatus/><internalId>1544</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16899</srcid><srcstatus/><internalId>1640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>712</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EthTSynMaxNumberOfTransmitRetries is different than 0 and EthTSyn succesfully
        transmitted the frame before EthTSynMaxNumberOfTransmitRetries was reached, frame processing shall
        continue as expected and the retries number will be reset for the next transmission.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01262_Retransmit_PdelayRespFrame</srcid><srcstatus/><internalId>2121</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01264_Retransmit_PdelayReqFrame</srcid><srcstatus/><internalId>2123</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5427</srcid><srcstatus/><internalId>928</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5867</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6114</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6230</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14027</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14268</srcid><srcstatus/><internalId>1486</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14660</srcid><srcstatus/><internalId>1513</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14877</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15019</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16889</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>

    <!-- ======================= E2E mechanism ====================== -->

    <specobject>
      <id>EthTSyn.EB.ECUC_UseCalculatedPdelay_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name EthTSynUseCalculatedPdelay
        Description Reference to the timedomain where the Pdelay was calculated.
        Multiplicity: 0..1
        Type: Symbolic name reference to  [ EthTSynGlobalTimeDomain ]
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Value Configuration Class:
          Pre-compile time X All Variants
          Link time --
          Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.RemotePdelay</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On receiving the Sync Fup frame, If EthTSynUseCalculatedPdelay is enabled for a PortRole slave,
        the calculated Pdelay value of the referenced EthTSynTimeDomain shall be used.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01986_UseAnotherTimeDomainCalculatedPdelay</srcid><srcstatus/><internalId>2116</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13425</srcid><srcstatus/><internalId>1441</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.CheckPdelayDomainNr</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The domainNumber for Pdelay_Req, Pdelay_Resp, and Pdelay_Resp_Follow_Up
        messages shall be 0 according to IEEE802.1AS-2020 chapter 11.4.2.4.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01987_DomainNo_Not0_PdelayResp</srcid><srcstatus/><internalId>2117</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01988_DomainNo_Not0_PdelayRespFUp</srcid><srcstatus/><internalId>2118</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3997</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_00008</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When EthTSyn_Init() is called in initialized state, the EthTSyn module shall re-
        initialize its internal variables.
        (SRS_BSW_00101)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01051_ReinitializedInternalVariables</srcid><srcstatus/><internalId>2024</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3810</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11556</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.EthTSyn_00010</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When EthTSyn_Init() is called in initialized state, the EthTSyn module shall
        set each port-specific Pdelay value to 0.(RS_TS_20048)
      </description>
      <comment>
        How to test:
        Verify that Pdelay is the configured value if static Pdelay is used,
        or 0 if not.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01052_Latency_IngressAndEgress</srcid><srcstatus/><internalId>2025</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11558</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EthTSyn.PdelayInit</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if the message is the first Sync message after startup,
        a Time Slave shall consider the Sequence Counter value of the Sync message as valid.(RS_TS_20061)
      </description>
      <comment>
        Rationale: After startup it makes sense to skip the sequence counter check and allow sequence counter
        of the Time Slave to synchronize to the one of the Time Master.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01254_Slave_CheckSeqCounter</srcid><srcstatus/><internalId>2095</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01256_Slave_CheckSeqCounter_1</srcid><srcstatus/><internalId>2097</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01257_Slave_CheckSeqCounter_Width0</srcid><srcstatus/><internalId>2098</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01258_Slave_CheckSeqCounter_BigJumpWidth</srcid><srcstatus/><internalId>2099</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01268_SeqCounter_First</srcid><srcstatus/><internalId>2130</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8577</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11570</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if the Sequence Counter check is disabled for Sync messages
        (i.e., GlobalTimeSequenceCounterJumpWidth == 0), a Time Slave shall consider the Sequence Counter
        value of the Sync message as valid.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01258_Slave_SeqCounterJumpWidth_Configured_0</srcid><srcstatus/><internalId>2100</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8578</srcid><srcstatus/><internalId>1154</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if
          • the message is not the first Sync message after startup
          • and Sequence Counter check is enabled (i.e., GlobalTimeSequenceCounterJumpWidth &gt; 0)
          • and the Time Domain is not in timeout (i.e., TIMEOUT bit not set in Time Base synchronization status timeBaseStatus)
        a Time Slave shall check the difference value between the Sequence Counter of the current message
        and the Sequence Counter of the previous Sync message. If the difference value is greater than 0
        and less or equal than GlobalTimeSequenceCounterJumpWidth, a Time Slave shall consider Sequence Counter value
        as valid, else as invalid.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01254_Slave_CheckSeqCounter</srcid><srcstatus/><internalId>2095</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01255_Slave_CheckSeqCounter65535</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01256_Slave_CheckSeqCounter_1</srcid><srcstatus/><internalId>2097</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01257_Slave_CheckSeqCounter_Width0</srcid><srcstatus/><internalId>2098</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01258_Slave_CheckSeqCounter_BigJumpWidth</srcid><srcstatus/><internalId>2099</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01269_SeqCounter_JumpWidth_OK</srcid><srcstatus/><internalId>2131</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01270_SeqCounter_JumpWidth_NOK</srcid><srcstatus/><internalId>2132</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0030_Receive_IncorrectSC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8649</srcid><srcstatus/><internalId>1159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if
          • Sequence counter check is enabled (i.e., GlobalTimeSequenceCounterJumpWidth &gt; 0)
          • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization status timeBaseStatus)
          • and Sequence Counter is stuck, i.e., the value of the difference between the Sequence
            Counter of the current message and the Sequence Counter of the previous Sync message is 0,
        a Time Slave shall consider Sequence Counter jump as invalid.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01271_SeqCounter_Stuck</srcid><srcstatus/><internalId>2133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8631</srcid><srcstatus/><internalId>1157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if
          •   Sequence Counter check is enabled (i.e., GlobalTimeSequenceCounterJumpWidth &gt; 0)
          •   and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization status timeBaseStatus)
          •   and the message is the first Sync message in Timeout for which the Sequence Counter is not stuck,
        a Time Slave shall consider the Sequence Counter jump as valid.(RS_TS_20061)
      </description>
      <comment>
        Rationale: After a Timeout (e.g. due to a reset or disconnect of the Time Master) it is very likely that
        the sequence counter of the first received Sync message is out of sync, i.e., the sequence counter difference
        exceeds GlobalTimeSequenceCounterJumpWidth. To allow for faster re-synchronization of the sequence counter
        to the Time Master, the sequence counter of the first Sync message is not checked for
        GlobalTimeSequenceCounterJumpWidth. However, a stuck Sequence Counter will always, i.e.,
        also in this situation, be considered as invalid (refer to PRS_TS_xxxx4).
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01259_Slave_CheckSCGlobalTimeFollowUpTimeout</srcid><srcstatus/><internalId>2101</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01272_SeqCounter_Stuck_First</srcid><srcstatus/><internalId>2134</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01273_SeqCounter_Failed_Hysteresis</srcid><srcstatus/><internalId>2135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8610</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if
          • Sequence counter check is enabled (i.e., GlobalTimeSequenceCounterJumpWidth &gt; 0)
          • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization status timeBaseStatus)
          • and the Sequence Counter is not stuck, i.e., the value of the difference between the sequence counter of thecurrent message and the sequence 
          • and the message is not the first Sync message in Timeout for which the Sequence Counter is not stuck
        a Time Slave shall check if the difference value between the Sequence Counter of the current message and
        the Sequence Counter of the previous Sync message exceeds the threshold GlobalTimeSequenceCounterJumpWidth.
        If the difference value exceeds the threshold GlobalTimeSequenceCounterJumpWidth,
        a Time Slave shall consider Sequence Counter jump as invalid, else as valid.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01272_SeqCounter_Stuck_First</srcid><srcstatus/><internalId>2134</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01273_SeqCounter_Failed_Hysteresis</srcid><srcstatus/><internalId>2135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8615</srcid><srcstatus/><internalId>1156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_xxxx7</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon reception of a Sync message, if
          • Sequence counter check is enabled (i.e., GlobalTimeSequenceCounterJumpWidth &gt; 0)
          • and the Time Domain is in timeout (i.e., TIMEOUT bit set in Time Base synchronization status timeBaseStatus)
        a Time Slave shall check the number of consecutive valid Sequence Counter jumps
        (refer to requirements PRS_TS_xxxx4, PRS_TS_xxxx5 and PRS_TS_xxxx6)
        If the number of consecutive valid Sequence Counter jumps exceeds the value
        GlobalTimeSequenceCounterHysteresis, a Time Slave shall consider the Sequence Counter value as valid,
        else as invalid.(RS_TS_20061)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01272_SeqCounter_Stuck_First</srcid><srcstatus/><internalId>2134</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01273_SeqCounter_Failed_Hysteresis</srcid><srcstatus/><internalId>2135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8636</srcid><srcstatus/><internalId>1158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
  
    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If any of the following conditions is not met, a Time Slave shall
        discard a received Sync or Follow_Up message:
        1. Sequence Counter (sequenceId) is valid (refer to PRS_TS_xxxx1 PRS_TS_xxxx2 PRS_TS_xxxx3
           PRS_TS_xxxx4 PRS_TS_xxxx5 PRS_TS_xxxx6 PRS_TS_xxxx7)
        2. If Follow_Up: Follow_Up.TLV[AUTOSAR].Sub-TLV.Type matches depending
           on configuration of RxCrcValidated
        3. The Time Domain matches to the defined Time Domain range for each domainNumber resp.
           to the element OfsTimeDomain of the AUTOSAR Sub-TLV: OFS(configuration dependent)
        4. The Time Domain matches to one of the configured Time Domains
        5. If Follow_Up: All CRCs are successfully validated depending on the configuration
           of RxCrcValidated and CrcFlagsRxValidated
        6. If Follow_Up: The Length field for every "known", i.e., specified in 4.3.1.2,
           SubTLV that is contained in the AUTOSAR TLV matches the specified value for
           this Sub-TLV.
        7. If Follow_Up: The AUTOSAR TLV Header’s lengthField is equal to the accumulated
           length of all Sub-TLVs plus 6.
        8. If Follow_Up: The ICV is successfully verified depending on the configuration
           of RxIcvVerification
        (RS_TS_20061, RS_TS_20062, RS_TS_20063)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_OfsTimeNSec</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_Sub_TlvType</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_OfsTimeDomain</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_TimeDomain</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_CorrectLengthField</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_CorrectTotalLength</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119_IcvVerified</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.OffsetSubTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_OfsTimeNSec</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        5. If Follow_Up: The element OfsTimeNSec of the AUTOSAR Sub-TLV: OFS is
           within the allowed range of 0..999999999.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01230_OfsNotSecured_Ignored_NanoSec_Max</srcid><srcstatus/><internalId>1920</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9476</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9500</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
        EthTSynTLVFollowUpICVSubTLV is set to true, EthSwt_PtpTransmit() shall be called to transmit
        a SyncFUp frame that contains a Sub-TLV:Time Authenticated.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0045_ICV_SWT</srcid><srcstatus/><internalId>2287</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0046_ICV_SWT_Timeout</srcid><srcstatus/><internalId>2288</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0047_ICV_SWT_Indication</srcid><srcstatus/><internalId>2289</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0048_ICV_SWT_Generate_Failed</srcid><srcstatus/><internalId>2291</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0049_ICV_SWT_Generate_Failed_NOK</srcid><srcstatus/><internalId>2292</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14443</srcid><srcstatus/><internalId>1499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_Sub_TlvType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        2. If Follow_Up: Follow_Up.TLV[AUTOSAR].Sub-TLV.Type matches depending
           on configuration of RxCrcValidated
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01221_OfsSecured_NotValidated</srcid><srcstatus/><internalId>1909</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8875</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8895</srcid><srcstatus/><internalId>1176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_OfsTimeDomain</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        3. The Time Domain matches to the defined Time Domain range for each domainNumber resp.
           to the element OfsTimeDomain of the AUTOSAR Sub-TLV: OFS(configuration dependent)
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01228_OfsSecured_Ignored_WrongDomainId</srcid><srcstatus/><internalId>1916</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01229_OfsSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1918</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01229_OfsNotSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9444</srcid><srcstatus/><internalId>1223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_TimeDomain</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        4. The Time Domain matches to one of the configured Time Domains
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_WrongTimeDomainId</srcid><srcstatus/><internalId>1917</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01229_OfsSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1918</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01229_OfsNotSecured_Ignored_CorrectDomainId</srcid><srcstatus/><internalId>1919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4006</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9455</srcid><srcstatus/><internalId>1224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_SuccessfulValidation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        5. If Follow_Up: All CRCs are successfully validated depending on the configuration
           of RxCrcValidated and CrcFlagsRxValidated
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01252_OfsSecured_Crc_Fail</srcid><srcstatus/><internalId>1935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_9689</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_CorrectLengthField</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        6. If Follow_Up: The Length field for every "known", i.e., specified in 4.3.1.2,
          SubTLV that is contained in the AUTOSAR TLV matches the specified value for
          this Sub-TLV.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_CorrectTotalLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        7. If Follow_Up: The AUTOSAR TLV Header’s lengthField is equal to the accumulated
           length of all Sub-TLVs plus 6.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.PRS_TS_00119_IcvVerified</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        8. If Follow_Up: The ICV is successfully verified depending on the configuration
           of RxIcvVerification.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</srcid><srcstatus/><internalId>2249</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8909</srcid><srcstatus/><internalId>1177</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    
    
    
    
  </specobjects>
    <specobjects doctype="swuvc" title="Verification criteria">
    <specobject>
      <id>EthTSyn.EB.PdelayReq_IncorrectLength.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Execution: - Create a PdelayReq frame.
                   - Call EthTSyn_RxIndication() with LenByte smaller than ETHTSYN_PTP_HEADER_SIZE +
                     ETHTSYN_PTP_PDELAY_REQ_PAYLOADSIZE.
        Output: - EthTSyn_GetIngressTimeStamp() shall not be called.
                - Nothing shall happen in the next EthTSyn_MainFunction() call.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01218_PdelayReq_IncorrectLen</srcid><srcstatus/><internalId>2074</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayReq_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoMasterConfigured.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one slave port.
                         - EthTSynTimeValidationSupport is enabled.
                         - EthTSynGlobalTimeTxPdelayReqPeriod value greater than 0.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest05_NoMasterConfigured</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.NoMasterConfigured.vc02</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one slave port.
                         - EthTSynTimeValidationSupport is enabled.
                         - EthTSynGlobalTimeTxPdelayReqPeriod value equal to 0.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest05_NoMasterConfigured</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest05_ReliableTxConf</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.NoMasterConfigured.vc03</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one slave port.
                         - EthTSynTimeValidationSupport is disabled.
                         - EthTSynGlobalTimeTxPdelayReqPeriod value greater than 0.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest05_NoMasterConfigured</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest05_ReliableTxConf</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    
    <specobject>
      <id>EthTSyn.EB.NoMasterConfigured.vc04</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one slave port.
                         - EthTSynTimeValidationSupport is disabled.
                         - EthTSynGlobalTimeTxPdelayReqPeriod value equal to 0.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest05_NoMasterConfigured</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest05_ReliableTxConf</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoSlaveConfigured.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one master port.
                         - EthTSynTimeValidationSupport is enabled.
                         - EthTSynGlobalTimePdelayRespEnable is true.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest04_NoSlaveConfigured</srcid><srcstatus/><internalId>1831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoSlaveConfigured.vc02</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one master port.
                         - EthTSynTimeValidationSupport is enabled.
                         - EthTSynGlobalTimePdelayRespEnable is false.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest04_NoSlaveConfigured</srcid><srcstatus/><internalId>1831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoSlaveConfigured.vc03</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one master port.
                         - EthTSynTimeValidationSupport is disabled.
                         - EthTSynGlobalTimePdelayRespEnable is true.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest04_NoSlaveConfigured</srcid><srcstatus/><internalId>1831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoSlaveConfigured.vc04</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one master port.
                         - EthTSynTimeValidationSupport is disabled.
                         - EthTSynGlobalTimePdelayRespEnable is false.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest04_NoSlaveConfigured</srcid><srcstatus/><internalId>1831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NoSlaveConfigured.vc05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        - Configuration: - Only one EthTSynTimeDomain configured with only one master port.
                         - EthTSynTimeValidationSupport is disabled.
        - Output - EthTSyn compiles
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ComTest02_NoSlaveConfigured</srcid><srcstatus/><internalId>1829</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ComTest01_SwitchConfigured</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where the difference between IngressTimeStamp and EgressTimeStamp of the
        PdelayReq frame is equal to max value allowed.
        - Condition: - T4-T1 = 999 999 999
                     - T1.nanoseconds = 1(EgressTimeStamp of the PdelayReq frame)
                     - T2.nanoseconds = 20000(IngressTimeStamp of the PdelayReq frame)
                     - T3.nanoseconds = 30000(EgressTimeStamp of the PdelayResp frame)
                     - T4.second = 1(IngressTimeStamp of the PdelayResp frame)
        - Output - Calculated Pdelay = ((T4-T1) - (T3-T2))/2 = 499 994 999
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01245_T4T1_MAX</srcid><srcstatus/><internalId>2088</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc02</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where EgressTimeStamp of the PdelayReq frame is equal to max value allowed.
        - Condition: - T1.nanoseconds = 100 000(EgressTimeStamp of the PdelayReq frame)
                     - T2.nanoseconds = 999 999 999(IngressTimeStamp of the PdelayReq frame)
                     - T3.seconds = 1(EgressTimeStamp of the PdelayResp frame)
                     - T3.nanoseconds = 999
                     - T4.second = 1(IngressTimeStamp of the PdelayResp frame)
                     - T4.nanoseconds = 50 000
        - Output - Calculated Pdelay = ((T4-T1) - (T3-T2))/2 = 499 974 500
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01246_T2_MAX</srcid><srcstatus/><internalId>2089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc03</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where IngressTimeStamp of the PdelayResp frame is equal to max value allowed.
        - Condition: - T1.nanoseconds = 9 999(EgressTimeStamp of the PdelayReq frame)
                     - T2.nanoseconds = 50 000(IngressTimeStamp of the PdelayReq frame)
                     - T3.nanoseconds = 999 950 000(EgressTimeStamp of the PdelayResp frame)
                     - T4.nanoseconds = 999 999 999(IngressTimeStamp of the PdelayResp frame)
        - Output - Calculated Pdelay = ((T4-T1) - (T3-T2))/2 = 45 000
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01247_T4_MAX</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc04</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where EgressTimeStamp of the PdelayResp frame is equal to max value allowed.
        - Condition: - T1.nanoseconds = 1 000 000(EgressTimeStamp of the PdelayReq frame)
                     - T2.nanoseconds = 9 999 999(IngressTimeStamp of the PdelayReq frame)
                     - T3.nanoseconds = 999 999 999(EgressTimeStamp of the PdelayResp frame)
                     - T4.seconds = 1(IngressTimeStamp of the PdelayResp frame)
                     - T4.nanoseconds = 10 000
        - Output - Calculated Pdelay = ((T4-T1) - (T3-T2))/2 = 4 505 000
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01248_T3_MAX</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where a SyncFUp frame that contains an Offset Sub-TLV which has the
          TimeStamp nanoseconds value equal to the max allowed.
        - Condition: - OFS Sub-TLV in the received SyncFUp frame.
                     - TimeStamp in OFS Sub-TLV has nanoseconds value = 999 999 999
        - Output - 999 999 999 shall be forwarded to StbM via
                   StbM_BusSetGlobalTime(globalTime) on the OffsetTimeBaseId
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01222_OfsNotSecured_NotValidated</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc06</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where a SyncFUp frame with OriginTimeStamp equal to max value allowed, is received.
        - Condition: - OriginTimeStamp of the SyncFUp frame is equal to 999 999 999.
        - Output - (CurrentTime + OriginTime - IngressTime) shall be forwarded to StbM via
                   StbM_BusSetGlobalTime(globalTime) on the TimeBaseId
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01222_OfsNotSecured_NotValidated</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.NanosecondsLimit.vc07</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Test the case where the egressTimeStamp of a transmitted Sync frame is equal to the max value allowed.
        - Condition: - EthTSyn_TxConfirmation() called for transmitted sync frame.
                     - EgressTimeStamp has nanoseconds value = 999 999 999.
        - Output - SyncFUp transmitted with correct payload.
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01001_MasterSendsSyncFrames</srcid><srcstatus/><internalId>1947</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>


  </specobjects>
    <specobjects doctype="swuvc" title="Verification criteria for existing requirements">

    <specobject>
      <id>EthTSyn.EB.TimeValidation_MasterTransmit.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Succesfully transmit a sync frame.
        Output: StbM_EthSetMasterTimingData() shall be called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01240_SafeCar_MasterSync</srcid><srcstatus/><internalId>2077</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SWS_EthTSyn_00215.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Succesfully transmit a sync frame.
                   - StbM_EthSetMasterTimingData() is called.
        Output:    The following data shall be forwarded in measureDataPtr:
                   - the sequenceId of the sent Sync message
                   - the sourcePortIdentity as sent in the Sync message
                   - the Virtual Local Time T2VLT sampled on egress of the Sync message
                   - the preciseOriginTimestamp as copied to the Sync message
                   - the correctionField as copied to the FollowUp message.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01240_SafeCar_MasterSync</srcid><srcstatus/><internalId>2077</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0046_SyncBridge_Validation</srcid><srcstatus/><internalId>2193</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0049_SyncBoundary_Validation</srcid><srcstatus/><internalId>2196</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0050_SyncOnlyOnHost_Validation</srcid><srcstatus/><internalId>2197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.TimeValidation_SlaveReceive.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Succesfully receive a SyncFollowUp frame.
        Output: StbM_EthSetSlaveTimingData() shall be called after StbM_BusSetGlobalTime().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01241_SafeCar_SlaveSync</srcid><srcstatus/><internalId>2078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SWS_EthTSyn_00217.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Succesfully receive a SyncFollowUp frame.
                   - StbM_EthSetSlaveTimingData() is called.
        Output:    The following data shall be forwarded in measureDataPtr:
                   - the sequenceId received in the Follow_Up message
                   - the sourcePortIdentity received in the Follow_Up message
                   - the Virtual Local Time T1VLT sampled on ingress of the Sync message
                   - the preciseOriginTimestamp received in the Sync message
                   - the correctionField received in the Sync message
                   - the current value of the Pdelay
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01241_SafeCar_SlaveSync</srcid><srcstatus/><internalId>2078</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0046_SyncBridge_Validation</srcid><srcstatus/><internalId>2193</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0047_PdelayBridge_Validation</srcid><srcstatus/><internalId>2194</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0049_SyncBoundary_Validation</srcid><srcstatus/><internalId>2196</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0050_SyncOnlyOnHost_Validation</srcid><srcstatus/><internalId>2197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SWS_EthTSyn_00218.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Receive a PdelayReq frame.
        Output:    - StbM_BusGetCurrentTime() shall be called to retrieve a Time Tuple
                     [T_refPDResponder; TVLT_refPDResponder] before sending the Pdelay_Resp
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01242_SafeCar_MasterPdelayResp</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SWS_EthTSyn_00219.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Pdelay is calculated corectly.
        Output:    - StbM_EthSetPdelayResponderData() shall be called upon
                     transmission of Pdelay_Resp_Follow_Up frame.
                   - The following parameters shall be passed in measureDataPtr:
                      - the sequenceId of the received Pdelay_Req message
                      - the sourcePortIdentity of the received Pdelay_Req message
                      - the sourcePortIdentity of the sent Pdelay_Resp message
                      - t2 (refer to [SWS_EthTSyn_00160])
                      - t3 (refer to [SWS_EthTSyn_00159])
                      - the sampled reference Time Tuple [T_refPDResponder; TVLT_refPDResponder]
                        (refer to SWS_EthTSyn_00218)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01242_SafeCar_MasterPdelayResp</srcid><srcstatus/><internalId>2079</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0048_MasterPortReceivePdelayReq_Validation</srcid><srcstatus/><internalId>2195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SWS_EthTSyn_00223.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       Slave TimeDomain.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Call EthTSyn_MainFunction() to start transmitting a PdelayReq frame.
        Output:    - StbM_BusGetCurrentTime() shall be called to retrieve a Time Tuple
                     [T_refPdInitiator; TVLT_refPDInitiator] before transmitting the PdelayReq.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01243_SafeCar_SlavePdelayReq</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>

    <specobject>
      <id>EthTSyn.EB.SWS_EthTSyn_00221.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport enabled.
                       Slave TimeDomain.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Pdelay measurement finished.
        Output:    - StbM_EthSetPdelayInitiatorData() shall be called uppon reception of the
                     Pdelay_Resp_Follow_Up frame.
                   - The following parameters shall be passed in measureDataPtr:
                      - the sequenceId of the sent Pdelay_Req message
                      - the sourcePortIdentity of the sent Pdelay_Req message
                      - the sourcePortIdentity of the received Pdelay_Resp message
                      - t1 (refer to [SWS_EthTSyn_00013])
                      - t4 (refer to [SWS_EthTSyn_00049])
                      - the requestReceiptTimestamp from the Pdelay_Resp message = T2
                      - the responseOriginTimestamp from the Pdelay_Resp_Follow_Up message = T3
                      - the sampled reference Time Tuple [T_refPDInitiator;TVLT_refPDInitiator]
                        (refer SWS_EthTSyn_00223)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01243_SafeCar_SlavePdelayReq</srcid><srcstatus/><internalId>2080</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0047_PdelayBridge_Validation</srcid><srcstatus/><internalId>2194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00224.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport disabled.
                       Master TimeDomain.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - Pdelay message received by master
        Output:    - requestReceiptTimestamp in the PdelayRespMessage is set to T2.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01243_SafeCar_SlavePdelayReq</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00225.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration: EthTSynTimeValidationSupport disabled.
                       Master TimeDomain.
                       EthTSynSynchronizedTimeBaseRef of the used Time Domain refers to a
                       Time Base in the StbM, which has Time Validation enabled.
        Execution: - PdelayResp message transmitted by master
        Output:    - responseOriginTimestamp in the PdelayRespFUpMessage is set to T3.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01242_SafeCar_MasterPdelayResp</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc01</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Config:   EthTSynDevErrorDetect is ON
        EC valid: Call EthTSyn_Init() with NULL_PTR.
                  DET is called with errorId 0x21U (api id should be 0x01U).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det003_Init_NULL_PTR</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc02</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Config:   EthTSynDevErrorDetect is ON
        EC valid: Call EthTSyn_Init() with EthTSyn config type.
                  No DET is called.
                  Module is initialized.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det004_Init_EthTSynConfigType_DET_ON</srcid><srcstatus/><internalId>1940</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>

    <specobject>
      <id>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc03</id>
      <status>approved</status>
      <source>Elektrobit</source>
      <version>1</version>
      <description>
        Config:   EthTSynDevErrorDetect is OFF
        EC valid: Call EthTSyn_Init() with EthTSyn config type.
                  No DET is called.
                  Module is initialized.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01_Det005_Init_EthTSynConfigType_DET_OFF</srcid><srcstatus/><internalId>1941</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>


  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EthTSyn.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EthTSyn_VerifyCodeStub</srcid><srcstatus/><internalId>1827</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.EthTSyn.EthTSynCalculatePdelayOnMaster</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.EthTSynCalculatePdelayOnLowestTDid</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.EthTSynTxConfirmation_BufIdxType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.RandomSubTLV</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.ResidenceTime</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00061_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00060_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.ETHTSYN_E_CTRL_IDX</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.unspecifiedRequirements</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00078_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.T0PreciceOrigin</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.DebounceOnPort</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.RxMessageBufferCount</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00059_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.PdelayInit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.MultipleTD</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.R22-11NotSupp</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.R22-11Update</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_000104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.SequenceCounter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>dev.EthTSyn.PortConfigTimeDomainId</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R23-11.CONSTR_0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BridgeWithGTMnotMgmCPU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_656</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/EthTSyn_Cfg.c_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate/src/EthTSyn_Cfg.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00035.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00036.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_50</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00039.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_57</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00044.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_64</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00040.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00043.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00330.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00331.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_CTRL_IDX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EthTSyn.h_151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn.h</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EthTSyn_Types.h_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/include/EthTSyn_Types.h</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3765</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3765</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetVersionInfo.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3810</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3810</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3815</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3838</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3838</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1780</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_INIT-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1793</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3855</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3855</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3860</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3860</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.MainFunction.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3866</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3866</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3878</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3878</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_DebounceValueElapse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3939</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00040</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3953</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3953</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3958</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041_PARAMPTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041_PARAMPTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidHeaderSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameType_DetOFF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_3997</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>3997</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.CheckPdelayDomainNr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4006</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4006</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_TimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4010</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4010</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.checkMajorVersionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4016</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4016</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.VersionPTP_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4022</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4022</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041_CTRLIDX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4031</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4031</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameType_DetON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4070</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4070</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TxConfirmation.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4076</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4076</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendSyncFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EsaveSyncEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnMasterPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_WAIT_EGRESS-READY_SYN_TO_PORT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1775</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4167</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4187</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayReqEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayRespTxConf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PDelayResIndication_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4276</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4290</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4290</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4311</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4311</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TrcvLinkStateChg.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4343</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4343</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4393</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UpdatePhysAddrFilter_AddToFilter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4403</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UpdatePhysAddrFilter_RemoveFromFilter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SetTransmissionMode.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00172_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4478</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4478</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00172_CtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpTimeStampIndication_InvalidControllerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4551</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4561</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4561</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4569</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4569</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidHeaderSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidDomainNumber</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4593</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_InvalidControllerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebounceCalculation_MaxValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_DebounceValueSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4733</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebounceCalculation_MaxValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_GetTimeStamps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4832</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SynchronizeT5T4_Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_CTRL_READY_FUP-PORT_READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1781</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_CTRL_READY-PORT_READY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4852</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4852</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_WAIT_EGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4870</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4870</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_WAIT_SWT_INGRESS-VALID_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1777</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_WAIT_INGRESS-VALID_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_WAIT_INGRESS-VALID_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1794</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4919</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4919</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_GetTimeStamps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4924</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4924</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveEgressTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4930</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayRespFup_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_MasterTransmitPdelayRespFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_4998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>4998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.InvalidUniqueId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5001</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5001</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.InvalidSwitchId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SetProtocolParam.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5030</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5030</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5046</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5046</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5065</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5065</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5088</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5088</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetProtocolParam.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5095</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5095</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_IcvGenerationIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_IcvVerificationIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5290</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5290</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5332</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5332</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5365</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5365</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5411</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5411</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Transmit_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5478</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5478</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5540</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5557</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5557</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EInvalidCorrectionTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5731</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5731</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187_PdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqFrameTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5770</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5770</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5773</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5867</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5867</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynInitialGlobalTimeTxPdelayReqPeriod_Subsequent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5905</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5910</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5910</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayRespFrameTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5987</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5987</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_5990</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>5990</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6013</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6013</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6072</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6072</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_TLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayRespFup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayRespFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_TLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.FrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_FUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_AutosarTLVHeader</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6445</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6451</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6466</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6466</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6487</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6487</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_UserDataSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6506</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6507</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6507</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6515</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6515</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6547</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6547</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6558</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6558</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6564</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6574</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6574</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_OFSSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6600</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6600</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6621</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6621</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6682</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6682</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.OffsetSubTlv_GetOffset_NOK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6729</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6729</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6733</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6742</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6746</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6746</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_OFSSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6754</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6754</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_OFSNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_OFSnotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094_SyncToGatewaySet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094_SyncToGatewayNOTSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6801</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6801</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6806</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6806</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6826</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6826</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6854</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6854</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6892</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6892</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeAuthNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6906</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6906</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6947</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6947</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6965</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6965</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6997</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6997</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00254_MacGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_6998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>6998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00254_SignatureGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7019</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7019</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7020</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7020</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7063</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7063</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7067</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7067</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7070</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7070</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7172</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_GENERATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7246</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7246</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_FRESHNESS_NOT_AVAILABLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7262</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7283</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7283</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7304</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7304</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7319</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231_Seq0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231_SeqNot0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7346</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7346</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231_SeqNot0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7349</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7349</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7442</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7624</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7673</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7673</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7709</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7709</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7736</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00240_MacVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00240_SignatureVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00241_MacVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00241_SignatureVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7765</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7765</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7775</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7775</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Csm_BUSY_0_Attempts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7790</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7790</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7791</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7791</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7792</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7792</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7794</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7794</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7833</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7849</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7849</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235_RetryGetRxFreshness</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235_IncrementIcvVerificationAttempt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7868</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7868</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00146</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7912</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7912</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_7982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>7982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Sync_IncorrectLength</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00146</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00145</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8308</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8309</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.FrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.StbMSync.GetCurrentTime.NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelayReqpSaveT3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NoConfirmationForPdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFrame_IncorrectLenBytes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8482</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8482</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcorrectedSyncCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8516</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8636</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8636</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8680</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8680</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.ProcessSubTlvLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUpSubTLV_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8788</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8788</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8819</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8853</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8853</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8857</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8857</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_Sub_TlvType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8890</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8890</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_Sub_TlvType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_IcvVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8919</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8919</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8920</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8920</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8921</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8928</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8928</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8956</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8956</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.UnknownSubTLVType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_TimeSecuredValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_8995</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>8995</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_TimeSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9009</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9009</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_TimeSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9017</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9017</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_TimeNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9018</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9018</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9055</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9055</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_StatusSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9070</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9070</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156_SgwIsNOTSyncToSubDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9078</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9078</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156_SgwIsSyncToSubDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9085</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9085</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_StatusSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_StatusNotSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9140</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9140</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_StatusNotSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156_SgwIsNOTSyncToSubDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156_SgwIsSyncToSubDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_UserDataSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00116_Validated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_UserDataSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9280</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_UserDataNotSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9281</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_UserDataNotSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9300</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_OFSNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9335</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9335</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_OFSNotSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9336</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_OFSNotSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9346</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9346</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_OFSValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9381</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9381</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_OFSSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00117_Validated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00117_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_OFSSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9442</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_TimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeNSec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9491</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9491</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9500</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9500</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeNSec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9516</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9549</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9549</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9632</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9632</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9689</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9689</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_SuccessfulValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostPdelayRespFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9790</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9790</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9814</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9814</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9854</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9854</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostPdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9928</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9928</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9929</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9929</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9947</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9947</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelayRespSaveT4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_9992</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>9992</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelayRespCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>703</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10009</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10009</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2ECalculateMeanDelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10078</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10078</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10098</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10098</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_RxPdelayReqWithTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1733</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayRespIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Slave.SyncIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayReqIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeStamp.PdelayReqIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_Protection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10306</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10306</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_GetCurrentTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_InvalidTimeStamp</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10317</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_SRD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_SRD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10411</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10411</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10480</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10480</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Master.SyncEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10481</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayRespEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10496</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10496</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10507</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10507</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave_OverflowDetection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10773</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave_OverflowDetection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10844</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10844</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10847</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10847</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_MaxValues_NsTimeStamp_CorrFieldHi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_RemainingCorrFieldHi_Ns_NotZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10899</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10899</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds.CorrectionTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_MaxValues_NsTimeStamp_CorrFieldHi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_10983</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>10983</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_RemainingCorrFieldHi_Ns_NotZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11003</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11003</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds.CorrectionTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11012</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11012</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11068</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11068</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcalculateCorrection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11078</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11078</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EnegativeCorrection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelaySyncFupSaveT1T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UseBackupValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayResp_NegativeTimeOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11378</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeDiff_InvalidTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeDiff_InvalidTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayRespFU_NegativeTimeOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.PdelayFilter.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11468</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11468</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.PdelayFilter.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11480</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11480</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11484</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11484</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11509</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11509</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11557</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11557</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11558</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11558</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11842</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11842</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_VerifyAttempts_StbM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11939</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_11941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>11941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1799</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_INIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_INIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1789</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12064</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12064</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynInitialGlobalTimeTxPdelayReqPeriod_First</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.GetTimeBaseStatus.NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016_TxPeriodZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12306</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12306</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12319</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12332</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12332</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12341</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12341</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BusGetCurrentTime_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.DisableAnnounce</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPeriodicAnnounce</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPeriodicSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12436</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BusGetCurrentTime_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12491</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12491</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12522</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12522</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.TimeoutDeactivated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12614</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12614</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12647</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12647</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12654</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12654</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12670</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12670</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12716</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12716</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master_TransmitPdelayRequestFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayReqTransmit_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12729</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12729</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayReqTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12757</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12757</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.PdelayReqTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12801</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12801</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12810</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12810</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12814</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12814</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12817</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12817</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12828</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12828</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebounceCalculation_MaxValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12873</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12873</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_Protection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1399</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12933</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12933</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetVirtualProtection_PdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1400</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetVirtualProtection_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1401</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12943</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12943</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_Protection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1402</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12949</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12949</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1403</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1404</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1405</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12989</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12989</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_SYNC_FOLLOWUP_SEQUENCE_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1406</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_12990</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>12990</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1407</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13011</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13011</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayReq_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1408</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13014</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13014</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1409</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1410</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1411</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1412</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13037</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13037</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.PdelayRespTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1413</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13048</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.IncorrectdelayReqFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1414</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13055</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13055</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1415</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13074</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13074</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1416</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13075</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13075</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1417</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13076</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13076</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1418</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13091</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13091</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.IEEE1588FupLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1419</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1420</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1421</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1422</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1423</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_SYNC_FOLLOWUP_SEQUENCE_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1424</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1425</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UnexpectedFrames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Master.GetCurrentTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13287</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1437</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1438</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13376</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13376</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1439</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13390</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13390</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1440</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13425</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13425</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RemotePdelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1441</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2ECalculatedMeanDelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1442</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1443</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EFupCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1444</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1445</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EInvalidCorrectionRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1446</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13496</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13496</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1447</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1448</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.HWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1449</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13522</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13522</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.StbMSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1450</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1451</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1452</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13632</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13632</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1453</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13636</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13636</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1454</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13640</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13640</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1455</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13654</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13654</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SaveBackupValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1456</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.MeanDelayAfterValidFrames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1457</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupTRUE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1458</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13668</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13668</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupFALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1459</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13686</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13686</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1460</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13716</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13716</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1461</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13730</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13730</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1462</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqInvalidTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1463</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13759</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13759</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1464</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1465</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1466</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1467</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13950</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13950</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1468</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_13954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>13954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1469</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14017</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14017</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1470</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1471</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_INIT-WAIT_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1472</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1778</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1473</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14049</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14049</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort_Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1474</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14069</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14069</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebounceCalculation_MaxValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1475</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1476</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1477</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1478</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1479</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1480</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_EthTSynSendSync_FailedFw</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1481</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1482</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1483</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14251</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1484</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1788</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1485</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1486</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1487</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1488</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1489</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1490</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14316</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14316</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1491</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1492</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Swt_InvalidCorrection_Calculated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1493</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1494</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14393</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1495</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1496</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1497</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14442</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1498</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14443</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14443</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1499</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1500</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1786</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1501</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14467</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14467</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1502</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1503</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1504</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1786</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1505</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1506</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1507</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14554</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14554</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1508</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14558</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14558</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187_PdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1509</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayReqTransmission_FailedBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1510</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14594</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14594</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1511</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1512</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1513</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14687</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14687</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1514</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1515</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14701</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1516</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1517</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14718</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14718</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1518</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1519</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1520</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1521</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1703</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1522</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1523</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14865</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14865</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1524</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1525</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1526</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1798</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1527</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14890</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14890</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1528</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1529</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14896</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1530</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14908</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14908</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1531</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14933</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14933</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1532</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1533</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayRespFup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1534</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14973</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14973</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayRespFup_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1535</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_14977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>14977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1536</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1537</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15010</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15010</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1538</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15019</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15019</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1539</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1540</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1541</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15041</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_WAIT_EGRESS-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1797</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1542</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15046</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15046</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1543</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1544</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15052</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15052</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1545</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15063</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15063</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_WAIT_EGRESS-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1797</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1546</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15089</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15089</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1547</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15090</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15090</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1548</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15115</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.FrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1549</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ProvideTxBuffer.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1550</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1551</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1552</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.FrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1553</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15212</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15212</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveUniqueId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1554</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_READY_SYN_TO_PORT-WAIT_SWT_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1774</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1555</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_READY-WAIT_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1795</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1556</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15344</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_VALID_INGRESS-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1782</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1557</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_VALID_INGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1776</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1558</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_VALID_INGRESS-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1782</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1559</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_VALID_INGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1560</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_CTRL_READY_FUP-PORT_READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1781</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1561</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncFUpOnMasterPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1562</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1563</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUpFW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1564</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1565</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1566</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1567</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ReceiveSyncFrameOnSlavePort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1709</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1568</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_Sync_IncorrectLength</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1569</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFrame_IncorrectLenBytes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1570</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15613</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15613</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1571</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15627</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15627</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1572</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15674</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15674</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00146</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1573</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_ValidateSync_ScrPortId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1574</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1575</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00145</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1576</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1577</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15719</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1578</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1579</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15747</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15747</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_PdelayResp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1580</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_InvalidPdelayRespMgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1581</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1582</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.PdelayRespTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1583</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_PdelayRespFUp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1584</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15830</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15830</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_InvalidPdelayRespFUpMgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1585</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15847</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15847</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1586</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15856</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15856</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_PdelayReq_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1587</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15863</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15863</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1588</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15878</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15878</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1589</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_IDLE-READY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1796</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1590</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_EthTSynSendSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1591</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_15967</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>15967</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SyncOnHost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1592</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16038</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16038</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1593</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1594</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1595</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16115</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUp_MaxLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1596</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1597</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1598</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1599</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1600</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1601</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1602</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1603</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.HWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1604</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.StbMSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1605</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1606</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1607</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16282</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16282</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1608</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16286</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16286</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1609</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1610</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1611</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16317</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1612</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16318</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_SecondTx_Less</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1613</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16319</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_SecondTx_More</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1614</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SyncFUp_NanoSecMax</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1615</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1616</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16368</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16368</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1617</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1618</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_ValidateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1619</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16435</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16435</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress_SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1620</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1621</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16451</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1622</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SynchronizeFailIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1623</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16503</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16503</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1624</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1625</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1626</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1627</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1628</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReq_SaveIngressTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1629</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1703</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1630</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_MasterReceivePdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1631</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16698</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16698</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1714</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1632</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1633</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1634</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1635</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1636</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16846</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16846</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1637</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16889</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1638</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1639</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16899</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16899</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1640</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EthTSyn.c.m4_16900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/src/EthTSyn.c.m4</sourcefile>
      <sourceline>16900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1641</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.ECUC_EthTSynEnableDeviceAuthenticationSupport_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1642</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.PB_MaxNoSlaves</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1810</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1643</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_237</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.PB_MaxNoSwt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1811</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1644</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.ComplianceFalse_PTPenabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1815</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1645</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_HostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1813</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1646</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_885</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>885</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DelayE2ERespEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1820</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1647</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>1221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1648</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>1259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1649</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1311</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>1311</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1650</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1651</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1398</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>1398</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1652</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_EBParameters.xdm.m4</sourcefile>
      <sourceline>1438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1653</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.MAC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1802</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1654</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.NoDataID_Bridge</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1822</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1655</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.Offset_LessThan16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1805</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1656</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.OffsetTimeBaseNotEnabled_GreaterThan15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1806</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1657</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_343</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.OffsetTimeBaseNotValidRef_GreaterThan15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1807</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1658</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.NoOffset_GreaterThan15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1808</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1659</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.MultiSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1800</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1660</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.DuplicatedMasters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1823</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1661</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.SlavesSameIfCtrlAndDomainID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1801</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1662</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.DataIdCrc_Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1817</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1663</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_655</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.NoOffset_OffsetTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1809</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1664</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.ICVSubTLV_TxLen0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1816</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1665</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_846</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>846</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R23-11.CONSTR_0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1666</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.DataIdCrc_Slave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1818</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1667</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1009</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1009</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R23-11.CONSTR_0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1668</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.EthTSynReceiveSyncFupPairsPeriod_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1814</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1669</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.UseCalculatedPdelay_Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1824</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1670</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.UseCalculatedPdelay_Swt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1825</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1671</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.Offset_NoOffsetTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1821</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1672</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.SwtPort_NoSwtHost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1803</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1673</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1412</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1412</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_Port</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1812</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1674</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_PdelayRespEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1819</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1675</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.TimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1804</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1676</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EthTSyn_Extension.xdm.m4_1563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/config/EthTSyn_Extension.xdm.m4</sourcefile>
      <sourceline>1563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.TimeValidation_Pdelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1826</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1677</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1678</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1679</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4_70</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/src/Autosar/generate_swcd/swcd/EthTSyn_Bswmd.arxml.m4</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1680</internalId></specobject>
  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>test/ts5/Manual/IN/EthTSyn_ManTest_Optimisation/source/application/EthTSyn_ManTest_Optimisation.c_30</id>
      <status>approved</status>
      <source>EB manual executed test (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Manual/IN/EthTSyn_ManTest_Optimisation/source/application/EthTSyn_ManTest_Optimisation.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynPBGeneratedFilesCompilation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1681</internalId></specobject>
  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>test/ts5/Manual/IN/EthTSyn_ManTest_Optimisation_PB/source/application/EthTSyn_ManTest_Optimisation_PB.c_31</id>
      <status>approved</status>
      <source>EB manual executed test (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Manual/IN/EthTSyn_ManTest_Optimisation_PB/source/application/EthTSyn_ManTest_Optimisation_PB.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynPBGeneratedFilesCompilation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1682</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support of switch delay compensation">
    <specobject>
      <id>EthTSyn.dsn.Func.SwitchDelayCompensation</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1126</sourceline>
      <version>1</version>
      <description>
          The EthTSyn module is capable to act as a time aware switch with following functionality:
           - Master functionality on all ports. EthTSyn sends a sync and sync follow up frame on each
          switch port using the same origin time stamp.
           - Bridge functionality. A received sync and sync follow up frame on one port is forwarded to
          the other ports with same origin time stamp.
           - Compensation of switch delay to be added to the correction field of the sync follow up
          frame.
           - Update of CRC value of sync follow up frame.
           - Pdelay responder functionality. EthTSyn sends a pdelay_resp and pdelay_resp follow up frame on each
          switch port which received a pdelay_req frame and have the configuration parameter 
          EthTSynGlobalTimePdelayRespEnable set to TRUE.
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_Return_NotOk</srcid><srcstatus/><internalId>1694</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwtPtpRxIndication_InvalidControllerId</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwtPtpTimeStampIndication_InvalidControllerId</srcid><srcstatus/><internalId>1696</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Master.InvalidSwitchId</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Master.InvalidUniqueId</srcid><srcstatus/><internalId>1698</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField</srcid><srcstatus/><internalId>1699</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo</srcid><srcstatus/><internalId>1700</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData</srcid><srcstatus/><internalId>1701</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayReq_SaveIngressTS</srcid><srcstatus/><internalId>1702</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_Transmit</srcid><srcstatus/><internalId>1703</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveUniqueId</srcid><srcstatus/><internalId>1704</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress</srcid><srcstatus/><internalId>1705</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveEgressTS</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayRespFup_Transmit</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.BridgeWithGTMnotMgmCPU</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_ReceiveSyncFrameOnSlavePort</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_GetTimeStamps</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort</srcid><srcstatus/><internalId>1712</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts</srcid><srcstatus/><internalId>1713</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwt_UpdateCorrectionField</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo</srcid><srcstatus/><internalId>1715</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType</srcid><srcstatus/><internalId>1716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swdd.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1683</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support for Diagnostic event reporting for Ethernet TimeSync">
    <specobject>
      <id>EthTSyn.dsn.Func.DiagnosticEventReport</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1151</sourceline>
      <version>1</version>
      <description>
          The EthTSyn module is capable to report diagnostic events:
           - If EthTSynPdelayFailedReportError, EthTSynUnexpectedSyncFailedReportError or
           EthTSynSyncFailedReportError are configured to DEM, dem events will be reported via
           Dem_ReportEventStatus() for failed Sync/SyncFUp or
           PdelayReq/PdelayResp/PdelayRespFUp pairs.
           - If EthTSynPdelayFailedReportError, EthTSynUnexpectedSyncFailedReportError or
           EthTSynSyncFailedReportError are configured to DET, Det_ReportError() shall be called
           with configured ErrorId after 12 failed pairs of Sync/SyncFUp or
           6 of PdelayReq/PdelayResp/PdelayRespFUp.
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_SyncFailed_DEM</srcid><srcstatus/><internalId>1717</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_SyncOK_DEM</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_SyncFailed_DET</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_UnexpectedSync_DET</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_PdelayOK_DEM</srcid><srcstatus/><internalId>1722</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_PdelayFailed_DEM</srcid><srcstatus/><internalId>1723</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_PdelayFailed_DET</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire</srcid><srcstatus/><internalId>1726</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET</srcid><srcstatus/><internalId>1730</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</srcid><srcstatus/><internalId>1731</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swdd.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1684</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs" title="Functionality requirements: Support for AUTOSAR TimeSecured Sub-TLVs">
    <specobject>
      <id>EthTSyn.dsn.Func.TimeSecuredSubTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1174</sourceline>
      <version>1</version>
      <description>
          The Sync FollowUp frames shall contain AUTOSAR Sub-TLV TimeSecured if:
           - EthTSynMessageCompliance is set to false.
           - EthTSynTLVFollowUpTimeSubTLV is set to true.
        </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00075</srcid><srcstatus/><internalId>28</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00157</srcid><srcstatus/><internalId>103</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00113</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00114</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1685</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs" title="Functionality requirements: Support for AUTOSAR Status Sub-TLVs">
    <specobject>
      <id>EthTSyn.dsn.Func.StatusSubTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1198</sourceline>
      <version>1</version>
      <description>
          The Sync FollowUp frames shall contain AUTOSAR Sub-TLV Status if:
           - EthTSynMessageCompliance is set to false.
           - EthTSynTLVFollowUpStatusSubTLV is set to true.
        </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00077</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1686</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs" title="Functionality requirements: Support for AUTOSAR UserData Sub-TLVs">
    <specobject>
      <id>EthTSyn.dsn.Func.UserDataSubTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1223</sourceline>
      <version>1</version>
      <description>
          The Sync FollowUp frames shall contain AUTOSAR Sub-TLV UserData if:
           - EthTSynMessageCompliance is set to false.
           - EthTSynTLVFollowUpUserDataSubTLV is set to true.
        </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00078</srcid><srcstatus/><internalId>31</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00079</srcid><srcstatus/><internalId>32</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00081</srcid><srcstatus/><internalId>33</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00082</srcid><srcstatus/><internalId>34</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00080</srcid><srcstatus/><internalId>263</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00153</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1687</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs" title="Functionality requirements: Support for AUTOSAR Offset Timebases Sub-TLVs">
    <specobject>
      <id>EthTSyn.dsn.Func.OffsetSubTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1248</sourceline>
      <version>1</version>
      <description>
          The Sync FollowUp frames shall contain AUTOSAR Sub-TLV Offset if:
           - EthTSynMessageCompliance is set to false.
           - EthTSynTLVFollowUpOFSSubTLV is set to true.
        </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.PRS_TS_00084</srcid><srcstatus/><internalId>35</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00085</srcid><srcstatus/><internalId>36</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00086</srcid><srcstatus/><internalId>37</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00088</srcid><srcstatus/><internalId>38</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00089</srcid><srcstatus/><internalId>39</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00094</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00094_SyncToGatewaySet</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00094_SyncToGatewayNOTSet</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00095</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00103</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00156_SgwIsSyncToSubDomain</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.PRS_TS_00156_SgwIsNOTSyncToSubDomain</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00063</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_OFSSecured</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00093_OFSnotSecured</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00107</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00108</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.R22-11.PRS_TS_00109</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00086</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.SWS_EthTSyn_00087</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.PRS_TS_00119</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1688</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support for Sync frame only on host port">
    <specobject>
      <id>EthTSyn.dsn.Func.SyncFrameOnlyOnHostPort</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1273</sourceline>
      <version>1</version>
      <description>
          EthTSyn shall send only one Sync frame on the host port and EthSwt will handle the
          transmission on the other ports.
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort</srcid><srcstatus/><internalId>1729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1689</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support of Authentication Challenge TLV for Device Authentication">
    <specobject>
      <id>EthTSyn.dsn.Func.DevAuthSupplicant</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>1289</sourceline>
      <version>1</version>
      <description>
          EthTSyn shall send pdelay_resp and pdelay_resp_fup frames, containing authentication challenge
          TLV of challengeType challengeResponse(from Supplicant to Authenticator).
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.ECUC_EthTSynEnableDeviceAuthenticationSupport_Conf</srcid><srcstatus/><internalId>1732</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_RxPdelayReqWithTLV</srcid><srcstatus/><internalId>1733</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV</srcid><srcstatus/><internalId>1734</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqInvalidTLV</srcid><srcstatus/><internalId>1735</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK</srcid><srcstatus/><internalId>1736</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayResp</srcid><srcstatus/><internalId>1737</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayRespTxConf</srcid><srcstatus/><internalId>1738</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PDelayResIndication_NOK</srcid><srcstatus/><internalId>1739</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayRespFUp</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_TLV</srcid><srcstatus/><internalId>1741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1690</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support of switch delay compensation">
    <specobject>
      <id>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9204</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_MainFunction() is called for the controller that references an
        Ethernet switch and has the link state active, the EthSwt functions
        EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() shall be called to transmit the sync
        frame.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01999_MasterSendsSwtSyncFrames</srcid><srcstatus/><internalId>1949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13950</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1691</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9239</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for the sync frame on host port, in the
        context of next EthTSyn_MainFunction() the sync frame shall be transmitted on
        remaining swt ports using the following call sequence for each configured port:
          - EthSwt_ProvideTxBuffer()
          - EthIf_EnableEgressTimeStamp()
          - EthSwt_PtpTransmit()
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01999_MasterSendsSwtSyncFrames</srcid><srcstatus/><internalId>1949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14189</srcid><srcstatus/><internalId>1480</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14248</srcid><srcstatus/><internalId>1483</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1692</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9276</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for the transmitted sync frame on ports,
        in the context of next EthTSyn_MainFunction() the sync follow-up frames shall be
        transmitted on remaining swt ports using the following call sequence for each
        configured port:
          - EthSwt_ProvideTxBuffer()
          - EthIf_EnableEgressTimeStamp()
          - EthSwt_PtpTransmit()
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01125_Crc_Swt_TimeOffsetSubTLV</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01999_MasterSendsSwtSyncFrames</srcid><srcstatus/><internalId>1949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14385</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14442</srcid><srcstatus/><internalId>1498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1693</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_Return_NotOk</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9314</sourceline>
      <version>1</version>
      <description>
        If any of the calls of EthSwt_PtpTransmit() or EthSwt_ProvideTxBuffer() while
        transmitting a frame, returns other value than E_OK or
        BUFREQ_OK, the frame processing shall stop and no frame shall be transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01129_EthSwt_Return_NotOk</srcid><srcstatus/><internalId>1903</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01998_SwtSync_Return_NotOk</srcid><srcstatus/><internalId>1950</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01997_SwtSync_Return_NotOk</srcid><srcstatus/><internalId>1951</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01995_SwtFuP_Return_NotOk</srcid><srcstatus/><internalId>1954</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01994_SwtFuP_Return_NotOk</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01988_MasterReceiveSwtPdelayReqFrames_SwtBuff_NOK_Resp</srcid><srcstatus/><internalId>1960</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01987_MasterReceiveSwtPdelayReqFrames_SwtBuff_NOK_RespFUp</srcid><srcstatus/><internalId>1961</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01986_MasterReceiveSwtPdelayReqFrames_Transmit_NOK_Resp</srcid><srcstatus/><internalId>1962</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01985_SwtGetTxBuffer_NULLPTR</srcid><srcstatus/><internalId>2115</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest07_0049_ICV_SWT_Generate_Failed_NOK</srcid><srcstatus/><internalId>2292</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13954</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14017</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14194</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14251</srcid><srcstatus/><internalId>1484</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14393</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14446</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14718</srcid><srcstatus/><internalId>1518</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14797</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14908</srcid><srcstatus/><internalId>1531</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14977</srcid><srcstatus/><internalId>1536</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15010</srcid><srcstatus/><internalId>1538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1694</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwtPtpRxIndication_InvalidControllerId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9336</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called with invalid CtrlIdx and Dev error detect
        is enabled, ETHTSYN_E_CTRL_IDX shall be reported to DET.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01127_Swt_InvalidParam</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4593</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1695</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwtPtpTimeStampIndication_InvalidControllerId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9357</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpTimeStampIndication() is called with invalid CtrlIdx
        and Dev error detect is enabled, ETHTSYN_E_CTRL_IDX shall be reported to DET.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01127_Swt_InvalidParam</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4528</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1696</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Master.InvalidSwitchId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9378</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpTimeStampIndication() is called for the transmitted sync frames,
        with invalid SwitchId, the frame processing shall stop and no Sync Follow-up frames
        shall be transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01996_InvalidSwitchId</srcid><srcstatus/><internalId>1953</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5001</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1697</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Master.InvalidUniqueId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9400</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpTimeStampIndication() is called for the transmitted sync frames,
        with invalid UniqueId, the frame processing shall stop and no Sync Follow-up frames
        shall be transmitted.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01996_InvalidUniqueId</srcid><srcstatus/><internalId>1952</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4998</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1698</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9422</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynSwtPortIdxInCorrField is set to true, for each
        Global Time Domain that has configured a switch host port reference, the
        currently unused 2 bytes of fractional ns part of the correction field shall be used to
        store SwitchIdx (in most significant byte) and PortIdx (in least significant byte).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01126_Crc_Swt_TimeSubTLV</srcid><srcstatus/><internalId>1901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13938</srcid><srcstatus/><internalId>1467</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16705</srcid><srcstatus/><internalId>1633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1699</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9445</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called with an incorrect MgmtInfo the pelay_req frame
        shall be ignored.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo.vc01</srcid><srcstatus/><internalId>1763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16579</srcid><srcstatus/><internalId>1626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1700</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9466</sourceline>
      <version>1</version>
      <description>
        If EthTSyn_EthSwtPtpRxIndication() is called for the pdelay_req frame and configuration
        parameter EthTSynGlobalTimePdelayRespEnable is set to true, the incoming sequence number,
        sourceport identity and the uniqueId shall be saved.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData.vc01</srcid><srcstatus/><internalId>1764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16589</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1701</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayReq_SaveIngressTS</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9488</sourceline>
      <version>1</version>
      <description>
        EthSwt module provides the IngressTimeStamp of the pdelay_req frame via
        EthTSyn_EthSwtPtpTimeStampIndication(). The IngressTimeStamp shall be saved to be
        transmitted in the next EthTSyn_MainFunction() within pdelay_resp frame.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01</srcid><srcstatus/><internalId>1765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16599</srcid><srcstatus/><internalId>1629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1702</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayResp_Transmit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9514</sourceline>
      <version>1</version>
      <description>
        If an IngressTimeStamp is received for the pdelay_req frame the pdelay_resp shall be
        transmitted in the next EthTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01</srcid><srcstatus/><internalId>1765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14793</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16607</srcid><srcstatus/><internalId>1630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1703</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveUniqueId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9539</sourceline>
      <version>1</version>
      <description>
        After the transmission of the pdelay_resp, the uniqueId provided by EthSwt_PtpTransmit() api,
        must be saved to identify the right EgressTimeStamp for the outgoing pdelay_resp.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01</srcid><srcstatus/><internalId>1765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15212</srcid><srcstatus/><internalId>1554</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1704</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9560</sourceline>
      <version>1</version>
      <description>
        After the transmission of the pdelay_resp frame the switch master port shall
        wait for the EgressTimeStamp provided by the EthSwt module before transmitting the
        pdelay_resp_fup frame.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress.vc01</srcid><srcstatus/><internalId>1766</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14687</srcid><srcstatus/><internalId>1514</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14880</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1705</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveEgressTS</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9582</sourceline>
      <version>1</version>
      <description>
        EthSwt module provides the EgressTimeStamp of the pdelay_resp frame via
        EthTSyn_EthSwtPtpTimeStampIndication(). The egress timesstamp shall be saved to be
        transmitted in the next EthTSyn_MainFunction() within pdelay_resp_fup frame.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.TransmitPdelayRespFup.vc01</srcid><srcstatus/><internalId>1767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4924</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1706</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayRespFup_Transmit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9608</sourceline>
      <version>1</version>
      <description>
        If the egress timesstamp is received for the pdelay_resp frame the pdelay_resp_fup shall be
        transmitted in the next EthTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.SwitchPdelay.TransmitPdelayRespFup.vc01</srcid><srcstatus/><internalId>1767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4930</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14973</srcid><srcstatus/><internalId>1535</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1707</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.BridgeWithGTMnotMgmCPU</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9634</sourceline>
      <version>1</version>
      <description>
        If EthTSynPortConfig list contains at least 2 ports, where, one port is configured as slave
        and at least one port as master, EthTSyn is configured to support the use case
        "Time Aware Bridge with GTM not as Management CPU".
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.BridgeWithGTMnotMgmCPU.vc01</srcid><srcstatus/><internalId>1754</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EthTSyn_CfgTypes.h.m4_192</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1708</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_ReceiveSyncFrameOnSlavePort</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9660</sourceline>
      <version>1</version>
      <description>
        If  EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU" and a GTM initiates a synchronization,
        the Sync frame shall be received on invocation of EthTSyn_EthSwtPtpRxIndication().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0000_ReceiveOnBridge</srcid><srcstatus/><internalId>2147</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15606</srcid><srcstatus/><internalId>1568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1709</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9682</sourceline>
      <version>1</version>
      <description>
        If EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU" and a SyncFUp frame is dropped during forwarding to all master ports,
        that frame shall be ignored and the rest of the Sync frames shall be forwarded to remaining
        master ports.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp.vc01</srcid><srcstatus/><internalId>1761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14394</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1710</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_GetTimeStamps</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9705</sourceline>
      <version>1</version>
      <description>
        If  EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU" ,EthTSyn_EthSwtPtpTimeStampIndication() is called to get 
        the EgressTimeStamps for all master ports and IngressTimeStamp for slave port.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_GetTimeStamps.vc01</srcid><srcstatus/><internalId>1755</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4809</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4919</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1711</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9727</sourceline>
      <version>1</version>
      <description>
        If  EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU" and a GTM transmits the SyncFup frame on port slave,
        the SyncFup frame shall be received on invocation of EthTSyn_EthSwtPtpRxIndication().
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort.vc01</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16120</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1712</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9749</sourceline>
      <version>1</version>
      <description>
        If  EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU", upon receiving the Fup frame, the slave port shall transmit the
        Fup frame to all masters.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts.vc01</srcid><srcstatus/><internalId>1757</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16124</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1713</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_UpdateCorrectionField</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9771</sourceline>
      <version>1</version>
      <description>
        If EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU", the correction field shall be updated by substracting the ingress
        timestamp(slave) from EgressTimeStamp(master port X). This shall be done for all master ports.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</srcid><srcstatus/><internalId>1758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16698</srcid><srcstatus/><internalId>1632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1714</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9797</sourceline>
      <version>1</version>
      <description>
        If EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU" and EthTSyn_EthSwtPtpRxIndication() is called with incorrect
        MgmtInfo, the frame shall be dropped and nothing will happen in next EthTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo.vc01</srcid><srcstatus/><internalId>1759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15613</srcid><srcstatus/><internalId>1571</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15722</srcid><srcstatus/><internalId>1579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1715</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9819</sourceline>
      <version>1</version>
      <description>
        If EthTSyn is configured to support the use case "Time Aware Bridge with GTM
        not as Management CPU" and EthTSyn_EthSwtPtpRxIndication() is called with unknown
        frame type, the frame shall be dropped and nothing will happen in next
        EthTSyn_MainFunction().
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType.vc01</srcid><srcstatus/><internalId>1760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15878</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SwitchDelayCompensation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1716</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support of debounce transmissions">
    <specobject>
      <id>EthTSyn.EB.Diagnostic_SyncFailed_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9846</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynSyncFailedReportError is set to DEM, each dropped
        sync frame shall be reported to DEM with EventID set to the configured
        DemEventID for ETHTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01</srcid><srcstatus/><internalId>1742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13374</srcid><srcstatus/><internalId>1437</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1717</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_SyncOK_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9868</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynSyncFailedReportError is set to DEM, and
        a pair of Sync and Sync Follow-up frames is succesfully received on a port configured
        EthTSynGlobalTimeSlave, EventID set to the configured DemEventID for ETHTSYN_E_SYNC_FAILED
        and EventStatus as STATUS_PREPASSED shall be reported to DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_SyncOK_DEM.vc01</srcid><srcstatus/><internalId>1743</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13686</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_16169</srcid><srcstatus/><internalId>1600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1718</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_SyncFailed_DET</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9891</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynSyncFailedReportError is set to DET, after 12 failed pairs of
        Sync/SyncFUp Det_ReportError() shall be called with ErrorID taken form configured
        EthTSynSyncFailedReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01</srcid><srcstatus/><internalId>1744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13390</srcid><srcstatus/><internalId>1440</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1719</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9913</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynUnexpectedSyncFailedReportError is set to DEM,
        and if a SYNC frame is recieved by a port configured as EthTSynPortRole to
        EthTSynGlobalTimeMaster, EventID set to the configured DemEventID for
        ETHTSYN_E_UNEXPECTED_SYNC and EventStatus as STATUS_FAILED shall be reported to DEM.
      </description>
      <comment>
        Det_ReportError() shall also be informed with ErrorID set to 0x01(SWS_EthTSyn_00144).
      </comment>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM.vc01</srcid><srcstatus/><internalId>1745</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8253</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15683</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1720</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_UnexpectedSync_DET</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9939</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynUnexpectedSyncFailedReportError is set to DET,
        and if a SYNC frame is recieved by a port configured as EthTSynPortRole to
        EthTSynGlobalTimeMaster, the DET event ETHTSYN_E_INVALID_UNEXPECTED_SYNC,
        with the configured ID EthTSynUnexpectedSyncReportErrorDetErrorId,
        shall be reported to DET module.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_UnexpectedSync_DET.vc01</srcid><srcstatus/><internalId>1746</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_8277</srcid><srcstatus/><internalId>1135</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15705</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1721</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_PdelayOK_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9963</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynSyncFailedReportError is set to DEM, and
        a pair of Pdelay, PdelayResponse and PdelayResponseFUp frames is succesfully
        received on a port configured EthTSynGlobalTimeSlave,
        the DemEventID for ETHTSYN_E_PDELAY_FAILED and STATUS_PREPASSED shall be reported
        to DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_PdelayOK_DEM.vc01</srcid><srcstatus/><internalId>1747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10119</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1722</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_PdelayFailed_DEM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>9987</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynPdelayFailedReportError is set to DEM,
        and no valid PdelayResp or PdelayRespFUp is received after transmitting a PdelayReq frame,
        the EventID set to the configured DemEventID for ETHTSYN_E_PDELAY_FAILED and EventStatus as
        STATUS_PREFAILED shall be reported to DEM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13716</srcid><srcstatus/><internalId>1461</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1723</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_PdelayFailed_DET</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10010</sourceline>
      <version>1</version>
      <description>
        If configuration parameter EthTSynPdelayFailedReportError is set to DET,
        and no valid PdelayResp or PdelayRespFUp is received after transmitting a PdelayReq frame,
        the ErrorID taken form configured EthTSynSyncFailedReportErrorDetErrorId shall be reported
        to DET.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_PdelayFailed_DET.vc01</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13730</srcid><srcstatus/><internalId>1462</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1724</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10033</sourceline>
      <version>1</version>
      <description>
        Name: EthTSynReceiveSyncFupPairsPeriod
        Description
          This parameter contains the timeout of an unrecieved Sync/Fup pair.
          A value of 0 deactivates this timeout observation.
        Unit: seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      [0 .. 1000]
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
          Pre-compile time   X   All Variants
          Link time          --
          Post-build time    --
        Scope / Dependency
          scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11595</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_11739</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1725</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10067</sourceline>
      <version>1</version>
      <description>
        Time Master and Time Slave shall observe the Sync timeout as given by
        EthTSynReceiveSyncFupPairsPeriod, if a Sync has been transmitted(waiting for Sync FUP).
        If the reception timeout occurs, Dem_ReportErrorStatus() shall be called with EventStatus
        STATUS_PREFAILED and EventId taken from configured DemEventID for ETHTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire.vc01</srcid><srcstatus/><internalId>1750</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12522</srcid><srcstatus/><internalId>1365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1726</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10090</sourceline>
      <version>1</version>
      <description>
        Name: EthTSynReceivePdelayRespFupPairsPeriod
        Description
          This parameter contains the timeout of an unrecieved PdelayResp/PdelayRespFUp pair.
          A value of 0 deactivates this timeout observation.
        Unit: seconds
        Multiplicity               1
        Type                       EcucFloatParamDef
        Range                      [0 .. 4]
        Default value              --
        Post-Build Variant Value   true
        Value Configuration Class
          Pre-compile time   X   All Variants
          Link time          --
          Post-build time    --
        Scope / Dependency
          scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12545</srcid><srcstatus/><internalId>1366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1727</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10124</sourceline>
      <version>1</version>
      <description>
        Time Master and Time Slave shall observe the Pdelay timeout as given by
        EthTSynReceivePdelayRespFupPairsPeriod, if a PdelayRequest has been transmitted
        (waiting for PdelayResp and PdelayRespFUp).
        If the reception timeout occurs, Dem_ReportErrorStatus() is called with EventStatus
        STATUS_PREFAILED and EventId taken from configured DemEventID for ETHTSYN_E_PDELAY_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire.vc01</srcid><srcstatus/><internalId>1751</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12546</srcid><srcstatus/><internalId>1367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1728</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10148</sourceline>
      <version>1</version>
      <description>
        If EthTSynSendSyncFrameOnlyOnHostPort is set to true, EthTSyn shall transmit the sync
        frame only on the host port. EthSwt shall handle the transmission on the remaining
        configured ports after the EgressTimeStamps are avaliable.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort.vc01</srcid><srcstatus/><internalId>1762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4153</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.SyncFrameOnlyOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1729</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10170</sourceline>
      <version>1</version>
      <description>
        If EthTSynDevErrorDetect is set to FALSE and EthTSynSyncFailedReportError,
        EthTSynPdelayFailedReportError or EthTSynUnexpectedSyncReportError are set to DET,
        an error shall be reported during generation
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET.vc01</srcid><srcstatus/><internalId>1752</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1221</srcid><srcstatus/><internalId>1648</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1311</srcid><srcstatus/><internalId>1650</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1398</srcid><srcstatus/><internalId>1652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1730</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10192</sourceline>
      <version>1</version>
      <description>
        If EthTSynSyncFailedReportError, EthTSynPdelayFailedReportError or
        EthTSynUnexpectedSyncReportError are set to DET,
        EthTSynSyncFailedReportErrorDetErrorId, EthTSynPdelayFailedReportErrorDetErrorId and
        EthTSynUnexpectedSyncReportErrorDetErrorId can not be configured to following values:
        0x01, 0x02 and values from 0x20 to 0x24.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET.vc01</srcid><srcstatus/><internalId>1753</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1259</srcid><srcstatus/><internalId>1649</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1348</srcid><srcstatus/><internalId>1651</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_1438</srcid><srcstatus/><internalId>1653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DiagnosticEventReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1731</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Functionality requirements: Support of Authentication Challenge TLV for Device Authentication">
    <specobject>
      <id>EthTSyn.EB.ECUC_EthTSynEnableDeviceAuthenticationSupport_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10220</sourceline>
      <version>1</version>
      <description>
        Name EthTSynEnableDeviceAuthenticationSupport
        Description Activate/Deactivate the support of Authentication challenge TLV for
          device authentication.
        Multiplicity 1
        Type EcucBooleanParamDef
        Default value FALSE
        Post-Build Variant Value false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_112</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1732</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_RxPdelayReqWithTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10253</sourceline>
      <version>1</version>
      <description>
        If EthTSynEnableDeviceAuthenticationSupport is enabled, on reception of a PdelayReq frame 
        shall be checked if the message contains an authentication challenge TLV.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</srcid><srcstatus/><internalId>1768</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc02</srcid><srcstatus/><internalId>1769</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_10213</srcid><srcstatus/><internalId>1266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1733</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10274</sourceline>
      <version>1</version>
      <description>
        If the received tlv is a valid authentication challenge TLV (tlvType = 0x20 0x01 and the
        lengthField = 14), DevAuth_PdelayReqIndication() shall be called using the RequestNonce
        from the TLV and the IngressTimeStamp. DevAuth module shall return the ResponseNonce.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</srcid><srcstatus/><internalId>1768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13759</srcid><srcstatus/><internalId>1464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1734</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqInvalidTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10296</sourceline>
      <version>1</version>
      <description>
        If the received tlv is not an authentication challenge TLV (tlvType != 0x20 0x01 and the
        lengthField = 14), the pdelay_resp and pdelay_resp_fup shall be sent without authentication
        challenge TLV.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV_NOK.vc01</srcid><srcstatus/><internalId>1770</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV_NOK.vc02</srcid><srcstatus/><internalId>1771</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13750</srcid><srcstatus/><internalId>1463</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1735</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10318</sourceline>
      <version>1</version>
      <description>
        If DevAuth_PdelayReqIndication() returns E_NOT_OK the pdelay_resp and pdelay_resp_fup
        shall be sent without authentication challenge TLV.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK.vc01</srcid><srcstatus/><internalId>1772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_13766</srcid><srcstatus/><internalId>1465</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1736</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayResp</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10339</sourceline>
      <version>1</version>
      <description>
        If EthTSynEnableDeviceAuthenticationSupport is enabled, the PdelayResp frame shall be transmitted,
        containing also an authentication challenge TLV with the defined format.
      </description>
      <comment>
        The format of the authentication challenge TLV is defined in IEEE 1588 Table K.5.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</srcid><srcstatus/><internalId>1768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_5982</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_TLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1737</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayRespTxConf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10367</sourceline>
      <version>1</version>
      <description>
        If EthTSynEnableDeviceAuthenticationSupport is enabled and a PdelayResp frame with
        authentication challenge TLV was transmitted, on EthTSyn_TxConfirmation() invocation
        DevAuth_PDelayResIndication() shall be called using the EgressTimeStamp T3 and the
        requestNonce.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</srcid><srcstatus/><internalId>1768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4210</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1738</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PDelayResIndication_NOK</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10390</sourceline>
      <version>1</version>
      <description>
        If DevAuth_PDelayResIndication() returns E_NOT_OK the pdelay_resp_fup
        shall be sent without authentication challenge TLV.
      </description>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PDelayResIndication_NOK.vc01</srcid><srcstatus/><internalId>1773</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4219</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1739</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayRespFUp</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10411</sourceline>
      <version>1</version>
      <description>
        If EthTSynEnableDeviceAuthenticationSupport is enabled, the PdelayRespFup frame shall be transmitted,
        containing also an authentication challenge TLV with the defined format.
      </description>
      <comment>
        The format of the authentication challenge TLV is defined in IEEE 1588 Table K.5.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuvc</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</srcid><srcstatus/><internalId>1768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6174</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_TLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1740</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_TLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10439</sourceline>
      <version>1</version>
      <description>
        Device Authentication TLV shall have the following format:
          - 2 bytes - tlvType - AUTHENTICATION_CHALLENGE - 0x20 0x01
          - 2 bytes - lengthField - 14
          - 1 byte - challengeType - 0x00 for ChallengeRequest for Authenticator -&amp;gt; Supplicant
                                   - 0x02 for ChallengeResponse for Supplicant -&amp;gt; Authenticator
          - 1 byte - reserved
          - 4 bytes - requestNonce
          - 4 bytes - responseNonce
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6072</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_6207</srcid><srcstatus/><internalId>977</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayResp</srcid><srcstatus/><internalId>1737</internalId></linkedfrom><linkedfrom><srcid>EthTSyn.EB.DevAuth_PdelayRespFUp</srcid><srcstatus/><internalId>1740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.dsn.Func.DevAuthSupplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1741</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuvc" title="Verification criteria for EthTSyn design requirements">
    <specobject>
      <id>EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10469</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
        Execution: - Receive a second Sync frame before receiving a Sync Follow-up.
                   - Call EthTSyn_MainFunction() enough times that EthTSynReceiveSyncFupPairsPeriod elapses.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_PREFAILED and EventId taken from
                configured DemEventID for ETHTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01211_DEMDET_SyncFailed</srcid><srcstatus/><internalId>2065</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01211_DEMDET_InvalidSeqNr</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1742</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_SyncOK_DEM.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10492</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
        Execution: - Receive a pair of Sync and Sync Follow-up frames.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_PREPASSED and EventId taken from
                configured DemEventID for ETHTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01214_DEM_SyncFUP_OK</srcid><srcstatus/><internalId>2068</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1743</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10514</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DET.
        Execution: - Receive a second Sync frame before receiving a Sync Follow-up 12 times.
        Output: Det_ReportError() shall be called with ErrorID taken form configured
                EthTSynSyncFailedReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01211_DEMDET_SyncFailed</srcid><srcstatus/><internalId>2065</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01211_DEMDET_InvalidSeqNr</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1744</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10536</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
        Execution: - Receive a Sync frame on a port configured as EthTSynPortRole to
                     EthTSynGlobalTimeMaster.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_FAILED and EventId taken from
                configured DemEventID for ETHTSYN_E_UNEXPECTED_SYNC.
      </description>
      <comment>
        Det_ReportError() shall also be informed with ErrorID set to 0x01(SWS_EthTSyn_00144).
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01014_Master_ReceiveSyncFrame</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01014_Master_ReceiveSwtSyncFrame</srcid><srcstatus/><internalId>2110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1745</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_UnexpectedSync_DET.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10562</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DET.
        Execution: - Receive a Sync frame on a port configured as EthTSynPortRole to
                     EthTSynGlobalTimeMaster.
        Output: Det_ReportError() shall be called with ErrorID taken form configured
                EthTSynUnexpectedSyncReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01014_Master_ReceiveSyncFrame</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01014_Master_ReceiveSwtSyncFrame</srcid><srcstatus/><internalId>2110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1746</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_PdelayOK_DEM.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10585</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
        Execution: - Receive a pair of PdelayReq/PdelayResp/PdelayRespFUp.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_PREPASSED and EventId taken from
                configured DemEventID for ETHTSYN_E_PDELAY_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01215_DEM_Pdelay_Resp</srcid><srcstatus/><internalId>2069</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayOK_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1747</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10607</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
                       EthTSynReceivePdelayRespFupPairsPeriod set to 3.
        Execution: - Receive a PdelayReq frame.
                   - Call EthTSyn_MainFunction() enough times that EthTSynReceivePdelayRespFupPairsPeriod elapses.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_PREFAILED and EventId taken from
                configured DemEventID for ETHTSYN_E_PDELAY_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01213_DEMDET_PdelayFailed</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01215_DEM_Pdelay_Resp_WrongNsField</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01216_DEM_Pdelay_RespFUp</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01216_DEM_Pdelay_RespFUp_WrongNsField</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DEM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1748</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_PdelayFailed_DET.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10631</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
                       EthTSynReceivePdelayRespFupPairsPeriod set to 3.
        Execution: - Receive a PdelayReq frame.
                   - Call EthTSyn_MainFunction() enough times that EthTSynReceivePdelayRespFupPairsPeriod elapses 6 times.
        Output: Det_ReportError() shall be called with ErrorID taken form configured
                EthTSynPdelayFailedReportErrorDetErrorId.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01213_DEMDET_PdelayFailed</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest01216_DEM_Pdelay_RespFUp</srcid><srcstatus/><internalId>2071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1749</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10655</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
                       EthTSynReceiveSyncFupPairsPeriod set to 12 ticks.
        Execution: - Receive a Sync frame.
                   - Call EthTSyn_MainFunction() enough times that EthTSynReceiveSyncFupPairsPeriod elapses.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_PREFAILED and EventId taken from
                configured DemEventID for ETHTSYN_E_SYNC_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01211_DEMDET_SyncFailed</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1750</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10679</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError set to DEM.
                       EthTSynReceivePdelayRespFupPairsPeriod set to 3.
        Execution: - Receive a PdelayReq frame.
                   - Call EthTSyn_MainFunction() enough times that EthTSynReceivePdelayRespFupPairsPeriod elapses.
        Output: Dem_ReportErrorStatus() is called with EventStatus STATUS_PREFAILED and EventId taken from
                configured DemEventID for ETHTSYN_E_PDELAY_FAILED.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01213_DEMDET_PdelayFailed</srcid><srcstatus/><internalId>2067</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1751</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10703</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynDevErrorDetect = FALSE
                       EthTSynSyncFailedReportError = DET
        Output: WARNING: "EthTSynDevErrorDetect is set to false which means
        that production errors will not be reported to the development error tracer (Det)."
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01009_Invalid_EthTSyn_Xdm_DetDisabled_DEMDET</srcid><srcstatus/><internalId>2310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1752</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10725</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynSyncFailedReportError = DET
                       EthTSynSyncFailedReportErrorDetErrorId = 1
        Output: WARNING: "Values 0x01, 0x02, 0x03, 0x04 and from 0x20 to 0x24
                are used as standard Ids according to AUTOSAR SWS and 0 shall not be used."
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01010_Invalid_EthTSyn_Xdm_Invalid_ErrorId</srcid><srcstatus/><internalId>2311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1753</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.BridgeWithGTMnotMgmCPU.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10747</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 4 ports and PortRole = Slave
        Output: ETHTSYN_BRIDGE_WITH_GTM_NOT_MGM_CPU is STD_ON.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0000_ReceiveOnBridge</srcid><srcstatus/><internalId>2147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BridgeWithGTMnotMgmCPU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1754</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_GetTimeStamps.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10767</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 4 ports and PortRole = Slave
        Execution: EthTSyn_EthSwtPtpTimeStampIndication() is called.
        Output: EgressTimeStamps shall be retrieved for Master ports.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0000_ReceiveOnBridge</srcid><srcstatus/><internalId>2147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_GetTimeStamps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1755</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10788</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 1 port slave and 3 master.
        Execution: EthTSyn_EthSwtPtpRxIndication() is called.
        Output: In the following EthTSyn_MainFunction() the SyncFUp frame shall be transmitted on
        master ports.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0000_ReceiveOnBridge</srcid><srcstatus/><internalId>2147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1756</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10810</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 1 port slave and 3 master.
        Execution: EthTSyn_MainFunction() is called.
        Output: The SyncFUp frame shall be transmitted on master ports.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0000_ReceiveOnBridge</srcid><srcstatus/><internalId>2147</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0006_SyncFUpTxFailed</srcid><srcstatus/><internalId>2153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1757</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10831</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 1 port slave and 3 master.
        Execution:
            - EthTSyn_EthSwtPtpRxIndication() was called to receive the sync frame.
            - During EthTSyn_MainFunction() the sync frame is transmitted to all master ports.
            - EthTSyn_EthSwtPtpTimeStampIndication() was called to get timestamps for slave
              and master ports.
            - EthTSyn_EthSwtPtpRxIndication() was called to receive the SyncFUp frame.
            - During EthTSyn_MainFunction() the SyncFUp frame is transmitted to all master ports.
        Output: - The SyncFUp frame shall contain the correction field update
                  (EgressTimeStamp - IngressTimeStamp for each master).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0000_ReceiveOnBridge</srcid><srcstatus/><internalId>2147</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0011_ReceiveOnBridge_SyncFUp_NoTLV</srcid><srcstatus/><internalId>2158</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0014_ReceiveAndSynchronize</srcid><srcstatus/><internalId>2161</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0015_ReceiveAndSynchronize_GetIngressFail</srcid><srcstatus/><internalId>2162</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0016_T5T4_Invalid</srcid><srcstatus/><internalId>2163</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0018_ReceiveAndSynchronize_EgressAfterFUp</srcid><srcstatus/><internalId>2165</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0019_ReceiveAndSynchronize_EgressAfterFwFUp</srcid><srcstatus/><internalId>2166</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0021_ReceiveFUpOnMaster</srcid><srcstatus/><internalId>2168</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0046_SyncBridge_Validation</srcid><srcstatus/><internalId>2193</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0057_MaxSyncFUpSize</srcid><srcstatus/><internalId>2204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1714</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1758</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10859</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 1 port slave and 3 master.
        Execution: Call EthTSyn_EthSwtPtpRxIndication() with incorrect MgmtInfo.
                   Call EthTSyn_MainFunction().
        Output: - The frame is dropped and no further action takes place.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0001_ReceiveIncorrectSwtIdx</srcid><srcstatus/><internalId>2148</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ConTest02_0021_ReceiveFUpOnMaster</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1759</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10881</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 1 port slave and 3 master.
        Execution: Call EthTSyn_EthSwtPtpRxIndication() with unknown frame type.
                   Call EthTSyn_MainFunction().
        Output: - The frame is dropped and no further action takes place.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0002_ReceiveUnknownFrameType_OnSwt</srcid><srcstatus/><internalId>2149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1760</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10903</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 4 ports configured.
                       EthTSyn_PortRole is slave.
        Execution: EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK for one master.
                   Call EthTSyn_MainFunction() after receiving a SyncFUp frame on slave port.
        Output: - The SyncFUp frame is forwarded only for 2 master ports.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest02_0006_SyncFUpTxFailed</srcid><srcstatus/><internalId>2153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1761</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10926</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynPortConfig has 1 host port and 3 master.
                       EthTSynSendSyncFrameOnlyOnHostPort set to true.
        Execution: Call EthTSyn_MainFunction() to transmit the SyncFrame on Host port.
                   Call EthTSyn_TxConfirmation() to confirm the SyncFrame transmission.
                   Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for
                     host port and EgressTimeStamp for all master ports.
        Output: - The SyncFUp frame is transmitted to all 3 configured masters.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01244_SyncOnlyOnHostAndDebounceEnabled</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1762</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10951</sourceline>
      <version>1</version>
      <description>
        Configuration: Multiple master ports are configured for a timedomain.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with incorrect MgmtInfo to receive
                     the pdelay_req frame.
                   - Call EthTSyn_MainFunction().
        Output: - The frame is dropped and no further action takes place.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01989_MasterReceiveSwtPdelayReqFrames_IncorrectMgmtInfo</srcid><srcstatus/><internalId>1959</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1763</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>10974</sourceline>
      <version>1</version>
      <description>
        Configuration: Multiple master ports are configured for a timedomain.
                       EthTSynGlobalTimePdelayRespEnable set to TRUE for at least one port.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame for
                   a port with EthTSynGlobalTimePdelayRespEnable set to TRUE.
                   - Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp with the uniqueId
                   provided by EthTSyn_EthSwtPtpRxIndication().
                   - Call EthTSyn_MainFunction().
        Output: - In the transmitted Pdelay_Resp frame sequnece number and sourceport identity
                  are the same with the ones saved after call of the EthTSyn_EthSwtPtpRxIndication().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01993_MasterReceiveSwtPdelayReqFrames</srcid><srcstatus/><internalId>1956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1764</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11001</sourceline>
      <version>1</version>
      <description>
        Configuration: Multiple master ports are configured for a timedomain.
                       EthTSynGlobalTimePdelayRespEnable set to TRUE for at least one port.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame for
                   a port with EthTSynGlobalTimePdelayRespEnable set to TRUE.
                   - Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp with the uniqueId
                   provided by EthTSyn_EthSwtPtpRxIndication().
                   - Call EthTSyn_MainFunction().
        Output: - In the transmitted Pdelay_Resp frame, the received IngressTimeStamp is added in the
                  requestReceiptTimestamp field.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01993_MasterReceiveSwtPdelayReqFrames</srcid><srcstatus/><internalId>1956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReq_SaveIngressTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1702</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1703</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveUniqueId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1765</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11036</sourceline>
      <version>1</version>
      <description>
        Configuration: Multiple master ports are configured for a timedomain.
                       EthTSynGlobalTimePdelayRespEnable set to TRUE for at least one port.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame for
                   a port with EthTSynGlobalTimePdelayRespEnable set to TRUE.
                   - Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp with the uniqueId
                   provided by EthTSyn_EthSwtPtpRxIndication().
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp frame.
                   - EthTSyn_EthSwtPtpTimeStampIndication() is not called.
                   - Call EthTSyn_MainFunction().
        Output: - The pdelay_resp_fup frame will not be sent.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01991_NoTimeStampIndication_PdelayResp</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1766</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.SwitchPdelay.TransmitPdelayRespFup.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11064</sourceline>
      <version>1</version>
      <description>
        Configuration: Multiple master ports are configured for a timedomain.
                       EthTSynGlobalTimePdelayRespEnable set to TRUE for at least one port.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame for
                   a port with EthTSynGlobalTimePdelayRespEnable set to TRUE.
                   - Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp with the uniqueId
                   provided by EthTSyn_EthSwtPtpRxIndication().
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp.
                   - Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp with the uniqueId
                   provided by EthTSyn_EthSwtPtpTransmit().
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp_fup.
        Output: - In the transmitted Pdelay_Resp_fup frame, the received EgressTimeStamp is added in the
                  responseOriginTimestamp field.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01993_MasterReceiveSwtPdelayReqFrames</srcid><srcstatus/><internalId>1956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_SaveEgressTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1706</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayRespFup_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1767</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11098</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynEnableDeviceAuthenticationSupport set to TRUE.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame
                     with a valid authentication challenge TLV.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp frame.
                   - Call EthTSyn_TxConfirmation() for the transmitted pdelay_resp frame.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp_fup frame.
        Output: - In the transmitted pdelay_resp and pdelay_resp_fup frames, the authentication challenge TLV
                  must be present.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01245_DeviceAuth</srcid><srcstatus/><internalId>2082</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_RxPdelayReqWithTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1733</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1734</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1737</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayRespTxConf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1738</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayRespFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1768</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc02</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11140</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynEnableDeviceAuthenticationSupport set to TRUE.
        Execution: - Call EthTSyn_RxIndication() to receive a valid pdelay_req frame
                     with a valid authentication challenge TLV
                   - Length parameter used in EthTSyn_RxIndication() call set to a value
                     smaller than 68(size of PdelayReq frame that contains a authentication challenge TLV).
        Output: - EthIf_GetIngressTimeStamp() is called to get the TimeStamp.
                - EthTSyn_PdelayDevAuth() is not called..
                - frame is dropped.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01250_DeviceAuth_RxInvalidSize</srcid><srcstatus/><internalId>2114</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_RxPdelayReqWithTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1733</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1769</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV_NOK.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11166</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynEnableDeviceAuthenticationSupport set to TRUE.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame
                     with a different tlvType(non authentication challenge TLV).
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp frame.
                   - Call EthTSyn_TxConfirmation() for the transmitted pdelay_resp frame.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp_fup frame.
        Output: - In the transmitted pdelay_resp and pdelay_resp_fup frames, the authentication challenge TLV
                  will not be present.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01246_DeviceAuth_InvalidTLV</srcid><srcstatus/><internalId>2083</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqInvalidTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1770</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV_NOK.vc02</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11192</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynEnableDeviceAuthenticationSupport set to TRUE.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame
                     with incorrect length(different than 14).
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp frame.
                   - Call EthTSyn_TxConfirmation() for the transmitted pdelay_resp frame.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp_fup frame.
        Output: - In the transmitted pdelay_resp and pdelay_resp_fup frames, the authentication challenge TLV
                  will not be present.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01249_DeviceAuth_InvalidTLVLength</srcid><srcstatus/><internalId>2086</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqInvalidTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1771</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11218</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynEnableDeviceAuthenticationSupport set to TRUE.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame
                     with a valid authentication challenge TLV.
                   - DevAuth_PdelayReqIndication() returns E_NOT_OK.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp frame.
                   - Call EthTSyn_TxConfirmation() for the transmitted pdelay_resp frame.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp_fup frame.
        Output: - In the transmitted pdelay_resp and pdelay_resp_fup frames, the authentication challenge TLV
                  will not be present.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01247_DeviceAuth_PdelayReqIndication_NOK</srcid><srcstatus/><internalId>2084</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1772</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.DevAuth_PDelayResIndication_NOK.vc01</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11245</sourceline>
      <version>1</version>
      <description>
        Configuration: EthTSynEnableDeviceAuthenticationSupport set to TRUE.
        Execution: - Call EthTSyn_EthSwtPtpRxIndication() with valid parameters and a valid pdelay_req frame
                     with a valid authentication challenge TLV.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp frame.
                   - Call EthTSyn_TxConfirmation() for the transmitted pdelay_resp frame.
                   - DevAuth_PDelayResIndication() returns E_NOT_OK.
                   - Call EthTSyn_MainFunction() to transmit the pdelay_resp_fup frame.
        Output: - In the transmitted pdelay_resp the authentication challenge TLV will be present and in the
                  pdelay_resp_fup frame not. 
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ConTest01248_DeviceAuth_PDelayResIndication_NOK</srcid><srcstatus/><internalId>2085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PDelayResIndication_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1773</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_READY_SYN_TO_PORT-WAIT_SWT_INGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11277</sourceline>
      <version>1</version>
      <description>If the controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_SYN_TO_PORT and EthTSyn_MainFunction() is called, the Sync frame shall be sent to all ports and controller state shall be updated to ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS. This is valid only if  EthTSynSendSyncFrameOnlyOnHostPort is set to false.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15323</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1774</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_WAIT_EGRESS-READY_SYN_TO_PORT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11288</sourceline>
      <version>1</version>
      <description>If controller is in state ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_ETH_EGRESS_TS and EthTSyn_Txconfirmation() is called for the sync frame transmitted on the host port, the controller state shall be updated to ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_SYN_TO_PORT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4143</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1775</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_VALID_INGRESS-READY_FUP</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11299</sourceline>
      <version>1</version>
      <description>If EthTSyn_MainFunction() is called and the controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS and the host port PortSynTxState is ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS, the controller state shall be updated to ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15350</srcid><srcstatus/><internalId>1558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1776</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_WAIT_SWT_INGRESS-VALID_INGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11310</sourceline>
      <version>1</version>
      <description>If controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS and EthTSyn_EthSwtPtpTimeStampIndication() returns a valid IngressTimeStamp for the HostPort, the host port state PortSynTxState shall be updated to ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4870</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1777</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_IDLE-WAIT_EGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11321</sourceline>
      <version>1</version>
      <description>If controller state is ETHTSYN_CTRL_SYN_TX_STATE_IDLE and EthTSyn_MainFunction() is called(EthTSynGlobalTimeTxPeriod elapsed), a Sync frame shall be sent to the host port and controller state shall be updated to ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_ETH_EGRESS_TS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14040</srcid><srcstatus/><internalId>1473</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1778</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11332</sourceline>
      <version>1</version>
      <description>If port state is ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP and EthTSyn_MainFunction() is called, the SyncFUp frame shall be transmitted on all ports and the state shall be updated to ETHTSYN_CTRL_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14315</srcid><srcstatus/><internalId>1490</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14525</srcid><srcstatus/><internalId>1506</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14749</srcid><srcstatus/><internalId>1519</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14933</srcid><srcstatus/><internalId>1532</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15089</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15439</srcid><srcstatus/><internalId>1565</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1779</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11343</sourceline>
      <version>1</version>
      <description>After EthTSyn_Init() is called, the controller state shall be set to ETHTSYN_CTRL_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3838</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1780</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynTxState_CTRL_READY_FUP-PORT_READY_FUP</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11354</sourceline>
      <version>1</version>
      <description>If controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP and EthTSyn_MainFunction() is called, the port state shall be updated to ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4850</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15385</srcid><srcstatus/><internalId>1561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1781</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.HostPortSynTxState_VALID_INGRESS-IDLE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11365</sourceline>
      <version>1</version>
      <description>If the host port has the state ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS and the non-host ports in the same time domain have the CtrlSynTxState ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS, during EthTSyn_MainFunction() the non-host ports state shall change to ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP and the host port to ETHTSYN_PORT_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15344</srcid><srcstatus/><internalId>1557</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15351</srcid><srcstatus/><internalId>1559</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1782</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.HostPortSynTxState_WAIT_INGRESS-VALID_INGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11376</sourceline>
      <version>1</version>
      <description>If EthTSyn_EthSwtPtpTimeStampIndication() returns a valid IngressTimeStamp for the host port in ETHTSYN_PORT_SYN_TX_STATE_WAIT_INGRESS_TS state, the state shall be updated to ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4871</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1783</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.HostPortSynTxState_INIT-WAIT_INGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11387</sourceline>
      <version>1</version>
      <description>If EthTSyn_MainFunction() was called and the host port is in state ETHTSYN_PORT_SYN_TX_STATE_IDLE a sync frame shall be sent and the port state shall be changed to ETHTSYN_PORT_SYN_TX_STATE_WAIT_INGRESS_TS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14034</srcid><srcstatus/><internalId>1472</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1784</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.HostPortSynTxState_INIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11398</sourceline>
      <version>1</version>
      <description>After EthTSyn_Init() is called, the host port state shall be set to ETHTSYN_PORT_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12033</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1785</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11409</sourceline>
      <version>1</version>
      <description>If, for a port that has the state ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP, EthTSyn_MainFunction() was called and the SyncFUp was transmitted, the port state shall be changed to ETHTSYN_PORT_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14449</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14476</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1786</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortSynTxState_WAIT_EGRESS-READY_FUP</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11420</sourceline>
      <version>1</version>
      <description>If port is in state ETHTSYN_PORT_SYN_TX_STATE_WAIT_EGRESS_TS and valid timestamp was provided via EthTSyn_EthSwtPtpTimeStampIndication() with matching UniqueID for port, the port state shall change to ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4852</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1787</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortSynTxState_IDLE-WAIT_EGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11431</sourceline>
      <version>1</version>
      <description>If port is in state ETHTSYN_PORT_SYN_TX_STATE_IDLE and EthTSyn_MainFunction() is called and a SyncFrame was sent on the host port, the non-host ports of the respective time domain states shall change to ETHTSYN_PORT_SYN_TX_STATE_WAIT_EGRESS_TS. This is valid only if EthTSynSendSyncFrameOnlyOnHostPort is configured to false.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14261</srcid><srcstatus/><internalId>1485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1788</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortSynTxState_INIT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11442</sourceline>
      <version>1</version>
      <description>After EthTSyn_Init() is called, the port state shall be set to ETHTSYN_PORT_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12034</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0100_SyncSwt</srcid><srcstatus/><internalId>2338</internalId></linkedfrom><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1789</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11453</sourceline>
      <version>1</version>
      <description>If the configured master ports in the respective time domain have the state ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP and EthTSyn_MainFunction() is called, the SyncFUp frame shall be transmitted on all of them, the controller state shall be reset to ETHTSYN_CTRL_SYN_TX_STATE_IDLE and the ports to ETHTSYN_PORT_SYN_TX_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14316</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14526</srcid><srcstatus/><internalId>1507</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14750</srcid><srcstatus/><internalId>1520</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14934</srcid><srcstatus/><internalId>1533</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15090</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15440</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1790</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_CTRL_READY-PORT_READY</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11464</sourceline>
      <version>1</version>
      <description>If slave port received a SyncFUp frame and state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP and EthTSyn_MainFunction() is called, the state for all master ports in the respective time domain shall be set to ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP and the controller state shall remain ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4851</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1791</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_VALID_INGRESS-READY_FUP</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11475</sourceline>
      <version>1</version>
      <description>If slave state is ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS and a SyncFUp frame is received on the slave port, the rest of the master ports in that respective time domain shall have the state set to ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15352</srcid><srcstatus/><internalId>1560</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1792</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_INIT-IDLE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11486</sourceline>
      <version>1</version>
      <description>If EthTSyn_Init() is called while the module is not initialized, the controller shall enter ETHSTYN_CTRL_SYN_TX_STATE_IDLE state.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_3839</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1793</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_WAIT_INGRESS-VALID_INGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11497</sourceline>
      <version>1</version>
      <description>If controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS and the slave receives a valid IngressTimeStamp via EthTSyn_EthSwtPtpTimeStampIndication() the slave port state shall be set to ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_4872</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1794</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_READY-WAIT_INGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11508</sourceline>
      <version>1</version>
      <description>If controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_SYN_TO_PORT and EthTSyn_MainFunction() is called, the sync frame shall be transmitted to all master ports in the respective time domain and the controller state shall be updated to ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15324</srcid><srcstatus/><internalId>1556</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1795</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.CtrlSynBridge_IDLE-READY</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11519</sourceline>
      <version>1</version>
      <description>If the slave port is in state IDLE and a sync frame is received(via EthTSyn_EthSwtPtpRxIndication()) the remaining configured master ports, in the same time domain as the slave, shall have the state ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_SYN_TO_PORT.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15935</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0200_SyncBridge</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1796</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortPdelayState_WAIT_EGRESS-IDLE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11530</sourceline>
      <version>1</version>
      <description>If port state is ETHTSYN_PORT_PDELAY_WAIT_EGRESS_TS and the PdelayResp frame IngressTimeStamp is provided by the EthSwt module via EthTSyn_EthSwtPtpTimeStampIndication() and EthTSyn_MainFunction() is called(PdelayRespFUp frame transmitted on port X), the port state shall change to ETHTSYN_PORT_PDELAY_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15041</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_15063</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0101_PdelaySwt</srcid><srcstatus/><internalId>2339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1797</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortPdelayState_IDLE-WAIT_EGRESS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11541</sourceline>
      <version>1</version>
      <description>If EthTSyn_MainFunction() is called after a PdelayReq is received via EthTSyn_EthSwtPtpRxIndication()
the state shall be updated to ETHTSYN_PORT_PDELAY_WAIT_EGRESS_TS(IngressTimeStamp is received via EthTSyn_EthSwtPtpRxIndication()).</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_14881</srcid><srcstatus/><internalId>1527</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0101_PdelaySwt</srcid><srcstatus/><internalId>2339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1798</internalId></specobject>
    <specobject>
      <id>EthTSyn.Dsn.PortPdelayState_Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>11553</sourceline>
      <version>1</version>
      <description>After EthTSyn_Init() is called, the port state shall be set to ETHTSYN_PORT_PDELAY_STATE_IDLE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EthTSyn.c.m4_12027</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_ImplTest0101_PdelaySwt</srcid><srcstatus/><internalId>2339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1799</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Schema errors">
    <specobject>
      <id>EthTSyn.EB.Xdm.MultiSlave</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14321</sourceline>
      <version>1</version>
      <description>
            An error shall be generated if more than one EthTSynGlobalTimeDomain with enabled
            EthTSynGlobalTimeSlave refer to the same StbM synchronized time base.
          </description>
      <comment>
            Rational: A time base shall have only one time source.
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01001_Invalid_EthTSyn_Xdm_MultiSlave_S1_S2</srcid><srcstatus/><internalId>2303</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_377</srcid><srcstatus/><internalId>1660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1800</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.SlavesSameIfCtrlAndDomainID</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14339</sourceline>
      <version>1</version>
      <description>
            An error shall be generated if two or more slaves have EthTSynGlobalTimeEthIfRef refer to
            the same EthIf controller and also have EthTSynGlobalTimeDomainId configured to the same value.
          </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01002_Invalid_EthTSyn_Xdm_UniqueEthIfCtrlIdxTimeBaseId_Slave1_Slave2</srcid><srcstatus/><internalId>2304</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_502</srcid><srcstatus/><internalId>1662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1801</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.MAC</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14354</sourceline>
      <version>1</version>
      <description>
            If EthTSynDestPhyAddr is enabled and doesn't have the expected syntax, an error will be
            reported.
          </description>
      <comment>
            Expected syntax: XX:XX:XX:XX:XX:XX(where X can be 0-9 or A-F).
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01005_Invalid_EthTSyn_Xdm_MAC_ADDR</srcid><srcstatus/><internalId>2307</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_65</srcid><srcstatus/><internalId>1654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1802</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.SwtPort_NoSwtHost</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14372</sourceline>
      <version>1</version>
      <description>
            If EthTSynSwitchManagementEthSwitchPortRef is configured with a valid reference and
            EthTSynSwitchManagementEthSwitchPortHostRef doesn't have a valid reference, an error
            will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01013_Invalid_EthTSyn_Xdm_NoHostPort</srcid><srcstatus/><internalId>2313</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1409</srcid><srcstatus/><internalId>1673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1803</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.TimeValidation</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14390</sourceline>
      <version>1</version>
      <description>
            If EthTSynEnableTimeValidation is set to true and StbMEnableTimeValidation from
            the referenced timebase is set to false, an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01014_Invalid_EthTSyn_Xdm_TimeValidation</srcid><srcstatus/><internalId>2314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1555</srcid><srcstatus/><internalId>1676</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1804</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.Offset_LessThan16</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14407</sourceline>
      <version>1</version>
      <description>
            If EthTSynGlobalTimeDomainId has a value smaller than 16 and the StbMTimeBase
            configured in EthTSynSynchronizedTimeBaseRef is configured as OffsetTimeBase
            an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01016_Invalid_EthTSyn_Xdm_OfsRef_IdLt16</srcid><srcstatus/><internalId>2315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_334</srcid><srcstatus/><internalId>1656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1805</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.OffsetTimeBaseNotEnabled_GreaterThan15</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14425</sourceline>
      <version>1</version>
      <description>
            If EthTSynGlobalTimeDomainId has a value greater than 15 and the StbMTimeBase
            configured in EthTSynSynchronizedTimeBaseRef does not have StbMOffsetTimeBase enabled,
            an error shall be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01017_Invalid_EthTSyn_Xdm_OfsRefNotEnabled</srcid><srcstatus/><internalId>2316</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_339</srcid><srcstatus/><internalId>1657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1806</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.OffsetTimeBaseNotValidRef_GreaterThan15</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14443</sourceline>
      <version>1</version>
      <description>
            If EthTSynGlobalTimeDomainId has a value greater than 15 and the StbMTimeBase
            configured in EthTSynSynchronizedTimeBaseRef does not have StbMOffsetTimeBase set
            to a valid reference, an error shall be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01019_Invalid_EthTSyn_Xdm_OfsRefNotValid</srcid><srcstatus/><internalId>2318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_343</srcid><srcstatus/><internalId>1658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1807</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.NoOffset_GreaterThan15</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14461</sourceline>
      <version>1</version>
      <description>
            If EthTSynGlobalTimeDomainId has a value greater than 15 and the StbMOffsetTimeBase configured
            in the StbMTimeBase reffered by the EthTSynSynchronizedTimeBaseRef is not referenced by another
            EthTSynTimeDomain, an error shall be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01020_Invalid_EthTSyn_Xdm_OfsRefNotReferenced</srcid><srcstatus/><internalId>2319</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_347</srcid><srcstatus/><internalId>1659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1808</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.NoOffset_OffsetTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14479</sourceline>
      <version>1</version>
      <description>
            If EthTSynTLVFollowUpOFSSubTLV is enabled for an EthTSynTimeDomain
            which doesn't have an OffsetTimeBase configured an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01018_Invalid_EthTSyn_Xdm_OfsTLV_NoOfs</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_655</srcid><srcstatus/><internalId>1664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1809</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.PB_MaxNoSlaves</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14496</sourceline>
      <version>1</version>
      <description>
            If VariantPostBuild is used and the number of configured slave ports is greater than
            EthTSyNumberOfConfiguredSlaves an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01023_Invalid_EthTSyn_Xdm_PB_MaxNoSlaves</srcid><srcstatus/><internalId>2321</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_190</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1810</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.PB_MaxNoSwt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14513</sourceline>
      <version>1</version>
      <description>
            If VariantPostBuild is used and the number of configured switch ports is greater than
            EthTSynMaxNumberOfSwtPorts an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01024_Invalid_EthTSyn_Xdm_PB_MaxNoSwt</srcid><srcstatus/><internalId>2322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_237</srcid><srcstatus/><internalId>1644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1811</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_Port</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14530</sourceline>
      <version>1</version>
      <description>
            If EthTSynSwitchManagementEthSwitchPortRef is enabled and has a valid reference and the
            referenced EthSwt port has EthSwtPortTimeStampSupport disabled, an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01025_Invalid_EthTSyn_Xdm_EthSwtPortTimeStamp_Disabled_Port</srcid><srcstatus/><internalId>2323</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1412</srcid><srcstatus/><internalId>1674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1812</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_HostPort</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14547</sourceline>
      <version>1</version>
      <description>
            If EthTSynSwitchManagementEthSwitchPortHostRef is enabled and has a valid reference and the
            referenced EthSwt port has EthSwtPortTimeStampSupport disabled, an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01026_Invalid_EthTSyn_Xdm_EthSwtPortTimeStamp_Disabled_HostPort</srcid><srcstatus/><internalId>2324</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_714</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1813</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.EthTSynReceiveSyncFupPairsPeriod_0</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14564</sourceline>
      <version>1</version>
      <description>
            If EthTSynSyncFailedReportError is set to DEM or DET and EthTSynReceiveSyncFupPairsPeriod
            for a EthTSynTimeDomain is equal to 0, an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01027_Invalid_EthTSyn_Xdm_EthTSynReceiveSyncFupPairsPeriod_0</srcid><srcstatus/><internalId>2325</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1213</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1814</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.ComplianceFalse_PTPenabled</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14581</sourceline>
      <version>1</version>
      <description>
            If PTP synchronization mechanism is used the EthTSynMessageCompliance must be set to TRUE.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01030_Invalid_EthTSyn_Xdm_PTPenabled_ComplianceFALSE</srcid><srcstatus/><internalId>2328</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_315</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1815</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.ICVSubTLV_TxLen0</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14597</sourceline>
      <version>1</version>
      <description>
            If EthTSynIcvTxLength is 0 and EthTSynTLVFollowUpICVSubTLV is true an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01035_Invalid_EthTSyn_Xdm_Icv_TxLength_0</srcid><srcstatus/><internalId>2333</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_839</srcid><srcstatus/><internalId>1665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1816</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.DataIdCrc_Master</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14613</sourceline>
      <version>1</version>
      <description>
            If EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED and EthTSynGlobalTimeFollowUpDataIDList is not configured an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01036_Invalid_EthTSyn_Xdm_DataIdCrc_Master</srcid><srcstatus/><internalId>2334</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_595</srcid><srcstatus/><internalId>1663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1817</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.DataIdCrc_Slave</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14629</sourceline>
      <version>1</version>
      <description>
            If EthTSynRxCrcValidated is CRC_VALIDATED or CRC_OPTIONAL and EthTSynGlobalTimeFollowUpDataIDList is not configured an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01037_Invalid_EthTSyn_Xdm_DataIdCrc_Slave</srcid><srcstatus/><internalId>2335</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_969</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1818</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Schema warnings">
    <specobject>
      <id>EthTSyn.EB.XdmCheck_PdelayRespEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14682</sourceline>
      <version>1</version>
      <description>
            A warning shall be generated if EthTSynGlobalTimePdelayRespEnable is set to false
            and no static Pdelay is configured(EthTSynGlobalTimePropagationDelay).
          </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01011_Invalid_EthTSyn_Xdm_PdelayRespEnable</srcid><srcstatus/><internalId>2312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1450</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1819</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.XdmCheck_DelayE2ERespEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14697</sourceline>
      <version>1</version>
      <description>
            A warning shall be generated if EthTSynGlobalTimeDelayE2ERespEnable is set to false
            and no static Delay is configured(EthTSynGlobalTimeDelayE2E).
          </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01031_Invalid_EthTSyn_Xdm_StaticDelayNotConfigured</srcid><srcstatus/><internalId>2329</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_EBParameters.xdm.m4_885</srcid><srcstatus/><internalId>1647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1820</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.Offset_NoOffsetTLV</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14712</sourceline>
      <version>1</version>
      <description>
            If EthTSynTLVFollowUpOFSSubTLV is disabled and the StbMTimeBase
            configured in EthTSynSynchronizedTimeBaseRef is configured as OffsetTimeBase
            in abother StbMTimeBase a warning will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01021_Invalid_EthTSyn_Xdm_OfsRefNoOfsTLV</srcid><srcstatus/><internalId>2320</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1372</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1821</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.NoDataID_Bridge</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14730</sourceline>
      <version>1</version>
      <description>
            If EthTSynGlobalTimeFollowUpDataIDList is not configured for a EthTSynTimeDomain that is configured
            as a bridge, a warning shall be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01028_Invalid_EthTSyn_Xdm_NoDataID_Bridge</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_310</srcid><srcstatus/><internalId>1655</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1822</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.DuplicatedMasters</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14747</sourceline>
      <version>1</version>
      <description>
            If two or more EthTSyn masters have the same EthTSynSynchronizedTimeBaseRef and
            EthTSynGlobalTimeEthIfRef references and also have the EthTSynGlobalTimeDomainId equal,
            a warning shall be reported.
          </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01029_Invalid_EthTSyn_Xdm_DuplicatedMasters</srcid><srcstatus/><internalId>2327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_385</srcid><srcstatus/><internalId>1661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1823</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.UseCalculatedPdelay_Master</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14763</sourceline>
      <version>1</version>
      <description>
            If EthTSynUseCalculatedPdelay is configured and an EthTSynTimeDomain that has EthTsynPortRole
            set to Master is referenced, an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01032_Invalid_EthTSyn_Xdm_UseCalculatedPdelay_Master</srcid><srcstatus/><internalId>2330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1253</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1824</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.UseCalculatedPdelay_Swt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14780</sourceline>
      <version>1</version>
      <description>
            If EthTSynUseCalculatedPdelay is configured and an EthTSynTimeDomain that has Swt ports
            configured is referenced, an error will be reported.
          </description>
      <comment>
          </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01034_Invalid_EthTSyn_Xdm_UseCalculatedPdelay_Swt</srcid><srcstatus/><internalId>2332</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1256</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1825</internalId></specobject>
    <specobject>
      <id>EthTSyn.EB.Xdm.TimeValidation_Pdelay</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/doc/project/design/pdf/EthTSyn_Design-profiled.xml</sourcefile>
      <sourceline>14797</sourceline>
      <version>1</version>
      <description>
            If EthTSynUseCalculatedPdelay is configured and timevalidation is enabled for this port,
            a warning shall be reported.
          </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EthTSyn_GenTest_01033_Invalid_EthTSyn_Xdm_UseCalculatedPdelay_TimeValidation</srcid><srcstatus/><internalId>2331</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EthTSyn_Extension.xdm.m4_1563</srcid><srcstatus/><internalId>1677</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1826</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EthTSyn_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/build/reqm/common_req/EthTSyn_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(EthTSyn.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>766</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1827</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest01_APISyntax</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest01/source/application/EthTSyn_ComTest01.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the existence and syntax of all module specific APIs.
  
Test Object: 
    All APIs, syntax IDs and DET values.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00035.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00036.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00039.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00040</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00040.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00043.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00044.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_CTRL_IDX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_PARAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00330.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00331.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1828</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest02_NoSlaveConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest02/source/application/EthTSyn_ComTest02.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    EthTSyn must compile without no slave configured.
  
Test Object: 
    Configuration without slaves.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured.vc05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>745</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1829</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest01_SwitchConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest03/source/application/EthTSyn_ComTest03.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    EthTSyn must compile with switch enabled.
  
Test Object: 
    Configuration with port switches.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured.vc05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>745</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1830</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest04_NoSlaveConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest04/source/application/EthTSyn_ComTest04.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    P00: EthTSyn must compile with no slave configured, EthTSynTimeValidationSupport enabled and
         EthTSynGlobalTimePdelayRespEnable enabled.
    P01: EthTSyn must compile with no slave configured, EthTSynTimeValidationSupport enabled and
         EthTSynGlobalTimePdelayRespEnable disabled.
    P02: EthTSyn must compile with no slave configured, EthTSynTimeValidationSupport disabled and
         EthTSynGlobalTimePdelayRespEnable enabled.
    P03: EthTSyn must compile with no slave configured, EthTSynTimeValidationSupport disabled and
         EthTSynGlobalTimePdelayRespEnable disabled.
  
Test Object: 
    Configuration with no slave configured.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>741</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured.vc03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>743</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoSlaveConfigured.vc04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>744</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1831</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest05_NoMasterConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest05/source/application/EthTSyn_ComTest05.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    P00: EthTSyn must compile with no master configured, EthTSynTimeValidationSupport enabled and
         EthTSynGlobalTimeTxPdelayReqPeriod value greater than 0.
    P01: EthTSyn must compile with no master configured, EthTSynTimeValidationSupport enabled and
         EthTSynGlobalTimeTxPdelayReqPeriod value equal to 0.
    P02: EthTSyn must compile with no master configured, EthTSynTimeValidationSupport disabled and
         EthTSynGlobalTimeTxPdelayReqPeriod value greater than 0.
    P03: EthTSyn must compile with no master configured, EthTSynTimeValidationSupport disabled and
         EthTSynGlobalTimeTxPdelayReqPeriod value equal to 0.
  
Test Object: 
    Configuration with no master configured.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>737</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>739</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1832</internalId></specobject>
    <specobject>
      <id>EthTSyn_ComTest05_ReliableTxConf</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest05/source/application/EthTSyn_ComTest05.c</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    P00: EthTSyn must compile with EthTSynReliableTxConfirmationSupport set to TRUE.
  
Test Object: 
    Configuration with EthTSynReliableTxConfirmationSupport set.
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>739</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NoMasterConfigured.vc04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1833</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest06</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest06/source/application/EthTSyn_ComTest06.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that EthTSyn compiles when TImeAuth sub-TLV is used
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: 
    01: Call all APIs.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1834</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest07</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest07/source/application/EthTSyn_ComTest07.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that EthTSyn compiles when TImeAuth sub-TLV is used
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: 
    01: Call all APIs.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91001.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_91002.ServiceId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1835</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest_PostBuildSelectable</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTestPostBuildSelectable/source/application/EthTSyn_PostBuild.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case verifies that when PostBuildSelectable is enabled the generated files are the same
    as expected. The expected files have been place in the directory reference and if there is 
    no difference at all between the generated post build configuration files and those from the directory
    reference this test will be successful.
  
Test Object: 
    PostBuildSelectable.
  
Test Precondition: 
   Expected postbuild configuration files have been placed in directory reference.
   Postbuild selectable is enabled. 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1836</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest_Optimisation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest_Optimisation/source/application/EthTSyn_ComTest_Optimisation.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynPBGeneratedFilesCompilation is false, all .c files will be compiled
    independently.
  
Test Object: 
    EthTSynPBGeneratedFilesCompilation
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Compiling: EthTSyn.c
    Compiling: EthTSyn_Cfg.c
    Compiling: EthTSyn_PBcfg.c
    Compiling: EthTSyn_Int01_Lib.c
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynPBGeneratedFilesCompilation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1837</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ComTest_Optimisation_PB</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest_Optimisation_PB/source/application/EthTSyn_ManTest_Optimisation_PB.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynPBGeneratedFilesCompilation is false and Postbuild is used,
    all .c files will be compiled(generated variants too).
  
Test Object: 
    EthTSynPBGeneratedFilesCompilation
  
Test Precondition: 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Compiling: EthTSyn.c
    Compiling: EthTSyn_Cfg.c
    Compiling: EthTSynLeftSensor_PBcfg.c
    Compiling: EthTSynRightSensor_PBcfg.c
    Compiling: EthTSyn_Int01_Lib.c
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynPBGeneratedFilesCompilation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1838</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EthTSyn_CompileTest_SchM</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Compile/IN/EthTSyn_ComTest_SchM/source/application/test_config.h</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test checks that the EthTSyn module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is
   invoked. It further tests that the SchM exclusive area API is
   correctly generated by the RTE generator based on the EthTSyn module's
   generated BSWMD.

Test Object: None.
Test Precondition: None.
Test Execution: 
  Ts5 build environment steps:
    The module configuration generator produces the BSWMD containing
    the information on the required exclusive areas. This information
    is then used by the RTE generator to create the required SchM API
    for these exclusive areas. This implicitly verifies that the BSWMD
    is syntactically and semantically correct. EthTSyn's static code
    makes use of this API (and the respective #defines) thus causing
    compile/link errors if the BSWMD does not contain the correct
    information.

Test Input: 
  Usage of a common ASR configuration having all adjacent ASR modules
  configured.

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1839</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest01070_TimeSecured_CrcSupported_FlagsFalse_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when Crc_CalculateCRC8H2F() is called, EthTSynMessageCompliance is FALSE
    and all the subsequent flags are set to FALSE, Crc_CalculateCRC8H2F() is called with the correct
    parameters.
  
Test Object: 
    Time secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpTimeSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
    - All flags in EthTSynCrcTimeFlagsTxSecured set to FALSE.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(PRS_TS_00099, EthTSyn.SWS_EthTSyn_00096):
        Call Crc_CalculateCRC8H2F() for CRC_Time_0 when EthTSynCrcTimeFlagsTxSecured
        is set to FALSE.
    04: VP(PRS_TS_00099):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue in CRC_Time_0.
    05: VP(PRS_TS_00100):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue in CRC_Time_1.
    06: VP(PRS_TS_00069): Verify that the AUTOSAR TLV header is sent and
        check: tlvType, lengthField, organizationId and organizationSubType.
    07: VP(PRS_TS_00070, PRS_TS_00074):
        Verify that the AUTOSAR sub TLV is sent and check: Type, Length, CRC_Time_Flags,
        CRC_Time_0, CRC_Time_1. The sub TLV must exist and it has to be placed after the
        AUTOSAR header.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1840</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01071_TimeSecured_CrcSupported_FlagsTrue_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when Crc_CalculateCRC8H2F() is called,
    EthTSynMessageCompliance is FALSE and all the subsequent flags in EthTSynCrcTimeFlagsTxSecured
    are set to TRUE, Crc_CalculateCRC8H2F() is called with the correct parameters and that the
    correct AUTOSAR header and sub TLV information is sent on the bus. This test also verifies that
    a Sync frame and a FollowUp frame are sent on the bus before the AUTOSAR header and sub TLV
    are sent.
  
Test Object: 
    Time secured sub TLV
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpTimeSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
    - All flags in EthTSynCrcTimeFlagsTxSecured set to TRUE.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: VP(SWS_EthTSyn_00064): Verify that an AUTOSAR Sync frame is sent by EthTSyn_MainFunction().
        Shall be verified that messageType is 0x10 for the AUTOSAR Sync frame and the domainNumber
        is a value between 0 and 15 equal with the TimeBaseId which is 1 in for this master node.
    03: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    04: VP(PRS_TS_00182, PRS_TS_00184):
        Verify the call to Crc_CalculateCRC8H2F() for CRC_Time_Flags.
    05: VP(PRS_TS_00099, EthTSyn.SWS_EthTSyn_00096):
        Verify for the call to Crc_CalculateCRC8H2F() the rest of the parameters which are
        Crc_DataPtr, Crc_Length, Crc_IsFirstCall and Crc_StartValue8H2F.
    06: VP(PRS_TS_00099): Verify the call to Crc_CalculateCRC8H2F() for
        domainNumber.
    07: VP(PRS_TS_00099): Verify the call to Crc_CalculateCRC8H2F() for
        sourcePortIdentity.
    08: VP(PRS_TS_00099):
        Verify the call to Crc_CalculateCRC8H2F() for the value of preciseOriginTimestamp.
    09: VP(PRS_TS_00099):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue.
    10: VP(PRS_TS_00100): Verify the call to Crc_CalculateCRC8H2F() for
        messageLength.
    11: VP(PRS_TS_00100): Verify the call to Crc_CalculateCRC8H2F() for
        correctionField.
    12: VP(PRS_TS_00100): Verify the call to Crc_CalculateCRC8H2F() for
        sequenceId.
    13: VP(PRS_TS_00100):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue.
    14: VP(PRS_TS_00065_FUp):
        Verify that the follow-up frame is not corrupted by
        the AUTOSAR TLV header and sub TLV data. The message length is checked at offset 2 in
        the next 2 bytes as 76(FUp frame size) + 10(header size) + Sum_of_Sub-TLVs = 91.
        The domainNumber must be a value between 0 and 15 equal with the TimeBaseId.
    15: VP(PRS_TS_00069, PRS_TS_00065_AutosarTLVHeader):
        Verify that the AUTOSAR TLV header is sent and check: tlvType, lengthField, organizationId
        and organizationSubType. The lengthField is calculated as followes 6 + 5(Sum_Sub-TLVs) = 11
        at offset 80 for the case in which only 1 sub TLV is present.
    16: VP(PRS_TS_00065_TimeSecured):
        Verify that the AUTOSAR sub TLV is sent and check: Length, CRC_Time_Flags,
        CRC_Time_0, CRC_Time_1. The sub TLV must exist and it has to be placed after the AUTOSAR
        TLV Header.
    17: VP(PRS_TS_00065_TimeSecured): Verify that the sub TLV type is 0x28
        [Time secured] at offset 87.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_FUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_AutosarTLVHeader</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1841</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01072_TimeSecured_CrcSupported_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when Crc_CalculateCRC8H2F() is called, EthTSynMessageCompliance is FALSE
    and all the subsequent flags in EthTSynCrcTimeFlagsTxSecured are set to TRUE except
    the flags sourcePortIdentity and sequenceId, Crc_CalculateCRC8H2F() is called with the correct
    parameters and the correct AUTOSAR header and sub TLV information is sent on the bus.
  
Test Object: 
    Time secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpTimeSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
    - All flags in EthTSynCrcTimeFlagsTxSecured set to TRUE, except the flags sourcePortIdentity
      and sequenceId.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(PRS_TS_00099, EthTSyn.SWS_EthTSyn_00096):
        Verify the call to Crc_CalculateCRC8H2F() for CRC_Time_Flags.
    04: VP(PRS_TS_00099): Verify the call to Crc_CalculateCRC8H2F() for
        domainNumber.
    05: VP(PRS_TS_00099): Verify the call to Crc_CalculateCRC8H2F() for
        preciseOriginTimestamp.
    06: VP(PRS_TS_00099):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue.
    07: VP(PRS_TS_00100): Verify the call to Crc_CalculateCRC8H2F() for
        messageLength.
    08: VP(PRS_TS_00100): Verify the call to Crc_CalculateCRC8H2F() for
        correctionField.
    09: VP(PRS_TS_00100):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue.
    10: VP(PRS_TS_00069): Verify that the AUTOSAR TLV header is sent and
        check: tlvType, lengthField, organizationId and organizationSubType.
    11: VP(PRS_TS_00070): Verify that the AUTOSAR sub TLV is sent and check:
        Type, Length, CRC_Time_Flags, CRC_Time_0, CRC_Time_1. The sub TLV must exist and it has to
        be placed after the AUTOSAR TLV Header.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1842</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01079_NOT_SECURED_Status_UserDataLen0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if UserDataLength in UserData Sub-TLV is 0, the SubTLV shall be
    excluded from the message.
  
Test Object: 
    UserData sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVUserDataeSubTLV is TRUE.
    - UserDataLength = 0.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(): Verify that UserData Sub-TLV was not included in the message.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1843</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01073_TimeSecured_CrcSupported_NoFollowUpTimeSubTlv_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when EthTSynTLVFollowUpTimeSubTLV is disabled there is no
    CRC calculation, Crc_CalculateCRC8H2F() is not called and no time secured sub TLV is
    transmitted. But for the enabled EthTSynTLVFollowUpStatusSubTLV a status secured sub TLV shall
    be sent and Crc_CalculateCRC8H2F() must be called for Status and DataID.
  
Test Object: 
    Time secured sub TLV.
    Status secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpTimeSubTLV is FALSE.
    - EthTSynTLVFollowUpStatusSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
    - All flags in EthTSynCrcTimeFlagsTxSecured set to FALSE.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(PRS_TS_00074, PRS_TS_00101):
        Verify that Crc_CalculateCRC8H2F() is not called for the time secured sub TLV but it is
        called for the status secured sub TLV for which Status and DataID are checked.
    04: VP(PRS_TS_00069): Verify that the AUTOSAR TLV header is sent and
        check: tlvType, lengthField, organizationId and organizationSubType. The length field is
        calculated by the formula:
        6 + 0(No time secured sub TLV) + 4(Total size of the status secured sub TLV) = 10.
    05: VP(PRS_TS_00074, PRS_TS_00065_StatusSecured):
        Verify that no time secured sub TLV data is sent. A status secured sub TLV must be sent
        instead.
        The status secured sub TLV must be sent without gaps (no empty frames shall exist).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1844</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01075_TimeSecured_CrcValidated_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED the time slave
    shall validate the CRC taking into consideration: messageLength, domainNumber,
    correctionField, sourcePortIdentity and sequenceId. Received CRC values will be equal
    with calculated values and the message will be processed.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - All EthTSynCrcFlagsRxValidated set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00113, PRS_TS_00183,
           PRS_TS_00185): Verify that Crc_CalculateCRC8H2F() was
        called 5 times to calculate Crc_Time_0.
    05: VP(PRS_TS_00114): Verify that Crc_CalculateCRC8H2F() was
        called 4 times to calculate Crc_Time_1.
    06: VP( ): Verify that StbM_BusSetGlobalTime() is called.
        This means that received CRC values will be equal
        with calculated values and the message will be processed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1845</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01076_TimeSecured_CrcValidated_ThreeFlags_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1898</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED the time slave
    shall validate the CRC taking into consideration: messageLength, sourcePortIdentity
    and sequenceId. The received CRC is compared with the calculated CRC and if they are found
    equal the processing of the frame is continued.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - Flags messageLength, sourcePortIdentity and sequenceId set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00113, PRS_TS_00114): Verify that
        Crc_CalculateCRC8H2F() was called 6 times to calculate the CRC for Crc_Time_0
        and Crc_Time_1.
    05: VP(EthTSyn.SWS_EthTSyn_00111): Verify that Crc_CalculateCRC8H2F() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1846</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01098_TimeSecured_CrcIgnored_EqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2060</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_IGNORED and
    EthTSynCrcFlagsRxValidated set to true the time slave shall not validate the CRC calculation.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynRxCrcValidated is set to CRC_IGNORED.
    - EthTSynCrcFlagsRxValidated set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_TimeSecured_Ignored): Verify that
    Crc_CalculateCRC8H2F() was not called and the frame is processed. Crc_CalculateCRC8H2F() must
    not be called because EthTSynRxCrcValidated is set to IGNORED and there is no need to calculate
    the CRC since the frame is processed even if the calculated and received TLVs are not equal.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_TimeSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1847</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01099_TimeSecured_CrcValidated_CrcFlagsFalse_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED and
    EthTSynCrcFlagsRxValidated set to FALSE the time slave shall calculate a CRC without taking
    into consideration the CRC falgs. The calculated CRC will be compared with the received CRC and
    the processing will continue.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynRxCrcValidated is set to CRC_VALIDATED.
    - EthTSynCrcFlagsRxValidated set to FALSE.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00113, PRS_TS_00114):
        Verify that Crc_CalculateCRC8H2F() was called 3 times to calculate the CRC even though the
        flags are set to FALSE.
    05: VP(PRS_TS_00107_TimeSecuredValidated): Verify that the frame is
        processed (the Follow_Up TLV is validated).

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_TimeSecuredValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1848</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01074_TimeSecured_CrcValidated_InvalidTlvType_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2340</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a wrong TLV type in the AUTOSAR TLV header is used the CRC
    is not calculated and the further processing of the frame is stopped.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - Flags messageLength, sourcePortIdentity and sequenceId set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub TLV. Insert wrong data for the
        AUTOSAR header TLV type (tlvType).
    03: Call EthTSyn_RxIndication() with wrong data for the parameter DataPtr
        (only the first byte of tlvType is set with the wrong value, the size of tlvType
        is 2 bytes).
    04: VP(EthTSyn.SWS_EthTSyn_00111): Verify that Crc_CalculateCRC8H2F() was not called.
        No other actions are performed because EthTSyn_RxIndication() was called with wrong
        AUTOSAR header type.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1849</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01100_TimeSecured_InvalidMsgLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the case in which EthTSyn_RxIndication() is called with an invalid length.
    After the call to EthTSyn_RxIndication() no frame processing is expected.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSyn_RxIndication() is called with an invalid length.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub TLV.
    03: Call EthTSyn_RxIndication() with LenByte size smaller than 86:
        (76)ETHTSYN_FUP_AUTOSAR_TLV_HEADER_START_ADDR + (10)ETHTSYN_FUP_AUTOSAR_TLV_HEADER_LENGTH.
        (no sub TLV is detected if EthTSyn_RxIndication() is called with an invalid length).
    04: VP(PRS_TS_00065_TimeSecured): Verify that no action was performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1850</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01077_StatusNotSecured_CrcNotSupported_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if a status not secured sub TLV is sent with the correct data and the TLV
    header length is updated accordingly. The status not secured sub TLV must be transmitted if
    the GLOBAL_TIME_BASE bit was set by StbM and if EthTSynGlobalTimeTxPeriod is not 0
    (EthTSyn will transmit periodic sync frames).
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynGlobalTimeTxPeriod (SyncTxInterval) is not 0.
    - EthTSynTLVFollowUpStatusSubTLV is set to TRUE.
    - EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: Call the EthTSyn_MainFunction() to sent a sync frame.
    02: Call EthTSyn_TxConfirmation() to send a follow up frame.
    03: VP(EthTSyn.SWS_EthTSyn_00202, PRS_TS_00077): Verify that the
        status not secured sub TLV is sent with the correct data.
    04: VP(PRS_TS_00065_StatusNotSecured): Verify that the sub TLV type status
        not secured is sent.
    05: VP(PRS_TS_00094_SyncToGatewaySet): Verify that the status flag is set to
        SyncToSubDomain in the Status element of the SubTlV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094_SyncToGatewaySet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1851</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01078_StatusNotSecured_CrcNotValidated_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2800</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a status not secured sub TLV is received and the SYNC_TO_GATEWAY bit is
    passed to StbM via StbM_BusSetGlobalTime().
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status not secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00106, EthTSyn.SWS_EthTSyn_00129,
           PRS_TS_00107_StatusNotValidated):
        Verify that the SYNC_TO_GATEWAY bit was correctly set and passed to
        StbM_BusSetGlobalTime(), the SYNC_TO_GATEWAY bit is passed to StbM only if there is an
        AUTOSAR TLV in the Follow_Up frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1852</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01079_StatusNotSecured_CrcIgnored_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2939</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is CRC_IGNORED and SYNC_TO_GATEWAY bit is not
    set in the status flag, it will not be forwarded to StbM via StbM_BusSetGlobalTime().
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_StatusNotSecured_Ignored, EthTSyn.SWS_EthTSyn_00129):
        Verify that StbM_BusSetGlobalTime() was called.
    05: VP(PRS_TS_00156_SgwIsNOTSyncToSubDomain): Verify that the
        SYNC_TO_GATEWAY bit in timeBaseStatus is not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_StatusNotSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156_SgwIsNOTSyncToSubDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1853</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01080_StatusNotSecured_SyncToGatewayBitNotSet_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3071</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if SYNC_TO_GATEWAY bit is not set within timeBaseStatus the SGW value
    shall be SyncToGTM.
  
Test Object: 
    EthTSyn_TxConfirmation().
  
Test Precondition: 
    - EthTSynGlobalTimeTxPeriod (SyncTxInterval) is not 0.
    - EthTSynTLVFollowUpStatusSubTLV is set to TRUE.
    - EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: Clear the SYNC_TO_GATEWAY bit before it is used by StbM_GetTimeBaseStatus().
    02: Call the EthTSyn_MainFunction() to sent a sync frame.
    03: Call EthTSyn_TxConfirmation() to send a follow up frame.
    04: VP(PRS_TS_00094_SyncToGatewayNOTSet): Verify that all the transmitted
        data is correct and the SYNC_TO_GATEWAY bit is not set, the SGW value is SyncToGTM in the
        status not secured sub TLV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094_SyncToGatewayNOTSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1854</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01081_StatusNotSecured_InvalidMsgLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3241</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() for the status not secured sub TLV is called
    with a bad length no action is performed.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status not secured sub TLV.
    03: Call EthTSyn_RxIndication() with a bad length.
    04: VP(PRS_TS_00065_StatusNotSecured): Verify that no action is taken since
        EthTSyn_RxIndication() was called with a bad length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1855</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01082_GlobalTimeBaseBitNotSet_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3368</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if GLOBAL_TIME_BASE bit is not set within timeBaseStatus no
    transmission is made.
  
Test Object: 
    EthTSyn_MainFunction().
  
Test Precondition: 
    - EthTSynGlobalTimeTxPeriod (SyncTxInterval) is not 0.
    - EthTSynTLVFollowUpStatusSubTLV is set to TRUE.
    - EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: Clear the GLOBAL_TIME_BASE bit before it is used by StbM_GetTimeBaseStatus().
    02: Call the EthTSyn_MainFunction() to sent a sync frame.
    03: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that no action is taken if the GLOBAL_TIME_BASE bit is not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1856</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01083_GetCurrentTimeFailed_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the call to StbM_GetTimeBaseStatus() fails no further action takes
    place (GLOBAL_TIME_BASE bit within the timeBaseStatus can not be read from StbM).
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynGlobalTimeTxPeriod (SyncTxInterval) is not 0.
    - EthTSynTLVFollowUpStatusSubTLV is set to TRUE.
    - EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: The return value for StbM_GetTimeBaseStatus() must be E_NOT_OK.
    02: Call the EthTSyn_MainFunction() to sent a sync frame.
    03: VP(PRS_TS_00016_TxPeriodZero):
        Verify that no action is taken if the call to StbM_GetTimeBaseStatus() has failed. This means
        that the GLOBAL_TIME_BASE bit within the timeBaseStatus can not be read from StbM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016_TxPeriodZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1857</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01084_TimeStatusDataSecured_CrcSupported_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3508</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that both time secured and status secured sub TLVs are sent in the correct
    way if EthTSynTLVFollowUpTimeSubTLV and EthTSynTLVFollowUpStatusSubTLV are enabled.
  
Test Object: 
    Time secured and status secured sub TLVs.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpTimeSubTLV is TRUE.
    - EthTSynTLVFollowUpStatusSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
    - All flags in EthTSynCrcTimeFlagsTxSecured set to FALSE.
  
Test Execution: 
    01: Clear the SYNC_TO_GATEWAY bit for the status secured sub TLV.
    02: Call the main function in order to transmit a sync frame.
    03: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    04: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the correct length was provided by EthIf_ProvideTxBuffer().
    05: VP(PRS_TS_00101): Verify that Crc_CalculateCRC8H2F() is called for the
        status secured sub TLV (Status and DataID must be calculated in this order).
    06: VP(PRS_TS_00071, PRS_TS_00077): Verify that a status
        secured sub TLV is sent if EthTSynTLVFollowUpStatusSubTLV. The status sub TLV must be
        transmitted immediately after the time secured sub TLV (no gaps must exist).
    07: VP(PRS_TS_00071, PRS_TS_00082): Verify that a userdata
        secured sub TLV is sent if EthTSynTLVFollowUpUserDataSubTLV = TRUE.
        The userdata sub TLV must be transmitted immediately after the status
        secured sub TLV (no gaps must exist).
    08: VP(PRS_TS_00094_SyncToGatewayNOTSet): Verify that if the SYNC_TO_GATEWAY
        bit is cleared the status bit is SyncToGTM for the status secured sub TLV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094_SyncToGatewayNOTSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1858</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01085_TimeStatusUserDataSecured_CrcValidated_EqualCrcRx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3864</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED the time slave
    shall receive a time secured sub TLV , a status secured sub TLV for which Status and
    DataID are considered in this order and also a user data secured.
    Status and DataId for status secured sub TLV ,
    CRC_Time_0, CRC_Time_1 for the time secured sub TLV and for UserData by
    considering the contents of UserDataLength, UserByte_0, UserByte_1,
    UserByte_2 and DataID (in this order), are used to calculate the new CRC,
    and then the new CRC is compared with the received CRC (for status secured , time
    secured and userdata secured sub TLVs) the result of this comparison must be equal so
    the reception can be continued.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - Flags messageLength, sourcePortIdentity and sequenceId set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time secured sub TLV ,a status
        secured sub TLV and a usrdata secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00115, PRS_TS_00107_StatusValidated):
        Verify that the status secured sub TLV is received and the contents of Status and DataID
        are considered in this order.
    05: VP(PRS_TS_00115, PRS_TS_00107_UsrDataValidated):
        Verify that the userdata secured sub TLV is received and the contents UserDataLength,
        UserByte_0, UserByte_1, UserByte_2 and DataID (in this order).
    06: VP(EthTSyn.SWS_EthTSyn_00129,PRS_TS_00156_SgwIsSyncToSubDomain):
        Verify that the message is processed for the status
        secured sub TLV, StbM_BusSetGlobalTime() is called and the SYNC_TO_GATEWAY bit is set in
        timeBaseStatus.
    07: VP(): Verify that the userData was forwarded to StbM via
        StbM_BusSetGlobalTime().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00156_SgwIsSyncToSubDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1859</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01086_StatusSecured_CrcIgnored_EqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_IGNORED the time slave
    does not calculate the CRC, Crc_CalculateCRC8H2F() is not called.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_StatusSecured_Ignored): Verify that the status secured sub
        TLV is received and the CRC is ignored (Crc_CalculateCRC8H2F() is not called).
    05: VP(EthTSyn.SWS_EthTSyn_00129): Verify that the SyncToGateway bit is passed to StbM
        by a vall to StbM_BusSetGlobalTime(). This means that the message is being processed when
        the CRC is equal for the status secured sub TLV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_StatusSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1860</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01087_StatusSecured_CrcValidated_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4301</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED and
    EthTSyn_RxIndication() receives a frame with a CRC which is different from the calculated one,
    the time slave receives the status secured sub TLV for which Status and DataID are considered
    in this order but it will not perform any other action because the CRC check failed.
    Status and DataId are used to calculate the new CRC, and then the new CRC is compared with the
    one received by EthTSyn_RxIndication() but since the two CRCs are not equal the processing is
    stopped.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV.
    03: Call EthTSyn_RxIndication() with a wrong value of the CRC.
    04: VP(PRS_TS_00115): Verify that Crc_CalculateCRC8H2F() was called for the
        status secured sub TLV and the contents of Status and DataID are considered in this order.
        The start value is verified, this value corresponds with the correct value of the CRC.
    05: VP(EthTSyn.SWS_EthTSyn_00129): Verify that no other functions are called because a
        wrong CRC was passed to EthTSyn_RxIndication(). The CRC calculated by the calls to
        Crc_CalculateCRC8H2F() is compared with the CRC passed to EthTSyn_RxIndication() and
        because they don't match the operation is aborted (StbM_BusSetGlobalTime() is not called).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1861</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01088_StatusSecured_CrcValid_InvalidMsgLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED and
    EthTSyn_RxIndication() is called with a wrong length, the remaining length of the message
    is not enough to hold the status secured sub TLV and therefore the reception is aborted.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV.
    03: Call EthTSyn_RxIndication() with the wrong length.
    04: VP(PRS_TS_00065_StatusSecured): Verify that no action is performed when
        a wrong length is passed to EthTSyn_RxIndication().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1862</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01089_StatusSecured_CrcNotValidated_EqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4612</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_NOT_VALIDATED, the status
    secured sub TLV is ignored.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00107_StatusNotValidated): Verify that message processing
        stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1863</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01090_TimeSecured_CrcValidated_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4746</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED and
    EthTSyn_RxIndication() receives a frame with a CRC which is different from the calculated one,
    the time slave receives a time secured sub TLV but it will not perform any other action because
    the CRC check failed.
    Crc_CalculateCRC8H2F() is used to calculate the new CRC for CRC_Time_0 and CRC_Time_1, and then
    the new CRC is compared with the one received by EthTSyn_RxIndication() in bytes 3 (CRC_Time_0)
    and 4 (CRC_Time_1) but since the CRCs are not equal the processing is aborted.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - Flags messageLength, sourcePortIdentity and sequenceId set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub TLV. Insert wrong data
        for the Crc bytes of the sub TLV (CRC_Time_0, CRC_Time_1).
    03: Call EthTSyn_RxIndication() with wrong data for the parameter DataPtr
        (CRC_Time_0 and CRC_Time_1 are not correct).
    04: VP(EthTSyn.SWS_EthTSyn_00129): Verify that no other functions are called because a
        wrong CRC was passed to EthTSyn_RxIndication(). The CRC calculated by the calls to
        Crc_CalculateCRC8H2F() is compared with the CRC passed to EthTSyn_RxIndication() and
        because they don't match the operation is aborted (StbM_BusSetGlobalTime() is not called).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1864</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01091_StatusSecured_CrcNotValidated_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4907</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_NOT_VALIDATED and there is a
    status secured sub TLV which is received with an incorrect CRC, the received CRC is not
    compared with the calculated one and therefore the incorrect CRC is not taken into
    consideration.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV with an invalid CRC.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00107_StatusNotValidated): Verify that the message processing
        stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1865</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01092_TimeSecured_CrcNotValidated_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5031</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the case in which a Time Secured SubTlv is received on a slave with
    CRC_NOT_VALIDATED. No crc will be calculated so no comparison will take place. An unexpected
    frame is processed even though the CRC is CRC_NOT_VALIDATED.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub TLV with incorrect CRCs for
        CRC_Time_0 and CRC_Time_1.
    03: Call EthTSyn_RxIndication()
    04: VP(PRS_TS_00107_TimeNotValidated): Verify that the message processing
        stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_TimeNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1866</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01093_StatusSecured_CrcIgnored_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_IGNORED, the time slave
    does not calculate the CRC, Crc_CalculateCRC8H2F() is not called. The new CRC is not compared
    with the received one because the CRC for the status secured sub TLV is set to CrcIgnored.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV with an invalid CRC.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_StatusSecured_Ignored): Verify that the status secured sub
        TLV is received and the CRC is ignored (Crc_CalculateCRC8H2F() is not called).
    05: VP(EthTSyn.SWS_EthTSyn_00129): Verify that the message is processed even if the CRC
        is not equal for the status secured sub TLV. The SyncToGateway bit is passed to StbM by a
        call to StbM_BusSetGlobalTime().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_StatusSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1867</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01094_TimeSecured_CrcIgnored_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5313</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_IGNORED and
    EthTSynCrcFlagsRxValidated set to true the time slave shall not calculate the CRC
    (the actual value of the received CRC is not considered if the CRC is ignored).
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynRxCrcValidated is set to CRC_IGNORED.
    - EthTSynCrcFlagsRxValidated set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv with a CRC which must not
        match with the not calculated one for Crc_Time_0 and Crc_Time_1.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_TimeSecured_Ignored):
        Verify that Crc_CalculateCRC8H2F() was not called (the CRC is not calculated so both
        received and calculated CRCs are ignored).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_TimeSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1868</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01095_StatusNotSecured_CrcNotSupported_TxPeriodZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that no sync frames are transmitted if EthTSynGlobalTimeTxPeriod is 0.
  
Test Object: 
    EthTSyn_MainFunction()
    EthTSynGlobalTimeTxPeriod.
  
Test Precondition: 
    - EthTSynGlobalTimeTxPeriod (SyncTxInterval) is 0.
  
Test Execution: 
    01: Call the EthTSyn_MainFunction() for a master which has the GlobalTimeTxPeriod equal with 0.
    02: VP(PRS_TS_00016_TxPeriodZero): Verify that no sync frame was
        transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016_TxPeriodZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1869</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01096_StatusSecured_CrcValidated_SyncToGatewayNotSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5508</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the CRC for the status secured frame is validated and the sync
    to gateway bit is not set, the value of this bit is not read from the signal data and the
    sync to gateway value set in the timeBaseStatus of StbM is the default value ZERO.
  
Test Object: 
    EthTSyn_RxIndication()
    SYNC_TO_GATEWAY bit
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.SWS_EthTSyn_00129): Verify that the sync to gateway bit was not passed
        to StbM by the call to StbM_BusSetGlobalTime() since it was not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1870</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01097_StatusSecured_CrcIgnored_SyncToGatewayNotSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the CRC for the status secured sub TLV is set to IGNORED and
    the sync to gateway bit is not set, the value of this bit is not read from the signal data and
    the sync to gateway value set in the timeBaseStatus of StbM is the default value ZERO.
  
Test Object: 
    EthTSyn_RxIndication()
    SYNC_TO_GATEWAY bit
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.SWS_EthTSyn_00129): Verify that the sync to gateway bit was not passed
        to StbM by the call to StbM_BusSetGlobalTime() since it was not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1871</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01101_TimeSecured_CrcValidated_InvalidSubTlvLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5780</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED and
    EthTSyn_RxIndication() is called with a wrong length, the remaining length of the message
    is not enough to hold the time secured sub TLV and therefore the reception is aborted.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time secured sub TLV.
    03: Call EthTSyn_RxIndication() with the wrong length.
    04: VP(PRS_TS_00065_TimeSecured): Verify that no action is performed when
        a wrong length is passed to EthTSyn_RxIndication().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1872</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01102_StatusNotSecured_CrcValidated_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5911</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a status not secured sub TLV is received but
    EthTSynCrcFlagsRxValidated is CRC_VALIDATED, the status not secured sub TLV is not verified by
    EthTSyn and it's status information is not added to the final processed frame
    (the SYNC_TO_GATEWAY bit is ignored even though it was set before in the received status not
    secured sub TLV).
  
Test Object: 
    EthTSyn_RxIndication()
    SYNC_TO_GATEWAY bit
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - the SYNC_TO_GATEWAY_BIT bit is set in the received status not secured sub TLV.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status not secured sub TLV with a
        set SYNC_TO_GATEWAY bit in it's status byte.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00107_StatusNotValidated): Verify that message processing
        stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_StatusNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1873</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01103_TimeSecuredAndStatusSecured_CrcValid_InvalidSubTlvType</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6047</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a sub TLV (a time secured sub TLV in this case) is received with
    a sub TLV type that can not be recognized at receiver side, it shall be ignored and the next
    subsquent sub TLV (a status secured sub TLV in the context of this test) is evaluated.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - Flags messageLength, sourcePortIdentity and sequenceId set to true.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time secured sub TLV with an incorrect sub
        TLV type and a status secured sub TLV with all the correct data.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00118,EthTSyn.EB.AutosarSubTLV.UnknownSubTLVType):
        Verify that between the two received sub TLVs
        (time secured sub TLV and status secured sub TLV) only the second sub TLV (the status
        secured sub TLV) is evaluated (Crc_CalculateCRC8H2F() is expected to be called 2 times
        for the status secured sub TLV).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.UnknownSubTLVType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1874</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01122_UnknownSubTLVType_Combined</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6263</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if SyncFUp that contains an unknown Sub-TLV inbetween a TimeSecured and
    a StatusSecured Sub-TLV, the unknown Sub-TLV shall be ignored and the remaining ones processed.
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    - SyncFUp frame received contains one TimeSecured, one Unknown and one StatusSecured Sub-TLV.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time secured Sub-TLV, an unknown Sub-TLV
        and a status secured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(): Verify that both Sub-TLVs, before and after the unknown one, were processed
        (Crc_CalculateCRC8H2F() is expected to be called 5 times for TimeSecured and 2 times for StatusSecured)
        and StbM_BusSetGlobalTime() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.UnknownSubTLVType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1875</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01104_TimeSecured_CrcValidated_InvalidSubTlvLengthRx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6470</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to FALSE, and one Sub-TLV has an
    incorrect length (the time secured sub TLV in this case), the message processing shall be
    stopped and the message shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - The time secured sub TLV is received with an incorrect length.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time secured sub TLV with an incorrect length
        and a status secured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.EB.AutosarSubTLV.IncorrectLength): Verify that no message processing takes place
        and the message is dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1876</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01105_StatusSecured_CrcValidated_InvalidSubTlvLengthRx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to FALSE, and one Sub-TLV has an
    incorrect length (the status secured sub TLV in this case), the message processing shall be
    stopped and the message shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - The status secured sub TLV is received with an incorrect length.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time secured sub TLV and a status secured sub
        TLV with an incorrect length.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.EB.AutosarSubTLV.IncorrectLength): Verify that no message processing takes place
        and the message is dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1877</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01106_StatusNotSecured_CrcNotValidated_InvalidSubTlvLengthRx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to FALSE, and one Sub-TLV has an
    incorrect length (the status not secured sub TLV in this case), the message processing shall be
    stopped and the message shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
    - The status not secured sub TLV is received with an incorrect length.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status not secured sub TLV with an
        incorrect length.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.EB.AutosarSubTLV.IncorrectLength): Verify that no message processing takes place
        and the message is dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1878</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01107_UserDataSecured_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6945</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that CRC is calculated and Crc_CalculateCRC8H2F()
    is called with the correct parameters , the correct AUTOSAR header
    and sub TLV information is sent on the bus.
  
Test Object: 
    UserData secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpUserDataSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(PRS_TS_00079):
        Verify that a Follow_Up was sent.
    04: VP(PRS_TS_00102,PRS_TS_00078,
        EthTSyn.SWS_EthTSyn_00080):
        Verify the call to Crc_CalculateCRC8H2F() for UserData.
    05: VP(PRS_TS_00102):
        Verify the call to Crc_CalculateCRC8H2F() for the value of DataID which is taken from
        the configuration parameter EthTSynGlobalTimeFollowUpDataIDListValue.
    06: VP(PRS_TS_00069): Verify that the AUTOSAR TLV header is sent and
        check: tlvType, lengthField, organizationId and organizationSubType.
    07: VP(PRS_TS_00065_UserDataSecured,
        PRS_TS_00093_UserDataSecured):
        Verify that the AUTOSAR sub TLV is sent and check: Type, Length, UserDataLength,
        UserByte_0, UserByte_1,UserByte_2 and CRC_UserData. The sub TLV must exist and it has to
        be placed after the AUTOSAR TLV Header.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_UserDataSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1879</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01108_UserDataSecuredLength_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7158</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if userDataLength is set to 0, UserData shall be excluded from the
    message.
  
Test Object: 
    UserData secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpUserDataSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED.
    - UserDataLength = 0
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(EthTSyn.SWS_EthTSyn_00153, PRS_TS_00068):
        Verify that AUTOSAR TLV was not written in the Follow Up frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1880</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01109_UserDataSecured_CrcValidated_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED
    the Time Slave shall validate the CRC for CRC_UserData by
    considering the contents of UserDataLength, UserByte_0, UserByte_1,
    UserByte_2 and DataID (in this order).
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrData sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00116_Validated): Verify that Crc_CalculateCRC8H2F() was
        called 5 times to calculate CRC, with the right parameters
    05: VP(PRS_TS_00107_UsrDataValidated):
        Verify that StbM_BusSetGlobalTime() is called. This means that received CRC value will be equal
        with calculated value and the message will be processed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00116_Validated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1881</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01110_UserDataSecured_CrcValidated_NotEqualCrc_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7464</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_VALIDATED and
    EthTSyn_RxIndication() receives a frame with a CRC which is different from the
    calculated one, the time slave receives a usrData secured sub TLV but it
    will not perform any other action because the CRC check failed.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrData sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00107_UsrDataValidated):
        Verify that calculated CRC is not equal with the expected one,
        and that no other functions are called because a
        wrong CRC was passed to EthTSyn_RxIndication().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1882</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01111_UserDataSecured_CrcNotValidated_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7620</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test verifies that if a userData not secured sub TLV is received but
   EthTSynCrcFlagsRxValidated is CRC_NOT_VALIDATED, the userData not secured sub TLV
   is not verified by EthTSyn and it's userData information is not added to message
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrDataSecured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00107_UsrDataValidated,
     	EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED):
        Verify that Crc_CalculateCRC8H2F() was not called (CRC not calculated)
        and that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_NOT_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1883</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01112_UserDataSecured_CrcValidated_InvalidLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to FALSE, and one Sub-TLV has an
    incorrect length (the UserDataSecured sub TLV in this case), the message processing shall be
    stopped and the message shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
    - The usrData secured sub TLV is received with an incorrect length.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrDataSecured sub TLV
        with an incorrect length.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.EB.AutosarSubTLV.IncorrectLength): Verify that no message processing takes place
        and the message is dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1884</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01113_UserDataSecured_CrcValidated_InvalidMsgLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7908</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() for the UserDataSecured sub TLV is called
    with a bad length no action is performed.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a userDataSecured sub TLV
        with an incorrect length.
    03: Call EthTSyn_RxIndication() with a bad length.
    04: VP(PRS_TS_00065_UserDataSecured): Verify that no action is taken since
        EthTSyn_RxIndication() was called with a bad length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1885</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01114_UserDataSecured_CrcIgnored_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_IGNORED
    the Time Slave shall ignore the CRC.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrDataSecured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_UserDataSecured_Ignored):
        Verify that Crc_CalculateCRC8H2F() was not called (CRC not calculated)
    05: VP(PRS_TS_00108_UserDataSecured_Ignored, PRS_TS_00081):
        Verify that StbM_BusSetGlobalTime() is called. This means that the message will be processed without calculated
        CRC.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_UserDataSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1886</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01115_UserDataNotSecured_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that CRC is not calculated for userData if
    EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED.
    The correct AUTOSAR header and sub TLV information are sent on the bus.
  
Test Object: 
    UserData secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpUserDataSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(PRS_TS_00079,PRS_TS_00078):
        Verify that a Follow_Up was sent.
    04: VP(PRS_TS_00065_UserDataNotSecured):
        Verify that Crc_CalculateCRC8H2F() is not called.
    05: VP(PRS_TS_00069):
        Verify that the AUTOSAR TLV header is sent.
    06: VP(PRS_TS_00093_UserDataNotSecured):
        Verify that the AUTOSAR sub TLV is sent and check: Type, Length, UserDataLength,
        UserByte_0, UserByte_1,UserByte_2 and CRC_UserData. The sub TLV must exist and it has to
        be placed after the AUTOSAR TLV Header.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1887</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01121_UserDataNotSecured_Tx_Length0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8377</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that CRC is not calculated for userData if
    EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED.
    The correct AUTOSAR header and sub TLV information are sent on the bus.
  
Test Object: 
    UserData secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpUserDataSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(PRS_TS_00079,PRS_TS_00078):
        Verify that a Follow_Up was sent.
    04: VP(PRS_TS_00065_UserDataNotSecured):
        Verify that Crc_CalculateCRC8H2F() is not called.
    05: VP(PRS_TS_00069):
        Verify that the AUTOSAR TLV header is sent.
    06: VP(PRS_TS_00093_UserDataNotSecured):
        Verify that the AUTOSAR sub TLV is sent and check: Type, Length, UserDataLength,
        UserByte_0, UserByte_1,UserByte_2 and CRC_UserData. The sub TLV must exist and it has to
        be placed after the AUTOSAR TLV Header.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1888</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01116_UserDataNotSecured_CrcIgnored_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8530</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynRxCrcValidated is set to CRC_IGNORED
    the Time Slave shall ignore the CRC.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrDataNotSecured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00108_UserDataNotSecured_Ignored):
        Verify that Crc_CalculateCRC8H2F() was not called (CRC not calculated)
    05: VP(PRS_TS_00107_UsrDataNotValidated, PRS_TS_00081):
        Verify that StbM_BusSetGlobalTime() is called. This means that the message will be processed without calculated
        CRC.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_UserDataNotSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1889</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01117_UserDataNotSecured_CrcValidated_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test verifies that if a userData not secured sub TLV is received but
   EthTSynCrcFlagsRxValidated is CRC_VALIDATED, the userData not secured sub TLV
   is not verified by EthTSyn and it's UserDataNotSecured information is not added to
   the final processed frame.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a usrDataNotSecured sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00107_UsrDataNotValidated,
        EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED):
        Verify that Crc_CalculateCRC8H2F() was not called (CRC not calculated)
        and that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_UsrDataNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1890</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01118_UserDataNotSecuredLength_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8804</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if userDataLength is set to 0,
    UserData shall be excluded from the message.
  
Test Object: 
    UserData not secured sub TLV.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpUserDataSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured is CRC_NOT_SUPPORTED.
    - UserDataLength = 0
  
Test Execution: 
    01: Call the main function in order to transmit a sync frame.
    02: Call EthTSyn_TxConfirmation() in order to transmit a sync follow up frame.
    03: VP(EthTSyn.SWS_EthTSyn_00153, PRS_TS_00068):
        Verify that AUTOSAR TLV was not written in the Follow Up frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1891</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01119_UserDataNotSecured_CrcIgnored_InvalidLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8948</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to FALSE, and one Sub-TLV has an
    incorrect length (the UserDataNotSecured sub TLV in this case),
    the message processing shall be stopped and the message shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
    - The usrData secured sub TLV is received with an incorrect length.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a userDataNotSecured sub TLV
        with an incorrect length.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.EB.AutosarSubTLV.IncorrectLength): Verify that no message processing takes place
        and the message is dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1892</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01120_UserDataNotSecured_CrcIgnored_InvalidMsgLength_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9089</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() for the UserDataNotSecured sub TLV is called
    with a bad length no action is performed.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a userDataNotSecured sub TLV
        with an incorrect length.
    03: Call EthTSyn_RxIndication() with a bad length.
    04: VP(PRS_TS_00065_UserDataNotSecured): Verify that no action is taken since
        EthTSyn_RxIndication() was called with a bad length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_UserDataNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1893</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01121_InvalidSeqNr_SyncFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the sequence number in the received sync follow up frame doesn't
    match the sequenceId of the corresponding sync frame, the follow up shall be discarded and no
    further action shall take place.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - SeqNr in received SyncFUp frame = 20.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that has the sequence id = 20.
    03: Call EthTSyn_RxIndication() to receive the sync follow up message.
    04: VP(PRS_TS_00113): Verify that correct DataId was used to calculate CRC,
        while using SeqNr greater than 16.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1894</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01122_ImmediateTimeSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9356</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynImmediateTimeSync is set to true, the master shall transmit a sync frame
    in the fist EthTSyn_MainFunction() call and shall try again after EthTSynCyclicMsgResumeTime
    elapses.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - EthTSynImmediateTimeSync set to true.
    - EthTSynCyclicMsgResumeTime set to 0.05.
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(EthTSyn.SWS_EthTSyn_00134):
        Verify that StbM_GetTimeBaseUpdateCounter() was called.
    03: VP(): Verify that StbM_GetTimeBaseStatus() was called.
    04: VP(): Verify that StbM_BusGetCurrentTime() was called.
    05: VP(EthTSyn.SWS_EthTSyn_00135): Verify that the sync frame was transmitted.
        In case of immediate transmission, StbM_GetTimeBaseUpdateCounter(), StbM_GetTimeBaseStatus() and
        StbM_BusGetCurrentTime() should be called before transmitting the sync frame.
    06: Call EthTSyn_TxConfirmation() for the transmitted sync frame.
    07: Call EthTSyn_MainFunction() to transmit the fup frame.
    08: VP(EthTSyn.SWS_EthTSyn_00135): Verify that the sync fup frame was transmitted with
        the expected sub tlvs.
    09: Call EthTSyn_MainFunction() 5 times(EthTSynCyclicMsgResumeTime/MF period).
    10: VP(EthTSyn.SWS_EthTSyn_00136, EthTSyn.SWS_EthTSyn_00137.1,
           EthTSyn.SWS_EthTSyn_00137.2, EthTSyn.SWS_EthTSyn_00139):
        Verify that a new sync frame was transmitted. Only StbM_GetTimeBaseStatus() and
        StbM_BusGetCurrentTime() are called before performing a non immediate synchronization.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1895</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01123_ImmediateTimeSync_CounterNotUpdated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9589</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynImmediateTimeSync is set to true, the master shall try and transmit a
    sync frame in the fist EthTSyn_MainFunction() call. Since TimeBaseUpdateCounter is not updated,
    the sync message will not be sent in this EthTSyn_MainFunction().
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - EthTSynImmediateTimeSync set to true.
    - EthTSynCyclicMsgResumeTime set to 0.05.
    - TimeBaseUpdateCounter not updated.
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(EthTSyn.SWS_EthTSyn_00134):
        Verify that StbM_GetTimeBaseUpdateCounter() was called.
    03: VP(): Verify that a sync frame was transmitted.
    04: Call EthTSyn_MainFunction() enough times to elapse EthTSynCyclicMsgResumeTime.
    05: VP(EthTSyn.SWS_EthTSyn_00139):
        Verify that no sync frame was transmitted since EthTSynCyclicMsgResumeTime wasn't set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1896</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01123_ImmediateTimeSync_BusGetCurrentTime_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9719</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynImmediateTimeSync is set to true and if StbM_BusGetCurrentTime()
     returns E_NOT_OK, no sync frame is transmitted.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - EthTSynImmediateTimeSync set to true.
    - EthTSynCyclicMsgResumeTime set to 0.05.
  
Test Execution: 
    01: Set StbM_BusGetCurrentTime() to return E_NOT_OK.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that StbM_GetTimeBaseUpdateCounter(), StbM_GetTimeBaseStatus()
        and StbM_BusGetCurrentTime() are called for immediate transmission.
    04: VP(): Verify that no sync frame was transmitted.
    05: Set StbM_BusGetCurrentTime() to return E_OK and Call EthTSyn_MainFunction().
    06: VP(): Verify that sync frame was transmitted for immediate transmission.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BusGetCurrentTime_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1897</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01124_ImmediateTimeSync_StatusNotSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9825</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynImmediateTimeSync is set to true, the master shall try to transmit a
    sync frame in the fist EthTSyn_MainFunction() call. Since GLOBAL_TIME_BASE is not set within
    the TimeBaseStatus, the sync message will not be sent in this EthTSyn_MainFunction().
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - EthTSynImmediateTimeSync set to true.
    - EthTSynCyclicMsgResumeTime set to 0.05.
    - GLOBAL_TIME_BASE is not set within the TimeBaseStatus.
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(): Verify that StbM_GetTimeBaseUpdateCounter() was called.
    03: VP(EthTSyn.SWS_EthTSyn_00135):
        Verify that StbM_GetTimeBaseStatus() was called to retrieve the time base status.
    04: VP(): Verify that a sync frame was transmitted.
    05: Call EthTSyn_MainFunction() enough times to elapse EthTSynCyclicMsgResumeTime.
    06: VP(EthTSyn.SWS_EthTSyn_00139):
        Verify that no sync frame was transmitted since EthTSynCyclicMsgResumeTime wasn't set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1898</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01125_Crc_Swt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9927</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends time synchronization frames and FuP frames
    on all switch ports. Verify that CRC is calculated and sent correctly on switch ports.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the sync frame on host port and on all switch ports.
    02: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    03: VP(PRS_TS_00065_StatusSecured):
        Verify that Crc_CalculateCRC8H2F() was called for status secured SubTLV for sync FUP
        frame on first port switch.
    04: VP(PRS_TS_00065_StatusSecured):
        Verify that Crc_CalculateCRC8H2F() was called for status secured SubTLV for sync FUP
        frame on second port switch.
    05: VP(PRS_TS_00065_StatusSecured):
        Verify that Crc_CalculateCRC8H2F() was called for status secured SubTLV for sync FUP
        frame on third port switch.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1899</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01125_Crc_Swt_TimeOffsetSubTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends time synchronization frames and FuP frames
    on all switch ports. Verify that CRC is calculated and sent correctly on switch ports.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the sync frame on host port and on all switch ports.
    02: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    03: VP(PRS_TS_00065_TimeSecured):
        Verify that Crc_CalculateCRC8H2F() was called for time secured SubTLV for first sync FUP
        frame.
    04: VP(PRS_TS_00065_OFSSecured): Verify that StbM_GetOffset() was called for each configured offsetTimeBase.
    05: VP(PRS_TS_00065_OFSSecured):
        Verify that Crc_CalculateCRC8H2F() was called 9 times for Offset SubTLV for first sync FUP
        frame.
    06: VP(EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts):
        Verify that EthSwt_PtpTransmit() was called to transmit the Sync Fup on the first port.
    07: VP(PRS_TS_00065_TimeSecured):
        Verify that Crc_CalculateCRC8H2F() was called for time secured SubTLV for first sync FUP
        frame.
    08: VP(PRS_TS_00065_OFSSecured): Verify that StbM_GetOffset() was called for each configured offsetTimeBase..
    09: VP(PRS_TS_00065_OFSSecured):
        Verify that Crc_CalculateCRC8H2F() was called 9 times for Offset SubTLV for first sync FUP
        frame.
    10: VP(EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts):
        Verify that EthSwt_PtpTransmit() was called to transmit the Sync Fup on the second port.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_OFSSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1900</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01126_Crc_Swt_TimeSubTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10521</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends time synchronization frames and FuP frames
    on all switch ports. Verify that ns fractional is set according to the
    SwitchIdx(!=0) and PortIdx(!=0) for sync and sync FUP.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
  &lt;execution&gt;
    01: Call EthTSyn_MainFunction() to transmit the sync frame on host port.
    02: VP(EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField):
        Verify that ns fractional is set according to the switch idx and port id
        for sync frame sent on host port.
    03: Call EthTSyn_MainFunction() to transmit the sync frame on switch port.
    04: VP(EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField):
        Verify that ns fractional is set according to the switch idx and port id
        for sync frame sent on switch port.
    05: Call EthTSyn_MainFunction() to transmit the Fup sync frame on switch port.
    06: VP(EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField):
        Verify that ns fractional is set according to the switch idx and port id
        for FuP sync frame sent on switch port.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPortIdx.StoredInCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1901</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01128_ImmediateSwtTimeSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10717</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynImmediateTimeSync is set to true, the master shall transmit a swt sync
    frame in the first EthTSyn_MainFunction() call and shall try again after
    EthTSynCyclicMsgResumeTime elapses.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - EthTSynImmediateTimeSync set to true.
    - EthTSynCyclicMsgResumeTime set to 0.1.
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(EthTSyn.SWS_EthTSyn_00134):
        Verify that StbM_GetTimeBaseUpdateCounter() was called.
    03: VP(): Verify that StbM_GetTimeBaseStatus() was called.
    04: VP(): Verify that StbM_BusGetCurrentTime() was called.
    05: VP(EthTSyn.SWS_EthTSyn_00135): Verify that the sync frame was transmitted.
    06: Call EthTSyn_MainFunction() 10 times(EthTSynCyclicMsgResumeTime/MF period).
    07: VP(EthTSyn.SWS_EthTSyn_00136, EthTSyn.SWS_EthTSyn_00137.1,
           EthTSyn.SWS_EthTSyn_00137.2, EthTSyn.SWS_EthTSyn_00139):
        Verify that a new sync frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1902</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01129_EthSwt_Return_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10863</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if any call of EthSwt_ProvideTxBuffer() while transmitting a immediate
    sync frame, returns other value than E_OK or BUFREQ_OK, the immediate sync frame
    will not be transmitted.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - EthTSynImmediateTimeSync set to true.
    - EthTSynCyclicMsgResumeTime set to 0.1.
  
Test Execution: 
    01: Set return value of EthSwt_ProvideTxBuffer() to BUFREQ_NOT_OK.
        Call EthTSyn_MainFunction().
    02: VP(EthTSyn.EB.EthSwt_Return_NotOk):
        Verify that the immediate sync frame is not transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1903</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01130_SwtProvideTxBuffer_NULLPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthSwt_ProvideTxBuffer() returns the buffer as NULL_PTR, the transmission shall
    stop.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Set EthSwt_ProvideTxBuffer() stub to return BufPtr NULL_PTR.
    02: Call EthTSyn_MainFunction() to begin transmission.
    03: VP(): Verify that EthSwt_ProvideTxBuffer() was called.
    04: VP(): Verify that the processing stopped and no further function was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ProvideTxBuffer.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1904</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01125_Crc_Swt_UserDataLength_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends time synchronization frames and FuP frames
    on all switch ports. Verify that CRC is calculated and sent correctly on switch ports.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the sync frame on host port and on all switch ports.
    02: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    03: VP(PRS_TS_00065_StatusSecured):
        Verify that Crc_CalculateCRC8H2F() was called for status secured SubTLV for sync FUP
        frame on first port switch.
    04: VP(PRS_TS_00065_StatusSecured):
        Verify that Crc_CalculateCRC8H2F() was called for status secured SubTLV for sync FUP
        frame on second port switch.
    05: VP(PRS_TS_00065_StatusSecured):
        Verify that Crc_CalculateCRC8H2F() was called for status secured SubTLV for sync FUP
        frame on third port switch.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_StatusSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1905</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01219_OfsSecured_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynTLVFollowUpOFSSubTLV to true and EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED
    the time master shall send in the SyncFollowUp frame a Offset Secured Sub-TLV.
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynTLVFollowUpOFSSubTLV = true.
    EthTSynGlobalTimeTxCrcSecured = CRC_SUPPORTED.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Sync frame.
    02: Call EthTSyn_TxConfirmation() to confirm the Sync frame.
    03: Call EthTSyn_MainFunction() to transmit the SyncFollowUp frame.
    04: VP(): Verify that EthIf_ProvideTxBuffer() was called with LenByte set to size of
        FollowUp frame + AUTOSAR TLV header + Offset Sub-TLV.
    05: VP(PRS_TS_00089, PRS_TS_00095):
        Verify that StbM_GetOffset() was called to get the offset.
    06: VP(PRS_TS_00103): Verify that Crc_CalculateCRC8H2F() was called 9 times,
        for OfsTimeDomain, OfsTimeSec, OfsTimeNSec, Status, UserDataLength,
        UserByte_0, UserByte_1, UserByte_2 and DataID.
    07: VP(): Verify that EthIf_Transmit() was called to transmit the SyncFollowUp frame.
    08: VP(): Verify that the AUTOSAR TLV header is as expected.
    09: VP(PRS_TS_00065_OFSSecured, PRS_TS_00084, PRS_TS_00086, PRS_TS_00089,
        PRS_TS_00095, PRS_TS_00093_OFSSecured):
        Verify that the Offset Sub-TLV is as expected.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_OFSSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_OFSSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1906</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01220_GetOffset_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11584</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynTLVFollowUpOFSSubTLV to true, EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED
    and StbM_GetOffset() returns E_NOT_OK while processing the Offset Sub-TLV, the
    SyncFollowUp frame shall be transmitted without the Offset Sub-TLV.
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynTLVFollowUpOFSSubTLV = true.
    EthTSynGlobalTimeTxCrcSecured = CRC_SUPPORTED.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Sync frame.
    02: Call EthTSyn_TxConfirmation() to confirm the Sync frame.
    03: Set StbM_GetOffset() to return E_NOT_OK.
    04: Call EthTSyn_MainFunction() to transmit the SyncFollowUp frame.
    05: VP(): Verify that StbM_GetOffset() was called to get the offset.
    06: VP(): Verify that EthIf_Transmit() was called to transmit the SyncFollowUp frame.
    07: VP(EthTSyn.EB.OffsetSubTlv_GetOffset_NOK):
        Verify that the Offset Sub-TLV is not present in the AUTOSAR TLV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.OffsetSubTlv_GetOffset_NOK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1907</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01254_GetOffset_NOK_All</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11917</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynTLVFollowUpOFSSubTLV to true, EthTSynGlobalTimeTxCrcSecured is CRC_SUPPORTED
    and StbM_GetOffset() returns E_NOT_OK for all 3 configured offsetTimeDomains, EthTSyn shall
    transmit a 76 bytes SyncFUp frame.
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynTLVFollowUpOFSSubTLV = true.
    EthTSynGlobalTimeTxCrcSecured = CRC_SUPPORTED.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Sync frame.
    02: Call EthTSyn_TxConfirmation() to confirm the Sync frame.
    03: Set StbM_GetOffset() to return E_NOT_OK for all 3 OffsetTimeDomains.
    04: Call EthTSyn_MainFunction() to transmit the SyncFollowUp frame.
    05: VP(): Verify that StbM_GetOffset() was called to get the offset 3 times.
    06: VP(): Verify that EthIf_Transmit() was called to transmit the SyncFollowUp frame.
    07: VP(EthTSyn.EB.OffsetSubTlv_GetOffset_NOK):
        Verify that no Offset Sub-TLV is not present in the AUTOSAR TLV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.OffsetSubTlv_GetOffset_NOK</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1908</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01221_OfsSecured_NotValidated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_NOT_VALIDATED and the slave receives a SyncFollowUp frame that
    contains an OffsetSecured Sub-TLV, the frame shall be dropped and nothing shall be called
    after EthTSyn_RxIndication().
  
Test Object: 
    Offset Secured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynRxCrcValidated = CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00119_Sub_TlvType, EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED):
        Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_Sub_TlvType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1909</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01222_OfsNotSecured_NotValidated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12322</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_NOT_VALIDATED and the slave receives a SyncFollowUp frame
    that contains an OffsetNotSecured Sub-TLV, the frame shall be processed and
    StbM_BusSetGlobalTime() shall be called twice (once for the TimeDomain and once for
    the Offset TimeDomain) with updated GlobalTime and UserData.
  
Test Object: 
    Offset Not Secured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynCrcFlagsRxValidated is set to CRC_NOT_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a OffsetNotSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(EthTSyn.EB.NanosecondsLimit.vc06):
        Verify that StbM_BusSetGlobalTime() was called with DomainId and updated GlobalTime.
    05: VP(PRS_TS_00107_OFSNotValidated, EthTSyn.EB.NanosecondsLimit.vc05
           PRS_TS_00065_OFSNotSecured, PRS_TS_00088):
        Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId and updated
        LocalTime and UserData.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_OFSNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_OFSNotValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>750</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc06</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>751</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1910</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01223_OfsSecured_WrongTLVLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false
    and the slave receives a SyncFollowUp frame that contains
    an OffsetSecured Sub-TLV with the Length different than 19, the frame shall be dropped
    and nothing shall be called after EthTSyn_RxIndication().
  
Test Object: 
    Offset Secured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with wrong length.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1911</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01224_OfsNotSecured_WrongTLVLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12663</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false
    and the slave receives a SyncFollowUp frame that contains
    an OffsetNotSecured Sub-TLV with the Length different than 19, the frame shall be dropped
    and nothing shall be called after EthTSyn_RxIndication().
  
Test Object: 
    Offset Not Secured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a OffsetNotSecured Sub-TLV with wrong length.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1912</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01225_OfsSecured_IncorrectFUpLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false
    and the slave receives a SyncFollowUp frame that contains
    an OffsetSecured Sub-TLV and the SyncFollowUp frame size
    is smaller than 105(SyncFUp frame - 76 + AUTOSAR TLV Header - 10 + Offset Sub-TLV - 19),
    the frame shall be dropped and nothing shall be called after EthTSyn_RxIndication().
  
Test Object: 
    Offset Secured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a OffsetSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() using a lengths smaller than 105 bytes.
    04: VP(): Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1913</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01226_OfsNotSecured_IncorrectFUpLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12957</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false
    and the slave receives a SyncFollowUp frame that contains
    an OffsetNotSecured Sub-TLV and the SyncFollowUp frame size
    is smaller than 105(SyncFUp frame: 76 + AUTOSAR TLV Header: 10 + Offset Sub-TLV: 19),
    the frame shall be dropped and nothing shall be called after EthTSyn_RxIndication().
  
Test Object: 
    OffSet Not Secured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a OffsetNotSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() using a lengths smaller than 105 bytes.
    04: VP(): Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1914</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01227_OfsNotSecured_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynTLVFollowUpOFSSubTLV to true and EthTSynGlobalTimeTxCrcSecured is CRC_NOT_SUPPORTED
    the time master shall send in the SyncFollowUp frame a Offset NotSecured Sub-TLV(CRC byte = 0).
  
Test Object: 
    OffsetNotSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynTLVFollowUpOFSSubTLV = true.
    EthTSynGlobalTimeTxCrcSecured = CRC_NOT_SUPPORTED.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Sync frame.
    02: Call EthTSyn_TxConfirmation() to confirm the Sync frame.
    03: Call EthTSyn_MainFunction() to transmit the SyncFollowUp frame.
    04: VP(): Verify that EthIf_ProvideTxBuffer() was called with LenByte set to size of
        FollowUp frame + AUTOSAR TLV header + Offset Sub-TLV.
    05: VP(EthTSyn.SWS_EthTSyn_00087):
        Verify that StbM_GetOffset() was called with the right Offset TimeDomainID.
    06: VP(): Verify that Crc_CalculateCRC8H2F(0 was not called.
    07: VP(): Verify that EthIf_Transmit() was called to transmit the SyncFollowUp frame.
    08: VP(PRS_TS_00002): Verify that the default MAC address was used.
    09: VP():
        Verify that the AUTOSAR TLV header is as expected.
    10: VP(PRS_TS_00065_OFSNotSecured, EthTSyn.SWS_EthTSyn_00087,
        PRS_TS_00093_OFSnotSecured):
        Verify that the Offset Sub-TLV is as expected.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_OFSNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_OFSnotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1915</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01228_OfsSecured_Ignored_WrongDomainId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13328</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_IGNORED and the slave receives a SyncFollowUp frame that contains
    an Offset Sub-TLV with the DomainId(3rd byte of the Offset Sub-TLV) different from the
    configured one, the frame shall be dropped and nothing shall be called after
    EthTSyn_RxIndication().
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynRxCrcValidated = CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with wrong DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00119_OfsTimeDomain):
        Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1916</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01250_WrongTimeDomainId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13467</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the received timedomainId does not match to the configured
    one, the frame shall be dropped and nothing shall be called after
    EthTSyn_RxIndication().
  
Test Object: 
    Wrong time ID received.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
  
Test Execution: 
    01: Create and receive a sync frame with wrong TimeDomainId.
    02: Call EthTSyn_RxIndication() to receive the frame.
    04: VP(PRS_TS_00119_TimeDomain):
        Verify that the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_TimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1917</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01229_OfsSecured_Ignored_CorrectDomainId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13534</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_IGNORED and the slave receives a SyncFollowUp frame that contains
    an OffsetSecured Sub-TLV with the DomainId(3rd byte of the Offset Sub-TLV) equal with the configured
    one, the frame shall be processed and StbM_BusSetGlobalTime() shall be called twice
    (once for the TimeDomain and once for the Offset TimeDomain).
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynRxCrcValidated = CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with correct DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00119_TimeDomain, PRS_TS_00088):
        Verify that StbM_BusSetGlobalTime() was called with DomainId.
    05: VP(PRS_TS_00119_OfsTimeDomain, PRS_TS_00088,
        PRS_TS_00108_OFSSecured_Ignored):
        Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId and correct
        LocalTime and UserData.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_TimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_OFSSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1918</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01229_OfsNotSecured_Ignored_CorrectDomainId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13705</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_IGNORED and the slave receives a SyncFollowUp frame that contains
    an OffsetNotSecured Sub-TLV with the DomainId(3rd byte of the Offset Sub-TLV) equal with the
    configured one, the frame shall be processed and StbM_BusSetGlobalTime() shall be called twice
    (once for the TimeDomain and once for the Offset TimeDomain).
  
Test Object: 
    OffsetNotSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynRxCrcValidated = CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a OffsetNotSecured sub TLV with correct
        DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00119_TimeDomain, PRS_TS_00088):
        Verify that StbM_BusSetGlobalTime() was called with DomainId.
    05: VP(PRS_TS_00119_OfsTimeDomain, PRS_TS_00088,
        PRS_TS_00108_OFSNotSecured_Ignored):
        Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId and correct
        LocalTime and UserData.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_TimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeDomain</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00108_OFSNotSecured_Ignored</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1919</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01230_OfsNotSecured_Ignored_NanoSec_Max</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13876</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_IGNORED and the slave receives a SyncFollowUp frame that contains
    an Offset Sub-TLV with the NanoSeconds(9th byte to 12th byte) greater than allowed nanoseconds
    value, the frame shall be dropped and nothing shall be called after EthTSyn_RxIndication().
  
Test Object: 
    OffsetNotSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynRxCrcValidated = CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with nanoseconds &gt; 1 second.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(EthTSyn.EB.PRS_TS_00119_OfsTimeNSec):
        Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_OfsTimeNSec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1920</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01231_OfsNotSecured_Ignored_Crc</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14021</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_IGNORED and the slave receives a SyncFollowUp frame that contains
    an OffsetNotSecured Sub-TLV, the frame shall be processed and StbM_BusSetGlobalTime() shall be
    called twice(once for the TimeDomain and once for the Offset TimeDomain).
  
Test Object: 
    EthTSyn_RxIndication()
    Crc_CalculateCRC8H2F().
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynRxCrcValidated = CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: VP(SWS_EthTSyn_00180_GetCurrentVirtual): Verify that StbM_GetCurrentVirtualLocalTime() was called.
    03: Create a sync follow up frame that contains a OffsetNotSecured sub-TLV.
    04: Call EthTSyn_RxIndication() to receive the follow up frame.
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with DomainId.
    06: VP(SWS_EthTSyn_00180_SRD): Verify that used SRD was 0.
    07: VP(): Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId and correct
        UserData and GlobalTimeBase.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_SRD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1921</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01232_OfsNotSecured_Validated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14186</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_VALIDATED and the slave receives a SyncFollowUp frame that contains
    an OffsetNotSecured Sub-TLV, the frame shall be dropped and nothing shall be called after
    EthTSyn_RxIndication().
  
Test Object: 
    OffsetNotSecured Sub-TLV.
  
Test Precondition: 
    EthTSynMessageCompliance = false.
    EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains an OffsetNotSecured sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.AutosarSubTLV.CRC_VALIDATED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1922</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01233_OfsSecured_Validated_EqualCrc</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14331</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_VALIDATED and the slave receives a SyncFollowUp frame that
    contains two Offset Sub-TLVs and the received CRC is equal with the calculated one for both Sub-TLVs,
    the frame shall be processed and StbM_BusSetGlobalTime() shall be called three times
    (once for the TimeDomain and twice for the Offset TimeDomain).
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains two Offset secured sub TLV with correct DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that StbM_BusSetGlobalTime() was called with DomainId.
    05: VP(PRS_TS_00110, EthTSyn.SWS_EthTSyn_00198,
        PRS_TS_00107_OFSValidated, PRS_TS_00117_Validated):
        Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId and correct LocalTime and UserData both times.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00117_Validated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_OFSValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1923</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01234_OfsSecured_Validated_NotEqualCrc</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14569</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_VALIDATED and the slave receives a SyncFollowUp frame that
    contains an Offset Sub-TLV and the received CRC is different than the calculated one,
    the frame shall be dropped and nothing shall be called after EthTSyn_RxIndication().
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with correct DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(PRS_TS_00117_Validated):
        Verify that message processing stopped and the message was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00117_Validated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1924</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01235_OfsSecured_Optional_EqualCrc</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14728</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains an OffsetSecured Sub-TLV and the received CRC is equal with the calculated one,
    the frame shall be processed and StbM_BusSetGlobalTime() shall be called twice
    (once for the TimeDomain and once for the Offset TimeDomain).
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with correct DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that StbM_BusSetGlobalTime() was called with DomainId.
    05: VP(PRS_TS_00109_OFSSecured_Optional, PRS_TS_00117_Optional):
        Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId and correct LocalTime and UserData.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_OFSSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00117_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1925</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01236_OfsNotSecured_Optional</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains an OffsetNotSecured Sub-TLV, the frame shall be processed, without calculating CRC
    and StbM_BusSetGlobalTime() shall be called twice(once for the TimeDomain and once for
    the Offset TimeDomain).
  
Test Object: 
    OffsetNotSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a OffsetNotSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc is not calculated.
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with OffsetDomainId
        and correct LocalTime and UserData.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_OFSNotSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1926</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01237_StatusNotSecured_Optional</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15088</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains a StatusNotSecured Sub-TLV, the frame shall be processed, without calculating CRC
    and StbM_BusSetGlobalTime() shall be called.
  
Test Object: 
    StatusNotSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a StatusNotSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc is not calculated.
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with correct TimeBaseId,
        LocalTime and Status bit set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_StatusNotSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1927</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01238_UserDataNotSecured_Optional</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains an UserDataNotSecured Sub-TLV, the frame shall be processed and dropped, since the
    received CRC is not equal to the calculated one.
  
Test Object: 
    UserDataNotSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a UserDataNotSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc is not calculated.
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with correct TimeBaseId and
        TimeStamp.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_UserDataNotSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1928</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01239_StatusSecured_Optional</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains an StatusSecured Sub-TLV, the frame shall be processed and calculate the CRC.
    Since the received CRC is not equal to the calculated one, the frame shall be dropped
    and nothing else will be called.
  
Test Object: 
    StatusSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a StatusSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc_CalculateCRC8H2F() was called twice to calculate the CRC.
    05: VP(): Verify that since the received CRC was different from the calculated one,
        no further action shall take place.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_StatusSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1929</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01240_TimeSecured_Optional</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains an TimeSecured Sub-TLV, the frame shall be processed.
    Since it's a TimeSecured Sub-TLV, Crc_CalculateCRC8H2F() shall be called to calculate the
    CRC. Because calculated CRC is equal to the received one, the frame shall be processed and
    StbM_BusSetGlobalTime() shall be called.
  
Test Object: 
    TimeSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc_CalculateCRC8H2F() was called 3 times to calculate the CRC.
        (all CRC_flags are false, so it was called once for Crc_Flags and 2 times for DataID)
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with correct TimeBaseId.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_TimeSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1930</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01241_UserDataSecured_Optional</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15645</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_OPTIONAL and the slave receives a SyncFollowUp frame that
    contains an UserDataSecured Sub-TLV, the frame shall be processed and calculate the CRC.
    Since the received CRC is not equal to the calculated one, the frame shall be dropped
    and nothing else will be called.
  
Test Object: 
    UserDataSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_OPTIONAL.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a UserDataSecured Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc_CalculateCRC8H2F() was called twice to calculate the CRC.
    05: VP(): Verify that the frame was dropped since the calculated CRC(20) is different from
        the received one(10).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00109_UserDataSecured_Optional</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1931</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01237_ProcessedTLVs_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15783</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that in case EthTSyn_RxIndication() is called with a length which is
    grater than length defined in Follow_Up message header, EthTSyn will check SUB TLVs in Follow_Up,
    up until length received in AUTOSAR TLV header.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance is set to FALSE.
    - EthTSynCrcFlagsRxValidated is set to CRC_IGNORED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a status sub TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame, with a length bigger
        than FUp frame length + Header size + Status SubTLV not secured size.
    04: VP(EthTSyn.EB.RxIndication.ProcessSubTlvLength):
        Verify that StbM_BusSetGlobalTime() was called and sub-TLV is processed 
        (timeBaseStatus updated).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.ProcessSubTlvLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1932</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01250_PdelayEqualsThreshold</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15902</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynPdelayLatencyThreshold equal with the calculated Pdelay,
    the Pdelay shall be accepted.
  
Test Object: 
    EthTSynPdelayLatencyThreshold
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
    - EthTSynPdelayLatencyThreshold = 50000
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a PdelayReq frame is sent.
    02: Set T1(EgressTimeStamp of the transmitted PdelayReq frame) to be 99 nanoseconds and
        call EthTSyn_TxConfirmation() to confirm the PdelayReq frame.
    03: Create a PdelayResp frame with T2(Master's IngressTimeStamp of the received PdelayReq frame)
        = 10000 nanoseconds.
    04: Call EthTSyn_RxIndication() to receive the PdelayResp frame.
    05: Verify that StbM_GetCurrentVirtualLocalTime() was called to get T4 = 110099 nanoseconds
        (Master's EgressTimeStamp of the transmitted PdelayResp frame).
    06: Create a PdelayRespFUp frame with T3 = 20000 nanoseconds(IngressTimeStamp of the received
        PdelayResponse frame).
    07: Call EthTSyn_RxIndication() to receive the PdelayResp frame.
    08: Call EthTSyn_MainFunction() to calculate the Pdelay: (T4-T1)-(T3-T2)/2 = 50000 nanoseconds.
    09: Create Sync and SyncFUp frames and receive them.
    10: Verify that the calculated Pdelay == EthTSynPdelayLatencyThreshold was accepted and updated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1933</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01251_PdelayExceedsThreshold</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynPdelayLatencyThreshold is smalled than the calculated Pdelay,
    the Pdelay shall not be accepted and the old value shall be used(0 in this test).
  
Test Object: 
    EthTSynPdelayLatencyThreshold
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
    - EthTSynPdelayLatencyThreshold = 50000
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a PdelayReq frame is sent.
    02: Set T1(EgressTimeStamp of the transmitted PdelayReq frame) to be 99 nanoseconds and
        call EthTSyn_TxConfirmation() to confirm the PdelayReq frame.
    03: Create a PdelayResp frame with T2(Master's IngressTimeStamp of the received PdelayReq frame)
        = 10000 nanoseconds.
    04: Call EthTSyn_RxIndication() to receive the PdelayResp frame.
    05: Verify that StbM_GetCurrentVirtualLocalTime() was called to get T4 = 110101 nanoseconds
        (Master's EgressTimeStamp of the transmitted PdelayResp frame).
    06: Create a PdelayRespFUp frame with T3 = 20000 nanoseconds(IngressTimeStamp of the received
        PdelayResponse frame).
    07: Call EthTSyn_RxIndication() to receive the PdelayResp frame.
    08: Call EthTSyn_MainFunction() to calculate the Pdelay: (T4-T1)-(T3-T2)/2 = 50001 nanoseconds.
    09: Create Sync and SyncFUp frames and receive them.
    10: Verify that since the calculated Pdelay = EthTSynPdelayLatencyThreshold + 1,
        the old value(0) was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1934</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01252_OfsSecured_Crc_Fail</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_VALIDATED and the slave receives a SyncFollowUp frame that
    contains three OFS Sub-TLV and the calculated CRC is not equal with the received one for the
    second Sub-TLV, the whole SyncFUp frame shall be dropped.
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a Offset secured sub TLV with correct DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that Crc_CalculateCRC8H2F() was called to calculate the CRC for first 2 Sub-TLVs.
    05: VP(): Verify that StbM_BusSetGlobalTime() was not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_SuccessfulValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1935</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01253_OfsSecured_Validated_EqualCrc_Same</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceFalse/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16624</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is set to false,
    EthTSynRxCrcValidated is CRC_VALIDATED and the slave receives a SyncFollowUp frame that
    contains two identical Offset Sub-TLV and the received CRCs are equal with the calculated ones,
    the frame shall be processed and StbM_BusSetGlobalTime() shall be called three times
    (once for the TimeDomain and twice for the Offset TimeDomain).
  
Test Object: 
    OffsetSecured Sub-TLV.
  
Test Precondition: 
    - EthTSynCrcFlagsRxValidated is set to CRC_VALIDATED.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains two Offset secured sub TLV with correct DomainId.
    03: Call EthTSyn_RxIndication() to receive a follow up frame.
    04: VP(): Verify that StbM_BusSetGlobalTime() was called with DomainId.
    05: VP(PRS_TS_00110, EthTSyn.SWS_EthTSyn_00198,
        PRS_TS_00107_OFSValidated, PRS_TS_00117_Validated):
        Verify that StbM_BusSetGlobalTime() was called twice with OffsetDomainId and correct LocalTime and UserData.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00117_Validated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00107_OFSValidated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1936</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest01_Det001_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that all APIs, except EthTSyn_GetVersionInfo(), EthTSyn_Init() and
    EthTSyn_MainFunction() will report ETHTSYN_E_UNINIT if called in uninitialized state.
  
Test Object: 
    All APIs.
  
Test Precondition: 
    EthTSyn uninitialized.
  
Test Execution: 
    01: Call EthTSyn_RxIndication().
    02: VP(EthTSyn.EB.RxIndication.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    03: Call EthTSyn_TxConfirmation().
    04: VP(EthTSyn.EB.TxConfirmation.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    05: Call EthTSyn_TrcvLinkStateChg().
    06: VP(EthTSyn.EB.EthTSyn_TrcvLinkStateChg.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET and EthIf_UpdatePhysAddrFilter()
        was not called.
    07: Call EthTSyn_SetTransmissionMode().
    08: VP(EthTSyn.EB.EthTSyn_SetTransmissionMode.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    09: Call EthTSyn_EthSwtPtpTimeStampIndication().
    10: VP(EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    11: Call EthTSyn_EthSwtPtpRxIndication().
    12: VP(EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    13: Call EthTSyn_GetProtocolParam().
    14: VP(EthTSyn.EB.GetProtocolParam.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    15: Call EthTSyn_SetProtocolParam().
    16: VP(EthTSyn.EB.SetProtocolParam.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TxConfirmation.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TrcvLinkStateChg.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SetTransmissionMode.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.GetProtocolParam.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SetProtocolParam.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1937</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det002_GetVersionInfo_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_GetVersionInfo() is called with NULL_PTR,
    ETHTSYN_E_PARAM_POINTER will be reported to DET.
  
Test Object: 
    EthTSyn_GetVersionInfo().
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_GetVersionInfo(NULL_PTR).
    02: VP(EthTSyn.EB.GetVersionInfo.NullPtr):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetVersionInfo.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1938</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det003_Init_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_Init() is called with NULL_PTR,
    DET error is reported.
  
Test Object: 
    EthTSyn_Init().
  
Test Precondition: 
    DevErrorDetect is enabled
  
Test Execution: 
    01: Call EthTSyn_Init(NULL_PTR).
    02: VP(): Verify that DET is reported and no other action is performed.
    03: Call EthTSyn_SetTransmissionMode() to verify the correct initialization of EthTSyn.
    04: VP(): Verify that DET error is reported.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>763</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1939</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det004_Init_EthTSynConfigType_DET_ON</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_Init() is called with EthTSyn config type,
    and DevErrorDetect is enabled, initialization shall pass and nothing shall be
    reported to DET.
  
Test Object: 
    EthTSyn_Init().
  
Test Precondition: 
    DevErrorDetect is enabled
  
Test Execution: 
    01: Call EthTSyn_Init(EthTSynConfigType).
    02: VP(): Verify that nothing was reported to det
    03: Call EthTSyn_SetTransmissionMode() to verify the correct initialization of EthTSyn.
    04: VP(): Verify that there was no DET error.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>764</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1940</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det005_Init_EthTSynConfigType_DET_OFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_Init() is called with EthTSyn config type,
    and DevErrorDetect is disabled, initialization shall pass and nothing shall be reported to DET.
  
Test Object: 
    EthTSyn_Init().
  
Test Precondition: 
    DevErrorDetect is disabled
  
Test Execution: 
    01: Call EthTSyn_Init(EthTSynConfigType).
    02: VP(): Verify that Det_ReportError() was not called
    03: Call EthTSyn_SetTransmissionMode() to verify the correct initialization of EthTSyn.
    04: VP(): Verify that there was no DET error.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00030_ValueCheck_INIT_FAILED.vc03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>765</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1941</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det006_RxIndication_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>458</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() is called with:
      -invalid FrameType or LenByte, ETHTSYN_E_PARAM will be reported to DET.
      -invalid PhysAddrPtr or DataPtr(NULL_PTR), ETHTSYN_E_PARAM_POINTER will be reported to DET.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_RxIndication(invalid FrameType).
    02: VP(EthTSyn.EB.RxIndication.InvalidFrameType_DetON):
        Verify that ETHTSYN_E_PARAM was reported to DET.
    03: Call EthTSyn_RxIndication(PhysAddrPtr = NULL_PTR).
    04: VP(EthTSyn.SWS_EthTSyn_00041_PARAMPTR):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
    05: Call EthTSyn_RxIndication(DataPtr = NULL_PTR).
    06: VP(EthTSyn.SWS_EthTSyn_00041_PARAMPTR):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
    07: Call EthTSyn_RxIndication(invalid LenByte).
    08: VP(EthTSyn.EB.RxIndication.InvalidHeaderSize):
        Verify that ETHTSYN_E_PARAM was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameType_DetON</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041_PARAMPTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidHeaderSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1942</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det007_SetTransmissionMode_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_SetTransmissionMode() is called with:
      -invalid Mode, ETHTSYN_E_PARAM will be reported to DET.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_SetTransmissionMode(invalid FrameType).
    02: VP(EthTSyn.EB.RxIndication.InvalidFrameType_DetON):
        Verify that ETHTSYN_E_PARAM was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00172_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1943</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det008_GetProtocolParam_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_GetProtocolParam() is called with:
      - protocolParam as NULL_PTR, ETHTSYN_E_PARAM_POINTER will be reported to DET.
      - timeBaseId that is not configured, ETHTSYN_E_PARAM will be reported to DET.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_GetProtocolParam(invalid TimeBaseId).
    02: VP(): Verify that ETHTSYN_E_PARAM was reported to DET.
    03: Call EthTSyn_GetProtocolParam(protocolParam = NULL_PTR).
    04: VP(): Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1944</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Det009_SetProtocolParam_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_GetProtocolParam() is called with:
      - protocolParam as NULL_PTR, ETHTSYN_E_PARAM_POINTER will be reported to DET.
      - timeBaseId that is not configured, ETHTSYN_E_PARAM will be reported to DET.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_SetProtocolParam(invalid TimeBaseId).
    02: VP(): Verify that ETHTSYN_E_PARAM was reported to DET.
    03: Call EthTSyn_SetProtocolParam(protocolParam = NULL_PTR).
    04: VP(): Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1945</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01001_MasterSendsSyncFrames_BusGetCurrentTime_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, in EthTSyn_MainFunction(), when called to transmit a sync frame,
    if StbM_BusGetCurrentTime() returns E_NOT_OK, no further action shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Set StbM_BusGetCurrentTime() to return E_NOT_OK.
    02: Call EthTSyn_MainFunction() to start transmitting the sync frame.
    03: VP(): Verify that StbM_BusGetCurrentTime() was called.
    04: VP(): Verify that nothing was called after StbM_BusGetCurrentTime().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BusGetCurrentTime_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1946</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01001_MasterSendsSyncFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>815</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends time synchronization frames and that calling
    EthTSyn_TxConfirmation() for a sent sync frame will initiate a sync follow up transmission.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(EthTSyn.SWS_EthTSyn_00202, EthTSyn.EB.Master.FrameType):
        Verify that a free transmission buffer was received via EthIf_ProvideTxBuffer().
        Check also that EthIf_ProvideTxBuffer() was called with the valid PTP frametype.        
    03: VP(EthTSyn.SWS_EthTSyn_00202): Verify that the time stamping was activated via
        EthIf_EnableEgressTimeStamp().
    04: VP(EthTSyn.SWS_EthTSyn_00202, EthTSyn.SWS_EthTSyn_00022,
        EthTSyn.EB.Master.FrameType):
        Verify that EthIf_Transmit() was called to activate the time stamping and transmit the
        buffer received via EthIf_ProvideTxBuffer().
        Check also that EthIf_Transmit() was called with the valid PTP frametype.  
    05: VP(PRS_TS_00028, PRS_TS_00061):
        Verify that the sync frame has the correct header and payload.
    06: VP(EthTSyn.EB.Master.DisableAnnounce): Verify that no announce frame was sent.
    07: Call EthTSyn_TxConfirmation() for the sent sync frame.
    08: VP(EthTSyn.SWS_EthTSyn_00127, EthTSyn.EB.Master.SendSyncFU):
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    09: VP(EthTSyn.SWS_EthTSyn_00203): Verify that a free transmission buffer was received
        via EthIf_ProvideTxBuffer().
    10: VP(EthTSyn.SWS_EthTSyn_00203): Verify that EthIf_Transmit() was called to transmit
        the transmission time stamp and the buffer received via EthIf_ProvideTxBuffer().
    11: VP(PRS_TS_00028, PRS_TS_00181, PRS_TS_00018, EthTSyn.SWS_EthTSyn_00052,
        EthTSyn.SWS_EthTSyn_00130, PRS_TS_00061, EthTSyn.EB.NanosecondsLimit.vc07,
        EthTSyn.PRS_TS_00190):
        Verify that the sync follow up frame has the correct header and payload.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendSyncFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.DisableAnnounce</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.FrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc07</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>752</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1947</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01000_Fup_EthIf_Return_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1041</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if any call of EthIf_ProvideTxBuffer() while transmitting a sync FUP, returns
    other value than E_OK or BUFREQ_OK, no further action shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP():
        Verify that the sync frame has the correct header and payload.
    03: Set return value of EthIf_ProvideTxBuffer() to BUFREQ_NOT_OK.
    04: Call EthTSyn_TxConfirmation() for the sent sync frame.
	05: Call EthTSyn_MainFunction() (for sending Fup frame).
    06: VP(EthTSyn.EB.EthIf_Return_NotOk):
        Verify that the sync follow up frame was not sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1948</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01999_MasterSendsSwtSyncFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends time synchronization frames and FuP frames
    on all switch ports.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort): Verify EthSwt_ProvideTxBuffer() and
        EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP(EthTSyn.SWS_EthTSyn_00127, EthTSyn.EB.Master.SendSyncFU):
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_EthSwtPtpRxIndication() for the host port.
    06: Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    07: VP(EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts):
        Verify that EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for
        the remaining ports.
    08: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    09: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    10: VP(EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts):
        Verify that EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for
        the first port(only one with correction OK).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendSyncFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFrameOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_TransmitSyncFupFrameOnPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1949</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01998_SwtSync_Return_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if any call of EthSwt_PtpTransmit() while transmitting a sync frame,
    returns other value than E_OK(the transmission of sync frames over ports, has failed)
    the fup frames will not be sent.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_EthSwtPtpRxIndication() for the host port.
    06: Set return value of EthSwt_PtpTransmit() to E_NOT_OK.
        Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    07: VP():
        Verify EthSwt_PtpTransmit() was called for the rest of the ports.
    08: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    09: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    10: VP(EthTSyn.EB.EthSwt_Return_NotOk):
        Check that no functions are called for transmission of Fup frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1950</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01997_SwtSync_Return_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if any call of EthSwt_ProvideTxBuffer() while transmitting a sync frame,
    returns other value than BUFREQ_OK the sync frames over ports will not be sent.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Set return value of EthSwt_ProvideTxBuffer() to BUFREQ_E_NOT_OK.
        Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    06: VP():
        Verify EthSwt_PtpTransmit() was not called for the rest of the ports.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1951</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01996_InvalidUniqueId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1791</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master dosen't send FuP frames if unique ids are invalid.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - UniqueId set to invalid value.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    06: VP():
        Verify EthSwt_PtpTransmit() was called for the rest of the ports.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    08: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    09: VP(EthTSyn.EB.Master.InvalidUniqueId):
        Check that no functions are called for transmission of Fup frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.InvalidUniqueId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1952</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01996_InvalidSwitchId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>1995</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master dosen't send FuP frames if switch id is invalid.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - SwitchIdx set to invalid value.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    06: VP():
        Verify EthSwt_PtpTransmit() was called for the rest of the ports.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    08: Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    09: VP(EthTSyn.EB.Master.InvalidSwitchId):
        Check that no functions are called for transmission of Fup frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.InvalidSwitchId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1953</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01995_SwtFuP_Return_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2194</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if any call of EthSwt_ProvideTxBuffer() while transmitting a FuP frame,
    returns other value than BUFREQ_OK the FuP frames over ports will not be sent.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    06: VP():
        Verify EthSwt_PtpTransmit() was called for the rest of the ports.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    08: Set return value of EthSwt_ProvideTxBuffer() to BUFREQ_E_NOT_OK.
        Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    09: VP(EthTSyn.EB.EthSwt_Return_NotOk):
        Verify FuP frames are not sent (EthSwt_PtpTransmit() not called).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1954</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01994_SwtFuP_Return_NotOk</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if any call of EthSwt_PtpTransmit() while transmitting a FuP frame,
    returns other value than E_OK the state will not reset the SyncTxState to IDLE.
  
Test Object: 
    Switch
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_EthSwtPtpRxIndication() for the host port.
    06: Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    07: VP():
        Verify EthSwt_PtpTransmit() was called for the rest of the ports.
    08: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    09: Set return value of EthSwt_ProvideTxBuffer() to BUFREQ_E_NOT_OK.
        Call EthTSyn_MainFunction() to send swtFUPsync frames for the rest of the ports.
    10: VP(EthTSyn.EB.EthSwt_Return_NotOk):
        Verify that the state will not reset the SyncTxState to IDLE.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1955</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01993_MasterReceiveSwtPdelayReqFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2630</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends pdelay_resp and pdelay_resp_fup on the port
    with the received pdelay_req.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() (to receive a pdelay_req frame on port 0(non-host port)).
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the pdelay_req ingresstimestamp on port 0(non-host port)).
    03: Call EthTSyn_MainFunction() to start sync frame transmission and to transmit the pdelay_Resp.
    04: VP(): Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for host port for the sync frame.
    05: VP(EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData.vc01, EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01):
        Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for the related non host port
        for the pdelay_resp frame.
    06: VP(EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01, EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData.vc01):
        Verify that PdelayResp frame is as expected(the received ingress timestamp is added in the
        requestReceiptTimestamp field and sequnece number and sourceport identity are the same
        with the ones saved after call of the EthTSyn_EthSwtPtpRxIndication()).
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the egress timestamp for the transmitted pdelay_resp.
    08: Call EthTSyn_MainFunction() to transmit the pdelay_Resp.
    09: VP(EthTSyn.EB.SwitchPdelay.TransmitPdelayRespFup.vc01):
        Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for the related non host port
        for the pdelay_resp_fup frame.
    10: VP(EthTSyn.EB.SwitchPdelay.TransmitPdelayRespFup.vc01): Verify that PdelayRespFUp frame is as
        expected(the received egress timestamp is added in the responseOriginTimestamp field).
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_SaveData.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1764</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.TransmitPdelayResp.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1765</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.TransmitPdelayRespFup.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1767</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1956</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01991_NoTimeStampIndication_PdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>2867</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that if no TimeStamp is received after transmitting a PdelayResp frame, no PdelayRespFUp
    shall be transmitted.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() (to receive a pdelay_req frame on port 0(non-host port)).
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the pdelay_req ingresstimestamp on port 0(non-host port)).
    03: Call EthTSyn_MainFunction() to start sync frame transmission and to transmit the pdelay_Resp.
    04: VP(): Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for host port for the sync frame.
    05: VP(): Verify that the PdelayResp frame was transmitted.
    06: Call EthTSyn_MainFunction() to transmit the pdelay_RespFUp.
    07: VP(): Verify that the PdelayRespFUp was not transmitted.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayResp_WaitEgress.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1766</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1957</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01990_MasterReceiveSwtPdelayReqFrames_IncorrectLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3037</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_EthSwtPtpRxIndication() is called with a valid PdelayReq frame and
    incorrect Length, no PdelayResp shall be transmitted.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication()
        (to receive a pdelay_req frame on port 0(non-host port) with incorrect length).
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the pdelay_req ingresstimestamp
        on port 0(non-host port)).
    03: Call EthTSyn_MainFunction() to start sync frame transmission and to transmit the pdelay_Resp.
    04: VP(): Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for host port for the sync frame.
    05: VP(): Verify that nothing else was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_PdelayReq_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1958</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01989_MasterReceiveSwtPdelayReqFrames_IncorrectMgmtInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn master receives a PdelayReq with incorrect SwitchIdx or PortIdx,
    no PdelayResp or PdelayRespFUp shall be sent.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() with invalid MgmtInfo.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the pdelay_req ingresstimestamp.
    03: Call EthTSyn_MainFunction() to start sync frame transmission and to transmit the pdelay_Resp.
    04: VP(): Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for host port for the sync frame.
    05: VP(): Verify that nothing else was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwitchPdelay.PdelayReqReceived_Incorrect_MgmtInfo.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1763</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1959</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01988_MasterReceiveSwtPdelayReqFrames_SwtBuff_NOK_Resp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3322</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK while trying to send
    the PdelayResp frame, the EthTSyn master shall drop the frame and stop processing the
    PdelayResp frame.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() to receive the PdelayReq frame.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp.
    03: Set EthSwt_ProvideTxBuffer() to return BUFREQ_E_NOT_OK for the PdelayResp frame.
    04: Call EthTSyn_MainFunction() to start transmission of Sync and PdelayResp frame.
    05: VP(): Verify that the Sync frame was transmitted succesfully.
    06: VP(): Verify that EthSwt_ProvideTxBuffer() was called for the PdelayResp frame.
    07: VP(): Verify that no other function was called.
    08: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the PdelayResp EgressTimeStamp.
    09: Call EthTSyn_MainFunction() to start processing the PdelayResp frame.
    10: VP(): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1960</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01987_MasterReceiveSwtPdelayReqFrames_SwtBuff_NOK_RespFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3495</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK while trying to send
    the PdelayRespFUp frame, the EthTSyn master shall drop the frame and stop processing it.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() to receive the PdelayReq frame.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp.
    03: Call EthTSyn_MainFunction() to start transmission of Sync and PdelayResp frame.
    04: VP(): Verify that the Sync frame was transmitted succesfully.
    05: VP(): Verify that the PdelayResp frame was transmitted succesfully.
    06: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the PdelayResp EgressTimeStamp.
    07: Set EthSwt_ProvideTxBuffer() to return BUFREQ_E_NOT_OK for the PdelayRespFUp frame.
    08: Call EthTSyn_MainFunction() to start processing the PdelayResp frame.
    09: VP(): Verify that EthSwt_ProvideTxBuffer() was called.
    10: VP(): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1961</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01986_MasterReceiveSwtPdelayReqFrames_Transmit_NOK_Resp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthSwt_PtpTransmit() returns E_NOT_OK while trying to send
    the PdelayResp frame, the EthTSyn master shall drop the frame and no further action
    shall take place.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() to receive the PdelayReq frame.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp.
    03: Set EthSwt_PtpTransmit() to return E_NOT_OK for the PdelayResp frame.
    04: Call EthTSyn_MainFunction() to start transmission of Sync and PdelayResp frame.
    05: VP(): Verify that the Sync frame was transmitted succesfully.
    06: VP(): Verify that EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() were called for the
        PdelayResp frame.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the PdelayResp EgressTimeStamp.
    08: Call EthTSyn_MainFunction() to start processing the PdelayResp frame.
    09: VP(): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1962</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01985_MasterReceiveSwtPdelayReqFrames_PdelayRespDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>3861</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if a PdelayReq frame is received on a port that has
    EthTSynGlobalTimePdelayRespEnable set to false, no PdelayResp or PdelayRespFUp shall be sent.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynGlobalTimePdelayRespEnable set to false.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() (to receive a pdelay_req frame on port 0(non-host port)).
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the pdelay_req ingresstimestamp on port 0(non-host port)).
    03: Call EthTSyn_MainFunction() to start sync frame transmission and to transmit the pdelay_Resp.
    04: VP(): Verify EthSwt_ProvideTxBuffer() and EthSwt_PtpTransmit() was called for host port for the sync frame.
    05: VP(): Verify that no function was called to transmit the PdelayResp frame.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1963</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01002_ResetSyncFrames</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4005</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a transceiver link state change from ETHTRCV_LINK_STATE_DOWN to
    ETHTRCV_LINK_STATE_ACTIVE starts the state machines for transmission of time synchronization
    messages.
    Verify that a transceiver link state change from ETHTRCV_LINK_STATE_ACTIVE to
    ETHTRCV_LINK_STATE_DOWN resets the state machines for transmission of time synchronization
    messages.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() and EthTSyn_TxConfirmation() to trigger sending of sync and
        sync follow up message.
    02: Set transceiver link state to ETHTRCV_LINK_STATE_DOWN.
    03: VP(EthTSyn.EB.UpdatePhysAddrFilter_RemoveFromFilter):
        Verify that EthIf_UpdatePhysAddrFilter() is called for the correct controller ID
        with the parameter ETH_REMOVE_FROM_FILTER.
    04: Call enough EthTSyn_MainFunction() to transmit sync frame.
    05: VP(EthTSyn.SWS_EthTSyn_00019): Verify that the sync frame wasn't transmitted.
    06: Set transceiver link state to ETHTRCV_LINK_STATE_ACTIVE.
    07: VP(EthTSyn.EB.UpdatePhysAddrFilter_AddToFilter):
        Verify that EthIf_UpdatePhysAddrFilter() is called for the correct controller ID
        with the parameter ETH_ADD_TO_FILTER.
    08: VP(EthTSyn.SWS_EthTSyn_00020):
        Call EthTsyn_MainFunction() and verify that sync frame is sent.
    09: VP(EthTSyn.SWS_EthTSyn_00020):
        Call EthTSyn_TxConfirmation() and verify that sync FUP frame is sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.UpdatePhysAddrFilter_RemoveFromFilter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.UpdatePhysAddrFilter_AddToFilter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1964</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01003_TransmissionMode_OFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4130</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_SetTransmissionMode() is called and the parameter Mode equals
    ETHTSYN_TX_OFF, all transmit request from EthTSyn shall be omitted on this Ethernet controller.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Set the transmission mode to ETHTSYN_TX_OFF.
    02: Call EthTSyn_MainFunction() to start transmitting sync frame.
    03: VP(EthTSyn.SWS_EthTSyn_00021): Verify that the sync frame transmission was not sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1965</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01004_MasterSendsSyncFramesPeriodicaly</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends periodic time synchronization frames.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame and to trigger the follow up frame
        transmission.
    03: Call EthTSyn_MainFunction() until sync frame transmission timeout elapsed.
    04: Verify that no API was called.
    05: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    06: VP(EthTSyn.EB.Master.SendPeriodicSync):
        Verify that the sync frame is transmitted successfully.
    07: Call EthTSyn_TxConfirmation() to confirm the sync frame and to trigger the follow up frame
        transmission.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPeriodicSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1966</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01005_MasterSendPdelayResponse</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4280</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends Pdelay response if a Pdelay request was received.
    Also if EthTSyn_TxConfirmation() is called for a sent Pdelay response frame will initiate a
    Pdelay response follow up transmission.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Prepare a Pdelay request frame.
    02: Call EthTSyn_RxIndication().
    03: VP(EthTSyn.SWS_EthTSyn_00160): Verify that EthIf_GetIngressTimeStamp()
        was called to retrieve the ingress time stamp(T2).
    04: VP(PRS_TS_00012, EthTSyn.SWS_EthTSyn_00201): Verify that Pdelay response frame is transmitted.
    05: VP(PRS_TS_00028, PRS_TS_00191_PdelayResp):
        Verify that the pdelay response frame has the correct header and payload.
    06: Call EthTSyn_TxConfirmation() for the Pdelay response frame.
    07: VP(EthTSyn.SWS_EthTSyn_00159): Verify that EthIf_GetEgressTimeStamp()
        was called to retrieve the egress time stamp(T3).
    08: VP(EthTSyn.EB.Master.SendPdelayResponseFU): Verify that Pdelay response follow up frame is
        transmitted.
    09: VP(PRS_TS_00028, PRS_TS_00191_PdelayRespFup):
        Verify that the pdelay response follow up frame has the correct header and payload.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayRespFup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1967</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01006_Quality_Invalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4461</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_TxConfirmation() is called for the sync frame and
    EthIf_GetEgressTimeStamp() has the time stamp quality other than ETH_VALID the master shall
    not send any follow up frame.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Send sync frame.
    02: Set time quality to ETH_INVALID.
    03: Call EthTSyn_TxConfirmation().
    04: VP(EthTSyn.EB.InvTimeQuality.Master.SyncEgress): Verify that follow up frame wasn't sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Master.SyncEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1968</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01007_Quality_Uncertain</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4536</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_TxConfirmation() is called for the sync frame and
    EthIf_GetEgressTimeStamp() has the time stamp quality other than ETH_VALID the master shall
    not send any follow up frame.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Send sync frame.
    02: Set time quality to ETH_UNCERTAIN.
    03: Call EthTSyn_TxConfirmation().
    04: VP(EthTSyn.EB.InvTimeQuality.Master.SyncEgress): Verify that follow up frame wasn't sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Master.SyncEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1969</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01008_Slave_PositiveSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn slave processes time synchronization frames and time synchronization follow
    up frames and calls EthIf_GetCurrentTime to get the new time and StbM_BusSetGlobalTime()
    to pass it to StbM.
    - Also, because  EthTSynHardwareTimestampSupport is true and StbM does not use the Ethernet hardware counter as
    Virtul Local Time Source, Sync Reception Delay shall be calculated T3Vlt - T1Vlt.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 999999999
        TimeStamp.seconds = 0xFFFFFFFF
        TimeStamp.secondsHi = 0
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.EB.Slave.ReceiveSync, EthTSyn.SWS_EthTSyn_00128):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame.
    04: VP(EthTSyn.EB.Slave.HWTimpStamp.GatewaySync, EthTSyn.SWS_EthTSyn_00190_GetCurrentTime,
           EthTSyn.SWS_EthTSyn_00190_GetCurrentVirtual):
        Verify that EthIf_GetCurrentTime()  and StbM_GetCurrentVirtualLocalTime() were called
        to get T3Vlt and T2Vlt.
    05: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    06: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    07: VP(EthTSyn.EB.Slave.HWTimpStamp.GatewaySync, PRS_TS_00120, PRS_TS_00142):
        Verify that StbM_BusSetGlobalTime() was called to pass the new time to StbM.
    08: VP(EthTSyn.SWS_EthTSyn_00150, EthTSyn.EB.SupportsStbMTimeLeapFeature, EthTSyn.SWS_EthTSyn_00190_SRD):
        Verify that StbM_BusSetGlobalTime() was called with CurrentTime + SRD.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.HWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_GetCurrentTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00190_SRD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1970</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01008_Slave_SyncWithOverflow</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4772</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn slave processes time synchronization frames and time synchronization follow
    up frames and shall forward the correct TimeStamp to StbM_BusSetGlobalTime() in the case T2-T1
    nanoseconds has a greater value than 999999999.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - T2-T1 has nanoseconds value &gt; 999999999
  
Test Execution: 
    01: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 999999999
        TimeStamp.seconds = 0
        TimeStamp.secondsHi = 0
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.SWS_EthTSyn_00128):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame.
    04: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    05: Prepare EthIf_GetCurrentTime() to return CurrentTime:
        CurrentTime.nanoseconds = 2000000000
        CurrentTime.seconds = 1
        CurrentTime.secondsHi = 0
        so that T2-T1 result in nanoseconds &gt; 999999999.
    06: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    07: VP():
        Verify that EthIf_GetCurrentTime() was called to get the new time.
    08: VP(): Verify that StbM_BusSetGlobalTime() was called to pass the new time to StbM.
    09: VP(EthTSyn.SWS_EthTSyn_00052):
        Verify that StbM_BusSetGlobalTime() is called with correct TimeStamp.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1971</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01250_Slave_GlobalTimeFollowUpTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>4926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if configuration parameter EthTSynGlobalTimeFollowUpTimeout is greater then 0,
    EthTSyn slave module shall observe the reception timeout between the Sync and its
    Follow_Up.
    If the reception timeout occurs, the sequence shall be reset.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynGlobalTimeFollowUpTimeout &gt; 0
  
Test Execution: 
    01: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    02: VP():
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame.
    03: Call EthTSyn_Mainfunction() enough times that the timeout occurs (EthTSynGlobalTimeFollowUpTimeout + 1 times).
    04: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    05: VP(): Verify that no action is perfomed.
        Slave is not synchronized.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1972</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01009_Slave_InvalidQuality</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5048</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if during reception of sync follow up frame the call of EthIf_GetCurrentTime() was
    not successful (quality = ETH_INVALID), no further action shall take place.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    02: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    03: Set EthIf_GetCurrentTime() quality to ETH_INVALID.
    04: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    05: VP(EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync): Verify that after EthIf_GetCurrentTime()
        was called no further action took place.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1973</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01010_Slave_UncertainQuality</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if during reception of sync follow up frame the call of EthIf_GetCurrentTime() was
    not successful (quality = ETH_UNCERTAIN), no further action shall take place.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    02: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    03: Set EthIf_GetCurrentTime() quality to ETH_UNCERTAIN.
    04: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    05: VP(EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync): Verify that after EthIf_GetCurrentTime()
        was called no further action took place.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1974</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01011_Slave_GetCurrentTime_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5243</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if during reception of sync follow up frame the call of EthIf_GetCurrentTime() was
    not successful (retval = E_NOT_OK), no further action shall take place.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    02: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    03: Set EthIf_GetCurrentTime() quality to ETH_UNCERTAIN.
    04: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    05: VP(EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync): Verify that after EthIf_GetCurrentTime()
        was called no further action took place.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.InvHWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1975</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01012_Slave_NegativeSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn slave processes time synchronization frames and time synchronization follow
    up frames and calls EthIf_SetCorrectionTime to adjust the time in the driver accordingly. If
    difference between incoming sync frame and origin time stamp + Pdelay is negative,element sign
    of the parameter timeOffsetPtr shall be set to FALSE.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 0
        TimeStamp.seconds = 1
        TimeStamp.secondsHi = 0
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 970000000U
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 0
    04: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    05: VP(EthTSyn.SWS_EthTSyn_00052):.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1976</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01031_HW_Disabled_SyncFrame_Egress</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that on invocation of EthTSyn_TxConfirmation() the egress time stamp shall be retrieved
    for the sync frame from StbM with the call of StbM_GetCurrentVirtualLocalTime().
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    - EthTSynHardwareTimestampSupport is false.
    - EthTSynPhyAddress enabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to start transmitting the sync frame.
    02: Call EthTSyn_Confirmation() to start transmitting the sync follow up frame.
    03: VP(EthTSyn.ECUC_EthTSyn_00058_Conf):
        Verify that the configured MAC address shall be used when transmitting frames.
    04: Call EthTSyn_TxConfirmation() for the sync frame.
    05: VP(EthTSyn.SWS_EthTSyn_00123):
        Verify that StbM_GetCurrentVirtualLocalTime() was called.
    06: VP(EthTSyn.SWS_EthTSyn_00123):
        Verify that sync follow up frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1977</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01032_HW_Disabled_SyncFrame_Ingress</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5623</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that on invocation of EthTSyn_RxIndication() StbM_GetCurrentVirtualLocalTime()
    will be called to get the T2Vlt.
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    - EthTSynHardwareTimestampSupport is false.
  
Test Execution: 
    01: Prepare a sync frame.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: VP(EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual): Verify that StbM_GetCurrentVirtualLocalTime() was
        called to get the T2Vlt.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1978</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01035_HW_Disabled_Master</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5691</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to FALSE:
      - On EthTSyn_RxIndication() invocation the ingress time stamp(T2) shall be retrieved for
      Pdelay_Req from StbM with the call of StbM_GetCurrentVirtualLocalTime().
      - On EthTSyn_TxConfirmation() invocation the egress time stamp(T3) shall be retrieved for
      Pdelay_Resp from StbM with the call of StbM_GetCurrentVirtualLocalTime().
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Prepare a Pdelay request frame.
    02: Call EthTSyn_RxIndication().
    03: VP(EthTSyn.SWS_EthTSyn_00124): Verify that StbM_GetCurrentVirtualLocalTime() is
        called to get the ingress time stamp.
    04: VP(PRS_TS_00012):
        Verify that the pdelay response frame was transmitted.
    05: Call EthTSyn_TxConfirmation() for the Pdelay response frame.
    06: VP(EthTSyn.SWS_EthTSyn_00122): Verify that StbM_GetCurrentVirtualLocalTime() is
        called to get the egress time stamp.
    07: VP(EthTSyn.EB.Master.SendPdelayResponseFU): Verify that Pdelay response follow up frame
        is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1979</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01035_HW_Disabled_Master_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>5854</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to FALSE:
      - On EthTSyn_RxIndication() invocation the ingress time stamp(T2) shall be retrieved for
      Pdelay_Req from StbM with the call of StbM_GetCurrentVirtualLocalTime().
      - On EthTSyn_TxConfirmation() invocation the egress time stamp(T3) shall be retrieved for
      Pdelay_Resp from StbM with the call of StbM_GetCurrentVirtualLocalTime().
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Prepare a Pdelay request frame.
    02: Set IngressTimeStamp of the PdelayReq to have NanosecHi = 0 and NanosecLo &gt; 999999999.
    03: Call EthTSyn_RxIndication().
    04: VP(EthTSyn.SWS_EthTSyn_00124): Verify that StbM_GetCurrentVirtualLocalTime() is
        called to get the ingress time stamp.
    05: VP(PRS_TS_00012):
        Verify that the pdelay response frame was transmitted.
    06: VP(PRS_TS_00012): Verify that PdelayResp frame is transmitted with correct data.
    07: Call EthTSyn_TxConfirmation() for the Pdelay response frame.
    08: VP(EthTSyn.SWS_EthTSyn_00122): Verify that StbM_GetCurrentVirtualLocalTime() is
        called to get the egress time stamp.
    09: VP(EthTSyn.EB.Master.SendPdelayResponseFU): Verify that Pdelay response follow up frame
        is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1980</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01036_HW_Disabled_Slave</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6044</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to FALSE:
      - On EthTSyn_TxConfirmation() invocation the egress time stamp (T1) shall be retrieved for
        Pdelay_Req from StbM with the call of StbM_GetCurrentVirtualLocalTime().
      - On EthTSyn_RxIndication() invocation for Pdelay_Resp the time T4 shall be
        retrieved from StbM with the call of StbM_GetCurrentVirtualLocalTime().
      - Sync reception delay is 0.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame is transmitted.
    02: VP(PRS_TS_00028,PRS_TS_00187_PdelayReq):
        Verify that the pdelay request frame has the correct header and payload.
        Verify that the first Pdelay_Req frame transmitted contains SeqId 0 (The Sequence Counter
        (sequenceId) of a Pdelay_Req message shall be initialized with 0).
    03: Call EthTSyn_TxConfirmation() for the Pdelay request frame.
    04: VP(EthTSyn.SWS_EthTSyn_00123): Verify that StbM_GetCurrentVirtualLocalTime()
        was called to get egress time stamp T1.
    05: Create Pdelay response frame.
    06: Call EthTSyn_RxIndication() to receive the Pdelay response frame.
    07: VP(EthTSyn.SWS_EthTSyn_00161): Verify that StbM_GetCurrentVirtualLocalTime()
        was called to get the time T4.
    08: Create Pdelay response follow up frame.
    09: Call EthTSyn_RxIndication() to receive the Pdelay response follow up frame.
    10: Create sync frame and call EthTSyn_RxIndication() to receive it.
    11: VP(EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual): Verify that StbM_GetCurrentVirtualLocalTime() was called.
    12: Create sync follow up frame and call EthTSyn_RxIndication() to receive it.
    13: VP(EthTSyn.EB.Slave.StbMSync): Verify that the calculated Pdelay was added to OriginTime
        via StbM_BusSetGlobalTime().
    14: VP(EthTSyn.SWS_EthTSyn_00180_SRD): Verify that GlobalTime is Origin+Pdelay(since SRD is 0).
    15: VP(EthTSyn.SWS_EthTSyn_00150): Verify that StbM_BusSetGlobalTime() was called
        with measureDataPtr-&gt;pathDelay set to last calculated Pdelay.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Slave.StbMSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187_PdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_SRD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1981</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01037_HW_Enabled_Slave</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to TRUE:
      - On EthTSyn_TxConfirmation() invocation the egress time stamp (T1) shall be retrieved for
        Pdelay_Req from EthIf with the call of EthIf_GetEgressTimeStamp().
      - On EthTSyn_RxIndication() invocation for Pdelay_Resp the time difference (T4-T1) shall be
        retrieved from EthIf with the call of EthIf_GetIngressTimeStamp().
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame was sent.
    02: Call EthTSyn_TxConfirmation() for the Pdelay request frame.
    03: VP(EthTSyn.SWS_EthTSyn_00013): Verify that EthIf_GetEgressTimeStamp()
        was called to get egress time stamp T1 with the right BufIdx.
    04: Create Pdelay response frame.
    05: Call EthTSyn_RxIndication() to receive the Pdelay response frame.
    06: VP(EthTSyn.SWS_EthTSyn_00049): Verify that EthIf_GetIngressTimeStamp()
        was called to get T4.
    07: Create Pdelay response follow up frame.
    08: Call EthTSyn_RxIndication() to receive the Pdelay response follow up frame.
    09: Create sync frame and call EthTSyn_RxIndication() to receive it.
    10: Create sync follow up frame and call EthTSyn_RxIndication() to receive it.
    11: VP(): Verify that StbM_BusSetGlobalTime was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1982</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01039_SlaveUsesCalculatedPdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6576</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynPdelayFilter has the value zero, then a EthTSyn slave shall
    always use the last measured Pdelay for the next correction time calculation.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
    - PdelayFilter = 0.
  
Test Execution: 
    01: Call helper function to get the first calculated Pdelay.
    02: Call EthTSyn_MainFunction so a Pdelay request is sent.
    03: Call EthTSyn_TxConfirmation().
    04: Create and receive Pdelay response frame.
    05: VP():
        Verify that StbM_GetCurrentVirtualLocalTime() was called to get T1 VLT.
    06: Create and receive Pdelay response follow up frame.
    07: Create and receive sync frame.
    08: VP(EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual):
        Verify that StbM_GetCurrentVirtualLocalTime() was called to get T2 VLT.
    09: Create and receive sync follow up frame.
    10: VP(EthTSyn.EB.Slave.PdelayFilter.Disabled): Verify that StbM_BusSetGlobalTime() is called
        with expected Pdelay calculated.
    11: VP(EthTSyn.SWS_EthTSyn_00180_SRD): Verify that GlobalTime is Origin+Pdelay(since SRD is 0).
    12: VP(EthTSyn.SWS_EthTSyn_00150): Verify that StbM_BusSetGlobalTime() was called
        with measureDataPtr-&gt;pathDelay set to last calculated Pdelay.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.PdelayFilter.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_GetCurrentVirtual</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00180_SRD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1983</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01040_HW_Enabled_Slave_PdelayReq_Periodically</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6857</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to TRUE, the slave shall send
    periodically pdelay request messages, by calling the following APIs: EthIf_ProvideTxBuffer(),
    EthIf_EnableEgressTimeStamp() and EthIf_Transmit().
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until EthTSynGlobalTimeTxPdelayReqPeriod is elapsed.
    02: VP(EthTSyn.SWS_EthTSyn_00200):
        Verify that EthIf_ProvideTxBuffer() was called to get a free transmission buffer.
    03: VP(EthTSyn.SWS_EthTSyn_00200):
        Verify that EthIf_EnableEgressTimeStamp() was called to activate time stamping.
    04: VP(PRS_TS_00011, PRS_TS_00141, EthTSyn.SWS_EthTSyn_00200):
        Verify that EthIf_Transmit() was called to transmit the frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1984</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01014_Master_ReceiveSyncFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>6963</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a sync frame, using a configured master,
    ETHTSYN_E_TMCONFLICT shall be reported to DET and the frame shall be discarded.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EBTest_CreateSyncFrame() to prepare a sync frame.
    02: Call EthTSyn_RxIndication() to receive the sync frame, using a configured master.
    P05: 03: VP(EthTSyn.EB.Diagnostic_UnexpectedSync_DEM): Verify that
        EBTEST_DEM_EVENT_STATUS_FAILED status and the configured UNEXPECTEDSYNC event ID are
        reported to Dem_ReportErrorStatus.
    04: VP(EthTSyn.SWS_EthTSyn_00145): Verify that ETHTSYN_E_TMCONFLICT(0x01) was reported to Det_ReportRuntimeError.
    P05: 05: VP(EthTSyn.EB.Diagnostic_UnexpectedSync_DET.vc01):
        Verify that ETHTSYN_E_TMCONFLICT(with configured value
        of EthTSynUnexpectedSyncReportErrorDetErrorId) was reported to DET.
    06: VP(): Verify that EthTSyn_RxIndication() performed no action since a master was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00145</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1745</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1985</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01015_Master_ReceivePdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7066</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response frame, using a configured
    master, no action will be performed.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EBTest_CreatePdelayRespFrame() to prepare a pdelay response frame.
    02: Call EthTSyn_RxIndication() to receive the sync frame, using a configured master.
    03: VP(EthTSyn.EB.Master.RxIndication): Verify that EthTSyn_RxIndication() performed no
        action since a master was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1986</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01016_Slave_ReceivePdelayResp_InvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response frame, using an invalid
    message size, no action will be performed.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EBTest_CreatePdelayRespFrame() to prepare a pdelay response frame.
    02: Call EthTSyn_RxIndication() to receive the sync frame, using a configured slave but an
        invalid message size.
    03: VP(EthTSyn.EB.RxIndication.InvalidFrameLength): Verify that EthTSyn_RxIndication()
        performed no action since a slave was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1987</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01017_Master_ReceiveSyncFU</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a sync follow up frame, using a configured
    master, no action will be performed.
  
Test Object: 
    Sync follow up frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Call EBTest_CreateSyncFUFrame() to prepare a sync follow up frame.
    02: Call EthTSyn_RxIndication() to receive the sync follow up frame, using a configured master.
    03: VP(EthTSyn.EB.Master.RxIndication): Verify that EthTSyn_RxIndication() performed no action
        since a master was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1988</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01018_Slave_ReceiveSyncFU_InvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response frame, using an invalid
    message size, no action will be performed.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EBTest_CreateSyncFUFrame() to prepare a sync follow up frame.
    02: Call EthTSyn_RxIndication() to receive the sync follow up frame, using a configured slave,
        but an invalid length.
    03: VP(EthTSyn.EB.RxIndication.InvalidFrameLength): Verify that EthTSyn_RxIndication()
        performed no action since an invalid size was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1989</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01019_Master_ReceivePdelayFU</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7365</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response follow up frame, using a
    configured master, no action will be performed.
  
Test Object: 
    Pdelay response follow up frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Call EBTest_CreateSyncFUFrame() to prepare a pdelay response follow up frame.
    02: Call EthTSyn_RxIndication() to receive the pdelay response follow up, using a configured
        master.
    03: VP(EthTSyn.EB.Master.RxIndication): Verify that EthTSyn_RxIndication() performed no action
        since a master was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1990</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01020_Slave_ReceivePdelayFU_InvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7439</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response follow up frame, using an
    invalid message size, no action will be performed.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EBTest_CreateSyncFUFrame() to prepare a pdelay response follow up frame.
    02: Call EthTSyn_RxIndication() to receive the pdelay response follow up frame, using a
        configured slave, but an invalid length.
    03: VP(EthTSyn.EB.RxIndication.InvalidFrameLength): Verify that EthTSyn_RxIndication()
        performed no action since an invalid size was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1991</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01021_RxIndication_InvalidID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that calling EthTSyn_RxIndication() with an ID that is not configured will perform no
    action and will throw the DET error ETHTSYN_E_PARAM.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_RxIndication() using an ID that is not configured.
    02: VP(EthTSyn.SWS_EthTSyn_00041_CTRLIDX):
        Verify that the DET error ETHTSYN_E_PARAM is thrown.
    03: VP(EthTSyn.SWS_EthTSyn_00041_CTRLIDX): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00041_CTRLIDX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1992</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01022_TxConfirmation_InvalidID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that calling EthTSyn_TxConfirmation() for a frame that does not belong to EthTSyn,
    no action shall be performed.
  
Test Object: 
    EthTSyn_TxConfirmation().
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_TxConfirmation() using an ID that is not configured.
    02: VP(EthTSyn.SWS_EthTSyn_00175): Verify that the call was ignored.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1993</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01023_TrcvLinkStateChg_InvalidID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that calling EthTSyn_TrcvLinkStateChg() for a transceiver which is not  user by EthTSyn,
    no action shall be performed.
  
Test Object: 
    EthTSyn_TrcvLinkStateChg().
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_TrcvLinkStateChg() using an ID that is not configured.
    02: VP(EthTSyn.SWS_EthTSyn_00174): Verify that the call was ignored.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1994</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01024_SetTransmissionMode_InvalidCtrlID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7668</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that calling EthTSyn_SetTransmissionMode() with an ID that is not configured will
    perform no action end will throw the DET error ETHTSYN_E_CTRL_IDX.
  
Test Object: 
    EthTSyn_SetTransmissionMode().
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_SetTransmissionMode() using an ID that is not configured.
    02: VP(EthTSyn.SWS_EthTSyn_00172_CtrlIdx):
        Verify that the DET error ETHTSYN_E_CTRL_IDX was triggered.
    03: VP(EthTSyn.SWS_EthTSyn_00172_CtrlIdx): Verify that no function was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00172_CtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1995</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01038_HW_Disabled_TxConfirmation_NOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7720</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to FALSE:
      - If StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK after calling EthTSyn_TxConfirmation,
      no Pdelay will be calculated.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
    - StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK.
  
Test Execution: 
    01: Call helper function to receive a pdelay request.
    02: Set StbM_GetCurrentVirtualLocalTime() return value to E_NOT_OK.
    03: Call EthTSyn_TxConfirmation().
    04: Call helper function to create a PdelayResp frame, and call EthTSyn_RxIndication()
        to receive it.
    05: Call helper function to create a PdelayRespFUp frame, and call EthTSyn_RxIndication()
        to receive it.
    06: Call EthTSyn_MainFunction() to calculate the Pdelay.
    07: Create and receive a Sync and a SyncFUp frame.
    08: VP(): Verify that the Pdelay wasn't updated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.StbMSync.GetCurrentTime.NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1996</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01025_PdelayReqFrame_ProvideTxBuffer_NOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7895</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_ProvideTxBuffer() returns other value than BUFREQ_E_OK while
    receiving a Pdelay request frame, no other action shall take place.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Prepare EthIf_ProvideTxBuffer() return values.
    02: Loop over all 3 return values.
    03: Call EthTSyn_RxIndication() to start receiving the Pdelay request frame.
    04: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that after EthIf_ProvideTxBuffer() failed
        nothing else is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1997</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01026_PdelayRespFUFrame_Invalid_TimeQuality</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>7986</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a Pdelay response frame was received and the EthIf_GetEgressTimeStamp()
    returns a time stamp quality other than ETH_VALID, then the frame shall be discarded.
    Also any received Pdelay follow up frames shall be discarded.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Prepare a Pdelay request frame and call EthTSyn_RxIndication() to receive it.
    02: Set EthIf_GetEgressTimeStamp() to return ETH_INVALID for time quality.
    03: Call EthTSyn_TxConfirmation().
    04: VP(EthTSyn.EB.InvTimeQuality.PdelayRespEgress): Verify that after
        EthIf_GetEgressTimeStamp() returned ETH_INVALID, nothing else was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayRespEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1998</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01027_PdelayReqFrame_ProvideTxBuffer_NOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8091</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_ProvideTxBuffer() returns other value than BUFREQ_OK, no
    further action shall take place.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Prepare EthIf_ProvideTxBuffer() return value.
    02: Call EthTSyn_MainFunction() until the Pdelay interval is elapsed.
    03: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that after EthIf_ProvideTxBuffer() returned
        BUFREQ_E_NOT_OK, no other API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1999</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01028_PdelayReqFrame_Transmit_NOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8171</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that EthIf_Transmit() returns E_NOT_OK, while transmitting a Pdelay request
    frame, calling EthTSyn_TxConfirmation() won't call any other APIs.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Prepare EthIf_Transmit() return value.
    02: Call EthTSyn_MainFunction() until the Pdelay interval is elapsed.
    03: Call EthTSyn_TxConfirmation() to confirm the transmitted frame.
    04: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that EthTSyn_TxConfirmation() didn't call
        anything because transmission didn't work.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2000</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01029_PdelayRespFUFrame_ProvideTxBuffer_NOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_TxConfirmation() is called for a sent Pdelay response frame and
    EthIf_ProvideTxBuffer() returns BUFREQ_E_NOT_OK, no further action shall take place.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Call helper function to receive a Pdelay request.
    02: Set EthIf_ProvideTxBuffer() to return BUFREQ_E_NOT_OK.
    03: Call EthTSyn_TxConfirmation() to confirm the Pdelay response.
    04: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that after EthIf_ProvideTxBuffer() returned
        BUFREQ_E_NOT_OK no other API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2001</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01030_Slave_Receive_SyncFrame_GetIngress_INVALID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthIf_GetIngressTimeStamp() has time quality ETH_INVALID, no API will be called
    while receiving the sync frame, and receiving a sync follow up frame will not work.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
  
Test Execution: 
    01: Call helper function to create a sync frame.
    02: Set EthIf_GetIngressTimeStamp() time quality to ETH_INVALID.
    03: Call EthTSyn_RxIndication() to receive the sync frame.
    04: VP(EthTSyn.EB.InvTimeQuality.Slave.SyncIngress): Verify that after
        EthIf_GetIngressTimeStamp() no other API was called.
    05: Call helper function to create a sync follow up frame.
    06: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    07: VP(EthTSyn.EB.InvTimeQuality.Slave.SyncIngress): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Slave.SyncIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2002</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01031_ReceiveUnknownMessage</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8461</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called using an unknown message, no further action
    shall take place.
  
Test Object: 
    Unknown message
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
  
Test Execution: 
    01: Call helper function to create an unknown message type.
    02: Set EthTSyn_RxIndication() to receive the message.
    03: VP(): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UnexpectedFrames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2003</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01032_GetEgressTimeStamp_Nanoseconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8527</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if EthIf_GetEgressTimeStamp() has the timestamp.nanoseconds more than 1 second,
    no further action shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call helper function to send a sync frame.
    02: Prepare TimeStamp for EthIf_GetEgressTimeStamp() to have nanoseconds greater or
        equal than 1s.
    03: Call EthTSyn_TxConfirmation().
    04: VP(): Verify that after EthIf_GetEgressTimeStamp() no other API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2004</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01023_HW_Disabled_Nanoseconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8605</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if StbM_GetCurrentVirtualLocalTime() has the timestamp.nanoseconds more than 1 second,
    no further action shall take place.
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    - EthTSynHardwareTimestampSupport is false.
  
Test Execution: 
    01: Call helper function to send a sync frame.
    02: Prepare TimeStamp for StbM_GetCurrentVirtualLocalTime() to have nanoseconds more than 1s.
    03: Call EthTSyn_TxConfirmation().
    04: VP(): Verify that after StbM_GetCurrentVirtualLocalTime() no other API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2005</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01033_SyncFUFrame_Nanosec</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8715</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if sync follow up frame origin time nanoseconds is greater or equal with 1 second,
    EthTSyn_RxIndication() will have no effect.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a sync frame.
    02: Create a sync follow up frame with the origin time nanoseconds equals 1 second.
    03: Call EthTSyn_RxIndication().
    04: VP(): Verify that after EthTSyn_RxIndication() no other API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2006</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01034_SyncFUFrame_TransferCorrTime_Nanosec</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8803</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a sync follow up frame that has the
    transfer correction time nanoseconds more than 1second, no further action shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a sync frame.
    02: Create a sync follow up frame with the transfer correction time nanoseconds &gt; 1 second.
    03: Call EthTSyn_RxIndication().
    04: VP(): Verify that after EthTSyn_RxIndication() no other API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds.CorrectionTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2007</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01035_PdelayResp_Negative</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>8891</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating the Pdelay, T4-T1 has a negative value,
    the Pdelay won't be updated.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request frame with timestamp T1 nanoseconds = 100.
    02: Prepare T4 nanoseconds = 90.
    03: Create a pdelay response frame and call EthTSyn_RxIndication().
    04: Create a pdelay response follow up frame and call EthTSyn_RxIndication().
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay still has the value 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayResp_NegativeTimeOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2008</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01036_TimeDiff_SecondHi</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9012</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating the Pdelay, T4-T1 has SecondsHi greater than 0,
    the Pdelay won't be updated.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request frame with timestamp T1 nanoseconds = 100.
    02: Prepare T4 nanoseconds = 100 and secondsHi = 1.
    03: Create a pdelay response frame and call EthTSyn_RxIndication().
    04: Create a pdelay response follow up frame and call EthTSyn_RxIndication().
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay still has the value 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeDiff_InvalidTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2009</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01037_TimeDiff_Seconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating the Pdelay, T4-T1 has Seconds greater than 0,
    the Pdelay won't be updated.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request frame with timestamp T1 nanoseconds = 100.
    02: Prepare T4 nanoseconds = 100 and seconds = 1.
    03: Create a pdelay response frame and call EthTSyn_RxIndication().
    04: Create a pdelay response follow up frame and call EthTSyn_RxIndication().
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay still has the value 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeDiff_InvalidTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2010</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01038_TimeDiff_Nanoseconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9252</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating the Pdelay, T4-T1 has nanoseconds
    greater or equal with 1 000 000 000, the Pdelay won't be updated.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request frame with timestamp T1 nanoseconds = 100.
    02: Prepare T4 nanoseconds to be greater than 100, thus resulting in T4 - T1 &gt; 1s.
    03: Create a pdelay response frame and call EthTSyn_RxIndication().
    04: Create a pdelay response follow up frame and call EthTSyn_RxIndication().
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay still has the value 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2011</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01039_PdelayResp_Nanoseconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9371</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if pdelay response timestamp nanoseconds is greater than 1s, after
    EthIf_GetIngressTimeStamp() on EthTSyn_RxIndication() invocation for respective frame, no
    further action shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request.
    02: Prepare T2 nanoseconds to be greater than 1s.
    03: Create a pdelay response frame.
    04: Call EthTSyn_RxIndication().
    05: VP(EthTSyn.EB.Nanoseconds): Verify that EthIf_GetIngressTimeStamp was called and
        no other function calls must follow.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2012</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01040_PdelayRespFu_Nanoseconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9468</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if pdelay response follow up frame timestamp nanoseconds is greater than 1s, after
    EthIf_GetIngressTimeStamp() on EthTSyn_RxIndication() invocation, no further action shall take
    place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request.
    02: Create a pdelay response frame and call EthTSyn_RxIndication().
    03: VP(EthTSyn.EB.Nanoseconds): Verify that EthIf_GetIngressTimeStamp was called and
        no other function calls must follow.
    04: Set timestamp T3 nanoseconds to 1s, and create a pdelay response follow up frame.
    05: Call EthTSyn_RxIndication().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2013</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01041_NegativePdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if calculated pdelay is negative, after EthTSyn_RxIndication() no further action
    shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request.
    02: Create a pdelay response frame and call EthTSyn_RxIndication().
    03: VP(EthTSyn.EB.PdelayRespFU_NegativeTimeOffset): Verify that EthIf_GetIngressTimeStamp was
        called and no other function calls must follow.
    04: Create a pdelay response follow up frame with T3 greater than (T4-T1+T2) so that pdelay
        will be negative.
    05: Call EthTSyn_RxIndication().
    06: Call EthTSyn_MainFunction() to process the Pdelay calculation.
    07: VP(): Verify that Pdelay was not calculated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayRespFU_NegativeTimeOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2014</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01042_Pdelay_Seconds</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9708</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if T4-T1 seconds value is different than 0, Pdelay won't be calculated.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request(with T1 seconds = 2).
    02: Create a pdelay response frame and call EthTSyn_RxIndication().
    03: VP(EthTSyn.EB.TimeDiff_InvalidTime): Verify that EthIf_GetIngressTimeStamp() was called with
        T4 seconds value = 3(T4-T1 seconds != 0)
    04: Create a pdelay response follow up frame with T3, so that the calculated pdelay will have
        seconds greater than 0.
    05: Call EthTSyn_RxIndication().
    06: Call EthTSyn_MainFunction() to process the Pdelay calculation.
    07: VP(): Verify that Pdelay was not calculated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeDiff_InvalidTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2015</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01043_Pdelay_SecondsHi</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9831</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if T4-T1 secondsHi value is different than 0, Pdelay won't be calculated.
  
Test Object: 
    Pdelay calculation.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request(with T1 secondsHi = 1).
    02: Create a pdelay response frame and call EthTSyn_RxIndication().
    03: VP(EthTSyn.EB.TimeDiff_InvalidTime): Verify that EthIf_GetIngressTimeStamp was called with
        T4 secondsHi = 2(so that T4-T1 secondsHi != 0).
    04: Create a pdelay response follow up frame with valid T3.
    05: Call EthTSyn_RxIndication().
    06: Call EthTSyn_MainFunction() to start processing the Pdelay calculation.
    07: VP(): Verify that Pdelay was not calculated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeDiff_InvalidTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2016</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01044_SyncFU_After_SyncFU</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>9953</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a sync follow up frame after successful
    receiving another sync follow up frame, no further action shall take place(invalid seqId).
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Create a sync frame and call EthTSyn_RxIndication().
    02: VP(EthTSyn.EB.UnexpectedFrames): Verify that EthIf_GetIngressTimeStamp was called and
        no other function calls must follow.
    03: Create a sync follow up frame and call EthTSyn_RxIndication().
    04: Create a second sync follow up frame and call EthTSyn_RxIndication().
    05: VP(EthTSyn.PRS_TS_00196): Verify that EthIf_GetIngressTimeStamp was called and
        no other function calls must follow (Invalid seqId).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UnexpectedFrames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2017</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01045_Pdelay_InvalidIngress</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10065</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthIf_GetIngressTimeStamp() returns a time stamp quality other than ETH_VALID,
    then the received Pdelay response frame shall be discarded. Any received Pdelay follow up
    frames shall be discarded as well.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request.
    02: Prepare EthIf_GetIngressTimeStamp() to return time quality ETH_INVALID.
    03: Create a pdelay response frame and call EthTSyn_RxIndication().
    04: VP(EthTSyn.EB.InvTimeQuality.PdelayRespIngress): Verify that EthIf_GetIngressTimeStamp
        was called and no other function calls must follow.
    05: Create a pdelay response follow up frame and call EthTSyn_RxIndication() to receive it.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayRespIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2018</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01046_PdelayReq_INVALID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to TRUE:
      - On EthTSyn_TxConfirmation() invocation, if EthIf_GetEgressTimeStamp() returns a time stamp
      quality ETH_INVALID, the Pdelay measurement shall be stopped for this cycle.
      Any received Pdelay responses and Pdelay follow up frames shall be discarded
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame was sent.
    02: Set EthIf_GetEgressTimeStamp() to return ETH_INVALID.
    03: Call EthTSyn_TxConfirmation() for the Pdelay request frame.
    04: Create Pdelay response frame and call EthTSyn_RxIndication() to receive it.
    05: VP(EthTSyn.EB.InvTimeQuality.PdelayReqEgress): Verify that no API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayReqEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2019</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01047_PdelayReq_UNCERTAIN</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10292</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynHardwareTimestampSupport is set to TRUE:
      - On EthTSyn_TxConfirmation() invocation, if EthIf_GetEgressTimeStamp() returns a time stamp
      quality ETH_UNCERTAIN, the Pdelay measurement shall be stopped for this cycle.
      Any received Pdelay responses and Pdelay follow up frames shall be discarded
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame was sent.
    02: Set EthIf_GetEgressTimeStamp() to return ETH_UNCERTAIN.
    03: Call EthTSyn_TxConfirmation() for the Pdelay request frame.
    04: Create Pdelay response frame and call EthTSyn_RxIndication() to receive it.
    05: VP(EthTSyn.EB.InvTimeQuality.PdelayReqEgress): Verify that no API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayReqEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2020</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01048_LostSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a slaves receives a sync frame but no sync follow up frame before next sync
    frame arrives, then the slave shall forget the old sync frame and shall process the new
    sync frame.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 999999999
        TimeStamp.seconds = 100U
        TimeStamp.secondsHi = 0
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 0
        TimeStamp.seconds = 100U
        TimeStamp.secondsHi = 0
    04: Call EthTSyn_RxIndication() for the second incoming time synchronization frame.
    05: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 550
        OriginTimeStamp.seconds = 0xFFFFFFFF
        OriginTimeStamp.secondsHi = 0
    06: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    07: VP(EthTSyn.EB.Slave.LostSyncFUPFrame): Verify that frame was processed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostSyncFUPFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2021</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01049_Ignore_RxAnnounceMessages</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the received announce messages are ignored on the receiver side.
  
Test Object: 
    Received announce frames.
  
Test Precondition: 
    - EthTSynAnnounceFrameSupport is FALSE.
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to send a sync frame.
    02: VP(PRS_TS_00005, PRS_TS_00206): Verify that a sync frame was sent.
    03: Receive announce frame with higher priority (lower value).
    04: Call the EthTSyn_MainFunction() until the sync frame is sent.
    05: VP(PRS_TS_00005, PRS_TS_00206): Verify that the master still sends a sync frame (the
        announce frame was ignored).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2022</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01050_InitStateAndInternalVariables</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10685</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This is a black box test which verifies that EthTSyn_Init() is called but the check of the
    internal variables and the init. state is not possible within black box tests.
  
Test Object: 
    EthTSyn_Init()
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_Init().
    02: Call EthTSyn_TrcvLinkStateChg() to check that EthTSyn is in initialized state.
    03: VP(EthTSyn.SWS_EthTSyn_00006): Verify that EthTSyn_TrcvLinkStateChg()
        returns E_OK and EthIf_UpdatePhysAddrFilter() is called.
    04: VP(EthTSyn.SWS_EthTSyn_00006):
        Verify that no DET is detected for the EthTSyn to be in initialized state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2023</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01051_ReinitializedInternalVariables</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10738</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test should verify that EthTSyn_Init() reinitializes its internal variables
    when it is called in initialized state but the internal variables can not be verified within
    a black box test.
  
Test Object: 
    EthTSyn_Init()
  
Test Precondition: 
    EthTSyn is initialized.
  
Test Execution: 
    01: Call EthTSyn_TrcvLinkStateChg() to check that EthTSyn is in initialized state.
    02: VP(EthTSyn.EB.EthTSyn_00008): Verify that there are no DET errors, the function
        EthTSyn_TrcvLinkStateChg() returned E_OK and the function EthIf_UpdatePhysAddrFilter() was called.
    03: Call EthTSyn_Init() again to reinitialize EthTSyn (this will switch the initialization
        state of EthTSyn to FALSE and then back to TRUE).
    04: Call EthTSyn_TrcvLinkStateChg() to check that EthTSyn is again in the initialized state.
    05: VP(EthTSyn.EB.EthTSyn_00008): Verify that EthTSyn_TrcvLinkStateChg() returned E_OK and
        EthIf_UpdatePhysAddrFilter() was called (no change is expected in the init state of EthTSyn).
    06: VP(EthTSyn.EB.EthTSyn_00008): Verify that there are no DET errors.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2024</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01052_Latency_IngressAndEgress</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10807</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that after EthTSyn_Init() the Pdelay value is 0.
  
Test Object: 
    EthTSyn_Init()
  
Test Precondition: 
    EthTSyn is initialized.
  
Test Execution: 
    01: Call EthTSyn_Init().
    02: Call EbTest_Inc03_SlaveReceiveSyncFrame() to receive a sync frame.
    03: Create a SyncFUp frame and call EthTSyn_RxIndication() to receive it.
    04: VP(): Verify that after initialization, Pdelay is 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2025</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01053_SlavePdelayFilter_Enabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>10900</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the configuration parameter EthTSynPdelayFilter has a value greater then
    zero, then an EthTSyn slave shall use the formula
    Pdelay = PdelayOld + [(PdelayOld - PdelayNew) / 2^EthTSynPdelayFilter]
    on the last measured Pdelay to get the Pdelay for the next correction time calculation.
    The test expects that StbM_BusSetGlobalTime() receives the time data taking into account the
    enabled PdelayFilter (EthTSynPdelayFilter = 2).
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
    - EthTSynPdelayFilter for EbTest_EthTSynCtrl_S2 is 2.
  
Test Execution: 
    01: Call helper function to get the first calculated Pdelay.
    02: Call EthTSyn_MainFunction so a Pdelay request is sent.
    03: Call EthTSyn_TxConfirmation() to get the T1 via StbM_GetCurrentVirtualLocalTime().
    04: Create and receive Pdelay response frame and get T4 via StbM_GetCurrentVirtualLocalTime().
    05: Create and receive Pdelay response follow up frame.
    06: Create and receive sync frame.
    07: Create and receive sync follow up frame.
    08: VP(EthTSyn.EB.Slave.PdelayFilter.Enabled): Verify that StbM_BusSetGlobalTime() is called
        with expected Pdelay calculated. For the provided time base ID and time base data
        StbM_BusSetGlobalTime() is expected to receive the time stamp information with the Pdelay
        calculated according to the configured EthTSynPdelayFilter (DiffPdelayFilter = 38).
   09: VP(EthTSyn.SWS_EthTSyn_00150): Verify that StbM_BusSetGlobalTime() was called
        with measureDataPtr-&gt;pathDelay set to last calculated Pdelay.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.PdelayFilter.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2026</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01054_SlaveLostPdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall verify that a lost Pdelay response does not block the next Pdelay measurement.
  
Test Object: 
    Rx Pdelay response frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Receive the 1st PdelayRequest frame.
    02: Receive the 2nd PdelayRequest frame.
    03: Receive a 1st PdelayResponse frame followed by a PdelayRespFU frame.
    04: VP(EthTSyn.EB.Slave.LostPdelayResp): Verify that no function was called indicating that a
        pdelay response frame was lost (the loss of a Pdelay response frame is detected).
    05: Receive a 2nd PdelayResponse frame followed by a PdelayRespFU frame.
    06: VP(EthTSyn.EB.Slave.LostPdelayResp,PRS_TS_00192): Verify that EthIf_GetIngressTimeStamp()
        was called indicating that this pdelay measurement was not blocked (the lost PdelayResponse
        frame is recovered).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostPdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2027</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01055_SlaveLostPdelayRespFUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11340</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall verify that a lost Pdelay response follow up shall not block the next Pdelay
    measurement.
  
Test Object: 
    Rx Pdelay response follow up frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Receive the 1st PdelayRequest frame.
    02: Create and receive the 1st response Pdelay frame without a Pdelay follow up response frame
        (this FUP Pdelay response frame is lost).
    03: VP(EthTSyn.EB.Slave.LostPdelayRespFUP): Verify that EthIf_GetIngressTimeStamp()
        was called for the received PdelayResp frame.
    04: Receive the 2nd PdelayRequest frame.
    05: Create and receive the 2nd response Pdelay frame followed by a Pdelay follow up response
        frame.
    06: VP(EthTSyn.EB.Slave.LostPdelayRespFUP): Verify that no function was called due to a lost
        Pdelay follow up response frame (the loss of a receive follow up response frame was
        detected).
    07: Create and receive a new Pdelay response frame followed by a Pdelay response follow up
        frame.
    08: VP(EthTSyn.EB.Slave.LostPdelayRespFUP,PRS_TS_00194): Verify that EthIf_GetIngressTimeStamp()
        was called in order to recover the lost PdelayRespFU frame (this measurement is
        not blocked).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.LostPdelayRespFUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2028</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01056_Slave_OverflowDetection</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11531</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that an overflow is detected in the case in which
    ETHTSYN_HW_TIMESTAMP_SUPPORT = STD_OFF.
    The data causing the overflow is passed to EthTSyn_AddTimeStamps().
  
Test Object: 
    EthTSyn_ProcessRxSynFUpFrame()
    EthTSyn_GetTimeFromStbM()
    EthTSyn_AddTimeStamps()
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Create a SyncFrame.
    02: Call EthTSyn_RxIndication() to receive the SyncFrame.
    03: VP(EthTSyn.EB.OverflowDetection): Verify that StbM_GetCurrentVirtualLocalTime() is called with the
        correct time base ID.
    04: Set the origin time stamp to the following values:
        OriginTimeStamp.nanoseconds = 0U;
        OriginTimeStamp.seconds = 20U;
        OriginTimeStamp.secondsHi = 30U.
    05: Set the current time stamp to:
        StbM_GetCurrentVirtualLocalTime_Stub.localTimePtr_Out.nanosecondsLo = 0xFFFFFFFFU;
        StbM_GetCurrentVirtualLocalTime_Stub.localTimePtr_Out.nanosecondsHi = 0x3U;
        The value 0xFFFFFFFFU shall trigger the overflow.
    06: Create a SyncFUFrame.
        Call EthTSyn_RxIndication() to receive the SyncFUFrame.
    07: VP(EthTSyn.EB.Slave_OverflowDetection): Verify that StbM_BusSetGlobalTime() is called with
        the correct time base ID. And an overflow has been
        detected (StbM_BusSetGlobalTime_Stub.timeStampPtr seconds and secondsHi are updated).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave_OverflowDetection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2029</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01057_Master_SendPdelayRequestFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11660</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a master node can transmit a PdelayRequestFrame.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a SyncFrame and a PdelayRequestFrame are transmitted.
    02: VP(EthTSyn.EB.Master_TransmitPdelayRequestFrame): Verify that the SyncFrame
        was sent.
    03: VP(EthTSyn.EB.Master_TransmitPdelayRequestFrame): Verify that the PdelayRequestFrame
        was sent.
    04: Call EthTSyn_TxConfirmation() to confirm the transmission of the SyncFrame.
    05: VP(EthTSyn.ECUC_EthTSyn_00058_Conf): Verify that the IEEE 802.1AS MAC address
        01:80:C2:00:00:0E shall be used when transmitting the frame.
    06: Call EthTSyn_TxConfirmation() to confirm the transmission of the PdelayRequestFrame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master_TransmitPdelayRequestFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2030</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01059_Slave_NegativeCorrectionField</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11825</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in the case of a sync follow up frame received with a negative correction field no
    action is performed.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Receive a SyncFrame.
    02: Create a SyncFUFrame for origin timestamp:
        OriginTimeStamp.nanoseconds = 0U;
        OriginTimeStamp.seconds = 0U;
        OriginTimeStamp.secondsHi = 1U;
    03: Set the current time:
        CurrentTime.nanoseconds = 10U;
        CurrentTime.seconds = 20U;
        CurrentTime.secondsHi = 30U;
    04: Change the first byte of the CorrectionField in order to have a negative CorrectionField
        which will be detected by the calculation of the correction field.
    05: Call EthTSyn_RxIndication() to receive the SyncFUFrame.
    06: VP(EthTSyn.EB.Slave.AddCorrField_NegativeCorrectionField):
        Verify that after EthTSyn_RxIndication() was called no further action took place
        because an error condition was detected.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2031</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01060_Slave_NsTimeStampMax_CorrFieldHiMax</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>11929</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that no action is taken if the bytes 0 to 5 in the representation of the correction
    field have invalid values.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Receive a SyncFrame.
    02: Create a SyncFUFrame for origin timestamp:
        OriginTimeStamp.nanoseconds = 0U;
        OriginTimeStamp.seconds = 0U;
        OriginTimeStamp.secondsHi = 1U;
    03: Set the current time:
        CurrentTime.nanoseconds = 10U;
        CurrentTime.seconds = 20U;
        CurrentTime.secondsHi = 30U;
    04: Change the correction field as follows:
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B8_CORRFIELD_0]  = 127U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B9_CORRFIELD_1]  = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B10_CORRFIELD_2] = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B11_CORRFIELD_3] = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B12_CORRFIELD_4] = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B13_CORRFIELD_5] = 255U;
        In this way the correction is too big to be represented and the calculation of the
        correction field returns E_NOT_OK.
    05: Call EthTSyn_RxIndication() to receive the SyncFUFrame.
    06: VP(EthTSyn.EB.Slave.AddCorrField_MaxValues_NsTimeStamp_CorrFieldHi):
        Verify that after EthTSyn_RxIndication() was called no further action took place
        because an error condition was detected.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_MaxValues_NsTimeStamp_CorrFieldHi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2032</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01061_Slave_RemainingCorrFieldHiNs_NotZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the correction time and bus set global time are correct.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Set the ingress timestamp to:
        IngressTimeStamp.nanoseconds = 999999999U;
        IngressTimeStamp.seconds = 1U;
        IngressTimeStamp.secondsHi = 0U;
    02: Set the current time:
        CurrentTime.nanoseconds = 10U;
        CurrentTime.seconds = 20U;
        CurrentTime.secondsHi = 0U;
    03: Receive a SyncFrame.
    04: Create a SyncFUFrame for origin timestamp:
        OriginTimeStamp.nanoseconds = 999999999U;
        OriginTimeStamp.seconds = 1U;
        OriginTimeStamp.secondsHi = 10U;
    05: Set the byte 0 of the correction field to a valid value.
    06: Call EthTSyn_RxIndication() to receive the SyncFUFrame.
    07: VP(EthTSyn.EB.Slave.AddCorrField_RemainingCorrFieldHi_Ns_NotZero):
        Verify that StbM_BusSetGlobalTime() is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_RemainingCorrFieldHi_Ns_NotZero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2033</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01062_Slave_CorrField_NsPart</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12152</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the calculation works even when correction fields 2-5 represent a value greater or
    equal 1 second.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Set the ingress time stamp:
        IngressTimeStamp.nanoseconds = 999999999U;
        IngressTimeStamp.seconds = 1U;
        IngressTimeStamp.secondsHi = 0U.
        This is taken into account to the calculation of the correction field secondsHi.
    02: Set the current time:
        CurrentTime.nanoseconds = 10U;
        CurrentTime.seconds = 20U;
        CurrentTime.secondsHi = 0U.
    03: Receive a SyncFrame.
    04: Create a SyncFUFrame for origin timestamp:
        OriginTimeStamp.nanoseconds = 0U;
        OriginTimeStamp.seconds = 0U;
        OriginTimeStamp.secondsHi = 10U.
    05: Change the correction field as follows:
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B8_CORRFIELD_0]  = 64U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B9_CORRFIELD_1]  = 0U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B10_CORRFIELD_2] = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B11_CORRFIELD_3] = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B12_CORRFIELD_4] = 255U;
        EbTest_RxBuffer[EBTEST_PTP_HEADER_B13_CORRFIELD_5] = 255U.
        The nanoseconds part of the correction field must be taken into account so the byte 0
        must be a valid value (64) and the bytes 2 to 5 must be at the maximum possible values
        in order to have NsTimeStamp.nanoseconds &gt; 999999999. If these conditions are met the
        nanoseconds part of the correction field is added to the final calculus.
    06: Call EthTSyn_RxIndication() to receive the SyncFUFrame.
    07: VP(EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField):
        Verify that EthIf_GetCurrentTime() and StbM_BusSetGlobalTime() are called for the current
        time stamp.
    08: VP(EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField):
        Verify that EthIf_GetCurrentTime() and StbM_BusSetGlobalTime() are called for the current
        time stamp.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_NsPart_Of_CorrField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2034</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01063_Master_EthTSynFramePriority</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12279</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the Time Master uses the EthTSynFramePrio value as priority parameter
    when calling EthIf_ProvideTxBuffer(). EthTSynFramePrio must contain the configured priority
    value.
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    - EthTSynHardwareTimestampSupport is true.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to start transmitting the sync frame.
    02: VP(EthTSyn.SWS_EthTSyn_00162):
        Verify that EthIf_ProvideTxBuffer() was called with the configured priority for
        a sync frame.
    03: Call EthTSyn_TxConfirmation() to transmit a sync follow up frame.
    04: VP(EthTSyn.SWS_EthTSyn_00162):
        Verify that EthIf_ProvideTxBuffer() was called with the configured priority for
        a sync follow up frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2035</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01064_Slave_EthTSynFramePriority</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the Time Slave uses the EthTSynFramePrio value as priority parameter
    when calling EthIf_ProvideTxBuffer(). EthTSynFramePrio must contain the configured priority
    value.
  
Test Object: 
    Sync frames.
  
Test Precondition: 
    - EthTSynHardwareTimestampSupport is true.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a Pdelay request frame is sent.
    02: VP(EthTSyn.SWS_EthTSyn_00162):
        Verify that EthIf_ProvideTxBuffer() was called with the configured priority for
        a Pdelay request frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2036</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01065_SlaveStaticPdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynGlobalTimeTxPdelayReqPeriod has the value zero,
    then an EthTSyn slave shall ignore the calculation of Pdelay .
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynGlobalTimeTxPdelayReqPeriod = 0.
  
Test Execution: 
    01: Call helper function to init stubs.
    02: Call EthTSyn_MainFunction so a Pdelay request is sent.
    03: VP(PRS_TS_00140): Verify that no action is taken in account.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2037</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01066_MasterStaticPdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynGlobalTimeTxPdelayReqPeriod has the value zero,
    then an EthTSyn master shall ignore the calculation of Pdelay .
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynGlobalTimeTxPdelayReqPeriod = 0.
  
Test Execution: 
    01: Call helper function to init stubs.
    02: Call EthTSyn_MainFunction so a Pdelay request is sent.
    03: VP(PRS_TS_00140): Verify that no action is taken in account.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2038</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01067_Slave_IgnorePdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12664</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response frame, and
    EthTSynGlobalTimeTxPdelayReqPeriod equals 0, Time Slave shall not measure the propagation
    delay.
  
Test Object: 
    Pdelay response frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynGlobalTimeTxPdelayReqPeriod is 0.
  
Test Execution: 
    01: Call EBTest_CreatePdelayRespFrame() to prepare a pdelay response frame.
    02: Call EthTSyn_RxIndication() to receive the pdelay response frame
    03: VP(PRS_TS_00140): Verify that EthTSyn_RxIndication() performed no action
        since EthTSynGlobalTimeTxPdelayReqPeriod is 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2039</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01068_Slave_IgnorePdelayFUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a pdelay response follow up frame, and
    EthTSynGlobalTimeTxPdelayReqPeriod equals 0, Time Slave shall not measure the propagation
    delay.
  
Test Object: 
    Pdelay response follow up frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynGlobalTimeTxPdelayReqPeriod is 0.
  
Test Execution: 
    01: Call EBTest_CreateSyncFUFrame() to prepare a pdelay response follow up frame.
    02: Call EthTSyn_RxIndication() to receive the pdelay response follow up
    03: VP(PRS_TS_00140): Verify that EthTSyn_RxIndication() performed no action
        since a EthTSynGlobalTimeTxPdelayReqPeriod is 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2040</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01069_Slave_UsesStaticPdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12790</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that If EthTSynGlobalTimeTxPdelayReqPeriod equals 0, Time Master and Time Slave shall
    not measure the propagation delay. The Time Slave shall use a static value
    EthTSynGlobalTimePropagationDelay as propagation delay instead.
  
Test Object: 
    Static Pdelay
  
Test Precondition: 
    - Module is initialized.
    - EthTSynGlobalTimeTxPdelayReqPeriod equals 0.
  
Test Execution: 
    01: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    02: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    03: Set EthIf_GetCurrentTime() quality to ETH_VALID.
    04: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    05: VP(EthTSyn.SWS_EthTSyn_00150): Verify that StbM_BusSetGlobalTime() was called
        with measureDataPtr-&gt;pathDelay set to the static value EthTSynGlobalTimePropagationDelay.
    06: VP(PRS_TS_00140): Verify that StbM_BusSetGlobalTime() is
        called with parameter TimeOffsetPtr set to EBTEST_DEFAULT_CONFIG_PDELAY_VALUE_NS + 1ns.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2041</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01126_Swt_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>12917</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if:
      - EthTSyn_EthSwtPtpTimeStampIndication() is called with MgmtInfo set to NULL_PTR or
      - EthTSyn_EthSwtPtpRxIndication() is called with MgmtInfo or DataPtr set to NULL_PTR,
    ETHTSYN_E_PARAM_POINTER shall be reported to DET.
      - EthTSyn_EthSwtPtpRxIndication() is called with IngressTimeStampPtr set to NULL_PTR,
    ETHTSYN_E_PARAM_POINTER shall be reported to DET.
  
Test Object: 
    EthTSyn_EthSwtPtpTimeStampIndication().
    EthTSyn_EthSwtPtpRxIndication().
  
Test Precondition: 
    EthTSyn initialized.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpTimeStampIndication() with MgmtInfo set to NULL_PTR.
    02: VP(EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.NULL_PTR):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
    03: Call EthTSyn_EthSwtPtpRxIndication() with MgmtInfo set to NULL_PTR.
    04: VP(EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
    05: Call EthTSyn_EthSwtPtpRxIndication() with DataPtr set to NULL_PTR.
    06: VP(EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
    07: Call EthTSyn_EthSwtPtpRxIndication() with IngressTimeStampPtr set to NULL_PTR.
    08: VP(EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR):
        Verify that ETHTSYN_E_PARAM_POINTER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpTimeStampIndication.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2042</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01127_Swt_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13037</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that all APIs, except EthTSyn_GetVersionInfo(), EthTSyn_Init() and
    EthTSyn_MainFunction() will report ETHTSYN_E_PARAM if called
    with invalid params.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication().
    thTSyn_EthSwtPtpTimeStampIndication().
  
Test Precondition: 
    EthTSyn initialized.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication() with InvalidCtrlIdx.
    02: VP(EthTSyn.SWS_EthTSyn_00041_CTRLIDX):
        Verify that ETHTSYN_E_PARAM was reported to DET.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() with InvalidCtrlIdx.
    04: VP(EthTSyn.EB.EthSwtPtpTimeStampIndication_InvalidControllerId):
        Verify that ETHTSYN_E_PARAM was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_InvalidControllerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1695</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpTimeStampIndication_InvalidControllerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2043</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01200</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on Master_9.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2044</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01202</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13211</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on both Master_9 and Master_11, both configured with debounce(0.05 and 0.06).
    02: Call EthTSyn_TxConfirmation() to confirm both sync frames.
    03: Call EthTSyn_MainFunction() enough times so debounce time elapses for M9.
    04: VP(): Verify that the sync FUP frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2045</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01201</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13351</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted on each configured switch port.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on both Master_10.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() for the Host port.
    04: Call EthTSyn_MainFunction() to transmit the sync frame on switch ports.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() for both switch ports.
    06: Call EthTSyn_MainFunction() enough times that the debounce elapses for all ports.
    07: VP(): Verify that the sync FUP frames was transmitted on first port(correction was OK).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2046</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01201_DebounceMaxValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the debounce timer shall elapse 1 MF earlier in case that
    the MF counter + configured debounce value = FFFF FFFF.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on both Master_10.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() for the Host port.
    04: Call EthTSyn_MainFunction() to transmit the sync frame on switch ports.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() for both switch ports.
    06: Call EthTSyn_MainFunction() enough times that the debounce elapses for all ports.
    07: VP(): Verify that the sync FUP frames were transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebounceCalculation_MaxValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2047</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01240_DebounceElapseOnAllSwtPorts</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>13790</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the debounce is correctly calculated while using two EthTSyn controllers,
    one of them with switch ports configured and EthTSyn_GeneralCounter is almost equal to MAX_VALUE
    so wraparound needs to be performed when calculating the Debounce.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Set EthTSyn_GeneralCounter to max value - 10 so we have a wraparound during debounce calculation.
    02: Call EthTSyn_MainFunction() so a sync frame shall be transmitted via EthSwt_PtpTransmit() on Master_10 and EthIf_Transmit() on Master_11.
    03: Call EthTSyn_TxConfirmation() twice to confirm both sync frames.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for the HostPort.
    05: Call EthTSyn_MainFunction() to start transmitting the Sync frame on both switch ports.
    06: Call EthTSyn_EthSwtPtpTimeStampIndication() twice to get the EgressTimeStamp for both configured switch ports.
    07: Call EthTSyn_MainFunction() 5 times so the debounce counter elapses for Master_11.
    08: VP(): Verify that the SyncFUp is transmitted via EthIf_Transmit().
    09: Call EthTSyn_MainFunction() 2 times so the debounce counter elapses for Master_10.
    10: VP(): Verify that the SyncFUp is transmitted via EthSwt_PtpTransmit().
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2048</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01241_EthTSynCtrl_MaxDebounce</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14037</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating DebounceTimeOffset, the EthTSyn_GeneralCounter +
    the configured TimeDomain debounce value equals the max value of debounce, the SyncFup frame shall
    be transmitted one MF earlier than that max value.
  
Test Object: 
    Debounce calculation
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Set EthTSyn_GeneralCounter to max value - 7 so when adding the configured debounce value, it'll
        be max value = 4294967295U.
    02: Call EthTSyn_MainFunction() to start transmitting the Sync frame.
    03: Call EthTSyn_TxConfirmation() to confirm the tranmission of the Sync frame.
    04: Call EthTSyn_MainFunction() 5 times.
    05: VP(): Verify that instead of 7 MF calls, 6 were enough to trigget the transmission of SyncFUp frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebounceCalculation_MaxValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2049</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01242_DebounceCalculation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a debounce is already calculated for a TimeDomain, and
    another TimeDomain is used and has the debounce value smaller than the first one,
    the latter shall transmit the SyncFUp frame first.
  
Test Object: 
    Debounce calculation.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Prepare only Master_11 to be ready for transmission.
    02: Call EthTSyn_MainFunction() and verify that a SyncFrame was sent on Master_11(debounce = 6).
    03: Call EthTSyn_TxConfirmation() to confirm the SyncFrame.
    04: Prepare Master_9 to be ready for transmission.
    05: Call EthTSyn_MainFunction() and verify that a SyncFrame was sent on Master_9(debounce = 3).
    06: Call EthTSyn_TxConfirmation() to confirm the SyncFrame.
    07: Call EthTSyn_MainFunction() 3 times so the debounce will elapse on Master_9.
    08: VP(): Verify that a SyncFUp frame was transmitted on Master_9.
    09: Call EthTSyn_MainFunction() 2 times so the debounce will elapse on Master_11.
    10: VP(): Verify that a SyncFUp frame was transmitted on Master_11.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2050</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01204</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a master node can transmit a PdelayRequestFrame.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a SyncFrame and a PdelayRequestFrame are transmitted.
    02: VP(EthTSyn.EB.Master_TransmitPdelayRequestFrame): Verify that the SyncFrame
        was sent.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission of the SyncFrame.
    04: VP(EthTSyn.EB.Master_TransmitPdelayRequestFrame): Verify that the PdelayRequestFrame
        was sent.
    05: VP(EthTSyn.ECUC_EthTSyn_00058_Conf): Verify that the IEEE 802.1AS MAC address
        01:80:C2:00:00:0E shall be used when transmitting the frame.
    06: Call EthTSyn_TxConfirmation() to confirm the transmission of the PdelayRequestFrame.
    07: VP(EthTSyn.EB.Master_TransmitPdelayRequestFrame): Verify that the PdelayRequestFrame
        was confirmed successfuly (EthIf_Transmit() is called).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.ECUC_EthTSyn_00058_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2051</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01205</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted on each configured switch port - test needed to cover reset of
    EthTSyn free running counter.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on both Master_12.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() for the Host port.
    04: Call EthTSyn_MainFunction() to transmit the sync frame on switch ports.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() for all 3 switch ports.
    06: Call EthTSyn_MainFunction() 4 times that the debounce elapses.
    07: VP(): Verify that the SyncFUp was transmitted on the port that had the correction OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2052</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01206</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14694</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted on each configured switch port - test needed to cover reset of
    EthTSyn free running counter.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on both Master_13.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() for the Host port.
    04: Call EthTSyn_MainFunction() to transmit the sync frame on switch ports.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() for both switch ports.
    06: Call EthTSyn_MainFunction() enough times that the debounce elapses.
    07: VP(): Verify that the SyncFUp frame was transmitted on the port that had correction OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2053</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01203</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14881</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted - test needed to cover reset of EthTSyn free running counter.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynPhyAddress disabled.
  
Test Execution: 
    01: Transmit a sync frame on both Master_9.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    03: Call EthTSyn_MainFunction() enough times so debounce time elapses for M9.
    04: VP(): Verify that the sync FUP frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2054</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01204_MasterSendsSyncWithCorrectPeriod</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>14989</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends periodic time synchronization frames with the right period.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    02: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully.
    03: Call EthTSyn_MainFunction() until sync frame transmission timeout elapsed.
    04: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully after Sync interval elapses.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2055</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01205_GetTimeBaseStatus_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15067</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetTimeBaseStatus() returns E_NOT_OK while trying to
    transmit a sync frame, no other function shall be called and frame processing shall stop.
  
Test Object: 
    StbM_GetTimeBaseStatus();
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Set StbM_GetTimeBaseStatus() to return E_NOT_OK.
    02: Call EthTyn_MainFunction() to start transmitting the sync frame.
    03: VP(): Verify that StbM_GetTimeBaseStatus() was called.
    04: VP(): Verify that no other function was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.GetTimeBaseStatus.NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2056</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01206_INVALID_TIME_QUAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, in the context of EthTSyn_TxConfirmation(), EthIf_GetCurrentTime()
    returns a time quality other than ETH_VALID, the frame transmission shall stop.
  
Test Object: 
    EthIf_GetCurrentTime()
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Transmit a sync frame.
    02: Set EthIf_GetCurrentTime() stub to return ETH_INVALID quality.
    03: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    04: VP(): Verify that EthIf_GetCurrentTime() was called.
    05: Call EthTSyn_MainFunction().
    06: VP(): Verify that no further action took place.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.Master.GetCurrentTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2057</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01207_SecHi</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends periodic time synchronization frames with the right period.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    02: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully.
    03: Call EthTSyn_MainFunction() until sync frame transmission timeout elapsed.
    04: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully after Sync interval elapses.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2058</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01208</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends periodic time synchronization frames with the right period.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    02: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully.
    03: Call EthTSyn_MainFunction() until sync frame transmission timeout elapsed.
    04: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully after Sync interval elapses.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2059</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01209</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master sends periodic time synchronization frames with the right period.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    02: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully.
    03: Call EthTSyn_MainFunction() until sync frame transmission timeout elapsed.
    04: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully after Sync interval elapses.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2060</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01209_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master dosen't sends periodic time synchronization frames if
    T1 &gt; T2.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to trigger sync frame transmission.
    02: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync frame is transmitted successfully.
    03: Call EthTSyn_TxConfirmation() for the transmitted sync frame.
    04: Call EthTSyn_MainFunction() to trigger fup sync frame transmission.
    05: VP(EthTSyn.SWS_EthTSyn_00202):
        Verify that the sync process was dropped (no fup is transmitted).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2061</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01210</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15728</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the case when T1 is greater than T4 when prcessing a PdelayReq frame.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame is transmitted.
    02: Prepare T1 time to be greater than T4.
    03: Call EthTSyn_TxConfirmation() to confirm the Pdelay request frame.
    04: Create a Pdelay response frame.
    05: Call EthTSyn_RxIndication() to receive it.
    06: Create a Pdelay response follow up frame and call EthTSyn_RxIndication() to receive it.
    07: Create a Sync frame and call EthTSyn_RxIndication() to receive it.
    08: Create a Sync follow up frame and call EthTSyn_RxIndication() to receive it.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2062</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01211</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>15968</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the case when StbM_GetCurrentVirtualLocalTime() returns E_NOT_OK while
    processing a PdelayResponse frame.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame is transmitted.
    02: Call EthTSyn_TxConfirmation() to confirm the Pdelay request frame.
    03: Prepare StbM_GetCurrentVirtualLocalTime() to return E_NOT_OK.
    04: Create and receive a PdelayResponse frame.
    05: Create and receive a PdelayResponseFup frame.
    06: Create and receive a Sync frame.
    07: Create and receive a SyncFup frame.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2063</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01210_Receive_Diff_SrcPortID</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMasterSlaveConflictDetection si enabled and a Time Slave
    receives a sync frame from a different Time Master, ETHTSYN_E_TSCONFLICT shall be reported to
    DET and the frame shall be discarded.
  
Test Object: 
    Sync frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMasterSlaveConflictDetection is enabled.
  
Test Execution: 
    01: Call EthTSyn_RxIndication() multiple times to receive the sync frame from Master 1.
    02: VP(): Verify that frame is accepted and Det_ReportError() is not called.
    03: Call EthTSyn_RxIndication() to receive the sync frame from Master 2.
    04: VP(): Verify that ETHTSYN_E_TSCONFLICT was reported to Det_ReportRuntimeError.
    05: VP(): Verify that the frame was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00146</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2064</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01211_DEMDET_SyncFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    P05: This test verifies that if EthTSynReceiveSyncFupPairsPeriod  is configured to DEM,
    each dropped sync frame shall be reported to DEM.
    P06: This test verifies that if EthTSynReceiveSyncFupPairsPeriod  is configured to DET,
    after 12 pairs of Sync/SyncFUp lost, Det_ReportError() shall be called.
      - Sync frames are dropped if:
        - a sync frame is received before the corresponding sync follow up frame.
        - EthTSynReceiveSyncFupPairsPeriod expires before a sync follow up frame is received.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - EthTSynSyncFailedReportError set to DEM in P05
    - EthTSynSyncFailedReportError set to DET in P06
  
Test Execution: 
    01: Create a sync frame and call EthTSyn_RxIndication() to receive it.
    02: Call EthTSyn_RxIndication() 12 times, to receive the same sync frame.
    P05: 03: VP(EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01): Verify that the previous sync frame was dropped,
        therefore Dem_ReportErrorStatus() is called, with EventID set to the configured
        DemEventID for ETHTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
    04: Call EthTSyn_MainFunction() 11 times(EthTSynReceiveSyncFupPairsPeriod expires
        after 12 EthTSyn_MainFunction() calls).
    05: Call 1 more time EthTSyn_MainFunction() so EthTSynReceiveSyncFupPairsPeriod expires.
    P05: 06: VP(EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire.vc01,
        EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01):
           Verify that Dem_ReportErrorStatus() was called with with EventID set to the configured
           DemEventID for ETHTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
    P06: 06: VP(EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01): Verify that Det_ReportError() was called
        with ErrorID taken form configured EthTSynSyncyFailedReportErrorDetErrorId after 12 pairs
        of Sync/SyncFUp frames are lost.
    07: Create a sync follow up frame and call EthTSyn_RxIndication() to receive it.
    P05:08: VP(EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01):
        Verify that all previous sync frames were dropped, so the sync follou up frame reception
        shall report to Dem_ReportErrorStatus() the EventID set to the configured DemEventID for
        ETHTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
    P06: 08: VP(EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01): Verify that Det_ReportError() was called
        with ErrorID taken form configured EthTSynSyncyFailedReportErrorDetErrorId.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1742</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1744</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceiveSyncFupPairsPeriod_Expire.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1750</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2065</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01211_DEMDET_InvalidSeqNr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16531</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    P05: This test verifies that if EthTSynReceiveSyncFupPairsPeriod  is configured to DEM,
    and a FUP with invalid sequence number is received, the frame shall be dropped and reported
    to DEM only once.
    P06: This test verifies that if EthTSynReceiveSyncFupPairsPeriod  is configured to DET,
    after 12 pairs of Sync/SyncFUp lost, Det_ReportError() shall be called.
      - Sync frames are dropped if:
        - a sync frame is received before the corresponding sync follow up frame.
        - EthTSynReceiveSyncFupPairsPeriod expires before a sync follow up frame is received.
        - an invalid fup frame is received (invalid seq numeber).
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - EthTSynSyncFailedReportError set to DEM in P05
    - EthTSynSyncFailedReportToDem set to DET in P06
  
Test Execution: 
    01: Create a valid sync frame and call EthTSyn_RxIndication() to receive it.
    02: Create a sync follow up frame with an invalid seq number and call EthTSyn_RxIndication() to receive it.
        If EthTSynSyncFailedReportToDem set to DET call EthTSyn_RxIndication() another 11 times
        (Det_ReportError() is called after 12 missed sync cycles ).
    P05:03: VP(EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01):
        Verify that the sync follou up frame reception reports to Dem_ReportErrorStatus() the EventID set to the configured DemEventID for
        ETHTSYN_E_SYNC_FAILED and EventStatus as STATUS_PREFAILED.
    P06: 03: VP(EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01): Verify that Det_ReportError() was called
        with ErrorID taken form configured EthTSynSyncyFailedReportToDemDetErrorId.
    04: Create a valid sync frame and call EthTSyn_RxIndication() to receive it.
    05: VP():
        Verify that the previous invalid fup frame does not influence the new sync cycle. ReportError() functions
        are not called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1742</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncFailed_DET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1744</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2066</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01213_DEMDET_PdelayFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16719</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    P05: This test verifies that if EthTSynPdelayFailedReportError is configured to DEM and
         EthTSynReceivePdelayRespFupPairsPeriod elapses before a
         PdelayResponse is received after a PdelayRequest, DEM shall be informed.
    P06: This test verifies that if EthTSynPdelayFailedReportError is configured to DET and
         EthTSynReceivePdelayRespFupPairsPeriod elapses before a
         PdelayResponse is received after a PdelayRequest, after 6 failed pairs
         Det_ReportError() shall be called.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - EthTSynSyncFailedReportError set to DEM in P05
    - EthTSynSyncFailedReportError set to DET in P06
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times to elapse the PdelayInterval and
        transmit a PdelayRequest.
    02: Call EthTSyn_TxConfirmation() to confirm the PdelayRequest.
    03: Call EthTSyn_MainFunction() 3 times to elapse EthTSynReceivePdelayRespFupPairsPeriod.
    P05:04: VP(EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01,
               EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire.vc01
              ):
        Verify that Dem_ReportErrorStatus() was called with EventID taken form configured
        ETHTSYN_E_PDELAY_FAILED and EventStatus as STATUS_PREFAILED.
    P06:05: Call EthTSyn_MainFunction() 17 times(EthTSynReceivePdelayRespFupPairsPeriod is set to
            3 ticks, one more call of EthTSyn_MainFunction() would mean 6 pairs of
            Pdelay/PdelayResp/PdelayRespFUp are lost).
    P06:06: Call EthTSyn_MainFunction() one more time.
    P06:07:VP(EthTSyn.EB.Diagnostic_PdelayFailed_DET.vc01
               EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire.vc01
              ):
        Verify that Det_ReportError() was called with ErrorID taken form configured
        EthTSynPdelayFailedReportErrorDetErrorId after 6 Pdelay frames lost.
    08: Create a Pdelay Response frame.
    09: Call EthTSyn_RxIndication() to receive the PdelayResponse.
    P05: 10: VP(): Verify that, since the previous PdelayReq was dropped,
        PdelayResponse shall be dropped too and Dem_ReportErrorStatus() is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1748</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1749</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_EthTSynReceivePdelayRespFupPairsPeriod_Expire.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1751</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2067</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01214_DEM_SyncFUP_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>16952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynReceiveSyncFupPairsPeriod  is configured to DEM and a pair
    of Sync and Sync Follow-up frames is succesfully received, Dem_ReportErrorStatus() shall be
    called with EventID holding the configured value of ETHTSYN_E_SYNC_FAILED and the
    STATUS_PREPASSED.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - EthTSynSyncFailedReportError set to DEM in P05
  
Test Execution: 
    01: Create a sync frame.
    02: Call EthTSyn_RxIndication() to receive it.
    03: Create a sync follow up frame.
    04: Call EthTSyn_RxIndication() to receive it.
    05: VP(EthTSyn.EB.Diagnostic_SyncOK_DEM.vc01): Verify that Dem_ReportErrorStatus() was called with
        EventID set to the configured DemEventID for ETHTSYN_E_SYNC_FAILED and EventStatus as
        STATUS_PREPASSED to indicate that a pair of Sync-SyncFUp was received.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_SyncOK_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2068</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01215_DEM_Pdelay_Resp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>17082</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that as soon as a pair of PdelayRequest, PdelayResponse and
    PdelayResponseFollowUp is correctly processed, DEM shall be informed with EventStatus
    STATUS_PREPASSED via Dem_ReportErrorStatus()
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - EthTSynSyncFailedReportError set to DEM
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times to elapse the PdelayInterval and
        transmit a PdelayRequest.
    02: Call EthTSyn_TxConfirmation() to confirm the PdelayRequest.
    03: Create a Pdelay Response frame.
    04: Call EthTSy_RxIndication() to receive the response.
    05: Create a Pdelay Response Follow-Up frame.
    06: Call EthTSy_RxIndication() to receive the response follow up frame.
    07: VP(): Verify that Dem_ReportErrorStatus() was called with EventID
        EBTEST_EVENTID_PDELAYFAILED and EventStatus as STATUS_PREPASSED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayOK_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1747</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2069</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01215_DEM_Pdelay_Resp_WrongNsField</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>17282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a pdelay response frame is received with nanoseconds bigger than 1s in
    requestReceiptTimestamp field, the pdelay frame will be dropped and DEM shall be informed with
    EventID: EBTEST_EVENTID_PDELAYFAILED and EventStatus: STATUS_PREFAILED via Dem_ReportErrorStatus().
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    EthTSynPdelayFailedReportError set to DEM
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times to elapse the PdelayInterval and
        transmit a PdelayRequest.
    02: Call EthTSyn_TxConfirmation() to confirm the PdelayRequest.
    03: Create a Pdelay Response frame with requestReceiptTimestamp.nanoseconds bigger than 1s.
    04: VP(): Verify that Dem_ReportErrorStatus() was called with EventID
        EBTEST_EVENTID_PDELAYFAILED and EventStatus as STATUS_PREFAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1748</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2070</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01216_DEM_Pdelay_RespFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>17461</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if an invalid PdelayResponseFollowUp frame is received, it shall
    be dropped and
      P05: DEM shall be informed with EventID: EBTEST_EVENTID_PDELAYFAILED and
           EventStatus: STATUS_PREFAILED via Dem_ReportErrorStatus().
      P05: DET shall be informed with ErrorId: PDELAYFAILED_ERRORID(holding the configured value
           of EthTSynPdelayFailedReportErrorDetErrorId) via Det_ReportError().
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - EthTSynSyncFailedReportError set to DEM in P05
    - EthTSynSyncFailedReportError set to DET in P06
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times to elapse the PdelayInterval and transmit a
        PdelayRequest.
    02: Call EthTSyn_TxConfirmation() to confirm the PdelayRequest.
    03: Create a Pdelay Response frame.
    04: Call EthTSy_RxIndication() to receive the response.
    05: Set the destination MAC address to an incorrect value.
    06: Create a Pdelay Response Follow-Up frame using the incorrect MAC address.
    07: Call EthTSy_RxIndication() to receive the response follow up frame.
    P05:08: VP(): Verify that Dem_ReportErrorStatus() was called with EventID EBTEST_EVENTID_PDELAYFAILED and
        EventStatus as STATUS_PREFAILED.
    P06:08: VP(): Verify that Det_ReportError() was called with ErrorId taken from configured
        EthTSynSyncyFailedReportErrorDetErrorId.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1748</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1749</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2071</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01216_DEM_Pdelay_RespFUp_WrongNsField</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>17674</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a pdelay response follow up frame is received with nanoseconds bigger than 1s in
    responseOriginTimestamp field, the pdelay response follow up frame will be dropped and DEM shall be informed with
    EventID: EBTEST_EVENTID_PDELAYFAILED and EventStatus: STATUS_PREFAILED via Dem_ReportErrorStatus().
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    EthTSynPdelayFailedReportError set to DEM
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times to elapse the PdelayInterval and transmit a
        PdelayRequest.
    02: Call EthTSyn_TxConfirmation() to confirm the PdelayRequest.
    03: Create a Pdelay Response frame.
    04: Call EthTSy_RxIndication() to receive the response.
    05: Create a Pdelay Response follow up frame with responseOriginTimestamp.nanoseconds bigger than 1s.
    06: Call EthTSy_RxIndication() to receive the response follow up frame.
    07: VP(): Verify that Dem_ReportErrorStatus() was called with EventID EBTEST_EVENTID_PDELAYFAILED and
        EventStatus as STATUS_PREFAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_PdelayFailed_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1748</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2072</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01217_PdelayRespDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>17874</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the master receives a PdelayReq frame and has
    EthTSynGlobalTimePdelayRespEnable set to false, it shall not transmit the PdelayResp and
    PdelayRespFUp frames.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - EthTSynGlobalTimePdelayRespEnable is set to FALSE.
  
Test Execution: 
    01: Create a PdelayReq frame.
    02: Call EthTSyn_RxIndication() to receive the PdelayReq frame.
    03: Call EthTSyn_MainFunction() to transmit the PdelayResp frame.
    04: VP(): Verify that, since EthTSynGlobalTimePdelayRespEnable is set to false,
        nothing was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2073</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01218_PdelayReq_IncorrectLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>17938</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() is called for a PdelayReq frame and
    LenByte is smaller than ETHTSYN_PTP_HEADER_SIZE + ETHTSYN_PTP_PDELAY_REQ_PAYLOADSIZE,
    the frame shall be dropped.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Prepare a Pdelay request frame.
    02: Call EthTSyn_RxIndication() with LenByte = EBTEST_PDELAY_REQ_FRAME_SIZE - 1.
    03: VP(): Verify that EthIf_GetIngressTimeStamp() was not called.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PdelayReq_IncorrectLength.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2074</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01238_Slave_VltStbMIsEthFreerunningCounter</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>18007</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if VirtualLocalTimeSource of StbM  == ETH freerunning counter, the
    EthTSyn slave processes time synchronization frames and time synchronization follow
    up frames and calls only StbM_BusSetGlobalTime()
    If EthTSynHardwareTimestampSupport is set to true and StbM uses the Ethernet hardware counter
    as Virtual Local Time Source for the Time Base, the Sync Reception Delay will be 0.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 5
        TimeStamp.seconds = 0
        TimeStamp.secondsHi = 0
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP():
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame.
    04: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 10
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 0
    05: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    06: VP():
        Verify that StbM_BusSetGlobalTime() was called to pass the new time to StbM.
    07: VP(SWS_EthTSyn_00052):
        Verify that StbM_BusSetGlobalTime() was called with OriginTimeStamp.nanoseconds +
        SyncReceptionDelay(0 in this case).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2075</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01239_ActualPdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>18146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if the configuration parameter EthTSynPdelayFilter has a value greater then
    zero, then an EthTSyn slave shall use the formula
    Pdelay = PdelayOld + [(PdelayOld - PdelayNew) / 2^EthTSynPdelayFilter]
    on the last measured Pdelay to get the Pdelay for the next correction time calculation.
    The test expects that StbM_BusSetGlobalTime() receives the time data taking into account the
    enabled PdelayFilter (EthTSynPdelayFilter = 2).
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
    - EthTSynPdelayFilter for EbTest_EthTSynCtrl_S2 is 2.
  
Test Execution: 
    01: Call helper function to get the first calculated Pdelay.
    02: Call EthTSyn_MainFunction so a Pdelay request is sent.
    03: Call EthTSyn_TxConfirmation() to get the T1 via StbM_GetCurrentVirtualLocalTime().
    04: Create and receive Pdelay response frame and get T4 via StbM_GetCurrentVirtualLocalTime().
    05: Create and receive Pdelay response follow up frame.
    06: Create and receive sync frame.
    07: Create and receive sync follow up frame.
    08: VP(EthTSyn.EB.Slave.PdelayFilter.Enabled): Verify that StbM_BusSetGlobalTime() is called
        with expected Pdelay calculated. For the provided time base ID and time base data
        StbM_BusSetGlobalTime() is expected to receive the time stamp information with the Pdelay
        calculated according to the configured EthTSynPdelayFilter (DiffPdelayFilter = 38).
   09: VP(EthTSyn.EB.Slave_OverflowDetection): Verify that StbM_BusSetGlobalTime() was called
        with the right values..
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.PdelayFilter.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Slave_OverflowDetection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2076</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01240_SafeCar_MasterSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>18419</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Thie test verifies that if EthTSynTimeValidationSupport is enabled on a master port, on
    transmission of a sync frame, StbM_EthSetMasterTimingData() shall be called to update
    measureDataPtr.
  
Test Object: 
    Master transmitting sync frame with time validation enabled.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit a Sync frame.
    02: VP(): Verify that the Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the Sync frame.
    04: VP(): Verify that StbM_EthSetMasterTimingData() was called and SequenceId, SourcePortId,
        SyncEgressTimestamp and PreciseOriginTimestamp were updated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeValidation_MasterTransmit.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>753</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00215.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>754</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2077</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01241_SafeCar_SlaveSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>18630</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Thie test verifies that if EthTSynTimeValidationSupport is enabled on a slave port, on
    reception of a sync frame, StbM_EthSetSlaveTimingData() shall be called to update
    measureDataPtr.
  
Test Object: 
    Slave receiving Sync and SyncFUp frames with time validation enabled.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_RxIndication() to receive it.
    02: Create a SyncFUp frame and call EthTSyn_RxIndication() to receive it.
    03: VP(): Verify that StbM_BusSetGlobalTime() was called for SyncFUp frame.
    04: VP(): Verify that StbM_EthSetSlaveTimingData() was called and SequenceId, SourcePortId,
        SyncEgressTimestamp, PreciseOriginTimestamp, correctionField and Pdelay were updated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeValidation_SlaveReceive.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>755</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00217.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2078</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01242_SafeCar_MasterPdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>18782</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Thie test verifies that if EthTSynTimeValidationSupport is enabled on a master port, on
    transmission of a PdelayResp frame, StbM_BusGetCurrentTime() shall be called to retrieve a
    Time Tuple(T_refPDResponder; TVLT_refPDResponder) and on transmission of a PdelayRespFUp frame
    StbM_EthSetPdelayResponderData() shall be called to update measureDataPtr.
  
Test Object: 
    Master receiving a PdelayReq frame and transmitting PdelayResp and PdelayRespFUp frames with
    time validation enabled.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_RxIndication() to receive it.
    02: VP(EthTSyn.EB.GetVirtualProtection_PdelayReq):
        Verify that StbM_GetCurrentVirtualLocalTime() was called to get the IngressTimeStamp of the
        PdelayReq frame.
    03: Call EthTSyn_MainFunction() to process received PdelayReq frame.
    04: VP(): Verify that a PdelayResp was transmitted.
    05: VP(): Verify that StbM_BusGetCurrentTime() was called to retrieve a Time Tuple.
    06: Call EthTSyn_TxConfirmation() to confirm the PdelayResp frame.
    07: VP(EthTSyn.EB.GetVirtualProtection_PdelayResp):
        Verify that StbM_GetCurrentVirtualLocalTime() was called to get the IngressTimeStamp of the
        PdelayResp frame.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that a PdelayRespFUp frame was transmitted.
    10: Call EthTSyn_TxConfirmation() to confirm the PdelayRespFUp frame.
    11: VP(): Verify that StbM_EthSetPdelayResponderData() was called and SequenceId,
        requestPortId, responsePortId, requestReceiptTimestamp, responseOriginTimestamp,
        referenceLocalTimestamp and referenceGlobalTimestamp were updated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00218.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>757</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00219.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>758</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.GetVirtualProtection_PdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.GetVirtualProtection_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00225.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>762</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2079</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01243_SafeCar_SlavePdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>19040</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Thie test verifies that if EthTSynTimeValidationSupport is enabled on a slave port, on
    transmission of a PdelayReq frame, StbM_BusGetCurrentTime() shall be called to retrieve a
    Time Tuple(T_refPdInitiator; TVLT_refPDInitiator) and after Pdelay measurement is succesfully
    finished, StbM_EthSetPdelayInitiatorData() shall be called to update measureDataPtr.
  
Test Object: 
    Slave transmitting PdelayReq frame and receiving PdelayResp and PdelayRespFUp frames
    with time validation enabled.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynHardwareTimestampSupport is FALSE.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a PdelayReq frame is transmitted.
    02: VP(): Verify that the PdelayReq frame was transmitted.
    03: VP(): Verify that StbM_BusGetCurrentTime() was called to retrieve a Time Tuple.
    04: Call EthTSyn_TxConfirmation() to confirm transmission of PdelayReq frame.
    05: Create a PdelayResp frame.
    06: Call EthTSyn_RxIndication() to receive the PdelayResp frame.
    07: Create a PdelayRespFUp frame.
    08: Call EthTSyn_RxIndication() to receive the PdelayRespFUp frame.
    09: VP(): Verify that StbM_EthSetPdelayInitiatorData() was called and SequenceId,
        requestPortId, responsePortId, requestOriginTimestamp, responseReceiptTimestamp,
        requestReceiptTimestamp, responseOriginTimestamp, referenceLocalTimestamp,
        referenceGlobalTimestamp and Pdelay were updated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00223.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>759</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00221.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>760</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00224.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>761</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2080</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01244_SyncOnlyOnHostAndDebounceEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>19320</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted on each configured switch port.
  
Test Object: 
    Debounce feature on swt ports if EthTSynSendSyncFrameOnlyOnHostPort is enabled.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynSendSyncFrameOnlyOnHostPort set to TRUE
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_ProvideTxBuffer(),
        EthIf_EnableEgressTimeStamp() and EthSwt_PtpTransmit() have been called for host port with
        the correct parameters.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame on host port.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_MainFunction().
    06: VP():
        Check that no sync frame is transmitted for the non host ports.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    08: Call EthTSyn_MainFunction() for 6 times total, to elapse the debounce counter.
    09: VP():
        Verify that syncFup frames are transmitted on all ports that had valid egressTimeStamp.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynSendSyncFrameOnlyOnHostPort.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1762</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2081</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01245_DeviceAuth</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>19587</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a pdelay request with a valid authentication challenge TLV is received,
    the EthTSyn slave sends the pdelay response and pdelay response follow up frames
    together with a populated authentication challenge TLV containing the retrieved
    responseNonce and requesteNonce from DevAuth module.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynEnableDeviceAuthenticationSupport is enabled.
  
Test Execution: 
    01: Create a PdelayReq that contains DevAuth TLV.
    02: Call EthTSyn_RxIndication() to receive the PdelayReq.
    03: VP(EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV):
        Verify that DevAuth_PDelayReqIndication() was called, with IngressTimeStamp,
        RequestNonce taken from the TLV and the ResponseNonce from DevAuth.
    04: Call EthTSyn_MainFunction().
    05: VP(EthTSyn.EB.DevAuth_PdelayResp):
        Verify that the PdelayResp frame, with DevAuth TLV was transmitted.
    06: VP(EthTSyn.EB.DevAuth_TLV):
        Verify that PdelayResp frame contains the expected DevAuth TLV.
    07: Call EthTSyn_TxConfirmation().
    08: VP(EthTSyn.EB.DevAuth_PdelayRespTxConf):
        Verify that DevAuth_PDelayResIndication() was called with EgressTimeStamp
        and the RequestNonce.
    09: Call EthTSyn_MainFunction().
    10: VP(EthTSyn.EB.DevAuth_PdelayRespFUp):
        Verify that the PdelayRespFUp frame, with DevAuth TLV was transmitted.
    11: VP(EthTSyn.EB.DevAuth_TLV):
        Verify that PdelayRespFUp frame contains the expected DevAuth TLV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1768</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2082</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01246_DeviceAuth_InvalidTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>19796</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a pdelay request with a different tlvType(non authentication challenge TLV) is received,
    the EthTSyn module will send the pdelay_resp and pdelay_resp_fup without the authentication challenge TLV.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynEnableDeviceAuthenticationSupport is enabled.
  
Test Execution: 
    01: Create a PdelayReq that contains an invalid TLV.
    02: Call EthTSyn_RxIndication() to receive the PdelayReq.
    03: VP(): Verify that DevAuth_PDelayReqIndication() was not called.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that the PdelayResp frame, without DevAuth TLV was transmitted.
    06: Call EthTSyn_TxConfirmation().
    07: VP(): Verify that DevAuth_PDelayResIndication() was not called.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the PdelayRespFUp frame, without DevAuth TLV was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV_NOK.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1770</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2083</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01247_DeviceAuth_PdelayReqIndication_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>19983</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a pdelay request with a valid authentication challenge TLV is received,
    but the return value of DevAuth_PdelayReqIndication() api is different from E_OK,
    the EthTSyn module will send the pdelay_resp and pdelay_resp_fup without the authentication challenge TLV.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynEnableDeviceAuthenticationSupport is enabled.
  
Test Execution: 
    01: Create a PdelayReq that contains DevAuth TLV and prepare the devauth stub to return E_NOT_OK.
    02: Call EthTSyn_RxIndication() to receive the PdelayReq.
    03: VP(): Verify that DevAuth_PDelayReqIndication() was called.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that the PdelayResp frame, without DevAuth TLV was transmitted.
    06: Call EthTSyn_TxConfirmation().
    07: VP(): Verify that DevAuth_PDelayResIndication() was not called.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the PdelayRespFUp frame, without DevAuth TLV was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqIndication_NOK.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1772</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2084</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01248_DeviceAuth_PDelayResIndication_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>20177</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a pdelay request with a valid authentication challenge TLV is received,
    but the return value of DevAuth_PDelayResIndication() api is different from E_OK,
    the EthTSyn module will send the pdelay_resp with the authentication challenge TLV
    and pdelay_resp_fup without the authentication challenge TLV.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynEnableDeviceAuthenticationSupport is enabled.
  
Test Execution: 
    01: Create a PdelayReq that contains DevAuth TLV and prepare the devauth stub to return E_NOT_OK.
    02: Call EthTSyn_RxIndication() to receive the PdelayReq.
    03: VP(): Verify that DevAuth_PDelayReqIndication() was called, with IngressTimeStamp,
        RequestNonce taken from the TLV and the ResponseNonce from DevAuth.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that the PdelayResp frame, with DevAuth TLV was transmitted.
    06: Call EthTSyn_TxConfirmation().
    07: VP(): Verify that DevAuth_PDelayResIndication() was called.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the PdelayRespFUp frame, without DevAuth TLV was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PDelayResIndication_NOK.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1773</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2085</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01249_DeviceAuth_InvalidTLVLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>20379</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if a pdelay request with incorrect authentication challenge tlv length (different than 14) is received,
    the EthTSyn module will send the pdelay_resp and pdelay_resp_fup without the authentication challenge TLV.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynEnableDeviceAuthenticationSupport is enabled.
  
Test Execution: 
    01: Create a PdelayReq that contains an incorrect authentication challenge tlv length.
    02: Call EthTSyn_RxIndication() to receive the PdelayReq.
    03: VP(): Verify that DevAuth_PDelayReqIndication() was not called.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that the PdelayResp frame, without DevAuth TLV was transmitted.
    06: Call EthTSyn_TxConfirmation().
    07: VP(): Verify that DevAuth_PDelayResIndication() was not called.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the PdelayRespFUp frame, without DevAuth TLV was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqValidAuthTLV_NOK.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1771</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2086</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01244_PdelayResp_WithoutConfirmationPdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>20567</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall verify that if a PdelayResp frame is received before EthTSyn_TxConfirmation()
    is called for a PdelayReq, no further action shall take place and for a new Pdelay calculation
    a new PdelayReq frame needs to be transmitted.
  
Test Object: 
    Pdelay calculation
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Call helper function to transmit PdelayReq frame and confirm the transmission with T0 = 100 nanoseconds.
    02: Create a PdelayResp with TimeStamp T2 = 110 nanoseconds.
    03: Verify that EthIf_GetIngressTimeStamp() was called to get IngressTimeStamp T4 = 200 nanoseconds.
    04: Create a PdelayRespFUp frame with TimeStamp T3 = 190 nanoseconds.
    05: Verify that the calculated pdelay is  (t4 -t1 - (t3 - t2)) / 2 = (200-100-(190-110))/2 = 10.
    06: Call helper function to transmit PdelayReq frame and confirm the transmission with T0 = 300 nanoseconds.
    07: Call EthTSyn_MainFunction() to transmit the PDelayReq frame.
    08: Verify that the PdelayReq frame was transmitted.
    09: Instead of calling EthTSyn_TxConfirmation() call EthTSyn_RxIndication() to receive PdelayResp frame.
    10: Verify that EthIf_GetIngressTimeStamp() was called.
    11: Start a new Pdelay calculation and verify that a failed Pdelay calculation won't affect a new one.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NoConfirmationForPdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2087</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01245_T4T1_MAX</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>20988</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when calculating the Pdelay, if T4-T1 is equal to the maximum value
    for nanoseconds(999 999 999), calculation will be done as expected.
  
Test Object: 
    Pdelay calculation.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request(with T1 nanoseconds = 1).
    02: Create a PdelayResp frame with T2 = 20 000 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    03: Verify that EthIf_GetIngressTimeStamp() was called to get T4(1 second).
    04: Create a PdelayRespFup frame with T3 = 30 000 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay has the expected value(T4-T1 = 999 999 999, T3-T2 = 10 000.
        Calculated Pdelay = ((T4-T1)-(T3-T2))/2 = 499 994 999)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2088</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01246_T2_MAX</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>21112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when calculating the Pdelay, if T2 is equal to the maximum value
    for nanoseconds(999 999 999), calculation will be done as expected.
  
Test Object: 
    Pdelay calculation.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request(with T1 nanoseconds = 100000).
    02: Create a PdelayResp frame with T2 = 999 999 999 nanoseconds and call EthTSyn_RxIndication()
        to receive it.
    03: Verify that EthIf_GetIngressTimeStamp() was called to get T4(1 second and 50000 nanoseconds).
    04: Create a PdelayRespFup frame with T3 = 1 second and 999 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay has the expected value(T4-T1 = 999 950 000, T3-T2 = 1000.
        Calculated Pdelay = ((T4-T1)-(T3-T2))/2 = 499 974 500)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>747</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2089</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01247_T4_MAX</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>21235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when calculating the Pdelay, if T4 is equal to the maximum value
    for nanoseconds(999 999 999), calculation will be done as expected.
  
Test Object: 
    Pdelay calculation.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request(with T1 nanoseconds = 9999).
    02: Create a PdelayResp frame with T2 = 50000 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    03: Verify that EthIf_GetIngressTimeStamp() was called to get T4(999 999 999 nanoseconds).
    04: Create a PdelayRespFup frame with T3 = 999 950 000 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay has the expected value(T4-T1 = 999 990 000, T3-T2 = 999 000 000.
        Calculated Pdelay = ((T4-T1)-(T3-T2))/2 = 45000)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>748</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2090</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01248_T3_MAX</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>21358</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that when calculating the Pdelay, if T3 is equal to the maximum value
    for nanoseconds(999 999 999), calculation will be done as expected.
  
Test Object: 
    Pdelay calculation.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call helper function to receive a pdelay request(with T1 nanoseconds = 1 000 000).
    02: Create a PdelayResp frame with T2 = 9 999 999 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    03: Verify that EthIf_GetIngressTimeStamp() was called to get T4(1 second and 10000 nanoseconds).
    04: Create a PdelayRespFup frame with T3 = 999 999 999 nanoseconds and call
        EthTSyn_RxIndication() to receive it.
    05: Call EthTSyn_MainFunction() to start calculating the Pdelay.
    06: VP(): Verify that the Pdelay has the expected value(T4-T1 = 999 010 000, T3-T2 = 990 000 000.
        Calculated Pdelay = ((T4-T1)-(T3-T2))/2 = 4 505 000)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.NanosecondsLimit.vc04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>749</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2091</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01249_PdelayReqTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>21481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a Pdelay req frame is sent, but no pdelay_Resp is received within the configured
    PdelayRespAndRespFollowUpTimeout interval, the calculation of the pdelay is skipped.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - PdelayRespAndRespFollowUpTimeout is configured with a value bigger than 0.
  
Test Execution: 
    01: Module and stubs initialization.
    02: Call EthTSyn_MainFunction() until the Pdelay interval is elapsed.(a pdelay_req is sent).
    03: VP(): Verify that the frame was sent.
    04: Prepare times and call EthTSyn_TxConfirmation().
    05: VP(): Check that EthIf_GetEgressTimeStamp() was called with the right values.
    06: Create the pdelay_resp frame.
    07: Call EthTSyn_MainFunction() until the configured PdelayRespAndRespFollowUpTimeout expires.
    08: Receive a pdelay_Resp.
    09: VP(PRS_TS_00164.PdelayReqTimeout&lt;,PRS_TS_00193): Check that pdelay is not calculated.
        No function is called after a pdelay_resp is received.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.PdelayReqTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2092</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01250_PdelayRespTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>21653</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if a Pdelay resp frame was received, but no pdelay_Resp_fup is received within the configured
    PdelayRespAndRespFollowUpTimeout interval, the calculation of the pdelay is skipped.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - PdelayRespAndRespFollowUpTimeout is configured with a value bigger than 0.
  
Test Execution: 
    01: Module and stubs initialization.
    02: Call EthTSyn_MainFunction() until the Pdelay interval is elapsed.(a pdelay_req is sent).
    03: VP(): Verify that the frame was sent.
    04: Prepare times and call EthTSyn_TxConfirmation().
    05: VP(): Check that EthIf_GetEgressTimeStamp() was called with the right values.
    06: Create and receive the pdelay_resp frame.
    07: VP(): Verify that the frame was successfully received.
    08: Call EthTSyn_MainFunction() until the configured PdelayRespAndRespFollowUpTimeout expires.
    09: Create and receive the pdelay_resp_fup frame.
    10: VP(EthTSyn.PRS_TS_00164.PdelayRespTimeout, EthTSyn.PRS_TS_00004, EthTSyn.PRS_TS_00210):
        Check that pdelay is not calculated.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.PdelayRespTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2093</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01251_PdelayRespTimeoutDeactivated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>21931</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if PdelayRespAndRespFollowUpTimeout is equal to 0(deactivated)
    no supervision will take place.interval, the timeout observation will be skipped.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - PdelayRespAndRespFollowUpTimeout is configured with 0.
  
Test Execution: 
    01: Module and stubs initialization.
    02: Call EthTSyn_MainFunction() until the Pdelay interval is elapsed.(a pdelay_req is sent).
    03: VP(): Verify that the frame was sent.
    04: Prepare times and call EthTSyn_TxConfirmation().
    05: VP(): Check that EthIf_GetEgressTimeStamp() was called with the right values.
    06: Create and receive the pdelay_resp frame.
    07: VP(): Verify that the frame was successfully received.
    08: Call EthTSyn_MainFunction() multiple times.
    09: Create and receive the pdelay_resp_fup frame.
    10: VP(): Check that pdelay is calculated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00164.TimeoutDeactivated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2094</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01254_Slave_CheckSeqCounter</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22213</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that an EthTSyn Time Slave will not check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth if it is the first Sync after Initialization.
    Verify that an EthTSyn Time Slave will check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 5(mid value).
  
Test Execution: 
    01: Set the received sequence id to a value bigger than configured EthTSynGlobalTimeSequenceCounterJumpWidth
        to check that the frame is processed even if the jump width is bigger than the configured one.
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.EB.PRS_TS_xxxx1):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
    04: Set the received sequence id to a correct value(ActualSeqId - PrevSeqId &lt; (EthTSynGlobalTimeSequenceCounterJumpWidth = 5))
        and prepare the second received sync frame.
    05: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    06: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2095</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01255_Slave_CheckSeqCounter65535</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22344</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that an EthTSyn Time Slave will check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 65535(max value).
  
Test Execution: 
    01: Set the received sequence id to 0.
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
    04: Set the received sequence id to a correct value(ActualSeqId - PrevSeqId &lt; (EthTSynGlobalTimeSequenceCounterJumpWidth = 65535))
    05: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    06: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2096</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01256_Slave_CheckSeqCounter_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22470</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that an EthTSyn Time Slave will check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 1(min value).
  
Test Execution: 
    01: Set the received sequence id to 0.
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.EB.PRS_TS_xxxx1):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
    04: Set the received sequence id to a correct value(ActualSeqId - PrevSeqId &lt; (EthTSynGlobalTimeSequenceCounterJumpWidth = 1))
    05: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    06: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2097</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01257_Slave_CheckSeqCounter_Width0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22601</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that an EthTSyn Time Slave will check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth.
    Verify that if Sequence Counter Jump Width between two consecutive Sync messages
    of the same Time Domain (domainNumber) is 0 the Time Slave shall ignore the Sync message.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is FALSE.
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 5(mid value).
  
Test Execution: 
    01: Set the received sequence id to 0.
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.EB.PRS_TS_xxxx1&lt;):
        Verify that StbM_GetCurrentVirtualLocalTime() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
    04: Set the received sequence id to 0.
    05: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    06: VP(EthTSyn.EB.PRS_TS_xxxx1, EthTSyn.EB.PRS_TS_xxxx3):
        Because the EthTSynHardwareTimestampSupport is set to FALSE , StbM_GetCurrentVirtualLocalTime() is called,
        before checking the sequence counter.
    07: VP(): Verify that StbM_GetTimeBaseStatus() was called to check if StbM reported a timeout.
    08: Prepare the fup frame.
    09: Call EthTSyn_RxIndication() for incoming time Fup frame.
    10: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Check that the frame is not processed, no function is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2098</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01258_Slave_CheckSeqCounter_BigJumpWidth</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22743</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that an EthTSyn Time Slave will check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth.
    Verify that if the Sequence Counter Jump Width between two consecutive Sync messages
    of the same Time Domain (domainNumber) is greater than GlobalTimeSequenceCounterJumpWidth,
    the Time Slave shall ignore the Sync message.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 5(mid value).
  
Test Execution: 
    01: Set the received sequence id to 0.
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(EthTSyn.EB.PRS_TS_xxxx1):
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
    04: Set the received sequence id to an incorrect value(ActualSeqId - PrevSeqId &gt; (EthTSynGlobalTimeSequenceCounterJumpWidth = 5))
    05: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    06: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that no function is called, which means that the sync frame was ignored.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2099</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01258_Slave_SeqCounterJumpWidth_Configured_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22868</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifiest that if GlobalTimeSequenceCounterJumpWidth is configured to 0,
    the Slave will not check the sequence number of a received sync frame.
  
Test Object: 
    EthTSynGlobalTimeSequenceCounterJumpWidth.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 0.
  
Test Execution: 
    01: Set the received sequence id to 0.
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame, which means
        that the sync frame was accepted and processed.
    04: Set the received sequence id to a big value.
    05: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    06: Verify that EthIf_GetIngressTimeStamp() was called for second frame.
    07: Verify that StbM_GetTimeBaseStatus() was not called(meaning that the SequenceCounter was not checked).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2100</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01259_Slave_CheckSCGlobalTimeFollowUpTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>22992</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that an EthTSyn Time Slave will not check the Sequence Counter (sequenceId)
    of a received Sync message per Time Domain (domainNumber) against the configured value
    of GlobalTimeSequenceCounterJumpWidth if it is the first Sync after a Synchronization Timeout.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
    - EthTSynGlobalTimeFollowUpTimeout &gt; 0
    - EthTSynGlobalTimeSequenceCounterJumpWidth = 5(mid value).
  
Test Execution: 
    01: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    02: VP():
        Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame.
    03: Set StbM_GetTimeBaseStatus() to simulate a timeout during sync.
    04: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    05: Verify that StbM_GetTimeBaseStatus() was called.
    06: VP(): Verify that EthIf_GetIngressTimeStamp() was called so the sync frame was processed.
    07: Create and receive a SyncFUp frame so the cycle is complete.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2101</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01260_MasterSendsIncrementedSC</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master increment the Sequence Counter of a Sync message by 1 on each
    transmission request for a Sync message.The Sequence Counter shall wrap around at 65535 to 0 again
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() in a loop until Sequence Counter reaches the max value.
    02: VP():
        Verify that the first Sync frame transmitted contains SeqId 0 (The Sequence Counter
        (sequenceId) of a Sync message shall be initialized with 0).
        Verify that the sync frame contains the sequence counter incremented.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00187_Sync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2102</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01261_SlaveSendsIncrementedSC</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23298</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn master increment the Sequence Counter of a Pdelay_Req message by 1 on each
    transmission request for a Pdelay_Req message.The Sequence Counter shall wrap around at 65535 to 0 again
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit Pdelay_Req 
        in a loop until Sequence Counter reaches the max value.
    02: VP():
        Verify that the sync frame contains the sequence counter incremented.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2103</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01252_InvalidFrameType</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23441</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if development error detection is disabled and EthTSyn_RxIndication()
    is called with FrameType different than 0x88F7, the frame shall be dropped and no further
    action shall take place.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - DET disabled.
  
Test Execution: 
    01: Create a Sync frame.
    02: Call EthTSyn_RxIndication() with FrameType different than 0x88F7 to receive the sync frame.
    03: VP(): Verify that the frame dropped and no error was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RxIndication.InvalidFrameType_DetOFF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2104</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01253_IncorrectSyncFrameSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() to receive a sync frame and LenBytes has a
    value less than 44 bytes, the frame shall be dropped and no further action shall take place.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - DET disabled.
  
Test Execution: 
    01: Create a Sync frame.
    02: Call EthTSyn_RxIndication() with LenBytes less than 44 bytes to receive the sync frame.
    03: VP(): Verify that the frame dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Sync_IncorrectLength</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2105</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01254_BiggerSyncFrameSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23577</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() is called to receive a sync frame and LenBytes has a
    value grater than 44 bytes, the frame will be accepted and processed.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - DET disabled.
  
Test Execution: 
    01: Create a Sync frame.
    02: Call EthTSyn_RxIndication() with LenBytes larger than 44 bytes to receive the sync frame.
    03: VP(): Verify that the frame was processed and EthIf_GetIngressTimeStamp() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Sync_IncorrectLength</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2106</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01257_SyncLenbyteNOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23650</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() is called to receive a sync frame and the length
    bytes(3rd and 4th) are not equal to 44, the frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication()
  
Test Precondition: 
    - Module is initialized.
    - DET disabled.
  
Test Execution: 
    01: Create a Sync frame.
    02: Update length bytes in frame to be different than 44.
    03: Call EthTSyn_RxIndication().
    04: VP(): Verify that the frame was dropped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFrame_IncorrectLenBytes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2107</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01255_Master_SendPdelayRequestFrame_Retry</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23722</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a transmission fails for a PdelayReq frame, in the next
    EthTSyn_MainFunction() there shall be a retry.
  
Test Object: 
    Pdelay request frames.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction();
    02: VP: Verify that a Sync frame was transmitted.
    03: Call EthTSyn_MainFunction() and stop 1 call before the PdelayInterval expires.
    04: Verify that nothing was called.
    05: Set EthIf_ProvideTxBuffer() to return BUFREQ_E_NOT_OK so the transmission shall fail.
    06: Call EthTSyn_MainFunction().
    07: VP: Verify that besides EthIf_ProvideTxBuffer() no other API was called.
    08: Set EthIf_ProvideTxBuffer() to return BUFREQ_OK so the transmission shall not fail.
    09: Call EthTSyn_MainFunction().
    10: VP(EthTSyn.EB.PdelayReqTransmit_Retry, EthTSyn.EB.Master_TransmitPdelayRequestFrame):
        Verify that the PdelayReq frame was transmitted.
    11: Call EthTSyn_TxConfirmation() to confirm the PdelayReq transmission.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master_TransmitPdelayRequestFrame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PdelayReqTransmit_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2108</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01256_SwtTransmit_FrameOrder</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>23901</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if two frames are triggered at the same time, they shall be sent in
    this order: 1. Sync 2. Follow_Up 3. Pdelay_Req 4. Pdelay_Resp, Pdelay_Resp_Follow_Up.
  
Test Object: 
    Switch pdelay response.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted.
    02: Call EthTSyn_EthSwtPtpRxIndication() to receive a PdelayReq frame.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp from EthSwt.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted to all 3
        remaining configured ports.
    05: Call EthTSyn_MainFunction() and verify that a valid PdelayResp was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2109</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01014_Master_ReceiveSwtSyncFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>24136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_RxIndication() is called for a sync frame, using a configured master,
    ETHTSYN_E_TMCONFLICT shall be reported to DET and the frame shall be discarded.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EBTest_CreateSyncFrame() to prepare a sync frame.
    02: Call EthTSyn_EthSwtPtpRxIndication() to receive the sync frame, using a configured master.
    P05: 03: VP(EthTSyn.EB.Diagnostic_UnexpectedSync_DEM): Verify that
        EBTEST_DEM_EVENT_STATUS_FAILED status and the configured UNEXPECTEDSYNC event ID are
        reported to Dem_ReportErrorStatus.
    04: VP(EthTSyn.SWS_EthTSyn_00145): Verify that ETHTSYN_E_TMCONFLICT(0x01) was reported to DET.
    P05: 05: VP(EthTSyn.EB.Diagnostic_UnexpectedSync_DET.vc01):
        Verify that ETHTSYN_E_TMCONFLICT(with configured value
        of EthTSynUnexpectedSyncReportErrorDetErrorId) was reported to DET.
    06: VP(): Verify that EthTSyn_EthSwtPtpRxIndication() performed no action since a master was used.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00145</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DEM.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1745</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Diagnostic_UnexpectedSync_DET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2110</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01258_InvalidTsRxPdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>24249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSyn_EthSwtPtpRxIndication() is called with a valid PdelayReq frame and
    incorrect ingresstimestamp, the frame shall not be processed.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication().
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_EthSwtPtpRxIndication()
        (to receive a pdelay_req frame on port 0(non-host port) with incorrect timestamp (greater or equal than 1s)).
    02: VP(): Verify that nothing else was called(frame was dropped).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2111</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01015_GetProtocolParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>24350</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that EthTSyn_GetProtocolParam()  returns cumulativeScaledRateOffset, gmTimeBaseIndicator,
    lastGmPhaseChange and scaledLastGmFreqChange of the last received SyncFUp frame.
  
Test Object: 
    EthTSyn_GetProtocolParam()
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_RxIndication() to receive it.
    02: Create a SyncFUp frame.
    03: Update IEEE TLV bytes that contain cumulativeScaledRateOffset, gmTimeBaseIndicator, lastGmPhaseChange and scaledLastGmFreqChange.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05:VP(): Verify that the received SyncFUp frame was processed.
    06: Call EthTSyn_GetProtocolParam().
    07: VP(): Verify that ProtocolParam contains all values takem from the updated IEEE TLV from the SyncFUp frame.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2112</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01016_SetProtocolParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>24519</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_SetProtocolParam() is called before a SyncFUp frame is transmited,
    the IEEE TLV bytes in the SyncFUp frame will contain cumulativeScaledRateOffset, gmTimeBaseIndicator, lastGmPhaseChange
    and scaledLastGmFreqChange from the EthTSyn_SetProtocolParam() call.
  
Test Object: 
    EthTSyn_SetProtocolParam()
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to start transmitting a sync frame.
    02: Call EthTSyn_TxConfirmation().
    03: Call EthTSyn_SetProtocolParam().
    04: Call EthTSyn_MainFunction() to start transmitting the SyncFUp frame.
    05: VP(): Verify that the ProtocolParam set when EthTSyn_SetProtocolParam()
        was called is present in the transmitted SyncFUp frame.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2113</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01250_DeviceAuth_RxInvalidSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>24743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_RxIndication() is called to receive a PdelayReq that contains
    a authentication challenge tlv and parameter Length is smaller than 68, the EthTSyn module will send
    the PdelayResp and PdelayRespFup without the authentication challenge TLV.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynEnableDeviceAuthenticationSupport is enabled.
  
Test Execution: 
    01: Create a PdelayReq that contains an authentication challenge tlv length.
    02: Call EthTSyn_RxIndication() with legnth parameter size smaller than 68.
    03: VP(): Verify that DevAuth_PDelayReqIndication() was not called.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that the PdelayResp frame, without DevAuth TLV was transmitted.
    06: Call EthTSyn_TxConfirmation().
    07: VP(): Verify that DevAuth_PDelayResIndication() was not called.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the PdelayRespFUp frame, without DevAuth TLV was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DevAuth_PdelayReqWithTLV.vc02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1769</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2114</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01985_SwtGetTxBuffer_NULLPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>24928</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK,
    EthTSyn shall not try to access the buffer pointer, resulting in invalid access.
  
Test Object: 
    EthSwt_ProvideTxBuffer()
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_PtpTransmit() was called for host port.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Set return value of EthSwt_ProvideTxBuffer() to BUFREQ_E_NOT_OK.
        Call EthTSyn_MainFunction() to send swtsync frames for the rest of the ports.
    06: VP():
        Verify EthSwt_PtpTransmit() was not called for the rest of the ports.
    07: Set callout function and reset both test buffers. EbTest_SyncBufferSWT is populated as soon
        as EthSwt_ProvideTxBuffer() returns BUFREQ_OK.
    08: Call EthTSyn_MainFunction() to start transmission on all ports.
    09: Verify that EbTest_SyncBufferSWT is equal to EbTest_SyncBuffer since it wasn't populated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2115</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01986_UseAnotherTimeDomainCalculatedPdelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>25071</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynUseCalculatedPdelay is set to a valid EthTSynTimeDomain,
    upon receiving a SyncFUp frame, the calculated Pdelay value of the referenced domain shall
    be used.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynUseCalculatedPdelay set to valid TimeDomain.
  
Test Execution: 
    01: Call helper function to calculate a Pdelay for S1.
    02: Create Sync frame and call EthTSyn_RxIndication() to receive it on S5.
    03: Create SyncFUp frame and call EthTSyn_RxIndication() to receive it on S5.
    04: VP(): Verify that when calculating global time, the calculated Pdelay of S1 is used for S5.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.RemotePdelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2116</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01987_DomainNo_Not0_PdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>25240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a PdelayResp frame with DomainId different than 0 is received
    it shall be dropped and no further action shall take place.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until Pdelay timer expires.
    02: VP(): Verify that Pdelay was transmitted.
    03: Call EthTSyn_TxConfirmation() for PdelayReq frame.
    04: Create a PdelayResp frame with DomainId different than 0 and call EthTSyn_RxIndication() to receive it.
    05: VP(): Verify that nothing was called(StbM_GetCurrentVirtualLocalTime() should have been called).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.CheckPdelayDomainNr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2117</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01988_DomainNo_Not0_PdelayRespFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>25377</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a PdelayRespFUp frame with DomainId different than 0 is received
    it shall be dropped and no further action shall take place.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until Pdelay timer expires.
    02: VP(): Verify that Pdelay was transmitted.
    03: Call EthTSyn_TxConfirmation() for PdelayReq frame.
    04: Create a valid PdelayResp frame and call
        EthTSyn_RxIndication() to receive it.
    05: VP(): Verify StbM_GetCurrentVirtualLocalTime() was called.
    06: Create a PdelayRespFUp frame with DomainId different than 0 and
        call EthTSyn_RxIndication() to receive it.
    07: Simulate a syncrhonization(both sync/syncFUp frame received).
    08: VP(): Verify that the Pdelay was not calculated since no valid
        PdelayRespFUp was received.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.CheckPdelayDomainNr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2118</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01260_Retransmit_SyncFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>25620</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_Transmit() fails during  the transmission of a sync frame,
    EthTSyn shall try to retransmit the sync frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Set EthIf_Transmit() to return E_NOT_OK.
    02: Call EthTSyn_MainFunction() to start transmission of sync frame.
    03: Set EthIf_Transmit() to return E_NOT_OK for the next 5 transmissions.
    04: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry):
        Call EthTSyn_MainFunction() and verify that the sync transmission is
        retried for a total ammount of configured EthTSynMaxNumberOfTransmitRetries.
    05: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail):
        Verify that in the 6th EthTSyn_MainFunction() call, no retry was performed.
    06: Call EthTSyn_MainFunction() until EthTSynTxPeriod expires and a new sync cycle starts.
    07: VP(): Verify that a Sync frame was succesfully transmitted.
    08: Call EthTSyn_TxConfirmation() for the sync frame and verify that a SyncFUp frame was
        succesfully transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2119</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01261_Retransmit_SyncFUpFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>25840</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_Transmit() fails during  the transmission of a sync frame,
    EthTSyn shall try to retransmit the sync frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() and verify that the Sync frame was succesfully transmitted.
    02: Call EthTSyn_TxConfirmation() to confirm the sync frame.
    03: Set EthIf_Transmit() to fail the initial SyncFUp transmission and also the first 3 retries.
    04: Call EthTSyn_MainFunction() for initial SyncFUp transmission.
    05: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry):
        Call EthTSyn_MainFunction() 3 times and verify that a transmission of SyncFUp frame was retried.
    06: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success):
        Call EthTSyn_MainFunction() and verify that since EthIf_Transmit() was succesfully called before
        EthTSynMaxNumberOfTransmitRetries elapsed, the SyncFUp frame was transmitted correctly.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2120</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01262_Retransmit_PdelayRespFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>26020</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_Transmit() fails during  the transmission of a PdelayResp frame,
    EthTSyn shall try to retransmit the PdelayResp frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_RxIndication() to receive it.
    02: Set EthIf_Transmit() to fail the initial tranmission and the first retry.
    03: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry):
        Call EthTSyn_MainFuntion() and verify that the intial transmission and first
        retry were performed.
    04: Call EthTSyn_TxConfirmation() to confirm the PdelayResp frame and verify that
        StbM_GetCurrentVirtualLocalTime() was not called(because no valid PdelayResp frame was transmitted).
    05: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success):
        Call EthTSyn_MainFuntion() and verify that PdelayResp frame was transmitted.
    06: Call EthTSyn_TxConfirmation() and verify that StbM_GetCurrentVirtualLocalTime() was called.
    07: Call EthTSyn_MainFuntion() and verify that PdelayRespFup frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2121</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01263_Retransmit_PdelayRespFUpFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>26199</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_Transmit() fails during  the transmission of a PdelayRespFUp frame,
    EthTSyn shall try to retransmit the PdelayRespFUp frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_RxIndication() to receive it.
    02: Call EthTSyn_MainFuntion() and verify that the PdelayResp frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the PdelayResp frame.
    04: Call EthTSyn_MainFuntion() 6 times and verify that after the initial
        PdelayRespFup transmission failed, another 5 retries were performed.
    05: Call EthTSyn_MainFuntion() and verify that after EthTSynMaxNumberOfTransmitRetries
        was reached no other retry is performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2122</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01264_Retransmit_PdelayReqFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>26397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_Transmit() fails during  the transmission of a PdelayReq frame,
    EthTSyn shall try to retransmit the PdelayReq frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
  
Test Precondition: 
    - Module is initialized.
    - EthTSynMaxNumberOfTransmitRetries &gt; 0
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until a PdelayReq frame is transmitted.
    02: Set EthIf_Transmit() to fail initial try and first retry of transmission.
    03: VP(): Verify that EthIf_Transmit() was called to tranmsit the pdelayreq frame
    04: Call EthTSyn_MainFunction() and verify that a retransmission was performed.
    05: Call EthTSyn_MainFunction() and verify that a 2nd retransmission was performed.
    06: Call EthTSyn_TxConfirmation() to confirm the PdelayReq transmission.
    07: Receive a PdelayResp and a PdelayRespFUp frame.
    08: Call EthTSyn_MainFunction() to calculate the Pdelay and verify that calculated Pdelay is ok.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Success</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2123</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01265_Retransmit_PdelayRespFrameFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>26711</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_Transmit() fails during  the transmission of a PdelayResp frame,
    EthTSyn shall try to retransmit the PdelayResp frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - EthTSynMaxNumberOfTransmitRetries &gt; 0
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_RxIndication() to receive it.
    02: Set EthIf_Transmit() to fail the initial tranmission and all 3 retrie.
    03: Call EthTSyn_MainFunction() 4 times and verify that EthIf_Transmit() was called each time.
    04: VP(): Call EthTSyn_MainFunction() and verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2124</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01267_Retransmit_SWT_SyncFrameFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>26834</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_PtpTransmit() fails during  the transmission of a Sync frame,
    EthTSyn shall try to retransmit the EthSwt_PtpTransmit frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    EthTSynMaxNumberOfTransmitRetries
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMaxNumberOfTransmitRetries set to 3
  
Test Execution: 
    01: Set EthSwt_PtpTransmit() to fail initial Sync frame transmission and also the next 3 retries.
    02: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry):
        Call EthTSyn_MainFuntion() 4 times and verify that Sync transmission was tried each MF call.
    03: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail):
        Call EthTSyn_MainFuntion() a 5th time and verify that nothing was called(EthTSynMaxNumberOfTransmitRetries is 3).
    04: Call EthTSyn_TxConfirmation() and verify that nothing was called since no valid Sync was transmitted.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2125</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01266_Retransmit_SWT_PdelayRespFrameFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>27141</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_PtpTransmit() fails during  the transmission of a PdelayResp frame,
    EthTSyn shall try to retransmit the PdelayResp frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    EthTSynMaxNumberOfTransmitRetries
  
Test Precondition: 
    - Module is initialized.
    - EthTSynMaxNumberOfTransmitRetries set to 
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: VP(): Call EthTSyn_MainFunction() and verify that PdelayResp frame was transmitted.
    03: Set EthSwt_PtpTransmit() to return E_NOT_OK for the next 3 retries and call EthTSyn_MainFunction() to perform the retry.
    04: Call EthTSyn_MainFunction() a 5th time and verify that nothing was called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2126</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01267_Retransmit_SWT_PdelayRespFUpFrameFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>27342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_PtpTransmit() fails during  the transmission of a PdelayRespFUp frame,
    EthTSyn shall try to retransmit the PdelayRespFUp frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    EthTSynMaxNumberOfTransmitRetries
  
Test Precondition: 
    - Module is initialized.
    - EthTSynMaxNumberOfTransmitRetries set to 3
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: VP(): Call EthTSyn_MainFunction() and verify that PdelayResp frame was transmitted.
    03: Set EthSwt_PtpTransmit() to return E_NOT_OK for intial PdelayRespFUp transmission and also for the 3 retries.
    04: Call EthTSyn_MainFunction() 4 times and verify that EthSwt_PtpTransmit() was called each time.
    05: Call EthTSyn_MainFunction() a 5th time and verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2127</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01268_Retransmit_SWT_SyncFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>27610</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_PtpTransmit() fails during the transmission of a Sync frame on the HostPort,
    EthTSyn shall try to retransmit the Sync frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    EthTSynMaxNumberOfTransmitRetries
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMaxNumberOfTransmitRetries set to 3
  
Test Execution: 
    01: Set EthSwt_PtpTransmit() to fail initial Sync frame transmission and also the next 3 retries.
    02: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry):
        Call EthTSyn_MainFuntion() 4 times and verify that Sync transmission was tried each MF call.
    03: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail):
        Call EthTSyn_MainFuntion() a 5th time and verify that nothing was called(EthTSynMaxNumberOfTransmitRetries is 3).
    04: Call EthTSyn_TxConfirmation() and verify that nothing was called since no valid Sync was transmitted.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2128</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01269_Retransmit_SWT_SyncFUpFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>27826</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_PtpTransmit() fails during the transmission of a SyncFUp frame,
    EthTSyn shall try to retransmit the SyncFUp frame until it is succcesfully transmitted, or until
    EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    EthTSynMaxNumberOfTransmitRetries
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMaxNumberOfTransmitRetries set to 3
  
Test Execution: 
    01: Set EthSwt_PtpTransmit() to fail initial Sync frame transmission and also the next 3 retries.
    02: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry):
        Call EthTSyn_MainFuntion() 4 times and verify that Sync transmission was tried each MF call.
    03: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail):
        Call EthTSyn_MainFuntion() a 5th time and verify that nothing was called(EthTSynMaxNumberOfTransmitRetries is 3).
    04: Call EthTSyn_TxConfirmation() and verify that nothing was called since no valid Sync was transmitted.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2129</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01268_SeqCounter_First</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>28234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the received Sync frame is the first after startup, the
    time slave will consider the Sequence counter value valid.
  
Test Object: 
    Sequence Counter
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynSequenceCounterHysteresis is set to 5.
  
Test Execution: 
    01: Create and receive a Sync frame.
    02: VP(EthTSyn.EB.PRS_TS_xxxx1):
        Verify that no sequence counter check was done(StbM_GetTimeBaseStatus() was not called).
    03: VP(EthTSyn.EB.PRS_TS_xxxx1): Verify that the Sync message was processed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2130</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01269_SeqCounter_JumpWidth_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>28361</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the time domain is not in TIMEOUT and the difference between the sequence counters
    of consecutive sync frames is smaller than EthTSynSequenceCounterJump, the SeqCounter shall be accepted as valid.
  
Test Object: 
    Sequence Counter
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynSequenceCounterHysteresis is set to 5.
    - EthTSynSequenceCounterJump is set to 5.
  
Test Execution: 
    01: Receive a valid pair of Sync/SyncFUp frames.
    02: Create and receive a second Sync frame(SeqNr jump smaller than EthTSynSequenceCounterJump)
    03: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that sequence counter check was done(StbM_GetTimeBaseStatus() was called).
    04: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that the SeqCounter was accepted and Sync frame processed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2131</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01270_SeqCounter_JumpWidth_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>28500</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the time domain is not in TIMEOUT and the difference between the sequence counters
    of consecutive sync frames is greater than EthTSynSequenceCounterJump, the SeqCounter shall not be accepted.
  
Test Object: 
    Sequence Counter
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynSequenceCounterHysteresis is set to 5.
    - EthTSynSequenceCounterJump is set to 5.
  
Test Execution: 
    01: Receive a valid pair of Sync/SyncFUp frames.
    02: Create and receive a second Sync frame(SeqNr jump greater than EthTSynSequenceCounterJump)
    03: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that sequence counter check was done(StbM_GetTimeBaseStatus() was called).
    04: VP(EthTSyn.EB.PRS_TS_xxxx3):
        Verify that the SeqCounter was not accepted and frame processing stopped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2132</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01271_SeqCounter_Stuck</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>28613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the time domain is in TIMEOUT and the difference between the sequence counters
    of consecutive sync frames is equal to 0, the SeqCounter jump shall be considered invalid.
  
Test Object: 
    Sequence Counter
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynSequenceCounterHysteresis is set to 5.
    - EthTSynSequenceCounterJump is set to 5.
  
Test Execution: 
    01: Receive a valid pair of Sync/SyncFUp frames.
    02: Set StbM_GetTimeBaseStatus() to simulate a TIMEOUT on the time domain.
    03: Create and receive a second Sync frame(SeqNr jump smaller than EthTSynSequenceCounterJump)
    04: VP(EthTSyn.EB.PRS_TS_xxxx4):
        Verify that sequence counter check was done(StbM_GetTimeBaseStatus() was called).
    05: VP(EthTSyn.EB.PRS_TS_xxxx4):
        Verify that the SeqCounter jump was considered invalid and frame processing stopped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2133</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01272_SeqCounter_Stuck_First</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>28730</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if:
    - The received Sync message is the first one in TIMEOUT that has the SeqCounter not stuck, the sequence
    counter jump will be considered valid.
    - The difference between current Sync frame SeqNr and the previous one is less than EthTSynSequenceCoutnerJump,
    the sequence counter jump will be considered valid.
    - The number of consecutive valid sequence counter jumps is greater or equal to EthTSynSequenceCounterHysteresis,
    the SeqNr will be considered valid.
  
Test Object: 
    Sequence Counter
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynSequenceCounterHysteresis is set to 5.
    - EthTSynSequenceCoutnerJump is set to 5.
  
Test Execution: 
    01: Receive a valid pair of Sync/SyncFUp frames.
    02: Set StbM_GetTimeBaseStatus() to simulate a TIMEOUT on the time domain.
    03: Create and receive the 1st Sync frame in TIMEOUT(SeqNr does not matter)
    04: Create and receive the 2nd Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    05: Create and receive the 3rd Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    06: Create and receive the 4th Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    07: Create and receive the 5th Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    08: VP(EthTSyn.EB.PRS_TS_xxxx5, EthTSyn.EB.PRS_TS_xxxx6, EthTSyn.EB.PRS_TS_xxxx7):
        Verify that the SeqNr was accepted and Sync frame was processed..
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2134</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01273_SeqCounter_Failed_Hysteresis</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>29001</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if:
    - The received Sync message is the first one in TIMEOUT that has the SeqCounter not stuck, the sequence
    counter jump will be considered valid.
    - The difference between current Sync frame SeqNr and the previous one is greter than EthTSynSequenceCoutnerJump,
    the sequence counter jump will be considered valid.
    - The number of consecutive valid sequence counter jumps is greater or equal to EthTSynSequenceCounterHysteresis,
    the SeqNr will be considered valid.
  
Test Object: 
    Sequence Counter
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynSequenceCounterHysteresis is set to 5.
    - EthTSynSequenceCoutnerJump is set to 5.
  
Test Execution: 
    01: Receive a valid pair of Sync/SyncFUp frames.
    02: Set StbM_GetTimeBaseStatus() to simulate a TIMEOUT on the time domain.
    03: Create and receive the 1st Sync frame in TIMEOUT(SeqNr does not matter)
    04: Create and receive the 2nd Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    05: Create and receive the 3rd Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    06: Create and receive the 4th Sync frame in TIMEOUT(SeqNr jump smaller than EthTSynSequenceCounterJump)
    07: Create and receive the 5th Sync frame in TIMEOUT(SeqNr jump greater than EthTSynSequenceCounterJump)
    08: VP(EthTSyn.EB.PRS_TS_xxxx5, EthTSyn.EB.PRS_TS_xxxx6, EthTSyn.EB.PRS_TS_xxxx7):
        Verify that the SeqNr was not accepted and Sync frame was not processed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2135</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01258_TxConf_PdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>29223</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the frame transmission is configured in interrupt mode in lower modules,
    EthTSyn should not be affected by it. Therefore, if EthTSyn_TxConfirmation() is called in the context of
    PdelayReq frame transmission, the calculation of the pdelay is not affected
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynGlobalTimeTxPdelayReqPeriod configured witha value greater than 0.
  
Test Execution: 
    01: Call enough EthTSyn_MainFunction() until a Pdelay request frame was sent.
    02: Set callout function to call EthTSyn_TxConfirmation() when EthIf_Transmit() is called.
    03: VP(EthTSyn.SWS_EthTSyn_00013): Verify that EthIf_GetEgressTimeStamp()
        was called to get egress time stamp T1 with the right BufIdx.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2136</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01259_TxConf_PdelayResp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>29348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test verifies that if the frame transmission is configured in interrupt mode in lower modules,
    EthTSyn should not be affected by it. Therefore, if EthTSyn_TxConfirmation() is called in the context of
    PdelayResp frame transmission, the calculation of the pdelay is not affected.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - EthTSynGlobalTimePdelayRespEnable set to true
  
Test Execution: 
    01: Prepare a Pdelay request frame.
    02: Call EthTSyn_RxIndication().
    03: VP(EthTSyn.SWS_EthTSyn_00160): Verify that EthIf_GetIngressTimeStamp()
      was called to retrieve the ingress time stamp(T2).
    04: Set callout function to call EthTSyn_TxConfirmation() when EthIf_Transmit() is called.
    05: VP(EthTSyn.SWS_EthTSyn_00159): Verify that EthIf_GetEgressTimeStamp()
      was called to retrieve the egress time stamp(T3).
    06: VP(PRS_TS_00012, EthTSyn.SWS_EthTSyn_00201): Verify that Pdelay response frame is transmitted.
    07: VP(PRS_TS_00028, PRS_TS_00191_PdelayResp):
      Verify that the pdelay response frame has the correct header and payload.
    08: Call EthTSyn_MainFunction().
    09: VP(EthTSyn.EB.Master.SendPdelayResponseFU): Verify that Pdelay response follow up frame is
      transmitted.
    10: VP(PRS_TS_00028, PRS_TS_00191_PdelayRespFup):
      Verify that the pdelay response follow up frame has the correct header and payload.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPdelayResponseFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayResp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00191_PdelayRespFup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2137</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01272_InitialPdelayTxPeriod</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01.c</sourcefile>
      <sourceline>29531</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynInitialGlobalTimeTxPdelayReqPeriod is grater than 0, the first PdelayReq frame
    shall be transmitted after this cofnigured value elapses. Any subsequent PdelayReq frames will be transmitted using
    EthTSynGlobalTimeTxPdelayReqPeriod.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    - Module is initialized.
    - EthTSynInitialGlobalTimeTxPdelayReqPeriod &gt; 0.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() 100 times so EthTSynInitialGlobalTimeTxPdelayReqPeriod elapses.
    02: VP(): Verify that PdelayReq was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Create a PdelayResp frame and call EthTSyn_RxIndication() to receive it.
    05: Create a PdelayRespFUp frame and callEthTSyn_RxIndication() to received it.
    06: Call EthTSyn_MainFunction() to calculated the Pdelay.
    07: Perform a synchronization.
    08: VP(): Verify that StbM_BusSetGlobalTime() was called with updated timestamps.
    09: Call EthTSyn_MainFunction() 400 times(EthTSynGlobalTimeTxPdelayReqPeriod).
    10: VP(): Verify that PdelayReq was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynInitialGlobalTimeTxPdelayReqPeriod_First</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynInitialGlobalTimeTxPdelayReqPeriod_Subsequent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2138</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest01_Uninit_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test calls the GetVersionInfo API and compares the returned values
    with the version info stored in the module in both initialized/uninitialized states.
  
Test Object: None.
Test Precondition: 
    The module under test needs to have version information.
  
Test Execution: 
    01: Call GetVersionInfo API.
    02: VP(): The returned version information shall match output version information.
    03: Initialize module.
    04: Call GetVersionInfo API again.
    05: VP(): Verify that module version information is returned again.
  
Test Input: 
  
Test Output: 
    Output_VersionInfo.moduleID = EBTEST_CURRENT_MODULE_ID(TEST_MODULE_PREFIX);
    Output_VersionInfo.sw_major_version = EBTEST_CURRENT_SW_MAJOR_VERSION(TEST_MODULE_PREFIX);
    Output_VersionInfo.sw_minor_version = EBTEST_CURRENT_SW_MINOR_VERSION(TEST_MODULE_PREFIX);
    Output_VersionInfo.sw_patch_version = EBTEST_CURRENT_SW_PATCH_VERSION(TEST_MODULE_PREFIX);
    Output_VersionInfo.vendorID = EBTEST_CURRENT_VENDOR_ID(TEST_MODULE_PREFIX);
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2139</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01_Uninit_MainFunction</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall verify that EthTSyn_MainFunction() does not perform any action if module is
    not initialized.
  
Test Object: None.
Test Precondition: 
    Module is not initialized.
  
Test Execution: 
    01: EthTSyn_MainFunction() for not initialized module.
    02: VP(EthTSyn.EB.MainFunction.Uninit): Verify that no action was performed.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.MainFunction.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2140</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01130_MasterSendsAnnounceFramesPeriodically</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if configuration parameter EthTSynAnnounceFrameSupport is true,
    an EthTSyn master sends periodic announce frames.
  
Test Object: 
    Announce frames sent periodically.
  
Test Precondition: 
    - Module is initialized.
    - Config: EthTSynAnnounceFrameSupport is true.
    - Link is active for time sync master.
    - Tx mode is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to start announce frame transmission.
    02: VP(EthTSyn.EB.Master.SendPeriodicAnnounce): Verify that announce frame was sent.
    03: VP(PRS_TS_00028):
        Verify that the announce frame has the correct header and payload.
    04: VP(PRS_TS_00028):
        Verify that the sync frame has the correct header and payload.
    05: Confirm announce frame.
    06: Call EthTSyn_MainFunction() just before sync transmission timeout elapses.
    07: VP(EthTSyn.EB.Master.SendPeriodicAnnounce): Verify that no API was called.
    08: Call EthTSyn_MainFunction() to start next announce frame transmission.
    09: VP(EthTSyn.EB.Master.SendPeriodicAnnounce): Verify that announce frame was sent.
    10: VP(PRS_TS_00028):
        Verify that the second announce frame has the correct header and payload.
    11: VP(PRS_TS_00028):
        Verify that the second sync frame has the correct header and payload.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendPeriodicAnnounce</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2141</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01201_EthIf_NOT_OK_ProvideTxBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>393</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthIf_ProvideTxBuffer() returns other value than BUFREQ_OK no further action
    shall take place.
  
Test Object: 
    EthIf_ProvideTxBuffer.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthIf_ProvideTxBuffer() returns BUFREQ_E_NOT_OK, BUFREQ_E_BUSY and BUFREQ_E_OVFL.
  
Test Execution: 
    01: Set EthIf_ProvideTxBuffer() to return BUFREQ_E_NOT_OK, BUFREQ_E_BUSY and BUFREQ_E_OVFL.
    02: Loop over all 3 return values.
    03: Call EthTSyn_MainFunction() (to start sync frame transmission).
    04: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that EthIf_ProvideTxBuffer() was called.
    05: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that besides EthIf_ProvideTxBuffer() no other
        API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2142</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01202_EthIf_NOT_OK_Transmit_Sync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthIf_Transmit() returns E_NOT_OK, while transmitting a sync frame, the next call of
    EthTSyn_MainFunction() shall trigger the sync frame transmission again.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthIf_Transmit() returns E_NOT_OK.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: Call EthTSyn_MainFunction().
    03: VP(EthTSyn.EB.EthIf_Transmit_NotOk): Verify that because EthIf_Transmit() returned E_NOT_OK
        no timeout was set for the sync frame, and a new sync frame transmission started.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Transmit_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2143</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01203_EthIf_NOT_OK_Transmit_SyncFU</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>605</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthIf_ProvideTxBuffer() returns BUFREQ_E_NOT_OK while transmitting the sync
    follow up frame, no further action shall take place.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthIf_ProvideTxBuffer() returns BUFREQ_E_NOT_OK.
  
Test Execution: 
    01: Call helper function and successfully transmit a sync frame.
    02: Set EthIf_ProvideTxBuffer() to return BUFREQ_E_NOT_OK.
    03: Call EthTSyn_TxConfirmation() so the sync follow up frame will be sent.
    04: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that after calling EthIf_ProvideTxBuffer() no
        other API is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2144</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01204_EthIf_NOT_OK_Transmit_PdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify while receiving a Pdelay response, if EthIf_GetIngressTimeStamp() has TimeQuality other
    than ETH_VALID, or if TimeStamp.nanoseconds is greater than 1second, no further action shall
    take place.
  
Test Object: 
    Pdelay frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - TimeQuality = ETH_UNCERTAIN and ETH_INVALID.
    - TimeStamp.nanoseconds &gt; 999999999U.
  
Test Execution: 
    01: Prepare a Pdelay request frame.
    02: Set EthIf_GetIngressTimeStamp() TimeQuality to ETH_INVALID.
    03: Call EthTSyn_RxIndication().
    04: VP(EthTSyn.EB.InvTimeQuality.PdelayReqIngress): Verify that after
        EthIf_GetIngressTimeStamp() call, no further action took place.
    05: Set EthIf_GetIngressTimeStamp() TimeQuality to ETH_UNCERTAIN.
    06: Call EthTSyn_RxIndication().
    07: VP(EthTSyn.EB.InvTimeQuality.PdelayReqIngress): Verify that after
        EthIf_GetIngressTimeStamp() call, no further action took place.
    08: Set EthIf_GetIngressTimeStamp() TimeStamp.nanoseconds to 1second.
    09: Call EthTSyn_RxIndication().
    10: VP(EthTSyn.EB.InvTimeStamp.PdelayReqIngress): Verify that after
        EthIf_GetIngressTimeStamp() call, no further action took place.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeQuality.PdelayReqIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.InvTimeStamp.PdelayReqIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2145</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01131_AnnouncementFrame_TxBuffer_NOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest01ComplianceTrue/source/application/EthTSyn_ConTest01_P4.c</sourcefile>
      <sourceline>862</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthIf_ProvideTxBuffer() returns other value than BUFREQ_OK no further action
    shall take place.
  
Test Object: 
    EthIf_ProvideTxBuffer.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthIf_ProvideTxBuffer() returns BUFREQ_E_NOT_OK, BUFREQ_E_BUSY and BUFREQ_E_OVFL.
  
Test Execution: 
    01: Set EthIf_ProvideTxBuffer() to return BUFREQ_E_NOT_OK, BUFREQ_E_BUSY and BUFREQ_E_OVFL.
    02: Loop over all 3 return values.
    03: Call EthTSyn_MainFunction() (to start sync frame and announcement frame transmission).
    04: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that EthIf_ProvideTxBuffer() was called
        for both frames.
    05: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that besides EthIf_ProvideTxBuffer() no other
        API was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2146</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest02_0000_ReceiveOnBridge</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    If a SyncFUp frame is then received, in the following EthTSyn_MainFunction(), the correction
    field will be updated(EgressTimeStamp - IngressTimeStamp) and the SyncFUp frame shall be
    transmitted on all configured masters too.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for the slave port and all 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that the SyncFUp frame was transmitted on first configured master port, with updated correctionTime.
    08: VP(): Verify that EthSwt_PtpTransmit() was called with first master port's SwitchIdx and PortIdx.
    09: VP(): Verify that the SyncFUp frame was transmitted on second configured master port, with updated correctionTime.
    10: VP(): Verify that EthSwt_PtpTransmit() was called with second master port's SwitchIdx and PortIdx.
    11: VP(): Verify that the SyncFUp frame was transmitted on third configured master port, with updated correctionTime.
    12: VP(): Verify that EthSwt_PtpTransmit() was called with third master port's SwitchIdx and PortIdx.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BridgeWithGTMnotMgmCPU.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1754</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_GetTimeStamps.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1755</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ReceiveSyncFrameOnSlavePort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1709</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_ReceiveSyncFupFrameOnSlavePort.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1756</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1757</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2147</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0001_ReceiveIncorrectSwtIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called with incorrect
    MgmtInfo(not configured SwtIdx or PortIdx) the frame shall be dropped and nothing
    will happen in the next EthTSyn_MainFunction().
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Update MgmtInfo to hold invalid Idx values.
    02: Call helper function to create a sync frame.
    03: Call EthTSyn_EthSwtPtpRxIndication() to receive the sync frame, with invalid MgmtInfo.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1759</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2148</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0002_ReceiveUnknownFrameType_OnSwt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if an unknown frame is received via EthTSyn_EthSwtPtpRxIndication()
    the frame shall be dropped and nothing will happen in the next EthTSyn_MainFunction().
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Call helper function to create an unknown message type.
    02: Set EthTSyn_EthSwtPtpRxIndication() to receive the message.
    03: Call EthTSyn_MainFunction().
    04: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_UnknownFrameType.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1760</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2149</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0003_ReceiveOnBridge_CRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>506</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a received SyncFUp frame contains a TimeSecured Sub-TLV and the element CRC_Time_Flags contains BitMask 0x04
    the CRC validation shall take place. If the validation of CRC_Time_1 is successful, in the following
    EthTSyn_MainFunction(), the correction field (EgressTimeStamp - IngressTimeStamp) and the calculated
    CRC shall be updated and the SyncFUp frame shall be transmitted on all remaining ports.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame.
    06: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame.
    07: Verify that Crc_CalculateCRC8H2F() was called 5 times to calculate the CRC(for CRC_Time_1:
        CRC_Time_Flags, length of the message, correctionField, CrcSequenceId and the DataId).
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the SyncFUp frame was transmitted on first configured master port,
        with updated correctionTime and CRC_1.
    10: VP(): Verify that EthSwt_PtpTransmit() was called with first master port's SwitchIdx and PortIdx.
    11: VP(): Verify that the SyncFUp frame was transmitted on second configured master port,
        with updated correctionTime and CRC_1.
    12: VP(): Verify that EthSwt_PtpTransmit() was called with second master port's SwitchIdx and PortIdx.
    13: VP(): Verify that the SyncFUp frame was transmitted on third configured master port,
        with updated correctionTime and CRC_1.
    14: VP(): Verify that EthSwt_PtpTransmit() was called with third master port's SwitchIdx and PortIdx.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2150</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0003_ReceiveOnBridge_CRC_IncorrectCorrections</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>911</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if calculated correction is invalid, SyncFUp frame shall not be
    forwarded to respective port.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame.
    06: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame.
    07: Verify that Crc_CalculateCRC8H2F() was called 5 times to calculate the CRC(for CRC_Time_1:
        CRC_Time_Flags, length of the message, correctionField, CrcSequenceId and the DataId).
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that nothing was transmitted.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Swt_InvalidCorrection_Calculated</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2151</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0004_ReceiveOnBridge_CRC_NotEqual</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>1138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a SyncFUp frame that contains AUTOSAR TLV is then received and calculated CRC is not equal
    to the one received, the frame shall be dropped and synchronization failed.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive all 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame that has element CRC_Time_Flags containing BitMask 0x04.
    06: Set received CRC to be different from calculated one.
    07: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame.
    08: VP(): Verify that Crc_CalculateCRC8H2F() was called 5 times
        (for CRC_1) to calculate the CRC.
    09: Call EthTSyn_MainFunction().
    10: VP(): Verify that no action was performed.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2152</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0006_SyncFUpTxFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>1384</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a SyncFUp frame is then received, in the following EthTSyn_MainFunction(), the correction
    field will be updated(EgressTimeStamp - IngressTimeStamp) and the SyncFUp frame shall be
    transmitted on all configured masters too.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp
        for the slave port and all 3 EgressTimeStamps for master ports.
    05: Set EthSwt_ProvideTxBuffer() to return BUFREQ_E_NOT_OK so the
        transmission of SyncFUp for the second master fails.
    06: Create SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    07: Call EthTSyn_MainFunction().
    08: VP(EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts.vc01,
           EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp.vc01): Verify that the SyncFUp frame
           was transmitted on first configured master port, with updated correctionTime.
    09: VP(EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts.vc01,
           EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp.vc01): Verify that the SyncFUp frame
           was transmitted on third configured master port, with updated correctionTime.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BridgeWithGTMnotMgmCPU_FailedSyncFUp.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1761</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_PassFupFrameToMasterPorts.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1757</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2153</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0007_ReceiveOnBridge_CorrectionNotSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>1656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a received SyncFUp frame contains a TimeSecured Sub-TLV and the element CRC_Time_Flags
    does not contain BitMask 0x04 no CRC validation shall take place.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive all 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame.
    06: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame.
    07: Verify that Crc_CalculateCRC8H2F() was not called.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the received SyncFUp frame was copied and transmitted the first port.
    10: VP(): Verify that EthSwt_PtpTransmit() was called with first port's SwitchIdx and PortIdx.
    11: VP(): Verify that the received SyncFUp frame was copied and transmitted the second port.
    12: VP(): Verify that EthSwt_PtpTransmit() was called with second port's SwitchIdx and PortIdx.
    13: VP(): Verify that the received SyncFUp frame was copied and transmitted the third port.
    14: VP(): Verify that EthSwt_PtpTransmit() was called with third port's SwitchIdx and PortIdx.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2154</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0008_ReceiveOnBridge_CorrectionSet_FlagsNotSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>2021</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the received SyncFUp frame contains a TimeSecured Sub-TLV and the element CRC_Time_Flags contains BitMask 0x04
    the CRC validation shall take place. If the validation of CRC_Time_1 is successful, in the following
    EthTSyn_MainFunction(), the correction field (EgressTimeStamp - IngressTimeStamp) and the calculated
    CRC shall be updated and the SyncFUp frame shall be transmitted on all remaining ports.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for the slave
        port and all 3 EgressTimeStamps for remaining ports.
    05: Create SyncFUp frame.
    06: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame.
    07: Verify that Crc_CalculateCRC8H2F() was called 3 times to calculate the CRC(for CRC_Time_1:
        CRC_Time_Flags, correctionField and the DataId).
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the SyncFUp frame was transmitted on first configured port,
        with updated correctionTime and CRC_1.
    10: VP(): Verify that EthSwt_PtpTransmit() was called with first port's SwitchIdx and PortIdx.
    11: VP(): Verify that the SyncFUp frame was transmitted on second configured port,
        with updated correctionTime and CRC_1.
    12: VP(): Verify that EthSwt_PtpTransmit() was called with second port's SwitchIdx and PortIdx.
    13: VP(): Verify that the SyncFUp frame was transmitted on third configured port,
        with updated correctionTime and CRC_1.
    14: VP(): Verify that EthSwt_PtpTransmit() was called with third port's SwitchIdx and PortIdx.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2155</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0009_ReceiveOnBridge_IncorrectSyncLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>2416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a sync frame
    and the length parameter has a value smaller or greater than 44U(size of Sync frame),
    the frame will be dropped.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame.
    02: Call EthTSyn_EthSwtPtpRxIndication() to receive it with length parameter = 43.
    03: Call EthTSyn_MainFunction().
    04: VP(): Verify that the Sync frame was dropped.
    05: Call EthTSyn_EthSwtPtpRxIndication() to receive it with length parameter = 45.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that the Sync frame was dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_Sync_IncorrectLength</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2156</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0010_ReceiveOnBridge_IncorrectSyncFUpLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>2516</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a SyncFUp frame is received and length is less than smaller size
    of a SyncFUp frame(76), it shall be dropped and not forwarded to remaining configured ports.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for the slave
        port and  EgressTimeStamps for first configured port.
    05: Create SyncFUp frame.
    06: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame with length = 75.
    07: VP(): Verify that the SyncFUp frame was not processed.
    08: Call EthTSyn_MainFunction().
    09: VP(): Verify that the SyncFUp frame was not forwarded to configured ports.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2157</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0011_ReceiveOnBridge_SyncFUp_NoTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>2669</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynMessageCompliance is set to false and a SyncFUp frame that doesn't contain an
    AUTOSAR Sub-TLV is received, the message shall be processed, correctionTime shall be updated
    and forwarded to configured swt ports.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction() to start processing the Sync frame.
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for
        the first port and EgressTimeStamp for the remianing 3 ports.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() to process the SyncFUp frame.
    07: VP(): Verify that the SyncFUp frame was forwarded to remaining swt ports,
        with updated correction time.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2158</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0012_ReceiveOnBridge_InvalidLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>2925</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called with Len smaller than
    34(size of PTP_Header) ETHTSYN_E_PARAM shall be reported to DET.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call helper function to create a sync frame.
    02: Call EthTSyn_EthSwtPtpRxIndication() to receive the sync frame, with invalid Len.
    03: VP(): Verify that ETHTSYN_E_PARAM was reported to DET.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidHeaderSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2159</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0013_ReceiveOnBridge_InvalidDomainNo</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>2997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynMessageCompliance is true and a frame with DomainNumber different than 0 is received
    it shall be dropped.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame with invalid DomainId and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamps for one port.
    05: Create SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that nothing was called since no valid SyncFrame was received.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidDomainNumber</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2160</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0014_ReceiveAndSynchronize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>3142</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if a valid pair of Sync/SyncFUp frames are received and
    EthTSynSynchronizeSimpleBridge is set to true, in the context of EthTSyn_EthSwtPtpRxIndication()
    when receiving the SyncFUp frame, the synchronization shal take place and Stbm shall be informed via
    StbM_BusSetGlobalTime().
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(T4 is provided by EthSwt).
    02: Verify that EthIf_GetIngressTimeStamp() was called to get T6.
    03: Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were called calculate the Sync reception delay.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5 for the HostPort.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T7 for the first master port.
    06: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(OriginTimeStamp provided).
    07: VP(EthTSyn.EB.TransparentClock_Synchronize):
        Verify that StbM_BusSetGlobalTime() was called with the result OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4)
    08: Call EthTSyn_MainFunction().
    09: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01):
        Verify that SyncFUp frame was transmitted to the first master port with updated correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2161</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0015_ReceiveAndSynchronize_GetIngressFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>3355</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthIf_GetIngressTimeStamp() fails while trying to get T6
    during Sync frame reception, no synchronization shall take place when SyncFUp frame is received.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Set EthIf_GetIngressTimeStamp() to return INVALID timeQuality.
    02: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication()
        to receive it(T4 is provided by EthSwt).
    03: VP(): Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were not called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to get T5 for MasterPort and T7 for first HostPort.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive
        it(OriginTimeStamp provided).
    06: VP(EthTSyn.EB.TransparentClock_SynchronizeFailIngress):
        Verify that nothing was called during EthTSyn_EthSwtPtpRxIndication() - no synchronization
        took place.
    07: Call EthTSyn_MainFunction().
    08: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01): Verify that SyncFUp frame was
        transmitted to the first master port with updated correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SynchronizeFailIngress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2162</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0016_T5T4_Invalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>3559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if HostEgressTimeStamp_T5 - IngressTimeStamp_T4 has a negative value,
    no synchronization shall take place when SyncFUp frame is received.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication()
        to receive it(T4 is provided by EthSwt).
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5(smaller than T4).
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T7 for first master port.
    04: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it
      (OriginTimeStamp provided).
    05: VP(EthTSyn.EB.TransparentClock_SynchronizeT5T4_Invalid): Verify that nothing was
        called during EthTSyn_EthSwtPtpRxIndication() - no synchronization took place.
    06: Call EthTSyn_MainFunction().
    07: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01): Verify that SyncFUp frame was
        transmitted to the first master port with updated correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SynchronizeT5T4_Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2163</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0017_ReceiveOnBridge_InvalidDomainNoCRC</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>3766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynMessageCompliance is false and a frame with byte 4 different than the configured
    domain number is received it shall be dropped.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame with invalid DomainId and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamps for one port.
    05: Create SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that nothing was called since no valid SyncFrame was received.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_EthSwtPtpRxIndication.InvalidDomainNumber</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2164</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0018_ReceiveAndSynchronize_EgressAfterFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>3911</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the EgressTimestamp for the HostPort is received
    after the valid pair of Sync/SyncFUp is received, the synchronization shall take place
    in the context of the next EthTSyn_MainFunction().
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it
        (T4 is provided by EthSwt) and T6 via EthIf_GetIngressTimeStamp().
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp
        for the first master port.
    03: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it
        (OriginTimeStamp provided).
    04: Verify that nothing was called - synchronization didn't take place.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5 for the HostPort.
    06: Call EthTSyn_MainFunction().
    07: VP(EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUp):
        Verify that StbM_BusSetGlobalTime() was called with the result OriginTimeStamp +
        + correctionField + Pdelay + (T8 - T6) + (T5 - T4)
    08: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01):
        Verify that SyncFUp frame was transmitted to the first master port with updated
        correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2165</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0019_ReceiveAndSynchronize_EgressAfterFwFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>4132</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the EgressTimestamp for the HostPort is received
    after the SyncFUp was forwarded to each configured master port, the synchronization shall
    take place in the context of the next EthTSyn_MainFunction().
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive
      it(T4 is provided by EthSwt) and T6 via EthIf_GetIngressTimeStamp().
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp for
        all 3 configured master ports.
    03: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive
        it(OriginTimeStamp provided).
    04: Call EthTSyn_MainFunction().
    05: Verify that the SyncFUp frame with updated CorrectionField was forwarded for each
        configured master port that got an EgressTimeStamp from EthSwt.
    06: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5 for the HostPort.
    07: Call EthTSyn_MainFunction().
    08: VP(EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUpFW,
           EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01): Verify that StbM_BusSetGlobalTime()
        was called with the result OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4)
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize_EgressHostPortAfterSyncFUpFW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2166</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0020_ReceiveFUp_IncorrectSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>4423</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSyn_EthSwtPtpRxIndication() is called to receive a SyncFUp frame, and the length is
    smaller than 76 bytes, the frame shall be dropped.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and receive it.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for the first
        master port.
    03: Create a SyncFUp frame.
    04: Call EthTSyn_EthSwtPtpRxIndication() with length = 75 to receive the SyncFUp frame.
    05: Call EthTSyn_MainFunction().
    06: VP(): Verify that the SyncFUp frame was not forwarded to any ports.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2167</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0021_ReceiveFUpOnMaster</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>4587</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a SyncFUp
    frame and the SwitchIdx/PortIdx does not belong to a slave port, the frame shall be dropped.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(T4 is provided by EthSwt).
    02: Verify that EthIf_GetIngressTimeStamp() was called to get T6.
    03: VP(): Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were called to calculate the SRD.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5 for the HostPort.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T7 for the first master port.
    06: Create a SyncFUp frame.
    07: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame on a masterPort.
    08: VP(EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo): Verify that nothing was called.
    09: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame on the
        SlavePort(OriginTimeStamp provided).
    10: VP(EthTSyn.EB.TransparentClock_Synchronize): Verify that StbM_BusSetGlobalTime()
        was called with the result OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4)
    11: Call EthTSyn_MainFunction().
    12: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01):
        Verify that SyncFUp frame was transmitted to the first master port with
        updated correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtPtpRxIndication_Incorrect_MgmtInfo.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1759</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2168</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0022_PdelayBridge</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>4821</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the Pdelay is calculated correctly on a SimpleBridge.
  
Test Object: 
    Pdelay calculation
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: VP(EthTSyn.EB.TransparentClock_PdelayReqTransmission): Verify that the PdelayReq frame was
        transmitted via EthSwt_PtpTransmit() on the SlavePort.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamp_T1.
    04: Create a PdelayResp frame and receive it. T4 is provided via EthTSyn_EthSwtPtpRxIndication() and T2 in the PdelayRest frame.
    05: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() to start calculating the
        Pdelay = ((t4 - t1) - (t3 - t2)) / 2 = ((90000 - 10000) - (40000 - 20000))/ 2 = 30000 nanoseconds.
    07: Receive a pair of Sync/SyncFUp frames soe synchronization shall take place.
    08: VP(EthTSyn.EB.TransparentClock_PdelayCalculation): Verify that StbM_BusSetGlobalTime() was
        called with TimeStamp also including the calculated Pdelay.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayReqTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2169</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0023_PdelayBridge_TxBuffer_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>5109</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK while transmitting
    a PdelayReq frame on the slave port, the frame shall be dropped and nothing else shall be called.
  
Test Object: 
    Pdelay calculation
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Set EthSwt_ProvideTxBuffer() to return BUFREQ_E_NOT_OK.
    02: Call EthTSyn_MainFunction() enough times that the EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    03: VP(): Verify that EthSwt_ProvideTxBuffer() was called.
    04: VP(): Verify that nothing else was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayReqTransmission_FailedBuffer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2170</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0025_PdelayBridge_InvalidPdelayRespLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>5196</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayResp frame
    and lenght parameter is smaller than 54, the frame shall not be processed.
  
Test Object: 
    PdelayResp frame
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times so that EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: Verify that a PdelayReq frame was transmitted.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T1.
    04: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() with incorrect length to receive it.
    05: Create a PdelayRespFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() - Pdelay should be calculated in EthTSyn_MainFunction().
    07: Call helper function to receive a pair of Sync/SyncFUp frames. Helper function checks the synchronization is done with Pdelay = 0.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_PdelayResp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2171</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0026_PdelayBridge_PdelayResp_InvalidMgmt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>5366</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayResp frame
    and MgmtInfo parameter is not the SlavePort, the frame shall not be processed.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times so that EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: Verify that a PdelayReq frame was transmitted.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T1.
    04: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() with incorrect MgmtInfo(PortIdx is not the one the slavePort has) to receive it.
    05: Create a PdelayRespFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() - Pdelay should be calculated in EthTSyn_MainFunction().
    07: Call helper function to receive a pair of Sync/SyncFUp frames. Helper function checks the synchronization is done with Pdelay = 0.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_InvalidPdelayRespMgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2172</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0027_PdelayBridge_InvalidPdelayRespFUpLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>5540</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayRespFUp frame
    and lenght parameter is smaller than 54, the frame shall not be processed.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times so that EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: Verify that a PdelayReq frame was transmitted.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T1.
    04: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    05: Create a PdelayRespFUp frame and call EthTSyn_EthSwtPtpRxIndication() with incorrect length to receive it.
    06: Call EthTSyn_MainFunction() - Pdelay should be calculated in EthTSyn_MainFunction().
    07: Call helper function to receive a pair of Sync/SyncFUp frames. Helper function checks the synchronization is done with Pdelay = 0.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_PdelayRespFUp_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2173</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0028_PdelayBridge_PdelayRespFUp_InvalidMgmt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>5715</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayRespFUp frame
    and MgmtInfo parameter is not the SlavePort, the frame shall not be processed.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times so that EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: Verify that a PdelayReq frame was transmitted.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T1.
    04: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    05: Create a PdelayRespFUp frame and call EthTSyn_EthSwtPtpRxIndication() with incorrect MgmtInfo(PortIdx is not the one the slavePort has) to receive it.
    06: Call EthTSyn_MainFunction() - Pdelay should be calculated in EthTSyn_MainFunction().
    07: Call helper function to receive a pair of Sync/SyncFUp frames. Helper function checks the synchronization is done with Pdelay = 0.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_InvalidPdelayRespFUpMgmtInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2174</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0029_ReceiveAndSynchronize_ValidationOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>5890</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
    - if the received Sync frame shall be forwarded to all configured ports(EthTSynSimpleBridgeTSynSendSync is true)
    - the SyncFUp frame shall be checked for valid SequenceCounter.
    - Synchronization shall take place in the context of EthTSyn_EthSwtPtpRxIndication(), when a SyncFUp frame is received.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: VP(): Verify that EthIf_GetIngressTimeStamp() was called to get the IngressTimeStamp T6.
    03: VP(): Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were called to calculate SRD.
    04: VP(EthTSyn.EB.TransparentClock_EthTSynSendSync): Verify that the Sync frame was forwarded to all 3 master ports.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp T5
        for the HostPort and EgressTimeStamp for the remaining configured ports.
    06: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    07: VP(EthTSyn.EB.TransparentClock_Synchronize): Verify that StbM_BusSetGlobalTime() was called to perform the synchronzation:
        OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4) =
        110 + 0 + 0 + (250 - 180) + (150 - 50) = 280
    08: Call EthTSyn_MainFunction().
    09: Verify that the SyncFUp frame was transmitted on both masters that received an
        EgressTimeStamp and the CorrectionField is updated for both of them.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_EthTSynSendSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_ValidateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2175</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0038_ReceiveAndSynchronize_FailedFw</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>6214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn encounters any issues while forwarding the sync frame on a
    port, the received syncFUp frame shall not be forwarded to that port.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Set EthSwt_ProvideTxBuffer() to fail for the first transmission.
    02: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    03: VP(): Verify that EthIf_GetIngressTimeStamp() was called to get the IngressTimeStamp T6.
    04: VP(): Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were called to calculate SRD.
    05: VP(): Verify that for the first mater port only EthSwt_ProvideTxBuffer() was called.
    06: VP(): Verify that the Sync frame was forwarded to the other 2 master ports.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp T5 for the
        HostPort and EgressTimeStamp for the configured port that had the Sync frame successfully
        forwarded to.
    08: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    09: VP(): Verify that StbM_BusSetGlobalTime() was called to perform the synchronzation:
        OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4) =
        110 + 0 + 0 + (250 - 180) + (150 - 50) = 280
    10: Call EthTSyn_MainFunction().
    11: VP(): Verify that the SyncFUp frame was transmitted with the updated CorrectionField
        to the only master that had a valid Sync frame and EgressTimeStamp.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_EthTSynSendSync_FailedFw</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2176</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0030_Receive_IncorrectSC</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>6493</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the second received Sync frame has the sequence counter greater than the GlobalTimeSequenceCounterJumpWidth
    it shall be ignored.
  
Test Object: 
    GlobalTimeSequenceCounterJumpWidth
    EthTSynSimpleBridgeValidateSync
  
Test Precondition: 
    GlobalTimeSequenceCounterJumpWidth = 20
  
Test Execution: 
    01: Create a Sync frame with SeqId = 0 and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: VP(): Verify that the Sync frame was forwarded to all master ports.
    03: Create a Sync frame with SeqId = 0 and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    04: VP(): Verify that the frame was ignored, not forwarded to master ports.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_xxxx3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_ValidateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2177</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0031_Receive_IncorrectSrcPortId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>6770</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If SrcPortId of the second received sync frame is not equal to the first one,
    the frame shall be dropped and a DET shall be reported with ETHTSYN_E_TSCONFLICT.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
    MasterSlaveConflictDetection = true.
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Verify that the Sync frame was forwarded to all master ports.
    03: Update SrcPortId for the second Sync frame.
    04: Call EthTSyn_EthSwtPtpRxIndication() to receive the new Sync frame.
    05: VP(): Verify that ETHTSYN_E_TSCONFLICT was reported to Det_ReportRuntimeError.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_ValidateSync_ScrPortId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2178</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0030_Debounce</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>6963</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DebounceValue is configured, the received Sync frame will be forwarded
    to the master ports in the context of EthTSyn_MainFunction(). Also, after successfully receiving
    a SyncFUp frame, the debounce counter needs to elapse in order to forward the frame to the remaining ports.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction() to start forwarding the frames.
    03: VP(EthTSyn.EB.TransparentClock_DebounceValueSet): Verify that the Sync frame was
        forwarded to all maste ports.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() 10 times, enough to elapse the debounceCounter.
    07: VP(EthTSyn.EB.TransparentClock_DebounceValueElapse): Verify that the SyncFUp frame was
        forwarded to both master ports that received the EgressTimeStamp.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_DebounceValueSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_DebounceValueElapse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2179</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0032_SyncOnlyOnHost</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>7288</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynSendSyncFrameOnlyOnHostPort is set to true, the received sync frame shall only be
    forwarded to the HostPort.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction() to start forwarding the frames.
    03: VP(EthTSyn.EB.TransparentClock_SyncOnHost):
        Verify that the Sync frame was forwarded to the HostPort.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for 2 master ports.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() 10 times, enough to elapse the debounceCounter.
    07: VP(EthTSyn.EB.TransparentClock_DebounceValueElapse): Verify that the SyncFUp frame was
        forwarded to both master ports that received the EgressTimeStamp.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SyncOnHost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_DebounceValueElapse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2180</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0033_OriginTS_NS_Max</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>7580</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a SyncFUp frame with OriginTimeStamp equal to 1s is received, no synchronization shall take place.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for 1 master port.
    03: Create a SyncFUp frame with originTimeStamp = 1s and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    04: VP(): Verify that nothing was called.
    05: Call EthTSyn_MainFunction().
    06: Verify that the SyncFUp frame was forwarded to the MasterPort with updatet CorrectionField.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SyncFUp_NanoSecMax</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2181</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0034_NegativeCorrField</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>7776</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a SyncFUp frame with negative correction field is received, no synchronization shall take place.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for 1 master port.
    03: Create a SyncFUp frame with negative correctionField and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    04: VP(): Verify that nothing was called.
    05: Call EthTSyn_MainFunction().
    06: Verify that the SyncFUp frame was forwarded to the MasterPort with updatet CorrectionField.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.AddCorrField_NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2182</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0035_InvalidTS</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>7976</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthIf_GetCurrentTime() returns TimeStampQuality as ETH_INVALID, no synchronization shall
    take place, but the Sync frame will be forwarded to all master ports with valid egressTS.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02 Set EthIf_GetCurrentTime() to return ETH_INVALID TimeQuality.
    03: VP(): Verify that only EthIf_GetIngressTimeStamp() and EthIf_GetCurrentTime() were called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to get T5 for MasterPort and T7 for first HostPort.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive
        it(OriginTimeStamp provided).
    06: VP(EthTSyn.EB.TransparentClock_SynchronizeFailIngress):
        Verify that nothing was called during EthTSyn_EthSwtPtpRxIndication() - no synchronization
        took place.
    07: Call EthTSyn_MainFunction().
    08: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01): Verify that SyncFUp frame was
        transmitted to the first master port with updated correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_InvalidTimeStamp</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2183</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0036_MasterPortReceivePdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>8176</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynMessageCompliance is true and a frame with DomainNumber different than 0 is received
    it shall be dropped.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_EthSwtPtpRxIndication() to receive it on the MasterPort.
    02: Call EthTSyn_MainFunction().
    03: VP(EthTSyn.EB.TimeAwareBridge_MasterReceivePdelayReq):
        Verify the MasterPort transmitted a PdelayResp frame.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp.
    05: Call EthTSyn_MainFunction().
    06: VP(EthTSyn.EB.TimeAwareBridge_MasterTransmitPdelayRespFUp):
        Verify the MasterPort transmitted a PdelayRespFUp frame.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_MasterReceivePdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_MasterTransmitPdelayRespFUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2184</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0037_DEM_FailedSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>8352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If there is a mismatch between received Sync/SyncFUp SeqCounter,
    the frame procesing shall stop and Dem_ReportErrorStatus() shall be called with EventId
    EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame with SC = 0 and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for masterPorts.
    03: Create a SyncFUp frame with SC = 10 and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    04: VP(): Verify that Dem_ReportErrorStatus() was called with EventId
        EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2185</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0039_ReceiveOnBoundaryClock</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>8601</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies the that the BoundaryClock behaves as expected after a synchronization took place:
    - During EthTSyn_MainFunction() a Sync frame shall be transmitted on the HostPort.
    - After the Sync on HostPort is confirmed, in the next EthTSyn_MainFunction() sync frames shall be sent on remaining MasterPorts.
    - During EthTSyn_MainFunction(), SyncFUp frames shall be sent on all MasterPorts that received EgressTimeStamps from EthSwt.
  
Test Object: 
    BoundaryClock
  
Test Precondition: 
  
Test Execution: 
    01: Call helper function to receive Sync/SyncFUp pair and perform sync.
    02: Call EthTSyn_MainFunction().
    03: VP(EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort):
        Verify that a Sync frame was transmitted on the HostPort.
    04: Call EthTSyn_TxConfirmation().
    05: Call EthTSyn_MainFunction().
    06: VP(EthTSyn.EB.BoundaryClock_TransmitSyncOnMasterPorts):
        Verify that Sync frames were transmitted on remaining configured MasterPorts.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() to get EgressTimeStamp for 1 MasterPort.
    08: Call EthTSyn_MainFunction().
    09: VP(EthTSyn.EB.BoundaryClock_TransmitSyncFUpOnMasterPorts):
        Verify that the SyncFUp frame was transmitted on the MasterPort that received EgressTimeStamp.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnMasterPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncFUpOnMasterPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2186</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0040_ReceiveOnBoundaryClock_BeforeRxSyncFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>8828</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If no synchronization took place on the boundaryClock, as soon as EthTSynBridgeTxPeriod elapses,
    a Sync frame shall be transmitted on the HostPort.
  
Test Object: 
    EthTSynBridgeTxPeriod
  
Test Precondition: 
  
Test Execution: 
    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_NoSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2187</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0041_ReceiveOnBoundaryClock_BeforeHalfPeriod</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>9019</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a new synchronization takes place before half EthTSynBridgeTxPeriod is reached,
    as soon as the EthTSynBridgeTxPeriod elapses, a new Sync frame shall be transmitted to the HostPpoort.
  
Test Object: 
    EthTSynBridgeTxPeriod
  
Test Precondition: 
  
Test Execution: 
    01: Receive valid pair of Sync/SyncFUp frames and perform sync.
    02: Call EthTSyn_MainFunction().
    03: Verify that Sync frame was transmitted on the HostPort.
    04: Receive valid pair of Sync/SyncFUp frames and perform sync.
    05: Call EthTSyn_MainFunction() for 10 times.
    06: Receive valid pair of Sync/SyncFUp frames and perform sync.
    07: Call EthTSyn_MainFunction() the remaining 20 times.
    08: VP(): Verify that the Sync frame was transmitted on HostPort.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_SecondTx_Less</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2188</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0042_ReceiveOnBoundaryClock_AfterHalfPeriod</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>9166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If a new synchronization takes place after half EthTSynBridgeTxPeriod is reached,
    in the next EthTSyn_MainFunction() a new Sync frame shall be transmitted to the HostPort.
  
Test Object: 
    EthTSynBridgeTxPeriod
  
Test Precondition: 
  
Test Execution: 
    01: Receive valid pair of Sync/SyncFUp frames and perform sync.
    02: Call EthTSyn_MainFunction().
    03: Verify that Sync frame was transmitted on the HostPort.
    04: Receive valid pair of Sync/SyncFUp frames and perform sync.
    05: Call EthTSyn_MainFunction() for 15 times.
    06: Receive valid pair of Sync/SyncFUp frames and perform sync.
    07: Call EthTSyn_MainFunction() once.
    08: VP(): Verify that the Sync frame was transmitted on HostPort.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort_SecondTx_More</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2189</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0043_EgressAfterSyncFUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>9297</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynSimpleBridge is false and the EgressTimeStamp for the HostPort
    is received only after a valid pair of Sync/SyncFUp frames, the synchronization shall take place in
    the first EthTSyn_MainFunction() call and in the second call the Sync frame shall be transmitted on the HostPort.
  
Test Object: 
    BoundaryClock
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: VP(EthTSyn.SWS_EthTSyn_00138): Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime()
        were not caalled to calculate SRD since EthTSyn is configured as a free running counter.(SRD will be 0).
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp for a MasterPort.
    03: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    04: Verify that no synchronization took place.
    05: Call EthTSyn_MainFunction() and verify that the Sync frame was not transmitted.
    06: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp for the HostPort.
    07: Call EthTSyn_MainFunction() and verify that synchronization took place and StbM_BusSetGlobalTime() was called with updated TimeStamp.
    08: VP(EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort): Call EthTSyn_MainFunction() and verify that Sync frame was forwarded to the HostPort.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.BoundaryClock_TransmitSyncOnHostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2190</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0044_DEM_FailedSync_Boundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>9612</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the SequenceCounter jump between two Sync frames is grater than the configured
    SequenceJumpWitdh the frame procesing shall stop and Dem_ReportErrorStatus() shall be
    called with EventId EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame with SC = 0 and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Create a SyncFUp frame with SC = 30 and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    03: VP(): Verify that Dem_ReportErrorStatus() was called with EventId
        EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress_SC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2191</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0045_DEM_FailedSyncGetIngress_Boundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>9734</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthIf_GetIngressTimeStamp() returns a TimeQuality as ETH_INVALID while receiving a Sync frame
    the frame procesing shall stop and Dem_ReportErrorStatus() shall be called with EventId
    EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Call helper function to create a Sync frame.
    02: Set EthIf_GetIngressTimeStamp() to return TimeQuality ETH_INVALID.
    03: Call EthTSyn_EthSwtPtpRxIndication() to receive the Sync frame.
    04: VP(): Verify that Dem_ReportErrorStatus() was called with EventId
        EBTEST_EVENTID_SYNCFAILED and EventStatus EBTEST_DEM_EVENT_STATUS_PREFAILED.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_DEM_FailedSync_Ingress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2192</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0046_SyncBridge_Validation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>9845</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if a valid pair of Sync/SyncFUp frames are received and
    EthTSynSynchronizeSimpleBridge is set to true, in the context of EthTSyn_EthSwtPtpRxIndication()
    when receiving the SyncFUp frame, the synchronization shall take place and Stbm shall be informed via
    StbM_BusSetGlobalTime().
    Because TimeValidation is enabled, StbM_EthSetSlaveTimingData() shall be called after synchronization takes place and
    StbM_EthSetMasterTimingData() when transmitting the SyncFUp to master ports.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
    TimeValidation enabled.
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(T4 is provided by EthSwt).
    02: Verify that EthIf_GetIngressTimeStamp() was called to get T6.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5 for the HostPort.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T7 for the first master port.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(OriginTimeStamp provided).
    06: Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were called ot get T8 and Virtual T8.
    07: VP(EthTSyn.EB.TransparentClock_Synchronize):
        Verify that StbM_BusSetGlobalTime() was called with the result OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4)
    08: VP(EthTSyn.EB.SWS_EthTSyn_00217.vc01): Verify that StbM_EthSetSlaveTimingData() was called with correct measureDataPtr.
    09: Call EthTSyn_MainFunction().
    10: VP(EthTSyn.EB.SWS_EthTSyn_00215.vc01): Verify that StbM_EthSetMasterTimingData() was called with correct measureDataPtr.
    11: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01):
        Verify that SyncFUp frame was transmitted to the first master port with updated correction field(T7 - T4).
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00217.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00215.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>754</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2193</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0047_PdelayBridge_Validation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>10180</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if TimeValidation is enabled and the Pdelay was succesfully calculated,
    StbM_EthSetPdelayInitiatorData() will be called with Pdelay related parameters updated(T1, T2, T3, T4 and Pdelay).
  
Test Object: 
    Pdelay calculation
  
Test Precondition: 
    - Module is initialized.
    - TimeValidation enabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: VP(EthTSyn.EB.TransparentClock_PdelayReqTransmission): Verify that the PdelayReq frame was
        transmitted via EthSwt_PtpTransmit() on the SlavePort.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamp_T1.
    04: Create a PdelayResp frame and receive it. T4 is provided via EthTSyn_EthSwtPtpRxIndication() and T2 in the PdelayRest frame.
    05: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() to start calculating the
        Pdelay = ((t4 - t1) - (t3 - t2)) / 2 = ((90000 - 10000) - (40000 - 20000))/ 2 = 30000 nanoseconds.
    07: VP(EthTSyn.EB.SWS_EthTSyn_00221.vc01, EthTSyn.PRS_TS_00060): Verify that StbM_EthSetPdelayInitiatorData() was called with correct measureDataPtr.
    08: Receive a pair of Sync/SyncFUp frames so synchronization shall take place.
    09: VP(EthTSyn.EB.TransparentClock_PdelayCalculation): Verify that StbM_BusSetGlobalTime() was
        called with TimeStamp also including the calculated Pdelay.
    10: VP(EthTSyn.EB.SWS_EthTSyn_00217.vc01): Verify that StbM_EthSetSlaveTimingData() was called with updated Pdelay.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayReqTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_PdelayCalculation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00221.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>760</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00217.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2194</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0048_MasterPortReceivePdelayReq_Validation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>10602</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if a SlavePort initiated a Pdelay calculation and TimeValidation is enabled for the
    MasterPort, the responder shall pass Pdelay related information to StbM via StbM_EthSetPdelayResponderData.
  
Test Object: 
    Pdelay frames.
  
Test Precondition: 
    TimeValidation enabled.
  
Test Execution: 
    01: Create a PdelayReq frame and call EthTSyn_EthSwtPtpRxIndication() to receive it on the MasterPort.
    02: Call EthTSyn_MainFunction().
    03: VP(EthTSyn.EB.TimeAwareBridge_MasterReceivePdelayReq):
        Verify the MasterPort transmitted a PdelayResp frame.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the EgressTimeStamp.
    05: Call EthTSyn_MainFunction().
    06: VP(EthTSyn.EB.TimeAwareBridge_MasterTransmitPdelayRespFUp):
        Verify the MasterPort transmitted a PdelayRespFUp frame.
    07: VP(EthTSyn.EB.SWS_EthTSyn_00219.vc01): Verify that StbM_EthSetPdelayResponderData() was called with correct measureDataPtr.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TimeAwareBridge_MasterReceivePdelayReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00219.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2195</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0049_SyncBoundary_Validation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>10815</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if there was a succesfull synchronization over a BoundaryClock that has
    TimeValidation enabled, StbM_EthSetSlaveTimingData() shall be called to pass to the StbM required data.
    StbM_EthSetMasterTimingData() shall also be called when the SyncFUp messages are forwarded.
  
Test Object: 
    TimeValidation
  
Test Precondition: 
    TimeValidation enabled.
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TImeStamps for HostPort and for one MasterPort.
    03: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    04: Verify that synchronization took place.
    05: VP(): Verify that StbM_EthSetSlaveTimingData() was called with correct measureDataPtr.
    06: Call EthTSyn_MainFunction() to transmit Sync frame on HostPort.
    07: Call EthTSyn_TxConfirmation() and EthTSyn_MainFunction() to cofirm the frame and start transmitting the Sync to remaining MasterPorts.
    08: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive timeStamps and EthTSyn_MainFunction() to start processing the frames.
    09: VP(): Verify that the SyncFUp frame was transmitted.
    10: VP(): Verify that StbM_EthSetMasterTimingData() was called with correct measureDataPtr.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00217.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00215.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>754</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2196</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0050_SyncOnlyOnHost_Validation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>11175</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies TimeValidation on a TimeDomain on which EthTSynSendSyncFrameOnlyOnHostPort is enabled.
  
Test Object: 
    EthTSynSendSyncFrameOnlyOnHostPort.
  
Test Precondition: 
    TimeValidation enabled.
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: VP(EthTSyn.EB.TransparentClock_SyncOnHost):
        Verify that the Sync frame was forwarded to the HostPort.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for 2 master ports.
    04: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    05: VP(): Verify that StbM_EthSetSlaveTimingData() was called with correct measureDataPtr.
    06: Call EthTSyn_MainFunction().
    07: Verify that the SyncFUp frame was forwarded to both master ports that received the EgressTimeStamp.
    08: VP(): Verify that StbM_EthSetMasterTimingData() was called only for the first port, which had Timevalidation enabled
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_SyncOnHost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00217.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SWS_EthTSyn_00215.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>754</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2197</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0051_ReceiveOnBridge_IncorrectSyncLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>11511</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a sync frame
    and length parameter is grater than the size of a sync frame(44), the frame shall be accepted
    and processed.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() with length = 45 to receive it.
    02: VP(): Verify that EthIf_GetIngressTimeStamp() was called to get the IngressTimeStamp T6.
    03: VP(): Verify that the Sync frame was forwarded to all 3 master ports.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_Sync_IncorrectLength</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2198</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0052_ReceiveOnBridge_IncorrectSyncLenBytes</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>11669</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a sync frame
    and length parameter is grater than the size of a sync frame(44), the frame shall be accepted
    and processed.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame.
    02: Update length byte to be different than 44.
    03: Call EthTSyn_EthSwtPtpRxIndication() to receive the sync frame.
    04: VP(): Verify that the frame was dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SyncFrame_IncorrectLenBytes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2199</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0053_InvalidTsRxInd</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>11748</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that if the EthSwt is providing an invalid timestamp (timestamp.Nanoseconds &gt;= 1s), EthTSyn
    will dropp the call.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Set an invalid value of the incoming timestamp.
    02: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    03: Call EthTSyn_MainFunction().
    04: VP(): Verify that nothing was called.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for the slave port and all 3 EgressTimeStamps for master ports.
    06: Create SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    07: Call EthTSyn_MainFunction().
    08: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2200</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0054_InvalidTsRxTSInd</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>11937</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that if the EthSwt is providing an invalid timestamp (timestamp.Nanoseconds &gt;= 1s), EthTSyn
    will dropp the call.
  
Test Object: 
    EthTSyn_EthSwtPtpTimeStampIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: VP(): Verify that nothing was called.
    04: Set an invalid value of the incoming timestamp for PortIdx = 3 .
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the IngressTimeStamp for the slave port and all 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that the SyncFUp frame was transmitted on first configured master port, with updated correctionTime.
    08: VP(): Verify that EthSwt_PtpTransmit() was called with first master port's SwitchIdx and PortIdx.
    09: VP(): Verify that the SyncFUp frame was transmitted on second configured master port, with updated correctionTime.
    10: VP(): Verify that EthSwt_PtpTransmit() was called with second master port's SwitchIdx and PortIdx.
    11: VP(): Verify that the SyncFUp frame was not transmitted on third configured master port.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2201</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0055_InvalidTsRxPdelayReqsp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>12193</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_EthSwtPtpRxIndication() is called to receive a PdelayResp frame
    incorrect ingresstimestamp, the frame shall not be processed.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication().
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() enough times so that EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: Verify that a PdelayReq frame was transmitted.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T1.
    04: Create a PdelayResp frame and call EthTSyn_EthSwtPtpRxIndication() with incorrect ingresstimestamp to receive it.
    05: Create a PdelayRespFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    06: Call EthTSyn_MainFunction() - Pdelay should be calculated in EthTSyn_MainFunction().
    07: Call helper function to receive a pair of Sync/SyncFUp frames. Helper function checks the synchronization is done with Pdelay = 0.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Nanoseconds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2202</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0056_InvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>12363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSyn_EthSwtPtpRxIndication() is called to receive a SyncFUp frame that contains an
    AUTOSAR SubTLV and Length is less than needed value, the frame shall be dropped.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it.
    02: Call EthTSyn_MainFunction().
    03: Verify that nothing was called.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive the 3 EgressTimeStamps for master ports.
    05: Create SyncFUp frame.
    06: Call EthTSyn_EthSwtPtpRxIndication() to receive the SyncFUp frame using Length = 87 byte
        (SyncFUp frame that contains an AUTOSAR TimeSecured SubTLV has a total of 91 bytes).
    07: VP(): Verify that the frame was dropped and no CRC was calculated.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUpSubTLV_IncorrectLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2203</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0057_MaxSyncFUpSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>12581</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if a valid pair of Sync/SyncFUp frames are received and
    EthTSynSynchronizeSimpleBridge is set to true, in the context of EthTSyn_EthSwtPtpRxIndication()
    when receiving the SyncFUp frame, the synchronization shal take place and Stbm shall be informed via
    StbM_BusSetGlobalTime().
    If Len parameter used in EthTSyn_EthSwtPtpRxIndication() is greater than the max size of a SyncFUp frame(131),
    only the first 131 bytes shall be processed, the rest will be ignored.
  
Test Object: 
    EthTSyn_EthSwtPtpRxIndication()
  
Test Precondition: 
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(T4 is provided by EthSwt).
    02: Verify that EthIf_GetIngressTimeStamp() was called to get T6.
    03: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T5 for the HostPort.
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive T7 for the first master port.
    05: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it(Len parameter is grater than 131).
    06: Verify that EthIf_GetCurrentTime() and StbM_GetCurrentVirtualLocalTime() were called ot get T8 and Virtual T8.
    07: VP(EthTSyn.EB.TransparentClock_Synchronize):
        Verify that StbM_BusSetGlobalTime() was called with the result OriginTimeStamp + correctionField + Pdelay + (T8 - T6) + (T5 - T4)
    08: Call EthTSyn_MainFunction().
    09: VP(EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01):
        Verify that SyncFUp frame was transmitted to the first master port with updated correction field(T7 - T4).
    10: VP(EthTSyn.EB.EthSwtRx_SyncFUp_MaxLength):
        Verify that transmitted SyncFUp frame size is only 131 bytes.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.TransparentClock_Synchronize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_UpdateCorrectionField.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwtRx_SyncFUp_MaxLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2204</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest02_0058_RetryPdelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest02_Switch/source/application/EthTSyn_ConTest02_Switch.c</sourcefile>
      <sourceline>12806</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMaxNumberOfTransmitRetries is configured to a value grater than 0 and
    EthSwt_PtpTransmit() returns E_NOT_OK while transmitting the PdelayReq frame, in the next EthTSyn_MainFunction()
    aa retry shall be performed until EthTSynMaxNumberOfTransmitRetries is reached.
  
Test Object: 
    Pdelay calculation
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() until EthTSynGlobalTimeTxPdelayReqPeriod elapses.
    02: Verify that EthSwt_PtpTransmit() was called to transmit the PdelayReq.
    03: Call EthTSyn_MainFunction() 3 times and verify that a transmission was retried each call.
    04: VP(): Call EthTSyn_MainFunction() and verify that no retransmission was performed since
        EthTSynMaxNumberOfTransmitRetries elapsed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2205</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest01258_SyncReliableTxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    EthTSyn will check also if the result of the transmission is E_OK, before sending the FUp frame.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - P0 EthTSynReliableTxConfirmationSupport is ON.
    - P1 EthTSynReliableTxConfirmationSupport is OFF.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP():
        Check that sync frame was transmitted.      
    03: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_OK for the sent sync frame.
    04: VP(EthTSyn.SWS_EthTSyn_00013, EthTSyn.SWS_EthTSyn_00127):
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_MainFunction() to transmit the FUp frame.
    06: VP(SWS_EthTSyn_00017): Verify that a fup frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2206</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01259_SyncReliableTxConfirmation_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    and the result of the transmitted Sync frame is E_NOT_OK, no FUp will be sent.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - P0 EthTSynReliableTxConfirmationSupport is ON.
    - P1 EthTSynReliableTxConfirmationSupport is OFF.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP():
        Check that sync frame was transmitted.      
    03: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_NOT_OK for the sent sync frame.
    04: VP(EthTSyn.SWS_EthTSyn_00176, EthTSyn.SWS_EthTSyn_00042):
        Verify that no other action is perfomred and no frame is sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2207</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01260_PdelayReliableTxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    EthTSyn will check also if the result of the transmitted Pdelay_Resp is E_OK,
    before sending the Pdelay_Resp_FUp frame.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - P0 EthTSynReliableTxConfirmationSupport is ON.
    - P1 EthTSynReliableTxConfirmationSupport is OFF.
  
Test Execution: 
    01: Call EbTest_Inc03_Master_TransmitPdelayResponse() to receive a Pdelay_Req
        and transmit a Pdelay_Resp frame.   
    02: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_OK for the sent Pdelay_Resp frame.
    03: VP(EthTSyn.SWS_EthTSyn_00122, EthTSyn.SWS_EthTSyn_00159):
        Check that Pdelay_Resp_Fup was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2208</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01261_PdelayReliableTxConfirmation_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>522</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    and the result of the transmitted Pdelay_Reso is E_NOT_OK, the Pdelay_Resp_Fup frame
    will be dropped.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - P0 EthTSynReliableTxConfirmationSupport is ON.
    - P1 EthTSynReliableTxConfirmationSupport is OFF.
  
Test Execution: 
    01: Call EbTest_Inc03_Master_TransmitPdelayResponse() to receive a Pdelay_Req
        and transmit a Pdelay_Resp frame.   
    02: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_NOT_OK for the sent Pdelay_Resp frame.
    03: VP():
        Check that no Pdelay_Resp_Fup was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2209</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01262_PdelayReqReliableTxConfirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>596</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    EthTSyn will check also if the result of the transmitted Pdelay_Req is E_OK,
    before accepting incoming Pdelay frames.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - P0 EthTSynReliableTxConfirmationSupport is ON.
    - P1 EthTSynReliableTxConfirmationSupport is OFF.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Pdelay_Req.   
    02: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_OK for the sent Pdelay_Req frame.
    03: VP():
        Check that TxConfirmation is accepted and the egress time stamp shall be retrieved for t1.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2210</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01263_PdelayReqReliableTxConfirmation_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>708</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    and the result of the transmitted Pdelay_Req is E_NOT_OK, the pdelay calculation
    will be dropped.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - P0 EthTSynReliableTxConfirmationSupport is ON.
    - P1 EthTSynReliableTxConfirmationSupport is OFF.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Pdelay_Req.   
    02: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_NOT_OK for the sent Pdelay_Req frame.
    03: VP():
        Check that TxConfirmation is rejected and the egress time stamp will not be retrieved for t1.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2211</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01264_InvCtrBuIdxReliableTxConfirmation_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled,
    and EthTSyn_TxConfirmation() is called with result E_NOT_OK for an invalid controller
    no action will be performed.
    Also this test verifies that if an invalid BufIdx is provided, the TxConfirmation will be ignored.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
  
Test Execution: 
    01: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_NOT_OK for an invalid CtrlIdx(not configured).
    02: VP():
        Check that no action is performed.
    03: Call EthTSyn_TxConfirmation() with additional Result parameter equals E_NOT_OK for an invalid BufIdx.
    04: VP():
        Check that no action is performed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2212</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest01265_MasterPdelayReqTxConfirmationNOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest03ReliableTxConfirmation/source/application/EthTSyn_ConTest03.c</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if EthTSynReliableTxConfirmationSupport is enabled and EthTSyn_TxConfirmation()
    with result = E_NOT_OK is called for the transmitted PdelayReq frame, frame processing shall be
    stopped and nothing else will be called.
  
Test Object: 
    Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - Tx mode is ON.
    - EthTSynReliableTxConfirmationSupport is set.
    - EthTSynReliableTxConfirmationSupport is ON.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit the Pdelay_Req.
    02: Verify that a PdelayReq frame was transmitted.
    03: Call EthTSyn_TxConfirmation() with additional Result parameter equals
        E_NOT_OK for the sent Pdelay_Req frame.
    04: VP(): Verify that frame processing is stopped and no other function was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2213</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest04_0000_MasterTransmitSyncPair</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest04/source/application/EthTSyn_ConTest04.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the sync frame is correctly transmitted on all masters that have
    the same EthIf controller referenced.
  
Test Object: 
    Sync frame transmission.
  
Test Precondition: 
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(EthTSyn.SWS_EthTSyn_00202): Verify that Sync frame was transmitted on all
        4 masters that have the same EthIf controller referenced.
    03: VP(EthTSyn.PRS_TS_00063): Verify that the Sync frame has correct format
        (correct TimeDomainId depending on what TimeDomain the frame was sent).
    04: Call EthTSyn_TxConfirmation().
    05: Call EthTSyn_MainFunction().
    06: VP(EthTSyn.EB.Master.SendSyncFU): Verify that EthIf_ProvideTxBuffer(), EthIf_GetPhysAddr()
        and EthIf_Transmit() were called to transmit SyncFUp frame for the confirmed Sync frame.
    07: VP(EthTSyn.PRS_TS_00063): Verify TimeDomainId in the SyncFUp frame is correct.
    08: VP(EthTSyn.EB.Master.SendSyncFU): Verify that EthIf_ProvideTxBuffer(), EthIf_GetPhysAddr()
        and EthIf_Transmit() were called to transmit SyncFUp frame for the confirmed Sync frame.
    09: VP(EthTSyn.PRS_TS_00063): Verify TimeDomainId in the SyncFUp frame is correct.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.Master.SendSyncFU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2214</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest04_0001_SlaveSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest04/source/application/EthTSyn_ConTest04.c</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that EthTSyn slave processes time synchronization frames and time synchronization follow
    up frames and calls EthIf_GetCurrentTime to get the new time and StbM_BusSetGlobalTime()
    to pass it to StbM.
  
Test Object: 
    Rx Sync frames
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync slave.
    - EthTSynHardwareTimestampSupport is TRUE.
  
Test Execution: 
    01: Prepare sync frame and EthIf_GetIngressTimeStamp() to return the time stamp:
        TimeStamp.nanoseconds = 999999999
        TimeStamp.seconds = 0xFFFFFFFF
        TimeStamp.secondsHi = 0
    02: Call EthTSyn_RxIndication() for incoming time synchronization frame.
    03: VP(): Verify that EthIf_GetIngressTimeStamp() is called for the time synchronization frame.
    04: VP(): Verify that EthIf_GetCurrentTime() was called to get the new time.
    05: Prepare time synchronization follow up frame with origin time stamp:
        OriginTimeStamp.nanoseconds = 0
        OriginTimeStamp.seconds = 0
        OriginTimeStamp.secondsHi = 1
    06: Call EthTSyn_RxIndication() for incoming time synchronization follow up frame.
    07: VP(EthTSyn.EB.Slave.HWTimpStamp.GatewaySync):
        Verify that StbM_BusSetGlobalTime() with correct TimeBaseID was called to pass the new time to StbM.
    08: VP(): Verify that StbM_BusSetGlobalTime() was called with CurrentTime + TimeDiff.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.HWTimpStamp.GatewaySync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2215</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest05_0000_InvalidCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the calculated correction has a value bigger than 0x7FFFFFFFFFFF,
    EthTSyn shall abort the SyncFUp frame transmission.
  
Test Object: 
    Sync/SyncFUp transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit a Sync frame.
    02: VP(EthTSyn.EB.ManyPtpProfiles, EthTSyn.EB.FillE2EversionPTP):
        Verify that the Sync frame is valid and has the fields correctly set.
    03: Call EthTSyn_TxConfirmation() to confirm the transmitted Sync frame.
    04: Call EthTSyn_MainFunction() to start transmitting the SyncFUp frame.
    05: VP(EthTSyn.EB.IEEE1588FupLength):
        Verify that SyncFUp frame has the length value as specified in IEEE1588 standard.
    06: VP(EthTSyn.EB.PTPE2EInvalidCorrectionTx):
        Verify that EthIf_Transmit() was not called, since the correction has an invalid value.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EInvalidCorrectionTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.IEEE1588FupLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2216</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0000_InvalidCorrection_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the calculated correction has a value bigger than 0x7FFFFFFFFFFF,
    EthTSyn shall abort the SyncFUp frame transmission.
  
Test Object: 
    Sync/SyncFUp transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit a Sync frame.
    02: VP(EthTSyn.EB.ManyPtpProfiles, EthTSyn.EB.FillE2EversionPTP):
        Verify that the Sync frame is valid and has the fields correctly set.
    03: Call EthTSyn_TxConfirmation() to confirm the transmitted Sync frame.
    04: Call EthTSyn_MainFunction() to start transmitting the SyncFUp frame.
    05: VP(EthTSyn.EB.PTPE2EInvalidCorrectionTx):
        Verify that EthIf_Transmit() was not called, since the correction has an invalid value.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EInvalidCorrectionTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2217</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0001_EgressTS_SyncFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled, if the SyncFUp frame
    is correctly transmitted, it will contain the Sync EgressTimeStamp as preciseOriginTimeStamp
    and also updated correctionField.
  
Test Object: 
    Sync/SyncFUp transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit a Sync frame.
    02: VP(EthTSyn.EB.ManyPtpProfiles, EthTSyn.EB.FillE2EversionPTP):
        Verify that the Sync frame is valid and has the fields correctly set.
    03: Call EthTSyn_TxConfirmation() to confirm the transmitted Sync frame.
    04: Call EthTSyn_MainFunction() to start transmitting the SyncFUp frame.
    05: VP(EthTSyn.EB.PTPE2EcalculateCorrection, EthTSyn.EB.PTPE2EsaveSyncEgress):
        Verify that the transmitted SyncFUp frame contains updated CorrectionField and also
        the EgressTimeStamp from the Sync frame.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EsaveSyncEgress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcalculateCorrection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2218</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0002_NegativeCorr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a negative correction value shall be accepted and added to the
    transmitted SyncFUp frame.
  
Test Object: 
    Sync/SyncFUp transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Call EthTSyn_MainFunction() to transmit a Sync frame.
    02: VP(EthTSyn.EB.ManyPtpProfiles, EthTSyn.EB.FillE2EversionPTP):
        Verify that the Sync frame is valid and has the fields correctly set.
    03: Call EthTSyn_TxConfirmation() to confirm the transmitted Sync frame.
    04: Call EthTSyn_MainFunction() to start transmitting the SyncFUp frame.
    05: VP(EthTSyn.EB.PTPE2EnegativeCorrection):
        Verify that the transmitted SyncFUp frame contains updated CorrectionField and also
        the EgressTimeStamp from the Sync frame.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.ManyPtpProfiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.FillE2EversionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EnegativeCorrection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.IEEE1588FupLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2219</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0003_RxSync_IncorrectVersionPTP</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the PtpVersion in the received frame is not equal to 2,
    the frame shall be dropped.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that has the second byte(PTPversion) different than 2.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: VP(): Verify that the frame was dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.checkMajorVersionPTP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.VersionPTP_NOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2220</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0004_RxSync_SyncFUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>899</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the correction received in Sync and SyncFUp frame shall be used to
    calculate the global time and pass it to StbM. Since no meanDelay was calculated prior,
    the static value configured in EthTSynGlobalTimeDelayE2E shall be used.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that has correction field positive.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame that has correction field positive.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with updated global time.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EcorrectedSyncCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EFupCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2ECalculatedMeanDelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2221</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0005_RxSync_SyncFUp_NegativeCorr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>1037</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the correction, negative or positive, received in Sync and SyncFUp frame shall be used to
    calculate the global time and pass it to StbM.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that has correction field negative.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame that has correction field positive.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that StbM_BusSetGlobalTime() was called with updated global time.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2222</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0005_RxSync_SyncFUp_NegativeCorr_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>1172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the correction, negative or positive, received in Sync and SyncFUp frame shall be used to
    calculate the global time and pass it to StbM.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that has correction field negative.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame that has correction field positive.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2223</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0006_RxSync_SyncFUp_NegativeGlobalTime</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>1297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the correction, negative or positive, received in Sync and SyncFUp frame shall be used to
    calculate the global time. Since global time is negative it will not be forwarded to StbM.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that has correction field negative.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame that has correction field negative.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that the frame was dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2224</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0007_RxSync_SyncFUp_GreaterCorrection</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>1423</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a sync frame with correction greater than 0x7FFFFFFFFFFF is received,
    the frame shall be dropped and no synchronization shall take place.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that contains the correction greater than 0x7FFFFFFFFFFF.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame.
    04: Call EthTSyn_RxIndication() to receive the SynFUpc frame.
    05: VP(): Verify that the frame was dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EInvalidCorrectionRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2225</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0008_Calc_MeanDelay</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>1548</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the MeanDelay is calculated correctly using the formula:
    ((t2 - t3) + (receiveTimestamp of Delay_Resp message - preciseOriginTimestamp of Follow_Up message)
    - CorrectionFieldSync - CorrectionFieldSync - CorrectionFieldDelayResp)/2
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame and call EthTSyn_RxIndication() to receive it.
    02: VP(): Verify that EthIf_GetIngressTimeStamp() was called to get T2.
    03: Create a SyncFUp frame with preciseOriginTimeStamp_T1.
    04: Call EthTSyn_RxIndication() to receive it.
    05: VP(EthTSyn.EB.PTPE2EDelaySyncFupSaveT1T2): Verify that synchronization took place and global time was updated.
    06: Call EthTSyn_MainFunction().
    07: VP(EthTSyn.EB.PTPE2EEthTSynDelayReqFrameTx, EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupTRUE):
        Verify that delayReq frame was transmitted.
    08: Call EthTSyn_TxConfirmation() for transmitted delayReq frame.
    09: VP(EthTSyn.EB.PTPE2EDelayReqpSaveT3): Verify that EthIf_GetEgressTimeStamp() was called to get delayReq_Egress_T3.
    10: Create a delayResp frame with DelayResp_ReceiveTimeStamp_T4 and call EthTSyn_RxIndication() to receive it.
    11: Perform a valid synchronization.
    12: VP(EthTSyn.EB.PTPE2EDelayRespSaveT4, EthTSyn.EB.PTPE2EDelayRespCorrectionField, EthTSyn.EB.PTPE2ECalculateMeanDelay):
        Verify that StbM_BusSetGlobalTime() was called with updated GlobalTime and meanDelay.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqFrameTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupTRUE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelaySyncFupSaveT1T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelayReqpSaveT3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelayRespSaveT4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EDelayRespCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>703</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2ECalculateMeanDelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2226</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0009_MasterReceiveDelayReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>1884</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled and a master TimeDomain
    receives a delayRequest frame, in the following EthTSyn_MainFunction() call, EthTSyn shall
    transmit a delayResponse frame(first EthTSyn_MainFunction() call transmits the Sync frame).
  
Test Object: 
    DelayResp transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a delayReq frame and call EthTSyn_RxIndication() to receive it.
    02: Call EthTSyn_MainFunction() and verify that a SYnc frame was transmitted.
    03: Call EthTSyn_MainFunction() second time.
    04: VP(): VErify that delayResp frame was transmitted.
    05: VP(): Verify that the delayResp frame has the correct format.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayRespFrameTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2227</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0010_RxSync_GlobalTime_NotUpdated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>2122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the sum of OriginTimeStamp + MeanDelay + (T2 - T1) and
    the received Sync negative correction is still negative, globalTime will not be updated and forwarded to StbM.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame that has correction field negative
        (adding it to OriginTimeStamp + MeanDelay + (T2 - T1) will still result in negative value).
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame that has correction field positive.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2228</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0011_RxSyncFUp_GlobalTime_NotUpdated</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>2247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the sum of OriginTimeStamp + correctedSyncCorrectionField + MeanDelay + (T2 - T1) and
    the received SyncFUp negative correction is still negative, globalTime will not be updated and forwarded to StbM.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a Sync frame.
    02: Call EthTSyn_RxIndication() to receive the Sync frame.
    03: Create a SyncFUp frame that has correction field negative(adding it to OriginTimeStamp +
        correctedSyncCorrectionField + MeanDelay + (T2 - T1) will still result in negative value).
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Slave.NegativeCorrectionField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2229</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0012_MasterReceiveDelayReq_ValidationON</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>2371</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled and a master TimeDomain
    receives a delayRequest frame, in the following EthTSyn_MainFunction() call, EthTSyn shall
    transmit a delayResponse frame(first EthTSyn_MainFunction() call transmits the Sync frame).
  
Test Object: 
    DelayResp transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a delayReq frame and call EthTSyn_RxIndication() to receive it.
    02: Call EthTSyn_MainFunction() and verify that a SYnc frame was transmitted.
    03: Call EthTSyn_MainFunction() second time.
    04: VP(): VErify that delayResp frame was transmitted.
    05: VP(): Verify that the delayResp frame has the correct format.
    06: Call EthTSyn_TxConfirmation() for transmitted delayResp frame.
    07: VP(): VErify that StbM_EthSetPdelayResponderData() was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayRespFrameTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2230</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0013_MasterReceiveDelayReq_IncorrectLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>2657</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled and a master TimeDomain
    receives a delayRequest frame and length parameter is smaller than 44 bytes(length of a delayRequest
    frame), nothing will be called.
  
Test Object: 
    DelayReq reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a delayReq frame.
    02: Call EthTSyn_RxIndication() with length smaller than 44 to receive the DelayReq frame.
    03: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.IncorrectdelayReqFrameLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2231</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0014_MasterReceivesDelayRespFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>2739</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled and a master TimeDomain
    receives a delayRespframe, nothing happens.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a delayResp frame.
    02: Call EthTSyn_RxIndication() to receive the delayResp frame.
    03: VP(): Verify that nothing was called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Master.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2232</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0015_delayReq_MF</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>2820</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled, EthTSynDelayReqAfterFup is set to false,
    a delayReq frame shall be transmitted as soon as EthTSynGlobalTimeTxDelayE2EReqPeriod elapses.
    Also, if T4-T1 or T3-T2 is negative, the previous valid values of T1 and T2 shall be used for delay calculation.
  
Test Object: 
    delayReq frame transmission.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Perform a valid synchronization.
    02: Call EthTSyn_MainFunction() and verify that the delayReq frame was transmitted.
    03: Call EthTSyn_TxConfirmation() for the transmitted delayReq frame.
    04: Set T4 to be smaller than T1.
    05: Create delayResp frame and call EthTSyn_RxIndication() to receive it.
    06: Perform a valid synchronization.
    07: VP(EthTSyn.EB.SaveBackupValues, EthTSyn.EB.UseBackupValues):
        Verify that the calculated meanDelay was updated with expected value - T1 and T2 set to 0(previous valid timestamps).
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupFALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.SaveBackupValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.UseBackupValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2233</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0016_RxDelayResp_IncorrectSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>3164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnablePTPCalculation is enabled for a slave TimeDomain and
    EthTSyn_RxIndication() is called to receive a delayResp frame, having length parameter smaller
    than 54 bytes, the frame shall be dropped and no further action shall take place.
  
Test Object: 
    delayResp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Perform a valid synchronization.
    02: Call EthTSyn_MainFunction() and verify that the delayReq frame was transmitted.
    03: Call EthTSyn_TxConfirmation() for the transmitted delayReq frame.
    04: Create delayResp frame.
    05: Call EthTSyn_RxIndication(), with length smaller than needed, to receive the frame.
    06: VP(): Verify that frame was dropped and no action took place.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.UnexpectedFrames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2234</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0017_CalcMeanDelay_SyncCorr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>3420</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating meanDelay, the Sync correction is greater than
    (T4 - T1) - (T3 - T2), resulting in negative delay values, the old valid meanDelay shall be used.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a sync frame.
    02: Update correction field so it contains a value greater than  (T4 - T1) + (T3 - T2).
    03: Call EthTSyn_RxIndication() to receive it.
    04: Create a SyncFUp frame and call EthTSyn_RxIndication() to receive it.
    05: VP(): Verify that synchronization took place and global time was updated.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that delayReq frame was transmitted.
    08: Call EthTSyn_TxConfirmation() to confirm delayReq frame.
    09: Create delayResp frame and call EthTSyn_RxIndication() to receive it.
    10: Call EthTSyn_MainFunction() to start the meanDelay calculation process.
    11: Perform a valid synchronization.
    12: Verify that the calculated meanDelay is the value it was static configured(not updated).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2ECalculateMeanDelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupTRUE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2235</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0018_CalcMeanDelay_SyncFUpCorr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>3752</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if, when calculating meanDelay, the SyncFUp correction is greater than
    (T4 - T1) - (T3 - T2) - SyncCorrection, resulting in negative delay values, the old valid meanDelay shall be used.
  
Test Object: 
    Sync/SyncFUp reception.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a sync frame and call EthTSyn_RxIndication() to receive it.
    02: Create a syncFUp frame.
    03: Update correction field so it contains a value greater than  (T4 - T1) + (T3 - T2) - SyncCorrection.
    04: Call EthTSyn_RxIndication() to receive it.
    05: VP(): Verify that synchronization took place and global time was updated.
    06: Call EthTSyn_MainFunction().
    07: VP(): Verify that delayReq frame was transmitted.
    08: Call EthTSyn_TxConfirmation() to confirm delayReq frame.
    09: Create delayResp frame and call EthTSyn_RxIndication() to receive it.
    10: Call EthTSyn_MainFunction() to start the meanDelay calculation process.
    11: Perform a valid synchronization.
    12: Verify that the calculated meanDelay is the value it was static configured(not updated).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2ECalculateMeanDelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PTPE2EEthTSynDelayReqAfterFupTRUE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2236</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest05_0019_PdelayReq_NoFUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest05_E2E/source/application/EthTSyn_ConTest05.c</sourcefile>
      <sourceline>4083</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the MeanDelay is not calculated if a valid pair of Sync/SyncFUp
    frames was received.
  
Test Object: 
    meanDelay calculation.
  
Test Precondition: 
    EthTSynEnablePTPCalculation enabled.
  
Test Execution: 
    01: Create a sync frame and call EthTSyn_RxIndication() to receive it.
    02: Create a syncFUp frame and call EthTSyn_RxIndication() to receive it.
    03: VP(): Verify that the synchronization took place and StbM_BusSetGlobalTime()
        was called to update global time.
    04: Call EthTSyn_MainFunction() 4 times(delayReq will be sent at 5 calls).
    05: Create a sync frame and call EthTSyn_RxIndication() to receive it.
    06: Call EthTSyn_MainFunction() one more time.
    07: VP(): Verify that delayReq frame was transmitted.
    08: Call EthTSyn_TxConfirmation() to confirm delayReq frame.
    09: Create delayResp frame and call EthTSyn_RxIndication() to receive it.
    10: Call EthTSyn_MainFunction() to start the meanDelay calculation process.
    11: VP(): Verify that nothing was called, since no delay was calculated(T1 &gt; T4).
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.MeanDelayAfterValidFrames</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2237</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest06_0000_DebounceOnPort</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest06_DebounceOnPort/source/application/EthTSyn_ConTest06.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the as soon as debounce timer reaches 0, the sync FUP frame
    shall be transmitted on each configured switch port.
  
Test Object: 
    Debounce feature on swt ports if EthTSynSendSyncFrameOnlyOnHostPort is enabled.
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynSendSyncFrameOnlyOnHostPort set to TRUE
  
Test Execution: 
    01: Call EthTSyn_MainFunction() (to start sync frame transmission).
    02: VP(): Verify EthSwt_ProvideTxBuffer(),
        EthIf_EnableEgressTimeStamp() and EthSwt_PtpTransmit() have been called for host port with
        the correct parameters.
    03: Call EthTSyn_TxConfirmation() for the sent sync frame on host port.
    04: VP():
        Verify that EthIf_GetEgressTimeStamp() was called to get the egress time stamp.
    05: Call EthTSyn_MainFunction().
    06: VP():
        Check that no sync frame is transmitted for the non host ports.
    07: Call EthTSyn_EthSwtPtpTimeStampIndication() for all ports.
    08: Call EthTSyn_MainFunction() until debounce values expires for all ports.
    09: VP():
        Verify that syncFup frames are transmitted with respect to the debounce values for
        each port.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.DebouncePerPort_Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2238</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ConTest07_0000_UNINT</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
      * if EthTSyn_IcvGenerationIndication() is called while EthTSyn is UNINIT, ETHTSYN_E_UNINIT
        will be reported to DET.
      * if EthTSyn_IcvVerificationIndication() is called while EthTSyn is UNINIT, ETHTSYN_E_UNINIT
        will be reported to DET.
  
Test Object: 
    EthTSyn_IcvGenerationIndication()
    EthTSyn_IcvVerificationIndication()
  
Test Precondition: 
    - Module is not initialized.
  
Test Execution: 
    01: Call EthTSyn_IcvGenerationIndication().
    02: VP(EthTSyn.EB.EthTSyn_IcvGenerationIndication.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
    03: Call EthTSyn_IcvVerificationIndication().
    04: VP(EthTSyn.EB.EthTSyn_IcvVerificationIndication.Uninit):
        Verify that ETHTSYN_E_UNINIT was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_IcvGenerationIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_IcvVerificationIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2239</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0001_Icv1</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
      - if configured StbMFreshnessValueTruncLength is equal to StbMFreshnessValueLength, EthTSyn master
      shall call StbM_GetTxFreshness() to get the FV using the correct StbMFreshnessValueId.
      - if StbM_GetTxFreshness() returns E_OK, the EthTSyn master shall construct the AUTOSAR TLV Sub-TLV:
      Time Authenticated with FV and use the full FV in ICV generation.
      - if EthTSynIcvGenerationBase is configured to ICV_MAC, EthTSyn master shall call Csm_MacGenerate()
      to generate the ICV value.
      - if the CSM job used to generate ICV is configured in synchronous behavior, EthTSyn master shall
      disable ICV generation timeout monitoring
      - StbM_SPduTxConfirmation() shall be called upon a successful transmission of SyncFUp frame.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_MAC
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - CSM job used to generate ICV is configured in synchronous behavior
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the Sync message transmission.
    04: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    05: VP(SWS_EthTSyn_00248): Verify that buffer size requested is 138 bytes.
    06: VP(SWS_EthTSyn_00246): Verify that StbM_GetTxFreshness() was called with correct ID.
    07: VP(SWS_EthTSyn_00251): Verify that Csm_MacGenerate() was called with correct ID.
    08: VP(SWS_EthTSyn_00248, PRS_TS_000104_MsgComplianceOFF_TimeAuth): Verify that EthIf_Transmit() was called with correct frame length.
    09: VP(PRS_TS_00223): Verify that first 76 bytes of SyncFUpo frame are as expected(length containing Auth Sub-TLV).
    10: VP(PRS_TS_00223): Verify that AUTOSAR TLV header is as expected.
    11: VP(PRS_TS_00071): Verify that TimeSecured Sub-TLV is placed before Auth Sub-TLV.
    12: VP(SWS_EthTSyn_00248, PRS_TS_00223, PRS_TS_00224, PRS_TS_00225, PRS_TS_00234, PRS_TS_00235,
           PRS_TS_00093_TimeAutenticated_CrcSupported, PRS_TS_00063_TimeAuthNotSecured):
        Verify that Auth Sub-TLV is as expected.
    13: Call EthTSyn_TxConfirmation() for the SyncFUp frame.
    14: VP(SWS_EthTSyn_00258): Verify that StbM_SPduTxConfirmation() was called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeAuthNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2240</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0002_Icv_Async</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
      - if configured StbMFreshnessValueTruncLength is less than StbMFreshnessValueLength, EthTSyn master
      shall call StbM_GetTxFreshnessTruncData() to get the FV using the correct StbMFreshnessValueId.
      - if StbM_GetTxFreshnessTruncData() returns E_OK, the EthTSyn master shall construct the AUTOSAR TLV Sub-TLV:
      Time Authenticated with FV and use the full FV in ICV generation.
      - if EthTSynIcvGenerationBase is configured to ICV_SIGNATURE, EthTSyn master shall call Csm_SignatureGenerate()
      to generate the ICV value.
      - if the CSM job used to generate ICV is configured in asynchronous behavior, EthTSyn master shall
      start ICV generation timeout monitoring
      - upon EthTSyn_IcvGenerationIndication() call, the timeout monitoring shall be stopped and frame will be
      transmitted
      - StbM_SPduTxConfirmation() shall be called upon a successful transmission of SyncFUp frame.
      - if AUTOSAR Sub-TLV:Time Authenticated doesn't fit into value field of AUTOSAR TLV, it shall be fragmentted.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_SIGNATURE
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - CSM job used to generate ICV is configured in asynchronous behavior
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the Sync message transmission.
    04: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    05: VP(SWS_EthTSyn_00247): Verify that StbM_GetTxFreshnessTruncData() was called with correct ID.
    06: VP(SWS_EthTSyn_00252): Verify that Csm_SignatureGenerate() was called with correct ID.
    07: VP(): Verify that SyncFUp was not transmitted.
    08: Call EthTSyn_IcvGenerationIndication() with correct JobId.
    09: VP(SWS_EthTSyn_00249): Verify that buffer size requested is 598 bytes.
    10: VP(SWS_EthTSyn_00249, PRS_TS_000104_MsgComplianceOFF_TimeAuth):
        Verify that EthIf_Transmit() was called with correct frame length.
    11: VP(PRS_TS_00223): Verify that first 76 bytes of SyncFUp frame are as expected(length containing Auth Sub-TLV).
    12: VP(PRS_TS_00223): Verify that AUTOSAR TLV header is as expected.
    13: VP(SWS_EthTSyn_00249, PRS_TS_00223, PRS_TS_00224, PRS_TS_00225, PRS_TS_00234, PRS_TS_00235,
           PRS_TS_00093_TimeAutenticated_CrcSupported, PRS_TS_00063_TimeAuthNotSecured, PRS_TS_00226):
        Verify that all 3 fragments of Auth Sub-TLV are as expected.
    14: VP(PRS_TS_00227, PRS_TS_00228, PRS_TS_00240): Verify that the fragments have the correct SeqId and length.
    14: Call EthTSyn_TxConfirmation() for the SyncFUp frame.
    15: VP(SWS_EthTSyn_00258): Verify that StbM_SPduTxConfirmation() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00254_SignatureGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231_Seq0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00231_SeqNot0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2241</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0003_GetFreshness_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>814</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetTxFreshness() returns E_NOT_OK, ICV generation shall be stopped,
    Det_ReportRuntimeError() will be called with ErrorId ETHTSYN_E_FRESHNESSFAILURE and
    IdsM_SetSecurityEventWithContextData() with EventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - StbM_GetTxFreshness() returns E_NOT_OK.
  
Test Execution: 
    01: Transmit Sync frame and confirm it.
    02: Set StbM_GetTxFreshness() to return E_NOT_OK.
    03: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    04: VP(): Verify that StbM_GetTxFreshness() was called.
    05: VP(SWS_EthTSyn_00250_GetTxFreshness_StopIcv): Verify that Csm_MacGenerate() was not called.
    06: VP(SWS_EthTSyn_00250_GetTxFreshness_CallDet):
        Verify that Det_ReportRuntimeError() was called with ErrorId: ETHTSYN_E_FRESHNESSFAILURE.
    07: VP(SWS_EthTSyn_00250_GetTxFreshness_CallIdsM, SWS_EthTSyn_00261_FRESHNESS_NOT_AVAILABLE):
        Verify that IdsM_SetSecurityEventWithContextData() was called with EventID: ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
    08: VP(): Verify that EthIf_Transmit() was called with correct frame length.
    09: VP(): Verify that first 76 bytes of SyncFUp frame are as expected(length containing Auth Sub-TLV).
    10: VP(): Verify that AUTOSAR TLV header is as expected.
    11: VP(SWS_EthTSyn_00250_GetTxFreshness_StopIcv): Verify that Auth Sub-TLV is as expected.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshness_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_FRESHNESS_NOT_AVAILABLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2242</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0004_GetTxFreshnessTruncData_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetTxFreshnessTruncData() returns E_NOT_OK, ICV generation shall be stopped,
    Det_ReportRuntimeError() will be called with ErrorId ETHTSYN_E_FRESHNESSFAILURE and
    IdsM_SetSecurityEventWithContextData() with EventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - StbM_GetTxFreshnessTruncData() returns E_NOT_OK.
  
Test Execution: 
    01: Transmit Sync frame and confirm it.
    02: Set StbM_GetTxFreshnessTruncData() to return E_NOT_OK.
    03: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    04: VP(): Verify that StbM_GetTxFreshnessTruncData() was called.
    05: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv):
        Verify that Csm_SignatureGenerate() was not called.
    06: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet):
        Verify that Det_ReportRuntimeError() was called with ErrorId: ETHTSYN_E_FRESHNESSFAILURE.
    07: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM):
        Verify that IdsM_SetSecurityEventWithContextData() was called with EventID: ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
    08: VP(): Verify that EthIf_Transmit() was called with correct frame length.
    09: VP(): Verify that first 76 bytes of SyncFUpo frame are as expected(length containing Auth Sub-TLV).
    10: VP(): Verify that AUTOSAR TLV header is as expected.
    11: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv): Verify that Auth Sub-TLV is as expected.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2243</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0005_MacGenerate_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>1309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if Csm_MacGenerate() returns E_NOT_OK, ICV generation shall be stopped,
    and IdsM_SetSecurityEventWithContextData() shall be called with EventId ETHTSYN_SEV_ICV_GENERATION_FAILED.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - Csm_MacGenerate() returns E_NOT_OK.
  
Test Execution: 
    01: Transmit and confirm a Sync frame.
    02: Set Csm_MacGenerate() to return E_NOT_OK.
    03: Call EthTSyn_MainFunction() to start transmitting SyncFUp frame.
    04: VP(): Verify that Csm_MacGenerate() was called.
    05: VP(SWS_EthTSyn_00256_MacGenerate_CallIdsM):
        Verify that IdsM_SetSecurityEventWithContextData() was called with ETHTSYN_SEV_ICV_GENERATION_FAILED.
    06: VP(): Verify that EthIf_Transmit() was called with correct length.
    07: VP(SWS_EthTSyn_00256_MacGenerate_StopIcv):
        Verify that frame is as expected(GenerationFailed flag set).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2244</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0006_SignatureGenerate_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>1552</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if Csm_SignatureGenerate() returns E_NOT_OK, ICV generation shall be stopped
    and IdsM_SetSecurityEventWithContextData() with EventId ETHTSYN_SEV_ICV_GENERATION_FAILED.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - Csm_SignatureGenerate() returns E_NOT_OK.
  
Test Execution: 
    01: Transmit and confirm a Sync frame.
    02: Set Csm_SignatureGenerate() to return E_NOT_OK.
    03: Call EthTSyn_MainFunction() to start transmitting SyncFUp frame.
    04: VP(): Verify that Csm_SignatureGenerate() was called.
    05: VP(SWS_EthTSyn_00256_SignatureGenerate_CallIdsM):
        Verify that IdsM_SetSecurityEventWithContextData() was called with ETHTSYN_SEV_ICV_GENERATION_FAILED.
    06: VP(): Verify that EthIf_Transmit() was called with correct length.
    07: VP(SWS_EthTSyn_00256_SignatureGenerate_StopIcv):
        Verify that frame is as expected(GenerationFailed flag set).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_SignatureGenerate_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2245</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0007_TxIcv_CRC_NOT_SUPPORTED</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>1776</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
      - ICV Sub-TLV is not CRC_SECURED(master transmits same type of message in CRC_SUPPORTED and CRC_NOT_SUPPORTED).
      - If configured GlobalTimeIcvFvLength is 0, FV shall not be added to the Sub-TLV.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynGlobalTimeTxCrcSecured CRC_NOT_SUPPORTED
    - EthTSynIcvGenerationBase is ICV_MAC
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength == 0
    - CSM job used to generate ICV is configured in synchronous behavior
  
Test Execution: 
    01: Transmit and confirm the Sync frame.
    02: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    03: VP(PRS_TS_00236): Verify that StbM_GetTxFreshness() was called with correct parameters.
    04: VP(): Verify that EthIf_ProvideTxBuffer() was called with correct length.
    05: VP(): Verify that EthIf_Transmit() was called with correct length to transmit the SyncFUp frame.
    06: VP(PRS_TS_00236, PRS_TS_00093_TimeAutenticated_CrcNotSupported):
        Verify that frame has the correct format.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcNotSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2246</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0008_TxIcv_TimeoutExpire</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>2003</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
      - EthTSynIcvGenerationTimeout shall be started once Csm_MacGenerate() returns E_OK.
      - If timeout expired before EthTSyn_IcvGenerationIndication() is called, IdsM_SetSecurityEventWithContextData()
      will be called with EventId = ETHTSYN_SEV_ICV_GENERATION_FAILED.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_MAC
    - CSM job used to generate ICV is configured in synchronous behavior
    - EthTSynIcvGenerationTimeout = 5
  
Test Execution: 
    01: Transmit and confirm the Sync frame.
    02: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    03: VP(SWS_EthTSyn_00254_MacGenerate): VErify that Csm_MacGenerate() was called.
    04: Call EthTSyn_MainFunction() enough times so generationTimeout elapses.
    05: VP(SWS_EthTSyn_00256_GenerationTimeout_CallIdsM, SWS_EthTSyn_00261_GENERATION_FAILED):
        Verify that IdsM_SetSecurityEventWithContextData() was called with ETHTSYN_SEV_ICV_GENERATION_FAILED.
    06: VP(): Verify that EthIf_ProvideTxBuffer() and EthIf_Transmit() were called with length = 90.
    07: VP(SWS_EthTSyn_00256_GenerationTimeout_StopIcv):
        Verify that frame is as expected(GenerationFailed flag set).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00254_MacGenerate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_GENERATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2247</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0009_Invalid_JobId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>2249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
      - if EthTSyn_IcvGenerationIndication() is called with invalid JobId, DET shall be called with ETHTSYN_E_PARAM.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - DevErrorDetect enabled
  
Test Execution: 
    01: Transmit and confirm the Sync frame.
    02: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    03: Call EthTSyn_IcvGenerationIndication() with incorrect JobId.
    04: VP(): Verify that DET was called with ETHTSYN_E_PARAM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2248</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>2391</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_OPTIONAL,
    the frame will be validated.
    - If EthTSynRxIcvVerificationType is set to ICV_OPTIONAL and the SyncFUp frame
    contains an ICV Sub-TLV, validation shall take place.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationAttempts = 0
    - EthTSynIcvVerificationBase ICV_MAC
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.PRS_TS_00119_IcvVerified</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00240_MacVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2249</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_FVlength_Incorrect</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>2625</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the freshnessValue length in the received SyncFUp frame is greater than 8 bytes,
    the validation will be failed and frame will be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationBase ICV_MAC
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2250</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0010_SlaveReceives_ICVSubTLV_OPTIONAL_NoSubTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>2845</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_OPTIONAL,
    the frame will be validated.
    - If EthTSynRxIcvVerificationType is set to ICV_OPTIONAL and the SyncFUp frame does not
    contain an ICV Sub-TLV, no validation shall take place.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationAttempts = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00113, PRS_TS_00183,
           PRS_TS_00185): Verify that Crc_CalculateCRC8H2F() was
        called 5 times to calculate Crc_Time_0.
    05: VP(PRS_TS_00114): Verify that Crc_CalculateCRC8H2F() was
        called 4 times to calculate Crc_Time_1.
    06: VP(PRS_TS_00244): Verify that StbM_GetRxFreshness() and Csm_MacVerify() were not called(ICV validation not performed)
    07: VP(): Verify that StbM_BusSetGlobalTime() is called.
        This means that received CRC values will be equal
        with calculated values and the message will be processed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2251</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0011_SlaveReceives_ICVSubTLV_NOT_VERIFIED</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>3020</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_NOT_VERIFIED,
    there will be no ICV verification and frame will be dropped(ICV validation unsuccessful).
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_NOT_VERIFIED
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00247): Verify that StbM_GetRxFreshness() and Csm_MacVerify() were not called(ICV validation not performed)
    05: VP(PRS_TS_00247): Verify that StbM_BusSetGlobalTime() was not called - ICV validation considered unsuccessful.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2252</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0012_SlaveReceives_ICVSubTLV_IGNORED</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>3167</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_IGNORED,
    no ICV validation shall take place. ICV sub-TLV shall be ignored.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_IGNORED
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a time sub tlv.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(): Verify that Crc_CalculateCRC8H2F() was not called because RxCrcValidated = CRC_NOT_VALIDATED.
    05: VP(PRS_TS_00243): Verify that StbM_GetRxFreshness() and Csm_MacVerify() were not called(ICV validation not performed)
    06: VP(): Verify that StbM_BusSetGlobalTime() is called.
        This means that received CRC values will be equal
        with calculated values and the message will be processed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2253</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>3333</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_VERIFIED,
    the frame will be validated.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - StbMFreshnessValueLength = StbMFreshnessValueTruncLength = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(EthTSyn.R22-11.SWS_EthTSyn_00237):
        Verify that StbM_GetRxFreshness() was called.
    05: VP(EthTSyn.R22-11.SWS_EthTSyn_00237):
        Verify that Csm_MacVerify() was called.
    06: VP(EthTSyn.R22-11.PRS_TS_00246):
        Verify that since validation was succesfull, StbM_BusSetGlobalTime() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2254</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0013_SlaveReceives_ICVSubTLV_VERIFIED_NoSubTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>3525</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies if EthTSynRxIcvVerificationType is set to ICV_VERIFIED and the SyncFUp frame does not
    contain an ICV Sub-TLV, no validation shall take place.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that only contains a TimeSecured sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(PRS_TS_00113): Verify that Crc_CalculateCRC8H2F() was
        called 9 times to calculate Crc_Time_0 and Crc_Time_1.
    05: VP(EthTSyn.R22-11.PRS_TS_00246):
        Verify that StbM_GetRxFreshness() nor Csm_MacVerify() were called to perform validation.
    06: VP(EthTSyn.SWS_EthTSyn_00198): Verify that StbM_BusSetGlobalTime() is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2255</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>3685</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test that if StbM_GetRxFreshness() returns E_NOT_OK, in the next EthTSyn_MainFunction()
    another verification shall try and take place again. It will perform a retry until
    EthTSynIcvVerificationAttempts is elapsed.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationAttempts = 5
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Set StbM_GetRxFreshness() to return E_NOT_OK.
    04: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    05: VP(SWS_EthTSyn_00235_RetryGetRxFreshness):
        Verify that only StbM_GetRxFreshness() was called.
    06: Call EthTSyn_MainFunction().
    07: VP(SWS_EthTSyn_00235_RetryGetRxFreshness):
        Verify that StbM_GetRxFreshness() was called again.
    08: Call EthTSyn_MainFunction() 4 more times and verify that each time StbM_GetRxFreshness() is called.
    09: Call EthTSyn_MainFunction().
    10: VP(SWS_EthTSyn_00235_IncrementIcvVerificationAttempt, SWS_EthTSyn_00236_StopIcv):
        Verify that frame validation didn't take place.
    11: VP(SWS_EthTSyn_00236_CallDet):
        Verify that Det_ReportRuntimeError() was called with ErrorId ETHTSYN_E_FRESHNESSFAILURE.
    12: VP(SWS_EthTSyn_00236_CallIdsM, SWS_EthTSyn_00261_VERIFICATION_FAILED, SWS_EthTSyn_00262):
        Verify that IdsM_SetSecurityEventWithContextData() was called with SecurityEventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
    13: VP(EthTSyn.R22-11.PRS_TS_00248): Verify that frame was dropped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235_RetryGetRxFreshness</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235_IncrementIcvVerificationAttempt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_VERIFICATION_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2256</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0014_SlaveReceives_GetRxFresh_NOK_Recover</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>3922</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test that if StbM_GetRxFreshness() returns E_NOT_OK, in the next EthTSyn_MainFunction()
    another verification shall try and take place again. Validation will take place if StbM_GetRxFreshness()
    returns E_OK before EthTSynIcvVerificationAttempts elapses.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationAttempts = 5
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Set StbM_GetRxFreshness() to return E_NOT_OK.
    04: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    05: VP(SWS_EthTSyn_00235_RetryGetRxFreshness):
        Verify that only StbM_GetRxFreshness() was called.
    06: Call EthTSyn_MainFunction().
    07: VP(SWS_EthTSyn_00235_RetryGetRxFreshness, SWS_EthTSyn_00235_IncrementIcvVerificationAttempt):
        Verify that StbM_GetRxFreshness() was called again.
    08: Call EthTSyn_MainFunction() 2 more times and verify that each time StbM_GetRxFreshness() is called.
    09: Set StbM_GetRxFreshness() to return E_OK.
    10: Call EthTSyn_MainFunction()
    11: VP(EthTSyn.R22-11.SWS_EthTSyn_00237):
        Verify that StbM_GetRxFreshness(), Csm_MacVerify() were called for validation.
    12: Verify that validation was succesful, StbM_BusSetGlobalTime() being called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235_RetryGetRxFreshness</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00235_IncrementIcvVerificationAttempt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2257</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0015_SlaveReceives_MacVerify_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>4143</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test that if Csm_MacVerify() returns E_NOT_OK, in the next EthTSyn_MainFunction()
    another verification shall try and take place again.
  
Test Object: 
    Csm_MacVerify() return E_NOT_OK.
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - Csm_MacVerify() returns E_NOT_OK
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Set Csm_MacVerify() to return E_NOT_OK.
    04: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    05: VP(): Verify that StbM_GetRxFreshness() and Csm_MacVerify() were called.
    06: VP(SWS_EthTSyn_00243_NOK_CallIdsM ,SWS_EthTSyn_00262): Verify that IdsM_SetSecurityEventWithContextData() was called with SecurityEventId ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
    07: VP(SWS_EthTSyn_00243_NOK_StopIcv): Verify that frame processing stopped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2258</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0016_SlaveReceives_MacVerify_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>4338</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test that if Csm_MacVerify() returns CRYPTO_E_BUSY, in the next EthTSyn_MainFunction()
    another verification shall try and take place again. It will perform a retry until
    verification is ok or EthTSynIcvVerificationAttempts is elapsed.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationAttempts = 5
  
Test Execution: 
    01: Create and receive a Sync frame.
    02: Create a Sync frame.
    03: Set Csm_MacVerify() to return CRYPTO_E_BUSY.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(EthTSyn.EB.EthTSyn_VerifyAttempts_StbM): Verify that StbM_GetRxFreshness() was called with
        StbMAuthVerifyAttempts equal to 0.
    06: VP(EthTSyn.R22-11.SWS_EthTSyn_00241_MacVerify): Verify that Csm_MacVerify() was called,
        and will be called every EthTSyn_MainFunction() call.
    07: VP(EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_StopIcv, EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_CallIdsM):
        Verify that since EthTSynIcvVerificationAttempts expired, IdsM_SetSecurityEventWithContextData()
        was called with event ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationAttempts_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00241_MacVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSyn_VerifyAttempts_StbM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2259</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0017_SlaveReceives_MacVerify_KEY_FAIL</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>4561</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test that if Csm_MacVerify() returns KEY_FAILURE, the SyncFUp processing shall stop,
    ETHTSYN_SEV_ICV_VERIFICATION_FAILED shall be reported to IdsM and no synchronization shall take place.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
  
Test Execution: 
    01: Create and receive a Sync frame.
    02: Set Csm_MacVerify() to return KEY_FAILURE.
    03: Create and receive SyncFUp frame.
    04: Verify that the TimeSecured Sub-TLV was processed(Crc_CalculateCRC8H2F called).
    05: Verify that Csm_MacVerify() was called.
    06: VP(EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_CallIdsM): Verify that ETHTSYN_SEV_ICV_VERIFICATION_FAILED was reported to IdsM.
    07: VP(EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_StopIcv): Verify that StbM_BusSetGlobalTime() was not called - no synchronization took place.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_KEY_FAILURE_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2260</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0018_SlaveReceives_IncorrectSeqNr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>4757</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if the received TimeAuth tlv contains fragments with
    incorrect SeqNr, the ICV validation shall be deemed as unsuccessful.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2261</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0019_SlaveReceives_VerificationTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>4970</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_VERIFIED,
    the frame will be validated.
  
Test Object: 
    IcvVerificationTimeout
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationTimeout set to 5
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: VP(): Verify that besides StbM_GetRxFreshness() and Csm_SignatureVerify() nothinhg was called.
    05: Call EthTSyn_MainFunction() 5 times and verify that nothing was called after each.
    06: Call EthTSyn_MainFunction().
    07: VP(SWS_EthTSyn_00243_VerificationTimeoutExp_CallIdsM, SWS_EthTSyn_00243_VerificationTimeoutExp_StopIcv): Verify that IdsM_SetSecurityEventWithContextData() was called with SecurityEventId ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
    08: VP(PRS_TS_00252): Verify that validation was unsuccessful, so nothing else was called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_VerificationTimeoutExp_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00241_SignatureVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2262</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0020_SlaveReceives_FVFlagNotSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>5157</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    on a TimeDomain that has EthTSynRxIcvVerificationType configured to ICV_VERIFIED,
    the frame will be validated.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - ICV with FV bit not set.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Update the TimeAuth sub-TLV so the FV bit is not set.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(SWS_EthTSyn_00240_SignatureVerify, SWS_EthTSyn_00238, EthTSyn.R22-11.PRS_TS_00249): Verify that Csm_SignatureVerify() was called.
    06: Call EthTSyn_IcvVerificationIndication().
    07: VP(SWS_EthTSyn_00242, SWS_EthTSyn_00244): Verify that StbM_BusSetGlobalTime() was called, signaling a successful validation.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00240_SignatureVerify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2263</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0021_SlaveReceives_InvalidJobId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>5325</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_IcvVerificationIndication() is called with an
    invalid JobId, Det_ReportError() will be called with ErrorId ETHTSYN_E_PARAM.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    04: VP(SWS_EthTSyn_00240_SignatureVerify, SWS_EthTSyn_00238, EthTSyn.R22-11.PRS_TS_00249): Verify that Csm_SignatureVerify() was called.
    05: Call EthTSyn_IcvVerificationIndication() with incorrect jobId.
    07: VP(SWS_EthTSyn_00260):
        Verify that Det_ReportError() was called with ErrorId ETHTSYN_E_PARAM.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2264</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0022_SlaveReceives_VerificationIndication_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>5481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_IcvVerificationIndication() is called with result parameter
    as E_NOT_OK, the frame shall be discarded.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    04: Call EthTSyn_IcvVerificationIndication() with return parameter E_NOT_OK.
    05: VP(SWS_EthTSyn_00245): Verify that IdsM_SetSecurityEventWithContextData()
        was called with securityEventId ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2265</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0023_SlaveReceives_FVL0_FVbitSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>5642</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains a TimeAuth Sub-TLV is received, and the
    FV lenght is equal to 0 and the FV bit is set in ICV_Flags, tghe verification shall be unsuccessful.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Update frame to have FV bit set in ICV Flags and FV length equal to 0.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(SWS_EthTSyn_00236_CallDet, PRS_TS_00250):
        Verify that Det_ReportRuntimeError() was called with ErrorID ETHTSYN_E_FRESHNESSFAILURE.
    06: VP(SWS_EthTSyn_00236_CallIdsM, PRS_TS_00250):
        Verify that IdsM_SetSecurityEventWithContextData() was called with securityEventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2266</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0024_Icv</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>5801</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that:
      - if configured StbMFreshnessValueTruncLength is equal to StbMFreshnessValueLength, EthTSyn master
      shall call StbM_GetTxFreshness() to get the FV using the correct StbMFreshnessValueId.
      - if StbM_GetTxFreshness() returns E_OK, the EthTSyn master shall construct the AUTOSAR TLV Sub-TLV:
      Time Authenticated with FV and use the full FV in ICV generation.
      - if EthTSynIcvGenerationBase is configured to ICV_MAC, EthTSyn master shall call Csm_MacGenerate()
      to generate the ICV value.
      - if the CSM job used to generate ICV is configured in synchronous behavior, EthTSyn master shall
      disable ICV generation timeout monitoring
      - StbM_SPduTxConfirmation() shall be called upon a successful transmission of SyncFUp frame.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_MAC
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - CSM job used to generate ICV is configured in synchronous behavior
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the Sync message transmission.
    04: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    05: VP(SWS_EthTSyn_00248): Verify that buffer size requested is 138 bytes.
    06: VP(SWS_EthTSyn_00246): Verify that StbM_GetTxFreshness() was called with correct ID.
    07: VP(SWS_EthTSyn_00251): Verify that Csm_MacGenerate() was called with correct ID.
    08: VP(SWS_EthTSyn_00248, PRS_TS_000104_MsgComplianceOFF_TimeAuth): Verify that EthIf_Transmit() was called with correct frame length.
    09: VP(PRS_TS_00223): Verify that first 76 bytes of SyncFUpo frame are as expected(length containing Auth Sub-TLV).
    10: VP(PRS_TS_00223): Verify that AUTOSAR TLV header is as expected.
    11: VP(PRS_TS_00071): Verify that TimeSecured Sub-TLV is placed before Auth Sub-TLV.
    12: VP(SWS_EthTSyn_00248, PRS_TS_00223, PRS_TS_00224, PRS_TS_00225, PRS_TS_00234, PRS_TS_00235,
           PRS_TS_00093_TimeAutenticated_CrcSupported, PRS_TS_00063_TimeAuthNotSecured):
        Verify that Auth Sub-TLV is as expected.
    13: Call EthTSyn_TxConfirmation() for the SyncFUp frame.
    14: VP(SWS_EthTSyn_00258): Verify that StbM_SPduTxConfirmation() was called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeAutenticated_CrcSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00063_TimeAuthNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2267</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0025_NopFV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>6064</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetTxFreshnessTruncData() returns E_NOT_OK, ICV generation shall be stopped,
    Det_ReportRuntimeError() will be called with ErrorId ETHTSYN_E_FRESHNESSFAILURE and
    IdsM_SetSecurityEventWithContextData() with EventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_MAC
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - CSM job used to generate ICV is configured in synchronous behavior
  
Test Execution: 
    01: Transmit Sync frame and confirm it.
    02: Set StbM_GetTxFreshnessTruncData() to return E_NOT_OK.
    03: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    04: VP(): Verify that StbM_GetTxFreshnessTruncData() was called.
    05: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv):
        Verify that Csm_SignatureGenerate() was not called.
    06: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet):
        Verify that Det_ReportRuntimeError() was called with ErrorId: ETHTSYN_E_FRESHNESSFAILURE.
    07: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM):
        Verify that IdsM_SetSecurityEventWithContextData() was called with EventID: ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
    08: VP(): Verify that EthIf_Transmit() was called with correct frame length.
    09: VP(): Verify that first 76 bytes of SyncFUpo frame are as expected(length containing Auth Sub-TLV).
    10: VP(): Verify that AUTOSAR TLV header is as expected.
    11: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv): Verify that Auth Sub-TLV is as expected.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2268</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0026_GenerationIndication_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>6294</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSyn_IcvGenerationIndication() is called with result as E_NOT_OK,
    IdsM_SetSecurityEventWithContextData() shall be called with securityEventId ETHTSYN_SEV_ICV_GENERATION_FAILED.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_SIGNATURE
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - CSM job used to generate ICV is configured in asynchronous behavior
  
Test Execution: 
    01: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted.
    02: Call EthTSyn_TxConfirmation() to confirm the Sync frame.
    03: Call EthTSyn_MainFunction() so SyncFUp transmission begins.
    04: VP(): Verify that StbM_GetTxFreshnessTruncData() and Csm_SignatureGenerate() were called.
    05: VP(): Verify that nothing else was called.
    06: Call EthTSyn_IcvGenerationIndication() with result as E_NOT_OK.
    07: VP(): Verify that IdsM_SetSecurityEventWithContextData() was called with securityEventId ETHTSYN_SEV_ICV_GENERATION_FAILED.
    08: VP() Verify that frame was dropped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2269</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0027_Tx_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>6459</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if StbM_GetTxFreshnessTruncData() returns E_NOT_OK, ICV generation shall be stopped,
    Det_ReportRuntimeError() will be called with ErrorId ETHTSYN_E_FRESHNESSFAILURE and
    IdsM_SetSecurityEventWithContextData() with EventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - StbM_GetTxFreshnessTruncData() returns E_NOT_OK.
  
Test Execution: 
    01: Transmit Sync frame and confirm it.
    02: Set StbM_GetTxFreshnessTruncData() to return E_NOT_OK.
    03: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    04: VP(): Verify that StbM_GetTxFreshnessTruncData() was called.
    05: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv):
        Verify that Csm_SignatureGenerate() was not called.
    06: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet):
        Verify that Det_ReportRuntimeError() was called with ErrorId: ETHTSYN_E_FRESHNESSFAILURE.
    07: VP(SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM):
        Verify that IdsM_SetSecurityEventWithContextData() was called with EventID: ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
    
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00250_GetTxFreshnessTruncData_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2270</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0028_TxConf_BufIDx</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>6624</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that EthTSyn_TxConfirmation() is called with a BudIDx that is not
    recognized, it will be ignored and no action shall take place.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynReliableTxConfirmationSupport true
  
Test Execution: 
    01: Transmit Sync frame and confirm it.
    02: Call EthTSyn_MainFunction() and verify that the SyncFUp frame was transmitted.
    03: Call EthTSyn_TxConfirmation() with wrong BufIdx.
    04: VP(): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2271</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0029_TxConf_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>6896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that EthTSyn_TxConfirmation() is called with a BudIDx that is not
    recognized, it will be ignored and no action shall take place.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: 
    01: Transmit Sync frame and confirm it.
    02: Call EthTSyn_MainFunction() and verify that the SyncFUp frame was transmitted.
    03: Call EthTSyn_TxConfirmation() with result as E_NOT_OK
    04: VP(EthTSyn.SWS_EthTSyn_00176): Verify that nothing was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2272</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0031_SlaveReceives_IncorrectLen</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>7173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV and the length in the
    frame is invalid, the ICV verification shall be unsuccessful.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2273</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0032_SlaveReceives_DiffLen_Config_Received</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>7379</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test that if a SyncFUp frame that contains a TimeAuth Sub-TLV is received, and
    the received length is differend than the configured one, the frame shall be dropped and
    ICV verification unsuccessful.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Update frame length to have an invalid value.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that after StbM_GetRxFreshness() was called.
    06: VP(SWS_EthTSyn_00262, PRS_TS_00251): Verify that
        IdsM_SetSecurityEventWithContextData() was called with securityEventId ETHTSYN_SEV_ICV_VERIFICATION_FAILED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2274</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0033_SlaveReceives_VerificationResult_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>7569</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    and Csm_MacVerify() returns E_NOT_OK, the frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00243_NOK_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2275</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0034_SlaveReceives_RxDebounce</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>7791</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a the SyncFUp is called for a Sync and EthTSynGlobalTimeRxDebounceTime
    did not elapse yet, IdsM_SetSecurityEventWithContextData() shall be called with EventId
    ETHTSYN_SEV_SYNC_FOLLOWUP_SEQUENCE_ERROR.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynGlobalTimeRxDebounceTime &gt; 0
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_SYNC_FOLLOWUP_SEQUENCE_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2276</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0035_SlaveReceives_RxDebounce_Elapse</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>7975</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a SyncFUp frame is received after EthTSynGlobalTimeRxDebounceTime elapses,
    it shall be accepted and processed as expected.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynGlobalTimeRxDebounceTime &gt; 0
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2277</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0036_SlaveReceives_2ndSync_RxDebounce</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>8187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if a Sync is received before the SyncFUp expected by previous Sync,
    the sequence shall be reset.
    When the sequence is reset IdsM_SetSecurityEventWithContextData() shall be called with EventId
    ETHTSYN_SEV_SYNC_FOLLOWUP_SEQUENCE_ERROR.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynGlobalTimeRxDebounceTime &gt; 0
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00261_SYNC_FOLLOWUP_SEQUENCE_ERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2278</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0037_SlaveReceives_VerifAttempts_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>8292</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynIcvVerificationAttempts is 0 and StbM_GetRxFreshness() returns E_NOT_OK
    during validation, the validation shall bne unsuccessful and DET and IdsM shall be informed.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationAttempts = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Set StbM_GetRxFreshness() to return E_NOT_OK.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that StbM_GetRxFreshness() was called.
    06: VP(SWS_EthTSyn_00236_CallDet): Verify that Det_ReportRuntimeError() was called with ErrorId ETHTSYN_E_FRESHNESSFAILURE.
    07: VP(SWS_EthTSyn_00236_CallIdsM): Verify that IdsM_SetSecurityEventWithContextData() was called with securityEventId ETHTSYN_SEV_FRESHNESS_NOT_AVAILABLE.
    08: VP(SWS_EthTSyn_00236_StopIcv): Verify that nothing was called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00236_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2279</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0038_SlaveReceives_VerifAttempts_0_Busy</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>8491</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynIcvVerificationAttempts is 0 and Csm_MacVerify() returns CRYPTO_E_BUSY
    during validation, the validation shall be unsuccessful and DET and IdsM shall be informed.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationAttempts = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Set Csm_MacVerify() to return CRYPTO_E_BUSY.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that StbM_GetRxFreshness() and Csm_MacVerify() were called.
    06: Call EthTSyn_MainFunction().
    07: VP(EthTSyn.EB.Csm_BUSY_0_Attempts): Verify that IdsM_SetSecurityEventWithContextData() was called with SecurityEventId ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
    08: VP(EthTSyn.EB.Csm_BUSY_0_Attempts): Verify that frame processing stopped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Csm_BUSY_0_Attempts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2280</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0039_SlaveReceives_ICV_NotConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>8692</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test that if a SyncFUp frame with TimeAuth Sub-TLV is received on a slave that has
    EthTSynTLVFollowUpICVSubTLV set to false, no ICV validation shall take place.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV = false
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    04 VP(): Verify that StbM_BusSetGlobalTime() was called, with no ICV validation.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2281</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0040_SlaveReceives_InvalidSegmentType</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>8852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    and one of the segments has invalid Type, the frame verification shall be unsuccessful.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2282</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0041_MasterTransmitICV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>9064</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that:
      - if configured StbMFreshnessValueTruncLength is less than StbMFreshnessValueLength, EthTSyn master
      shall call StbM_GetTxFreshnessTruncData() to get the FV using the correct StbMFreshnessValueId.
      - if StbM_GetTxFreshnessTruncData() returns E_OK, the EthTSyn master shall construct the AUTOSAR TLV Sub-TLV:
      Time Authenticated with FV and use the full FV in ICV generation.
      - if EthTSynIcvGenerationBase is configured to ICV_SIGNATURE, EthTSyn master shall call Csm_SignatureGenerate()
      to generate the ICV value.
      - StbM_SPduTxConfirmation() shall be called upon a successful transmission of SyncFUp frame.
      - if AUTOSAR Sub-TLV:Time Authenticated doesn't fit into value field of AUTOSAR TLV, it shall be fragmentted.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationBase is ICV_SIGNATURE
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength
    - CSM job used to generate ICV is configured in asynchronous behavior
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the Sync message transmission.
    04: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    05: VP(SWS_EthTSyn_00247): Verify that StbM_GetTxFreshnessTruncData() was called with correct ID.
    06: VP(SWS_EthTSyn_00252): Verify that Csm_SignatureGenerate() was called with correct ID.
    07: VP(SWS_EthTSyn_00249): Verify that buffer size requested is 598 bytes.
    08: VP(SWS_EthTSyn_00249, PRS_TS_000104_MsgComplianceOFF_TimeAuth):
        Verify that EthIf_Transmit() was called with correct frame length.
    09: Call EthTSyn_TxConfirmation() for the SyncFUp frame.
    10: VP(SWS_EthTSyn_00258): Verify that StbM_SPduTxConfirmation() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_000104_MsgComplianceOFF_TimeAuth</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2283</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0042_MasterTransmitICV_FV0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>9374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if StbMFreshnessValueLength is configured to 0, the master
    shall not add the FV, set the length of FV (FVL) to 0 and reset the ’FV in ICV’
    flag of ICV_Flags in transmitted AUTOSAR Sub-TLV:Time Authenticated.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - StbMFreshnessValueTruncLength == StbMFreshnessValueLength == 0
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the Sync message transmission.
    04: Call EthTSyn_MainFunction() to start SyncFUp frame transmission.
    05: VP(): Verify that StbM_GetTxFreshness(), Csm_MacGenerate() and EthIf_Transmit() were called.
    06: VP(PRS_TS_00223): Verify that first 76 bytes of SyncFUpo frame are as expected(length containing Auth Sub-TLV).
    07: VP(PRS_TS_00223): Verify that AUTOSAR TLV header is as expected.
    08: VP(PRS_TS_00223, PRS_TS_00224, PRS_TS_00225, PRS_TS_00236):
        Verify that Auth Sub-TLV is as expected.
    09: Call EthTSyn_TxConfirmation() for the SyncFUp frame.
    10: VP(SWS_EthTSyn_00258): Verify that StbM_SPduTxConfirmation() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2284</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0043_GetBuf_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>9618</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynIcvGenerationTimeout is greater than 0 and EthTSyn_IcvGenerationIndication()
    is called before timeout expires, in the context of next EthTSyn_MainFunction(), EthIf_ProvideTxBuffer()
    shall be called to get the transmission buffer.
    If the return value is not BUFREQ_OK, the frame processing shall stop, and EthIf_Transmit() will not be called.
  
Test Object: 
    EthIf_ProvideTxBuffer().
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationTimeout = 5
  
Test Execution: 
    01: Transmit and confirm the Sync frame.
    02: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    03: Call EthTSyn_IcvGenerationIndication() with valid parameters.
    04: Call EthTSyn_MainFunction().
    05: VP(): Verify that EthIf_ProvideTxBuffer() was called.
    06: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that EthIf_Transmit() was not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2285</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0044_GetBuf_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>9772</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynIcvGenerationTimeout is greater than 0 and EthTSyn_IcvGenerationIndication()
    is not called before timeout expires, EthIf_ProvideTxBuffer() shall be called to get the transmission buffer.
    If the return value is not BUFREQ_OK, the frame processing shall stop, and EthIf_Transmit() will not be called.
  
Test Object: 
    EthIf_ProvideTxBuffer().
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynIcvGenerationTimeout = 5
  
Test Execution: 
    01: Transmit and confirm the Sync frame.
    02: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    03: VP(): VErify that Csm_MacGenerate() was called.
    04: Set EthIf_ProvideTxBuffer() to return BUFREQ_E_NOT_OK.
    05: Call EthTSyn_MainFunction() enough times so generationTimeout elapses.
    06: VP(): Verify that EthIf_ProvideTxBuffer() was called.
    07: VP(EthTSyn.EB.EthIf_Return_NotOk): Verify that EthIf_Transmit() was not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.EthIf_Return_NotOk</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2286</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0045_ICV_SWT</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>9937</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
    EthTSynTLVFollowUpICVSubTLV is set to true the transmitted SyncFUp frame shall contain an ICV sub-TLV.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - TimeDomain is Time Aware Bridge with GTM as Management CPU
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    07: VP(EthTSyn.EB.SwtTransmit_SyncFUP_ICV): Verify that EthSwt_ProvideTxBuffer(),
        StbM_GetTxFreshness(), Csm_MacGenerate() and EthSwt_PtpTransmit()
        were called to transmit the SyncFUp frame on configured port.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2287</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0046_ICV_SWT_Timeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>10138</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
    EthTSynTLVFollowUpICVSubTLV is set to true and EthTSynIcvGenerationTimeout is configured to a value greater than 0,
    EthTSyn shall wait for EthTSyn_IcvGenerationIndication() when generating the ICV. If Timeout elapses before
    EthTSyn_IcvGenerationIndication() is received, IdsM_SetSecurityEventWithContextData() shall be called with
    EventId = ETHTSYN_SEV_ICV_GENERATION_FAILED.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - TimeDomain is Time Aware Bridge with GTM as Management CPU
    - EthTSynIcvGenerationTimeout = 5
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    07: VP(EthTSyn.EB.SwtTransmit_SyncFUP_ICV): Verify that StbM_GetTxFreshnessTruncData() and Csm_MacGenerate() were called and EthSwt_PtpTransmit() was not.
    08: Call EthTSyn_MainFunction() until EthTSynIcvGenerationTimeout elapses.
    09: VP(EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_CallIdsM): Verify that IdsM_SetSecurityEventWithContextData() was called with EventId = ETHTSYN_SEV_ICV_GENERATION_FAILED.
    10: VP(EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_StopIcv):
        Verify that the SyncFup frame was transmitted without ICV.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_GenerationTimeout_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2288</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0047_ICV_SWT_Indication</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>10445</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
    EthTSynTLVFollowUpICVSubTLV is set to true and EthTSynIcvGenerationTimeout is configured to a value greater than 0,
    EthTSyn shall wait for EthTSyn_IcvGenerationIndication() when generating the ICV. If EthTSyn_IcvGenerationIndication() is received
    before Timeout elapses the transmitted SyncFUp frame shall contain an ICV sub-TLV
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - TimeDomain is Time Aware Bridge with GTM as Management CPU
    - EthTSynIcvGenerationTimeout = 5
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(): Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    07: VP(): Verify that StbM_GetTxFreshnessTruncData() and Csm_MacGenerate() were called and EthSwt_PtpTransmit() was not.
    08: Call EthTSyn_MainFunction() and verify that nothing was called.
    09: Call EthTSyn_IcvGenerationIndication() before EthTSynIcvGenerationTimeout elapses.
    10: Call EthTSyn_MainFunction() so the SyncFUp transmission starts.
    11: VP(EthTSyn.R22-11.SWS_EthTSyn_00257): Verify that the SyncFup frame was transmitted with ICV.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2289</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0047_ICV_SWT_Indication_NOK_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>10751</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
    EthTSynTLVFollowUpICVSubTLV is set to true and EthTSynIcvGenerationTimeout is configured to a value greater than 0,
    EthTSyn shall wait for EthTSyn_IcvGenerationIndication() when generating the ICV. If EthTSyn_IcvGenerationIndication() is received
    before Timeout elapses the transmitted SyncFUp frame shall contain an ICV sub-TLV.
    It also verifies that if EthTSynMaxNumberOfTransmitRetries is greater than 0 and the SyncFUp frame transmission failed, it will be retried
    for as many times as EthTSynMaxNumberOfTransmitRetries is configured.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - TimeDomain is Time Aware Bridge with GTM as Management CPU
    - EthTSynIcvGenerationTimeout = 5
    - EthTSynMaxNumberOfTransmitRetries = 3
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    07: VP(): Verify that StbM_GetTxFreshnessTruncData() and Csm_MacGenerate() were called and EthSwt_PtpTransmit() was not.
    08: Call EthTSyn_MainFunction() and verify that nothing was called.
    09: Call EthTSyn_IcvGenerationIndication() before EthTSynIcvGenerationTimeout elapses.
    10: Set EthSwt_PtpTransmit() to return E_NOT_OK next calls.
    11: VP(EthTSyn.R22-11.SWS_EthTSyn_00257):
        Call EthTSyn_MainFunction() and verify that EthTSyn tries to transmit SyncFUp frame 4 times.
    12: VP(EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail):
        Call EthTSyn_MainFunction() a 5th time and verify that nothing was called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthTSynMaxNumberOfTransmitRetries_Fail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2290</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0048_ICV_SWT_Generate_Failed</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>11016</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
    EthTSynTLVFollowUpICVSubTLV is set to true and Csm_MacGenerate() returns E_NOT_OK while generating the ICV,
    the ICV generation shall stop and IdsM_SetSecurityEventWithContextData() will be called with EventId = ETHTSYN_SEV_ICV_GENERATION_FAILED.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - TimeDomain is Time Aware Bridge with GTM as Management CPU
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(): Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Set Csm_MacGenerate() to return E_NOT_OK.
    07: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    08: VP(): Verify that StbM_GetTxFreshnessTruncData() and Csm_MacGenerate() were called.
    09: VP(EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_CallIdsM): Verify that IdsM_SetSecurityEventWithContextData() was called with EventId = ETHTSYN_SEV_ICV_GENERATION_FAILED.
    10: VP(EthTSyn.EB.SwtTransmit_SyncFUP_ICV): Verify that the SyncFup frame was transmitted without ICV.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_StopIcv</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00256_MacGenerate_CallIdsM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2291</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0049_ICV_SWT_Generate_Failed_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>11307</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EhtTSynTimeDomain is configured as a Time Aware Bridge with GTM as Management CPU and
    EthTSynTLVFollowUpICVSubTLV is set to true and EthSwt_ProvideTxBuffer() returns BUFREQ_E_NOT_OK
    while transmitting the SyncFUp frame, the frame shall be dropped.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - TimeDomain is Time Aware Bridge with GTM as Management CPU
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: VP(): Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Set EthSwt_ProvideTxBuffer() to return BUFREQ_E_NOT_OK.
    07: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    08: VP(): Verify that StbM_GetTxFreshnessTruncData() and Csm_MacGenerate() were called.
    09: VP(): Verify that IdsM_SetSecurityEventWithContextData() was called with EventId = ETHTSYN_SEV_ICV_GENERATION_FAILED.
    10: VP(): Verify that EthSwt_ProvideTxBuffer() was called.
    11: VP(): Verify that EthSwt_PtpTransmit() was not called.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.SwtTransmit_SyncFUP_ICV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.EB.EthSwt_Return_NotOk</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2292</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0050_ICV_SWT_No_ICV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>11522</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynGlobalTimeTxCrcSecured is enabled, the transmitted SyncFUp frame shall contain a
    TimeSecured SubTLV.
  
Test Object: 
    AUTOSAR TLV Sub-TLV: Time Authenticated
  
Test Precondition: 
    - Module is initialized.
    - Link is active for time sync master.
    - Tx mode is ON.
    - EthTSynMessageCompliance is FALSE.
  
Test Execution: 
    01: Call EthTSyn_MainFunction().
    02: Verify that Sync frame was transmitted.
    03: Call EthTSyn_TxConfirmation() to confirm the transmission.
    04: Call EthTSyn_MainFunction() and verify that the Sync frame was transmitted on configured port.
    05: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive TimeStamps for HostPort and Port.
    06: Call EthTSyn_MainFunction() to transmit the SyncFUp frame.
    07: VP(EthTSyn.SWS_EthTSyn_00096): Verify that Crc_CalculateCRC8H2F() was called 3 times since no flags were set.
    08: VP(EthTSyn.PRS_TS_00099): Verify that the SyncFUp frame was transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2293</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0051_HeaderLengthInsufficient</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>11721</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains a time authenticated Sub-TLV is received,
    and the length field in the TimeAuth Sub-TLV is smaller than Header size + number of bytes needed for FV,
    the frame processing shall stop and frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - StbMFreshnessValueLength = StbMFreshnessValueTruncLength = 0
    - Length field in TimeAuth Sub-TLV is smaller than Header size + number of bytes needed for FV.
  
Test Execution: 
    01: Create and receive Sync frame.
    02: Create a SyncFUp frame that contains a time authenticated SubTLV.
    03: Update the length field so there are not enough bytes for the FV.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(EthTSyn.R22-11.SWS_EthTSyn_00233): Verify that StbM_GetRxFreshness() was called.
    06: VP(EthTSyn.R22-11.PRS_TS_00251): Verify that frame processing was stopped and nothing else was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.SWS_EthTSyn_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2294</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0052_BUSY_Attempts_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>11904</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynIcvVerificationAttempts is 0 and Csm_SignatureVerify() returns CRYPTO_E_BUSY
    during validation, the validation shall be unsuccessful and DET and IdsM shall be informed.
  
Test Object: 
    IcvVerificationTimeout
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynTLVFollowUpICVSubTLV is TRUE.
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - EthTSynIcvVerificationAttempts = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Set Csm_SignatureVerify() to return CRYPTO_E_BUSY.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(): Verify that StbM_GetRxFreshness() and Csm_SignatureVerify() were called.
    06: Call EthTSyn_MainFunction().
    07: VP(EthTSyn.EB.Csm_BUSY_0_Attempts): Verify that IdsM_SetSecurityEventWithContextData() was called with SecurityEventId ETHTSYN_SEV_ICV_VERIFICATION_FAILED.
    08: VP(EthTSyn.EB.Csm_BUSY_0_Attempts): Verify that frame processing stopped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Csm_BUSY_0_Attempts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2295</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0053_SlaveReceives_IncorrectLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>12072</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    and the Length parameter in EthTSyn_RxIndication() is smaller than SyncFUp frame + TimeAuth Sub-TLV,
    the received ICV will not be saved.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - StbMFreshnessValueLength = StbMFreshnessValueTruncLength = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: Verify that the received ICV was not storred.
    05: VP(EthTSyn.R22-11.PRS_TS_00246):
        Verify that since validation was not succesfull, StbM_BusSetGlobalTime() was not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2296</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0054_SlaveReceives_IncorrectLength_Segment</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>12235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains a segmented ICV sub-TLV is received
    and the Length parameter in EthTSyn_RxIndication() is smaller than SyncFUp frame + TimeAuth Sub-TLV,
    the received ICV will not be saved.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - StbMFreshnessValueLength = StbMFreshnessValueTruncLength = 0
  
Test Execution: 
    01: Create and receive a sync frame.
    02: Create a sync follow up frame that contains a TimeAuth Sub-TLV.
    03: Call EthTSyn_RxIndication() to receive the sync follow up frame.
    04: Verify that the received ICV was not storred.
    05: VP(EthTSyn.R22-11.PRS_TS_00246):
        Verify that since validation was not succesfull, StbM_BusSetGlobalTime() was not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2297</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0055_SlaveReceives_IncorrectLength_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>12402</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    and the Length parameter in EthTSyn_RxIndication() is smaller than the offset where the TimeAuth TLV starts,
    the received ICV will not be saved and frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationAttempts = 0
    - EthTSynIcvVerificationBase ICV_MAC
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2298</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0056_SlaveReceives_IncorrectLength_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>12622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains an ICV sub-TLV is received
    and the Length parameter in EthTSyn_RxIndication() is smaller than the
    SyncFUp frame + TimeAuth header + FreshnessValue byte + FreshnessValue number of bytes,
    the received ICV will not be saved and frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationAttempts = 0
    - EthTSynIcvVerificationBase ICV_MAC
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2299</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0057_SlaveReceives_IncorrectLength_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>12845</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains a segmented ICV sub-TLV is received
    and the length parameter in EthTSyn_RxIndication() is smaller than the SyncFUp frame + first 2 ICV segments,
    the received ICV will not be saved and frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationAttempts = 0
    - EthTSynIcvVerificationBase ICV_MAC
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2300</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0058_SlaveReceives_IncorrectLength_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>13073</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains a segmented ICV sub-TLV is received
    and the length parameter in EthTSyn_RxIndication() is smaller than the SyncFUp frame + all segments,
    the received ICV will not be saved and frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_OPTIONAL
    - EthTSynIcvVerificationAttempts = 0
    - EthTSynIcvVerificationBase ICV_MAC
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2301</internalId></specobject>
    <specobject>
      <id>EthTSyn_ConTest07_0059_SlaveReceives_IncorrectLength_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Conformance/IN/EthTSyn_ConTest07_Security/source/application/EthTSyn_ConTest07.c.m4</sourcefile>
      <sourceline>13302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a SyncFUp frame that contains a time authenticated Sub-TLV is received,
    and the length field in the TimeAuth Sub-TLV is smaller than Header size + 1 byte(freshness value byte),
    the frame processing shall stop and frame shall be dropped.
  
Test Object: 
    EthTSyn_RxIndication().
  
Test Precondition: 
    - EthTSynMessageCompliance = FALSE
    - EthTSynRxIcvVerificationType = ICV_VERIFIED
    - StbMFreshnessValueLength = StbMFreshnessValueTruncLength = 0
    - Length field in TimeAuth Sub-TLV is smaller than Header size + number of bytes needed for FV.
  
Test Execution: 
    01: Create and receive Sync frame.
    02: Create a SyncFUp frame that contains a time authenticated SubTLV.
    03: Update the length field so there are not enough bytes for the FV.
    04: Call EthTSyn_RxIndication() to receive the SyncFUp frame.
    05: VP(EthTSyn.R22-11.PRS_TS_00251): Verify that frame processing was stopped and nothing else was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2302</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_GenTest_01001_Invalid_EthTSyn_Xdm_MultiSlave_S1_S2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if more than one EthTSynGlobalTimeDomain with
  enabled EthTSynGlobalTimeSlave refer to the same StbM synchronized time base.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  For EthTSyn/EthTSynGlobalTimeDomain_S1 and for EthTSyn/EthTSynGlobalTimeDomain_S2 the value for
  EthTSynSynchronizedTimeBaseRef is the same: /StbM/StbM/StbMSynchronizedTimeBase_0

Test Execution: 
  VP(EthTSyn.EB.Xdm.MultiSlave):
  The following error must be issued for the slaves S1 and S2: Two configured EthTSyn slaves shall
  not refer to the same time base.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.MultiSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1800</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2303</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01002_Invalid_EthTSyn_Xdm_UniqueEthIfCtrlIdxTimeBaseId_Slave1_Slave2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that an error is generated if two slaves have EthTSynGlobalTimeEthIfRef refering
  to the same EthIf controller within the module and both have the same EthTSynGlobalTimeDomainId.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  For the slaves EthTSyn/EthTSynGlobalTimeDomain_S1 and EthTSyn/EthTSynGlobalTimeDomain_S2
  the value for EthTSynGlobalTimeEthIfRef is /EthIf/EthIfConfigSet/EthIfController/EthIfController_1
  and EthTSynGlobalTimeDomainId is 0.

Test Execution: 
  VP(EthTSyn.EB.Xdm.SlavesSameIfCtrlAndDomainID):
  The following error must be issued for both slaves S1 and S2: If two or more EthTSyn slaves are configured to the same EthIf controller,
  the EthTSynTimeDomainId must be different.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.SlavesSameIfCtrlAndDomainID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1801</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2304</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01003_Invalid_EthTSyn_Xdm_Priority_ON_VlanID_OFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the parameter EthTSynFramePrio exists and
  EthTSynGlobalTimeEthIfRef refers a Virtual Ethernet Controller without
  an existing EthIfVlanId an error is generated.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  In EthTSyn for EthTSynGlobalTimeMaster:
     - EthTSyn/EthTSynGlobalTimeDomain/EthTSynGlobalTimeDomain_M2/EthTSynGlobalTimeMaster/
       EthTSynFramePrio exists;
     - and in EthIf the configuration parameter
       EthIf/EthIfConfigSet/EthIfController/EthIfController_3/EthIfVlanId
       does not exist.
  In EthTSyn for EthTSynGlobalTimeSlave:
     - EthTSyn/EthTSynGlobalTimeDomain/EthTSynGlobalTimeDomain_S2/EthTSynGlobalTimeSlave/
       EthTSynFramePrio exists;
     - and in EthIf the configuration parameter
       EthIf/EthIfConfigSet/EthIfController/EthIfController_2/EthIfVlanId
       does not exist.

Test Execution: 
  VP(EthTSyn.SWS_EthTSyn_00148): The following error must be issued for both
  EthTSynGlobalTimeMaster and EthTSynGlobalTimeSlave:
  EthTSynFramePrio is enabled while referenced EthIfVlanId is disabled. Both EthTSynFramePrio
  and referenced EthIfVlanId shall be either enabled or disabled.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.SWS_EthTSyn_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2305</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01004_Invalid_EthTSyn_Xdm_Priority_OFF_VlanID_ON</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if EthTSynFramePrio does not exist but EthIfVlanId exists an
  error is generated. The reason for this error is that in the case in which EthTSynFramePrio
  does not exist, a frame without priority and VLAN tags must be used.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  In EthTSyn for EthTSynGlobalTimeMaster:
     - EthTSyn/EthTSynGlobalTimeDomain/EthTSynGlobalTimeDomain_M1/EthTSynGlobalTimeMaster/
       EthTSynFramePrio does not exist;
     - and in EthIf the configuration parameter
       EthIf/EthIfConfigSet/EthIfController/EthIfController_1/EthIfVlanId
       exists.
  In EthTSyn for EthTSynGlobalTimeSlave:
     - EthTSyn/EthTSynGlobalTimeDomain/EthTSynGlobalTimeDomain_S1/EthTSynGlobalTimeSlave/
       EthTSynFramePrio does not exist;
     - and in EthIf the configuration parameter
       EthIf/EthIfConfigSet/EthIfController/EthIfController_0/EthIfVlanId
       exists.

Test Execution: 
  VP(PRS_TS_00163): The following error must be issued for both
  EthTSynGlobalTimeMaster and EthTSynGlobalTimeSlave:
  EthTSynFramePrio is disabled while referenced EthIfVlanId is enabled. Both EthTSynFramePrio
  and referenced EthIfVlanId shall be either enabled or disabled.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2306</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01005_Invalid_EthTSyn_Xdm_MAC_ADDR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynPhyAddress is enabled and doesn't have the expected
    syntax and error will be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.MAC):
    The following error must be issued:"Physical address has an invalid value."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.MAC</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1802</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2307</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01006_Invalid_EthTSyn_Xdm_ComplianceOff_0_SubTlv</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynMessageCompliance is false and no SubTlv is enabled, EthTSyn
    will report an error.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(SWS_EthTSyn_00068):
    The following error must be issued:"At least one SubTlv should be configured if
    EthTSynMessageCompliance is set to false."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.PRS_TS_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2308</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01007_Invalid_EthTSyn_Xdm_TimeNotSecured</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynGlobalTimeTxCrcSecured is set to CRC_NOT_SUPPORTED, a time
    SubTlv can not be configured and will report an error.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(PRS_TS_00093_TimeNotSecured):
    The following error must be issued: "Time SubTlv is not supported for CRC_NOT_SUPPORTED."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R22-11.PRS_TS_00093_TimeNotSecured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2309</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01009_Invalid_EthTSyn_Xdm_DetDisabled_DEMDET</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynDevErrorDetect is FALSE and EthTSynSyncFailedReportError is set to
    DET, a warning shall be reported while generating.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.XdmCheck_DetDisabled_DEMDET.vc01):
    The following warning must be issued:
    "EthTSynDevErrorDetect is set to false which means
        that production errors will not be reported to the development error tracer (Det)."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DetDisabled_DEMDET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1752</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2310</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01010_Invalid_EthTSyn_Xdm_Invalid_ErrorId</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynSyncFailedReportError is set to DET and
    EthTSynSyncFailedReportErrorDetErrorId holds a value used already(SWS), a warning shall be
    reported while generating.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET.vc01):
    The following warning must be issued:
    "Values 0x01, 0x02 and from 0x20 to 0x24
                are used as standard Ids according to AUTOSAR SWS and 0 shall not be used."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_InvalidErrorId_DEMDET.vc01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swuvc</linkdestdoctype><linkerror/><internalId>1753</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2311</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01011_Invalid_EthTSyn_Xdm_PdelayRespEnable</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynGlobalTimePdelayRespEnable is set to false and
    EthTSynGlobalTimePropagationDelay holds the value 0(disabled), a warning shall be
    reported while generating.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.XdmCheck_PdelayRespEnable):
    The following warning must be issued:
    "Static Pdelay should be configured if EthTSynGlobalTimePdelayRespEnable is set to false."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_PdelayRespEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1819</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2312</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01013_Invalid_EthTSyn_Xdm_NoHostPort</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynSwitchManagementEthSwitchPortRef is configured with a valid
    reference and EthTSynSwitchManagementEthSwitchPortHostRef doesn't have a valid reference
    an error shall be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.SwtPort_NoSwtHost):
    The following warning must be issued:
    "If EthTSynSwitchManagementEthSwitchPortRef is enabled and has a valid reference,
    EthTSynSwitchManagementEthSwitchPortHostRef also needs to be enabled and have a valid reference."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.SwtPort_NoSwtHost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1803</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2313</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01014_Invalid_EthTSyn_Xdm_TimeValidation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EthTSynEnableTimeValidation is set to true and
    StbMEnableTimeValidation from the referenced timebase is set to false,
    an error will be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.TimeValidation):
    The following warning must be issued:
    "If EthTSynEnableTimeValidation parameter is enabled also StbMTimeValidation must be enabled."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.TimeValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1804</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2314</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01016_Invalid_EthTSyn_Xdm_OfsRef_IdLt16</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that an error is reported if EthTSynGlobalTimeDomainId has a value smaller
    than 16 and the StbMTimeBase configured in EthTSynSynchronizedTimeBaseRef is configured as OffsetTimeBase.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.Offset_LessThan16):
    The following error must be issued:
    "Invalid value for EthTSynGlobalTimeDomainId. No OffsetTimeBase in StbM needs to be configured if EthTSynGlobalTimeDomainId is smaller than 16."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.Offset_LessThan16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1805</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2315</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01017_Invalid_EthTSyn_Xdm_OfsRefNotEnabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that an error is reported if EthTSynGlobalTimeDomainId has a value greater
    than 15 and the StbMTimeBase configured in EthTSynSynchronizedTimeBaseRef does not have StbMOffsetTimeBase enabled.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.OffsetTimeBaseNotEnabled_GreaterThan15):
    The following error must be issued:
    "If EthTSynGlobalTimeDomainId is greater than 15, EthTSynSynchronizedTimeBaseRef needs to reference a TimeBase that has StbMOffsetTimeBase enabled."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.OffsetTimeBaseNotEnabled_GreaterThan15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1806</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2316</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01018_Invalid_EthTSyn_Xdm_OfsTLV_NoOfs</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>395</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that an error is reported if EthTSynTLVFollowUpOFSSubTLV is enabled
    for an EthTSynTimeDomain which doesn't have an OffsetTimeBase configured.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.NoOffset_OffsetTLV):
    The following error must be issued:
    "EthTSynTLVFollowUpOFSSubTLV should't be enabled if there is no offset timebase configured for this EthTSynTimeDomain."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.NoOffset_OffsetTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1809</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2317</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01019_Invalid_EthTSyn_Xdm_OfsRefNotValid</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>418</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that an error is reported if EthTSynGlobalTimeDomainId has a value greater than 15
    and the StbMTimeBase configured in EthTSynSynchronizedTimeBaseRef does not have StbMOffsetTimeBase set
    to a valid reference.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.OffsetTimeBaseNotValidRef_GreaterThan15):
    The following error must be issued:
    "If EthTSynGlobalTimeDomainId is greater than 15, EthTSynSynchronizedTimeBaseRef needs to reference a TimeBase that has a valid reference configured in StbMOffsetTimeBase."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.OffsetTimeBaseNotValidRef_GreaterThan15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1807</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2318</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01020_Invalid_EthTSyn_Xdm_OfsRefNotReferenced</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that an error is reported if EthTSynGlobalTimeDomainId has a value greater than 15
    and the StbMOffsetTimeBase configured in the StbMTimeBase reffered by the EthTSynSynchronizedTimeBaseRef
    is not referenced by another EthTSynTimeDomain.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.NoOffset_GreaterThan15):
    The following error must be issued:
    "If EthTSynGlobalTimeDomainId is greater than 15, EthTSynSynchronizedTimeBaseRef needs to reference a TimeBase that has the configured StbMOffsetTimeBase referenced in at least one other EthTSynGlobalTimeDomain."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.NoOffset_GreaterThan15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1808</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2319</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01021_Invalid_EthTSyn_Xdm_OfsRefNoOfsTLV</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that a warning is reported if EthTSynGlobalTimeDomainId has a value greater than 15
    and the StbMOffsetTimeBase configured in the StbMTimeBase reffered by the EthTSynSynchronizedTimeBaseRef
    is referenced by another EthTSynTimeDomain and EthTSynTLVFollowUpOFSSubTLV is not enabled for respective
    EthTSynTimeDomain.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.Offset_NoOffsetTLV):
    The following warning must be issued:
    "EthTSynTLVFollowUpOFSSubTLV is not enabled for offset timedomain."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.Offset_NoOffsetTLV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1821</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2320</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01023_Invalid_EthTSyn_Xdm_PB_MaxNoSlaves</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>491</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a error is reported if VariantPostBuild is used and the number of
    configured slave ports is greater than EthTSyNumberOfConfiguredSlaves.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.PB_MaxNoSlaves):
    The following warning must be issued:
    "If EthTSyn Ports with PortRole Slave are used, EthTSyNumberOfConfiguredSlaves must be updated(please check the description of this parameter)."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.PB_MaxNoSlaves</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1810</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2321</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01024_Invalid_EthTSyn_Xdm_PB_MaxNoSwt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>514</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a error is reported if VariantPostBuild is used and the number of
    configured switch ports is greater than EthTSynMaxNumberOfSwtPorts.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.PB_MaxNoSwt):
    The following warning must be issued:
    "If Time measurement with Switches is used, EthTSynMaxNumberOfSwtPorts must be set to the maximum referenced switch ports."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.PB_MaxNoSwt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1811</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2322</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01025_Invalid_EthTSyn_Xdm_EthSwtPortTimeStamp_Disabled_Port</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>537</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a error is reported if EthTSynSwitchManagementEthSwitchPortRef is
    enabled and has a valid reference and the referenced EthSwt port has EthSwtPortTimeStampSupport disabled.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_Port):
    The following warning must be issued:
    "If EthTSynSwitchManagementEthSwitchPortRef is enabled and has a valid reference, EthSwtPortTimeStampSupport also needs to be enabled for the referenced port switch."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_Port</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1812</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2323</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01026_Invalid_EthTSyn_Xdm_EthSwtPortTimeStamp_Disabled_HostPort</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a error is reported if EthTSynSwitchManagementEthSwitchPortHostRef is
    enabled and has a valid reference and the referenced EthSwt port has EthSwtPortTimeStampSupport disabled.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_HostPort):
    The following warning must be issued:
    "If EthTSynSwitchManagementEthSwitchPortHostRef is enabled and has a valid reference, EthSwtPortTimeStampSupport also needs to be enabled for the referenced host port switch."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.EthSwtPortTimeStamp_Disabled_HostPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1813</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2324</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01027_Invalid_EthTSyn_Xdm_EthTSynReceiveSyncFupPairsPeriod_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that a error is reported if EthTSynSyncFailedReportError is set to DEM and
    EthTSynReceiveSyncFupPairsPeriod for a EthTSynTimeDomain is equal to 0.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.EthTSynReceiveSyncFupPairsPeriod_0):
    The following error must be issued:
    "If EthTSynSyncFailedReportError is set to DET or DEM, EthTSynReceiveSyncFupPairsPeriod needs to be configured with a value greater than 0."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.EthTSynReceiveSyncFupPairsPeriod_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1814</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2325</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01028_Invalid_EthTSyn_Xdm_NoDataID_Bridge</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>606</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If an EthTSynTimeDomain is configured as a bridge, EthTSynGlobalTimeFollowUpDataIDList
    should also be configured if CRC validation is needed.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.NoDataID_Bridge):
    The following warning must be issued:
    "If bridge is used on a EthTSynTimeDomain DataID should also be configured, in case CRC validation is needed."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.NoDataID_Bridge</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1822</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2326</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01029_Invalid_EthTSyn_Xdm_DuplicatedMasters</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    If two or more EthTSyn masters have the same EthTSynSynchronizedTimeBaseRef and
    EthTSynGlobalTimeEthIfRef references and also have the EthTSynGlobalTimeDomainId equal,
    a warning shall be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.DuplicatedMasters):
    The following warning must be issued:
    "If two or more EthTSyn masters are configured to the same EthIf controller, the EthTSynTimeDomainId should be different."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.DuplicatedMasters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1823</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2327</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01030_Invalid_EthTSyn_Xdm_PTPenabled_ComplianceFALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>653</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If PTP synchronization mechanism is used and EthTSynMessageCompliance is set to false
    an error shall be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.ComplianceFalse_PTPenabled):
    The following error must be issued:
    "If PTP synchronization mechanism is used the EthTSynMessageCompliance must be set to TRUE."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.ComplianceFalse_PTPenabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1815</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2328</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01031_Invalid_EthTSyn_Xdm_StaticDelayNotConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynGlobalTimeDelayE2ERespEnable is set to false and no static Delay is
    configured(EthTSynGlobalTimeDelayE2E) a warning shall be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.XdmCheck_DelayE2ERespEnable):
    The following warning must be issued:
    "Static Delay should be configured if EthTSynGlobalTimeDelayE2ERespEnable is set to false."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.XdmCheck_DelayE2ERespEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1820</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2329</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01032_Invalid_EthTSyn_Xdm_UseCalculatedPdelay_Master</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>699</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynUseCalculatedPdelay is enabled for a EthTSynTimeDomain, it must reffer to a
    TimeDomain that has EthTSynPortRole configured as slave.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.UseCalculatedPdelay_Master):
    The following error must be issued:
    "A TimeDomain with PortRole Slave must be selected."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.UseCalculatedPdelay_Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1824</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2330</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01033_Invalid_EthTSyn_Xdm_UseCalculatedPdelay_TimeValidation</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>722</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    If EthTSynUseCalculatedPdelay is enabled for a EthTSynTimeDomain that also has
    EthTSynEnableTimeValidation set to true, a warning shall be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.TimeValidation_Pdelay):
    The following warning must be issued:
    "Time validation for the Pdelay is disabled if the value is used from another TimeDomain (EthTSynUseCalculatedPdelay enabled)."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.TimeValidation_Pdelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1826</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2331</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01034_Invalid_EthTSyn_Xdm_UseCalculatedPdelay_Swt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    If EthTSynUseCalculatedPdelay is enabled for a EthTSynTimeDomain that has switch configured(HostPort and more Swt ports),
    an error shall be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.UseCalculatedPdelay_Swt):
    The following error must be issued:
    "This feature is not supported if switch is used."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.UseCalculatedPdelay_Swt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1825</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2332</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01035_Invalid_EthTSyn_Xdm_Icv_TxLength_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>768</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynTLVFollowUpICVSubTLV is enabled and EthTSynIcvTxLength is set to 0, an error will be reported.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.ICVSubTLV_TxLen0):
    The following error must be issued:
    "Length should be greater than 0 if an ICV Sub-TLV is present in the SyncFUp frame."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.ICVSubTLV_TxLen0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1816</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2333</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01036_Invalid_EthTSyn_Xdm_DataIdCrc_Master</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>790</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If EthTSynGlobalTimeTxCrcSecured is set to CRC_SUPPORED, EthTSynGlobalTimeFollowUpDataIDList must be enabled.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.DataIdCrc_Master):
    The following error must be issued:
    "If EthTSynGlobalTimeTxCrcSecured is set to CRC_SUPPORED, EthTSynGlobalTimeFollowUpDataIDList must be enabled."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.DataIdCrc_Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1817</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2334</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01037_Invalid_EthTSyn_Xdm_DataIdCrc_Slave</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>812</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    If EthTSynRxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, EthTSynGlobalTimeFollowUpDataIDList must be enabled.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.EB.Xdm.DataIdCrc_Slave):
    The following error must be issued:
    "If EthTSynRxCrcValidated is set to CRC_VALIDATED or CRC_OPTIONAL, EthTSynGlobalTimeFollowUpDataIDList must be enabled."
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.Xdm.DataIdCrc_Slave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1818</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2335</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01038_Invalid_EthTSyn_Xdm_GenerationTimeout_Sync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the CSM job used to generate ICV is configured in synchronous behaviour,
    EthTSynIcvGenerationTimeout must be set to 0.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.R23-11.CONSTR_0002):
    The following error must be issued:
    "GenerationTimeout must be equal to 0 if the CSM job used to generate the ICV is configured synchronous."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R23-11.CONSTR_0002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2336</internalId></specobject>
    <specobject>
      <id>EthTSyn_GenTest_01039_Invalid_EthTSyn_Xdm_VerificationTimeout_Sync</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Generic/IN/EthTSyn_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>857</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the CSM job used to generate ICV is configured in synchronous behaviour,
    EthTSynIcvVerificationTimeout must be set to 0.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP(EthTSyn.R23-11.CONSTR_0003):
    The following error must be issued:
    "VerificationTimeout must be equal to 0 if the CSM job used to generate the ICV is configured synchronous."
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.R23-11.CONSTR_0003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2337</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ImplTest0100_SyncSwt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Implementation/IN/EthTSyn_ImplTest_01_HostSwt/source/application/EthTSyn_ImplTest_01_HostSwt.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the controller and the switch ports are in the correct
    states during sync process.
  
Test Object: 
    SwitchPorts state machine.
  
Test Precondition: 
  
Test Execution: 
    01: VP( EthTSyn.Dsn.CtrlSynTxState_Init, EthTSyn.Dsn.HostPortSynTxState_INIT, EthTSyn.Dsn.PortSynTxState_INIT):
        Verify that after EthTSyn_Init() was called:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_IDLE
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
    02: Call EthTSyn_MainFunction() to start transmitting the Sync frame on host port.
    03: VP(EthTSyn.Dsn.CtrlSynTxState_IDLE-WAIT_EGRESS, EthTSyn.Dsn.HostPortSynTxState_INIT-WAIT_INGRESS):
        Verify that after the Sync frame was sent on HostPort:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_ETH_EGRESS_TS
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_WAIT_INGRESS_TS
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
    04: Call EthTSyn_TxConfirmation() for the Sync frame.
    05: VP(EthTSyn.Dsn.CtrlSynTxState_WAIT_EGRESS-READY_SYN_TO_PORT):
        Verify that after the Sync frame was confirmed:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_SYN_TO_PORT
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_WAIT_INGRESS_TS
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
    06: Call EthTSyn_MainFunction() to transmit the Sync frame on the other 2 non-HostPorts.
    07: VP(EthTSyn.Dsn.CtrlSynTxState_READY_SYN_TO_PORT-WAIT_SWT_INGRESS, EthTSyn.Dsn.PortSynTxState_IDLE-WAIT_EGRESS):
        Verify that after the Sync frame was transmitted on the other 2 non-HostPorts+:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_WAIT_INGRESS_TS
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_WAIT_EGRESS_TS
    08: Call EthTSyn_EthSwtPtpTimeStampIndication() to provide valid IngressTimeStamp for the HostPort.
    09: VP(EthTSyn.Dsn.CtrlSynTxState_WAIT_SWT_INGRESS-VALID_INGRESS, EthTSyn.Dsn.HostPortSynTxState_WAIT_INGRESS-VALID_INGRESS):
        Verify that after the valid IngressTimeStamp was provided:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_VALID_INGRESS_TS
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_WAIT_EGRESS_TS
    10: Call EthTSyn_MainFunction().
    11: VP(EthTSyn.Dsn.CtrlSynTxState_VALID_INGRESS-READY_FUP, EthTSyn.Dsn.HostPortSynTxState_VALID_INGRESS-IDLE):
        Verify that after EthTSyn_MainFunction() was called:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_WAIT_EGRESS_TS
    12: Call EthTSyn_EthSwtPtpTimeStampIndication() to provide valid EgressTimeStamp for the non-HostPorts.
    13: VP(EthTSyn.Dsn.CtrlSynTxState_CTRL_READY_FUP-PORT_READY_FUP, EthTSyn.Dsn.PortSynTxState_WAIT_EGRESS-READY_FUP):
        Verify that after the non-HostPorts have valid EgressTimeStamp:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP
    14: Call EthTSyn_MainFunction() to transmit the SyncFUp frame on the 2 non-HostPorts.
    15: VP(EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE, EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE):
        Verify that after EthTSyn_MainFunction() was called:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_IDLE
        - HostPort state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
        - 2 other non-HostPorts state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1778</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_PORT_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1780</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_CTRL_READY_FUP-PORT_READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1781</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_VALID_INGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1776</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_READY_SYN_TO_PORT-WAIT_SWT_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1774</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_WAIT_EGRESS-READY_SYN_TO_PORT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1775</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynTxState_WAIT_SWT_INGRESS-VALID_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1777</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_INIT-WAIT_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1784</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_VALID_INGRESS-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1782</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_INIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1785</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.HostPortSynTxState_WAIT_INGRESS-VALID_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1783</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1788</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1786</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_INIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1789</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_WAIT_EGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2338</internalId></specobject>
    <specobject>
      <id>EthTSyn_ImplTest0101_PdelaySwt</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Implementation/IN/EthTSyn_ImplTest_01_HostSwt/source/application/EthTSyn_ImplTest_01_HostSwt.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the Master port has correct PdelayResp states during the
    Pdelay calculation process.
  
Test Object: 
    Switch Pdelay State machine.
  
Test Precondition: 
    - Module is initialized.
  
Test Execution: 
    01: Call EthTSyn_Init().
    02: VP(EthTSyn.Dsn.PortPdelayState_Init):
        Verify that PdelayState for all 3 ports is ETHTSYN_PORT_PDELAY_STATE_IDLE.
    03: Create a PdelayReq frame and call EthTSyn_EthSwtPtpRxIndication() to receive it on master port with SwitchIdx = 0 and PortIdx = 0.
    04: Call EthTSyn_MainFunction().
    05: VP(EthTSyn.Dsn.PortPdelayState_IDLE-WAIT_EGRESS):
        Verify that PdelayState changes for the port that received the PdelayReq frame, to ETHTSYN_PORT_PDELAY_WAIT_EGRESS_TS.
    06: Call EthTSyn_EthSwtPtpTimeStampIndication() to provide a valid EgressTimeStamp and EthTSyn_MainFunction().
    07: VP(EthTSyn.Dsn.PortPdelayState_WAIT_EGRESS-IDLE):
        Verify that PdelayState changes for the port that received the PdelayReq frame, to ETHTSYN_PORT_PDELAY_STATE_IDLE.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1799</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1798</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortPdelayState_WAIT_EGRESS-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1797</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2339</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ImplTest0200_SyncBridge</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Implementation/IN/EthTSyn_ImplTest_02_BridgeSwt/source/application/EthTSyn_ImplTest_02_BridgeSwt.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the controller and the switch ports are in the correct
    states during sync process.
  
Test Object: 
    BridgeSwt state machine.
  
Test Precondition: 
  
Test Execution: 
    01: VP(EthTSyn.Dsn.CtrlSynBridge_INIT-IDLE, EthTSyn.Dsn.PortSynTxState_INIT):
        Verify that after EthTSyn_Init() was called:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_IDLE
        - MasterPort state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
    02: Create a Sync frame and call EthTSyn_EthSwtPtpRxIndication() to receive it on the slave port.
    03: VP(EthTSyn.Dsn.CtrlSynBridge_IDLE-READY):
        Verify that after the Sync frame was received on the slave port:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_ETH_EGRESS_TS
        - MasterPort state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_ETH_EGRESS_TS
    04: Call EthTSyn_EthSwtPtpTimeStampIndication() to receive EgressTimeStamp for the MasterPort.
    05: VP(EthTSyn.Dsn.PortSynTxState_WAIT_EGRESS-READY_FUP, EthTSyn.Dsn.CtrlSynBridge_WAIT_INGRESS-VALID_INGRESS):
        Verify that after the IngressTimeStamp and EgressTimeStamp were received:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_WAIT_FOR_SWT_INGRESS_TS
        - MasterPort state is ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP
    06: Create a SyncFUp frame and call EthTSyn_EthSwtPtpRxIndication() to receive it on the slave port.
    07: VP(EthTSyn.Dsn.CtrlSynBridge_CTRL_READY-PORT_READY):
        Verify that after the SyncFUp frame was received on the slave port:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_READY_FOR_FUP
        - MasterPort state is ETHTSYN_PORT_SYN_TX_STATE_READY_FOR_FUP
    08: Call EthTSyn_MainFunction() and verify that the SyncFUp frame was forwarded to the MasterPort.
    09: VP(EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE, EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE):
        Verify that after the SyncFUp frame was forwarded on the MasterPort:
        - Controller state is ETHTSYN_CTRL_SYN_TX_STATE_IDLE
        - MasterPort state is ETHTSYN_PORT_SYN_TX_STATE_IDLE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_IDLE-READY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1796</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_INIT-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1793</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_PORT_READY-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_CTRL_READY-PORT_READY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_VALID_INGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_READY-WAIT_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1795</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.CtrlSynBridge_WAIT_INGRESS-VALID_INGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1794</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_IDLE-WAIT_EGRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1788</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_READY_FUP-IDLE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1786</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_INIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1789</internalId></provcov>
        <provcov>
          <linksto>EthTSyn.Dsn.PortSynTxState_WAIT_EGRESS-READY_FUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2340</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>EthTSyn_ImplTest0300_CheckPostbuildConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_EthTSyn)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EthTSyn/test/ts5/Implementation/IN/EthTSyn_ImplTest_03_PostbuilSelectable/source/application/EthTSyn_ImplTest_03_PostbuildSelectable.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if Postbuild is used the EthTSyn module will properly initialize with
    variants configured.
  
Test Object: 
    PostBuildSelectable.
  
Test Precondition: 
    PostBuildSelectable variantsconfigured.
  
Test Execution: 
    01: Call EthTSyn_Init() with the first variant, EthTSyn_LeftSensor_Config_0.
    02: VP(EthTSyn.EB.PBSelectable.TypeName):Check init value of the EthTSynGlobalTimePropagationDelay,
        EthTSynGlobalTimeTxPdelayReqPeriod and Crc_Time_Flags.
    03: Call EthTSyn_Init() with the second variant, EthTSyn_RightSensor_Config_0.
    04: VP(EthTSyn.EB.PBSelectable.TypeName): Verify that the parameters specified at step 2 are changed.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EthTSyn.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2341</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
